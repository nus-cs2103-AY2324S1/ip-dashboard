[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"checkstyle {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"HEEaZ":21,"-":41}},{"path":"data/savedTasksDefaults.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"T | Not Done | task1","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"D | Done | task2 | 2019-12-12","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"E | Not Done | task3 | time1 | time2","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"HEEaZ":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"    private static final Pattern PATTERN_COMMAND_CREATE_DEADLINE \u003d","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"            Pattern.compile(\"^deadline ?(?\u003ctaskName\u003e.*?)? ?(/by (?\u003cfinishByTime\u003e.*))?$\");","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    private LocalDate finishByTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    Deadline(String name, LocalDate finishByTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"        this.finishByTime \u003d finishByTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    Deadline(boolean isDone, String name, LocalDate finishByTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"        this.finishByTime \u003d finishByTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"     * Creates and returns a Deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"     * @param command String command of the form \u0027deadline ... /by ...\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"     * @return Deadline object created","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If the command is invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"    public static Deadline createDeadline(String command) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d PATTERN_COMMAND_CREATE_DEADLINE.matcher(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"        matcher.find();","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        String taskName \u003d matcher.group(\"taskName\");","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"        if (taskName \u003d\u003d null || taskName.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        String finishByTime \u003d matcher.group(\"finishByTime\");","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        if (finishByTime \u003d\u003d null || finishByTime.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The due date (/by ...) of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"            return new Deadline(taskName, LocalDate.parse(finishByTime));","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Invalid date format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"     * Creates and returns a Deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"     * This function assumes correct ordering of args provided.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"     * @param args Arguments to be used to create the Deadline from its constructor","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"     * @param isDone Boolean indicating if the Deadline is done","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"     * @return Deadline object created","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If there is insufficient/ excessive number of arguments in args,","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"     *         or if the argument for date provided is invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"    public static Deadline createDeadline(String[] args, boolean isDone) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Error creating Deadline: Incorrect number of arguments\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"            return new Deadline(isDone, args[0], LocalDate.parse(args[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Error creating Deadline: Invalid date format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"    public String toSaveStr() {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"        return \"D\"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + super.toSaveStr()","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + finishByTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"     * Determines if this Deadline is equal to another object","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"     * @param o Other object to be compared with","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"     * @return true if o is a Deadline, satisfies the equals condition of its superclass,","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"     *         and has the same finishByTime.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"        if (o instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"            Deadline deadlineObj \u003d (Deadline) o;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"            return super.equals(o) \u0026\u0026 finishByTime.equals(deadlineObj.finishByTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"                + \" (by: \" + finishByTime.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":102}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"HEEaZ":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"    private static final String SAVED_TASKS_FILEPATH \u003d \"./data/savedTasks.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    Duke(String filepath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"            ui.displayMessage(\"Saved tasks successfully loaded from \u0027\" + filepath + \"\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    public Duke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"        this(SAVED_TASKS_FILEPATH);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        Duke luke \u003d new Duke(SAVED_TASKS_FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        luke.run();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"        return executeCommand(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"     * Handles the main program and logic of Luke (Duke)","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"    private void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"        greet();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        String input \u003d ui.readNextInput();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"            executeCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"            input \u003d ui.readNextInput();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"        bye();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"        saveData();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"    public void saveData() {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"            storage.save(tasks.toSaveString());","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"            ui.displayMessage(\"Tasks successfully saved\");","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"     * Executes a given command","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"     * @param command String command detailing what and how to execute","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If the leading word in the command is not a recognised command, or","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"     *         if the processes associated with executing the command encounters an error","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"    private String executeCommand(String command) {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"            switch(command.split(\" \")[0]) {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"            case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"                return ui.displayMessage(tasks.list());","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"                return ui.displayMessage(\"Nice! I\u0027ve marked this task as done: \\n\" + tasks.markAsDone(command));","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"                return ui.displayMessage(\"OK, I\u0027ve marked this task as not done yet: \\n\" + tasks.markAsUndone(command));","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"                return ui.displayMessage(\"Noted. I\u0027ve removed this task: \\n\" + tasks.delete(command));","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"                // Fallthrough","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"                // Fallthrough","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"            case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"                return ui.displayMessage(\"added : \" + tasks.add(command));","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"            case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"                return ui.displayMessage(tasks.find(command));","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"                throw new LukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"            return ui.displayError(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"    public String bye() {","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"        return ui.displayMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"HEEaZ"},"content":"    private void greet() {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"HEEaZ"},"content":"        String logo \u003d \" _           _        \\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"HEEaZ"},"content":"                    + \"| |    _   _| | _____ \\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"HEEaZ"},"content":"                    + \"| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"                    + \"| |__ | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"HEEaZ"},"content":"                    + \"|____| \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"HEEaZ"},"content":"        String greetingMsg \u003d \"Hello! I\u0027m Luke \\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"                        + \"What can I do for you?\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"HEEaZ"},"content":"        ui.displayMessage(greetingMsg);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HEEaZ":113,"-":4}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"    private static final Pattern PATTERN_COMMAND_CREATE_EVENT \u003d","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"            Pattern.compile(\"^event ?(?\u003ctaskName\u003e.*?)? ?(/from (?\u003cstartTime\u003e.*?))? ?(/to (?\u003cendTime\u003e.*))?$\");","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"    private String startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"    private String endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"        this.startTime \u003d startTime.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"        this.endTime \u003d endTime.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    Event(boolean isDone, String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"        this.startTime \u003d startTime.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"        this.endTime \u003d endTime.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"     * Creates and Returns an Event","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"     * @param command String command that specifies the values the created Event object should have","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"     * @return Event created","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If command is of an invalid format","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    public static Event createEvent(String command) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d PATTERN_COMMAND_CREATE_EVENT.matcher(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"        matcher.find();","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"        String taskName \u003d matcher.group(\"taskName\");","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"        if (taskName \u003d\u003d null || taskName.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        String startTime \u003d matcher.group(\"startTime\");","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        if (startTime \u003d\u003d null || startTime.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The start time (/from ...) of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        String endTime \u003d matcher.group(\"endTime\");","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        if (endTime \u003d\u003d null || endTime.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The end time (/end ...) of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"        return new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"     * Creates and Returns an Event","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"     * This function assumes correct ordering of args provided","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"     * @param args Arguments used to create the Event from its constructor","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"     * @param isDone Boolean indicating if the Event is done","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"     * @return Event object created","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If there is insufficient/ excessive number of arguments in args","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"    public static Event createEvent(String[] args, boolean isDone) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        if (args.length !\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Error creating Event: Incorrect number of arguments\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"        return new Event(isDone, args[0], args[1], args[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"    public String toSaveStr() {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"        return \"E\"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + super.toSaveStr()","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + startTime","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"     * Determines if this Event is equal to another object","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"     * @param o Other object to be compared with","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"     * @return true if o is an Event, satisfies the equals condition of its superclass,","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"     *         and has the same start and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"        if (o instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"            Event eventObj \u003d (Event) o;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"            return super.equals(o)","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"                    \u0026\u0026 startTime.equals(eventObj.startTime)","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"                    \u0026\u0026 endTime.equals(eventObj.endTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":103}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"HEEaZ":12}},{"path":"src/main/java/duke/LukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"public class LukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"    LukeException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":7}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"HEEaZ":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import javafx.concurrent.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Luke. Type any command to start\", dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"                    DialogBox.getDukeDialog(duke.bye(), dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"            );","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"            duke.saveData();","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"            delay(2000, Platform::exit);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    //@@author HEEaZ-reused","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Reused from https://stackoverflow.com/questions/26454149","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void delay(long millis, Runnable continuation) {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Task\u003cVoid\u003e sleeper \u003d new Task\u003cVoid\u003e() {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            protected Void call() throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                try { Thread.sleep(millis); }","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                catch (InterruptedException e) { }","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                return null;","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        sleeper.setOnSucceeded(event -\u003e continuation.run());","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        new Thread(sleeper).start();","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"HEEaZ":68,"-":15}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    private String filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    Storage(String filepath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    public void save(String saveString) throws LukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"            FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"            fw.write(saveString);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Error writing saved tasks into \u0027\" + filepath","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"                    + \"\u0027\\n\\n Save aborted\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    public ArrayList\u003cTask\u003e load() throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"            ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"            File f \u003d new File(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"                String savedData \u003d s.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"                String[] taskDetails \u003d Arrays.stream(savedData.split(\"\\\\|\")).map(String::trim).toArray(String[]::new);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"                if (taskDetails.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"                    throw new LukeException(\"Unknown data \u0027\" + savedData + \"\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"                boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"                switch (taskDetails[1]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"                case \"Done\":","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"                    isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"                case \"Not Done\":","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"                    isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"                    throw new LukeException(\"Task neither \u0027Done\u0027 nor \u0027Not Done\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"                Task createdTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"                switch (taskDetails[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"                    createdTask \u003d Todo.createTodo(Arrays.copyOfRange(taskDetails, 2, taskDetails.length), isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"                    createdTask \u003d Deadline.createDeadline(","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"                            Arrays.copyOfRange(taskDetails, 2, taskDetails.length), isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"                    createdTask \u003d Event.createEvent(Arrays.copyOfRange(taskDetails, 2, taskDetails.length), isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"                    throw new LukeException(\"Unknown Task Type \u0027\" + taskDetails[0] + \"\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"                allTasks.add(createdTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"            return allTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"                    \"Error reading saved tasks from \u0027\" + filepath + \"\u0027: \\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"                            + e.getMessage() + \"\\n\\n No tasks loaded\"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"            );","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"                    \"Could not find file \u0027\" + filepath + \"\u0027\\n\\n No tasks loaded\"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"            );","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"HEEaZ":82}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"    private String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"    Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"     * Checks if this task\u0027s name contains the specified substring","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"     * @param subString Substring to check for","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"     * @return true if this task\u0027s name contains the substring","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"    public boolean hasSubstring(String subString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"        Pattern pattern \u003d Pattern.compile(subString, Pattern.LITERAL);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d pattern.matcher(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"        return matcher.find();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"     * Sets the value of the variable isDone","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"     * @param isDone Boolean that the instance variable isDone should take","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If the instance variable isDone is already set to the specified value","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"    public void setDone(boolean isDone) throws LukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        if (this.isDone \u003d\u003d isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Task is already marked as done\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"     * Returns a string representation of all the details of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"     * @return String representation of all details of the Task","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"    public String toSaveStr() {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"        return (isDone ? \"Done\" : \"Not Done\")","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + name;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"     * Determines if this Task is equal to another object","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"     * @param o Other object to be compared with","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"     * @return true if the object is a Task and has the same name","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"            Task taskObj \u003d (Task) o;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"            return this.name.equals(taskObj.name)","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"                    \u0026\u0026 this.isDone \u003d\u003d taskObj.isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"        String doneIndicator \u003d isDone ? \"x\" : \" \";","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"        return \"[\" + doneIndicator + \"] \" + name;","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"HEEaZ":79}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"    private static final Pattern PATTERN_COMMAND_DELETE \u003d Pattern.compile(\"^delete (?\u003ctaskNumber\u003e\\\\d*)$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"    private static final Pattern PATTERN_COMMAND_MARK_UNMARK \u003d Pattern.compile(\"^(mark|unmark) (?\u003ctaskNumber\u003e\\\\d*)$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"    private static Pattern PATTERN_COMMAND_FIND \u003d Pattern.compile(\"^find( (?\u003csearchString\u003e.*))?$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"     * Returns the current list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    public ArrayList\u003cTask\u003e getAll() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"     * Returns the string representation of the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"     * @return String representation of the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    public String list() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"        String listStr \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"            listStr +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        if (listStr.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"            listStr \u003d \"Congrats! You have no tasks!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        return listStr.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"     * The saving string representation of the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"     * @return Saving string representation of the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"        String inputTxt \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"            inputTxt +\u003d task.toSaveStr() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"        return inputTxt.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"     * Returns a list of tasks whose names contain the specified substring","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"     * @param command Command specifying the substring to search for","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"     * @return ArrayList of tasks whose names has the substring","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"    public String find(String command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d PATTERN_COMMAND_FIND.matcher(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"        matcher.find();","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"        String searchString \u003d matcher.group(\"searchString\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"        if (searchString \u003d\u003d null || searchString.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"            return list();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"            if (!task.hasSubstring(searchString)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"                continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"            result +\u003d (i + 1) + \". \" + task + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"        if (result.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"            result \u003d \"You have no tasks that contain this substring!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"     * Creates and adds a type of task to tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"     * @param command String command specifying the type of task and associated values to add","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"     * @return Task created","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If the first word in the command is not a recognised command","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"HEEaZ"},"content":"    public Task add(String command) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"HEEaZ"},"content":"        Task task;","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"HEEaZ"},"content":"        switch (command.split(\" \")[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"HEEaZ"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"            task \u003d Todo.createTodo(command);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"HEEaZ"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"HEEaZ"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"            task \u003d Deadline.createDeadline(command);","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"HEEaZ"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"HEEaZ"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"HEEaZ"},"content":"            task \u003d Event.createEvent(command);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"HEEaZ"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"HEEaZ"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Unknown command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"HEEaZ"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"HEEaZ"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"HEEaZ"},"content":"     * Deletes and Returns a specified task from tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"HEEaZ"},"content":"     * @param command String command specifying which task to delete","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"HEEaZ"},"content":"     * @return Deleted task","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If the command is of invalid format, or the number specified is an invalid number.","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"HEEaZ"},"content":"    public Task delete(String command) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d PATTERN_COMMAND_DELETE.matcher(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"HEEaZ"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Invalid format. Usage: delete {task_number}\");","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"HEEaZ"},"content":"        String taskNumber \u003d matcher.group(\"taskNumber\");","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"HEEaZ"},"content":"        if (taskNumber \u003d\u003d null || taskNumber.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Task number cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"HEEaZ"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"HEEaZ"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Invalid task number: no such task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"HEEaZ"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"HEEaZ"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"HEEaZ"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"HEEaZ"},"content":"     * Mark a task as done","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"HEEaZ"},"content":"     * @param command String command specifying which task to mark as done","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"HEEaZ"},"content":"     * @return Task that is successfully marked as done","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If task is already marked as done","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"HEEaZ"},"content":"    public Task markAsDone(String command) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"HEEaZ"},"content":"        Task task \u003d getTask(command);","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"HEEaZ"},"content":"        task.setDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"HEEaZ"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"HEEaZ"},"content":"     * Mark a task as undone","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"HEEaZ"},"content":"     * @param command String command specifying which task to mark as undone","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"HEEaZ"},"content":"     * @return Task that is successfully marked as undone","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If the task is already marked as undone","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"HEEaZ"},"content":"    public Task markAsUndone(String command) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"HEEaZ"},"content":"        Task task \u003d getTask(command);","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"HEEaZ"},"content":"        task.setDone(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"HEEaZ"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"HEEaZ"},"content":"    private Task getTask(String command) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d PATTERN_COMMAND_MARK_UNMARK.matcher(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"HEEaZ"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Invalid format. Usage: mark {task_number}\");","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"HEEaZ"},"content":"        String taskNumber \u003d matcher.group(\"taskNumber\");","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"HEEaZ"},"content":"        if (taskNumber \u003d\u003d null || taskNumber.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Task number cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"HEEaZ"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"HEEaZ"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Invalid task number: no such task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"HEEaZ"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"HEEaZ":198}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"    private static final Pattern PATTERN_COMMAND_CREATE_TODO \u003d Pattern.compile(\"^todo( (?\u003ctaskName\u003e.*))?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"    Todo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    Todo(boolean isDone, String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"     * Creates and Returns a Todo","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"     * @param command String command that specifies the values the created Todo object should have","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"     * @return Todo created","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If the command is of an invalid format","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"    public static Todo createTodo(String command) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d PATTERN_COMMAND_CREATE_TODO.matcher(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"        matcher.find();","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        String taskName \u003d matcher.group(\"taskName\");","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        if (taskName \u003d\u003d null || taskName.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"        return new Todo(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"     * Creates and Returns a Todo","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"     * This method assumes correct ordering of args provided","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"     * @param args Arguments used to create the Todo from its constructor","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"     * @param isDone Boolean indicating if the Todo is done","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"     * @return Todo created","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"     * @throws LukeException If there is insufficient/ excessive number of arguments in args","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"    public static Todo createTodo(String[] args, boolean isDone) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        if (args.length !\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Error creating Todo: Incorrect number of arguments\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"        return new Todo(isDone, args[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    public String toSaveStr() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        return \"T\" + \" | \" + super.toSaveStr();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"     * Determines if this Event is equal to another object","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"     * @param o Other object to be compared with","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"     * @return true if o is an Todo and satisfies the equals condition of its superclass","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"        if (o instanceof Todo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"            return super.equals(o);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":77}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"    private static final String LINE_BREAK \u003d \"＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿\";","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"    private Scanner sc;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"     * Displays the given message between horizontal lines","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"     * @param msg String to output","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    public String displayMessage(String msg) {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"        String indentedMsg \u003d indent(msg);","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"        System.out.println(indentedMsg);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"        return indentedMsg;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"    public String displayError(String msg) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"        return displayMessage(\"☹ OOPS!!! \\n\" + msg);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"    public String readNextInput() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"    public void list(ArrayList\u003cTask\u003e allTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        String list \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        for (int i \u003d 1; i \u003c\u003d allTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"            list +\u003d i + \". \" + allTasks.get(i - 1).toString() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"        if (list.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"            displayMessage(\"Congrats! You have no tasks!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"            return;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        displayMessage(list.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"    private static String indent(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"        return msg.replaceAll(\"(?m)^\", \"\\t\");","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":55}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"HEEaZ":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"HEEaZ":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    public void getAll_tasks_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"        Task task1 \u003d new Todo(\"something\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"        Task task2 \u003d new Deadline(\"new deadline\", LocalDate.parse(\"2023-08-31\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"        Task task3 \u003d new Event(\"new event\", \"today\", \"tomorrow\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        TaskList tl \u003d new TaskList(new ArrayList\u003c\u003e(Arrays.asList(task1, task2, task3)));","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"                Arrays.asList(task1, task2, task3)","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedList, tl.getAll());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    public void add_todoTask_success() throws LukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"        String todoPrefix \u003d \"todo \";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        String todo1Name \u003d \"newtask\";","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"        Task todo1 \u003d tl.add(todoPrefix + todo1Name);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"        Todo expectedTodo1 \u003d new Todo(false, todo1Name);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedTodo1, todo1);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"        String todo2Name \u003d \"new task\";","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"        Task todo2 \u003d tl.add(todoPrefix + todo2Name);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        Todo expectedTodo2 \u003d new Todo(false, todo2Name);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedTodo2, todo2);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        ArrayList\u003cTask\u003e expectedTaskList \u003d new ArrayList\u003c\u003e(Arrays.asList(todo1, todo2));","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedTaskList, tl.getAll());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"    public void add_deadlineTask_success() throws LukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"        String deadlinePrefix \u003d \"deadline \";","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"        String deadlineByArgConnector \u003d \" /by \";","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"        String deadline1Name \u003d \"newdeadline\";","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"        String deadline1DueDate \u003d \"2011-09-12\";","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        Task deadline1 \u003d tl.add(deadlinePrefix","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"                + deadline1Name + deadlineByArgConnector + deadline1DueDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"        Deadline expectedDeadline1 \u003d new Deadline(","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"                false,","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"                deadline1Name,","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"                LocalDate.parse(deadline1DueDate));","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedDeadline1, deadline1);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"        String deadline2Name \u003d \"another deadline 2013-12-01\";","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"        String deadline2DueDate \u003d \"1960-12-25\";","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"        Task deadline2 \u003d tl.add(deadlinePrefix","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"                + deadline2Name + deadlineByArgConnector + deadline2DueDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"        Deadline expectedDeadline2 \u003d new Deadline(","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"                false,","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"                deadline2Name,","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"                LocalDate.parse(deadline2DueDate));","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedDeadline2, deadline2);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"        ArrayList\u003cTask\u003e expectedTaskList \u003d new ArrayList\u003c\u003e(Arrays.asList(deadline1, deadline2));","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedTaskList, tl.getAll());","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"    public void add_eventTask_success() throws LukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"        String eventPrefix \u003d \"event \";","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"        String eventFromArgConnector \u003d \" /from \";","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"        String eventToArgConnector \u003d \" /to \";","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"        String event1Name \u003d \"event\";","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"        String event1From \u003d \"sometime\";","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"        String event1To \u003d \"anothertime\";","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"        Task event1 \u003d tl.add(eventPrefix + event1Name","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"                + eventFromArgConnector + event1From","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"                + eventToArgConnector + event1To);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"        Event expectedEvent1 \u003d new Event(false, event1Name, event1From, event1To);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedEvent1, event1);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"        String event2Name \u003d \"another event\";","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"        String event2From \u003d \"this timing\";","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"        String event2To \u003d \"that timing\";","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"        Task event2 \u003d tl.add(eventPrefix + event2Name","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"                + eventFromArgConnector + event2From","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"                + eventToArgConnector + event2To);","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"        Event expectedEvent2 \u003d new Event(false, event2Name, event2From, event2To);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedEvent2, event2);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"HEEaZ"},"content":"        ArrayList\u003cTask\u003e expectedTaskList \u003d new ArrayList\u003c\u003e(Arrays.asList(event1, event2));","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedTaskList, tl.getAll());","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"HEEaZ"},"content":"    public void add_badCommands_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"HEEaZ"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"HEEaZ"},"content":"        String unknownCommand \u003d \"todoo something\";","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"HEEaZ"},"content":"            tl.add(unknownCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"HEEaZ"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"HEEaZ"},"content":"            assertEquals(\"Unknown command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"HEEaZ"},"content":"        String invalidFormatCommand \u003d \"deadline something\";","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"HEEaZ"},"content":"            tl.add(invalidFormatCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"HEEaZ"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"HEEaZ"},"content":"            // Error message will be tested for in DeadlineTest","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"HEEaZ"},"content":"    public void delete_correctNumber_success() throws LukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"HEEaZ"},"content":"        String deletePrefix \u003d \"delete \";","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"HEEaZ"},"content":"        Task seedTask1 \u003d new Todo(\"First\");","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"HEEaZ"},"content":"        Task seedTask2 \u003d new Todo(\"Second\");","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"HEEaZ"},"content":"        Task seedTask3 \u003d new Todo(\"Third\");","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"HEEaZ"},"content":"        TaskList tl \u003d new TaskList(new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"HEEaZ"},"content":"                seedTask1, seedTask2, seedTask3","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"HEEaZ"},"content":"        )));","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"HEEaZ"},"content":"        Task deletedTask \u003d tl.delete(deletePrefix + \"2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(deletedTask, seedTask2);","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"HEEaZ"},"content":"        ArrayList\u003cTask\u003e expectedTaskList \u003d new ArrayList\u003c\u003e(Arrays.asList(seedTask1, seedTask3));","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"HEEaZ"},"content":"        assertEquals(expectedTaskList, tl.getAll());","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"HEEaZ"},"content":"    public void delete_outOfRangeNumber_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"HEEaZ"},"content":"        String deletePrefix \u003d \"delete \";","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"HEEaZ"},"content":"        TaskList tl \u003d new TaskList(new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"HEEaZ"},"content":"                new Todo(\"first\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"HEEaZ"},"content":"                new Todo(\"second\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"HEEaZ"},"content":"                new Todo(\"third\")","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"HEEaZ"},"content":"        )));","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"HEEaZ"},"content":"        String expectedErrorMsg \u003d \"Invalid task number: no such task\";","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"HEEaZ"},"content":"            tl.delete(deletePrefix + \"4\");","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"HEEaZ"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"HEEaZ"},"content":"            assertEquals(expectedErrorMsg, e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"HEEaZ"},"content":"            tl.delete(deletePrefix + \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"HEEaZ"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"HEEaZ"},"content":"            assertEquals(expectedErrorMsg, e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"HEEaZ"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"HEEaZ"},"content":"    public void delete_badFormat_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"HEEaZ"},"content":"        TaskList tl \u003d new TaskList(new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"HEEaZ"},"content":"                new Todo(\"first\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"HEEaZ"},"content":"                new Todo(\"second\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"HEEaZ"},"content":"                new Todo(\"third\")","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"HEEaZ"},"content":"        )));","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"HEEaZ"},"content":"            tl.delete(\"delete first\");","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"HEEaZ"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"HEEaZ"},"content":"            String expectedErrorMsg \u003d \"Invalid format. Usage: delete {task_number}\";","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"HEEaZ"},"content":"            assertEquals(expectedErrorMsg, e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"HEEaZ"},"content":"            tl.delete(\"delete 1 2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"HEEaZ"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"HEEaZ"},"content":"            String expectedErrorMsg \u003d \"Invalid format. Usage: delete {task_number}\";","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"HEEaZ"},"content":"            assertEquals(expectedErrorMsg, e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"HEEaZ"},"content":"            tl.delete(\"delete \");","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"HEEaZ"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"HEEaZ"},"content":"            String expectedErrorMsg \u003d \"Task number cannot be empty.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"HEEaZ"},"content":"            assertEquals(expectedErrorMsg, e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"HEEaZ":206}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"todo newly added task","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"deadline new deadline /by 2011-09-11","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"event yet another new event /from time1 /to time2","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"don\u0027t add this","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"deadline dont add this too","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"deadline bad date deadline /by some time","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"event dont add this too","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"mark 4","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"if [ ! -d \"./bin\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"    mkdir ./bin","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"if [ -e \"./text-ui-test/ACTUAL.TXT\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    rm ./text-ui-test/ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"# Rename saveTasks data","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"if [ -e \"./data/savedTasks.txt\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"then","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"  mv ./data/savedTasks.txt ./data/savedTasksTmp.txt","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"fi","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"# Ensure existence of defaults saved tasks to use","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"if ! [ -e \"./data/savedTasksDefaults.txt\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"then","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"  echo \"************ BUILD FAILURE: Cannot load default savedTasks ************\"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"fi","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"# Create copy of defaults to be used for the test","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"cp ./data/savedTasksDefaults.txt ./data/savedTasks.txt","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"if ! javac -cp ./src/main/java -Xlint:none -d ./bin ./src/main/java/duke/*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"java -classpath ./bin Duke \u003c ./text-ui-test/input.txt \u003e ./text-ui-test/ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"# Relocate and rename savedTasks","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"mv ./data/savedTasks.txt ./text-ui-test/ACTUAL-SAVED.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"# Restore previous savedTask (if any)","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"if [ -e \"./data/savedTasksTmp.txt\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"then","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"  mv ./data/savedTasksTmp.txt ./data/savedTasks.txt","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"fi","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"cp ./text-ui-test/EXPECTED.TXT ./text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"dos2unix ./text-ui-test/ACTUAL.TXT ./text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"diff ./text-ui-test/ACTUAL.TXT ./text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HEEaZ":32,"-":30}}]
