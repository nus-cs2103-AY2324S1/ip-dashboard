[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"darrentfy":2}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"public class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"        return isExit;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"    protected void setExit(boolean exit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"        isExit \u003d exit;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"        System.out.println(\"This method is to be implemented by child classes\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":22}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    protected String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"    public DeadlineCommand(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"        Deadline deadline \u003d new Deadline(this.description, this.by);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"        storage.writeToFile(tasks.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"        ui.showMessage(MESSAGE_SUCCESS + \"     \" + deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"                + \"\\n Now you have \" + tasks.getSize() + \" tasks in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":27}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    protected int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"        if (this.index \u003e\u003d 0 \u0026\u0026 this.index \u003c tasks.getSize()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"            Task task \u003d tasks.getTask(this.index);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"            tasks.deleteTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"            storage.writeToFile(tasks.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"            ui.showMessage(MESSAGE_SUCCESS + \"     \" + task.toString()","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"                    + \"\\n Now you have \" + tasks.getSize() + \" tasks in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"        } else { // user input is an integer bigger than size of task list","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"            String message \u003d tasks.getSize() \u003e 0","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"                    ? \"No such task! Please enter a task ID between 1 and \" + tasks.getSize()","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"                    : \"You have no tasks! Please add some tasks first\";","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":32}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    protected String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"    public EventCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"        Event event \u003d new Event(this.description, this.from, this.to);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"        storage.writeToFile(tasks.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"        ui.showMessage(MESSAGE_SUCCESS + \"     \" + event","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"                + \"\\n Now you have \" + tasks.getSize() + \" tasks in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":29}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"        setExit(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":12}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"        tasks.printTaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":11}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    protected int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"        if (this.index \u003e\u003d 0 \u0026\u0026 this.index \u003c tasks.getSize()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"            Task task \u003d tasks.getTask(this.index);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"            tasks.markTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"            storage.writeToFile(tasks.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"            ui.showMessage(MESSAGE_SUCCESS + \"     \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"        } else { // user input is an integer bigger than size of task list","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"            String message \u003d tasks.getSize() \u003e 0","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"                    ? \"No such task! Please enter a task ID between 1 and \" + tasks.getSize()","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"                    : \"You have no tasks! Please add some tasks first\";","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":31}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"    protected String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"        Todo todo \u003d new Todo(this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"        storage.writeToFile(tasks.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"        ui.showMessage(MESSAGE_SUCCESS + \"     \" + todo","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"                + \"\\n Now you have \" + tasks.getSize() + \" tasks in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":24}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    protected int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"    protected boolean isExit;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"        if (this.index \u003e\u003d 0 \u0026\u0026 this.index \u003c tasks.getSize()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"            Task task \u003d tasks.getTask(this.index);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"            tasks.unmarkTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"            storage.writeToFile(tasks.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"            ui.showMessage(MESSAGE_SUCCESS + \"     \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"        } else { // user input is an integer bigger than size of task list","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"            String message \u003d tasks.getSize() \u003e 0","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"                    ? \"No such task! Please enter a task ID between 1 and \" + tasks.getSize()","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"                    : \"You have no tasks! Please add some tasks first\";","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":33}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"        tasks \u003d new TaskList(storage.readFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"            } catch (NumberFormatException e) { // user inputs invalid argument for mark and unmark eg. \"mark ab\"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"                ui.showError(\"Invalid command! Please enter only one valid task ID (numbers only)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"                ui.showError(\"Invalid date and time format! Please use the format dd/mm/yyyy hhmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"darrentfy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"darrentfy"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"darrentfy"},"content":"            } finally {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"darrentfy"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"darrentfy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"darrentfy"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"-":3,"darrentfy":43}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"darrentfy":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import command.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"    public static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"            String[] details \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"            String commandName \u003d details[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"            switch (commandName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"                case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"                    return prepareMark(details);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"                case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"                    return prepareUnmark(details);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"                case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"                    return prepareDelete(details);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"                case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"                    return prepareTodo(details);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"                case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"                    return prepareDeadline(details);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"darrentfy"},"content":"                case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"darrentfy"},"content":"                    return prepareEvent(details);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"darrentfy"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"darrentfy"},"content":"                    throw new DukeException(\"Sorry! I do not recognise this command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"darrentfy"},"content":"    private static MarkCommand prepareMark(String[] details) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"darrentfy"},"content":"        if (details.length \u003c 2 || details[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"darrentfy"},"content":"                    \"Please include the index of the task you wish to mark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"darrentfy"},"content":"        int markTaskId \u003d Integer.parseInt(details[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"darrentfy"},"content":"        return new MarkCommand(markTaskId);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"darrentfy"},"content":"    private static UnmarkCommand prepareUnmark(String[] details) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"darrentfy"},"content":"        if (details.length \u003c 2 || details[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"darrentfy"},"content":"                    \"Please include the index of the task you wish to unmark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"darrentfy"},"content":"        int unmarkTaskId \u003d Integer.parseInt(details[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"darrentfy"},"content":"        return new UnmarkCommand(unmarkTaskId);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"darrentfy"},"content":"    private static DeleteCommand prepareDelete(String[] details) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"darrentfy"},"content":"        if (details.length \u003c 2 || details[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"darrentfy"},"content":"                    \"Please include the index of the task you wish to delete\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"darrentfy"},"content":"        int deleteTaskId \u003d Integer.parseInt(details[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"darrentfy"},"content":"        return new DeleteCommand(deleteTaskId);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"darrentfy"},"content":"    private static TodoCommand prepareTodo(String[] details) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"darrentfy"},"content":"        // user input only has the command eg \"todo\"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"darrentfy"},"content":"        if (details.length \u003c 2 || details[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! Please include details of this task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"darrentfy"},"content":"        String todoDesc \u003d details[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"darrentfy"},"content":"        return new TodoCommand(todoDesc);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"darrentfy"},"content":"    private static DeadlineCommand prepareDeadline(String[] details) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"darrentfy"},"content":"        // user input only has the command eg \"deadline\"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"darrentfy"},"content":"        if (details.length \u003c 2 || details[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! Please include details of this task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"darrentfy"},"content":"        String[] deadline \u003d details[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"darrentfy"},"content":"        if (deadline.length \u003c 2 || deadline[1].trim().isEmpty()) { // user input does not have /by","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! Please include the deadline of this task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"darrentfy"},"content":"        if (deadline[0].split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! Please include details of this task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"darrentfy"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(deadline[1].trim(), inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"darrentfy"},"content":"        return new DeadlineCommand(deadline[0].trim(), by);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"darrentfy"},"content":"    private static EventCommand prepareEvent(String[] details) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"darrentfy"},"content":"        // user input only has the command eg \"event\"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"darrentfy"},"content":"        if (details.length \u003c 2 || details[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! Please include details of this task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"darrentfy"},"content":"        String[] eventDetails \u003d details[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"darrentfy"},"content":"        // user input does not include /from","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"darrentfy"},"content":"        if (eventDetails.length \u003c 2 || eventDetails[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! Please include when the event starts\");","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"darrentfy"},"content":"        // user input does not include /from","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"darrentfy"},"content":"        if (eventDetails[0].split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! Please include details of this task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"darrentfy"},"content":"        String[] eventTimings \u003d eventDetails[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"darrentfy"},"content":"        // user input does not include /to","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"darrentfy"},"content":"        if (eventTimings.length \u003c 2 || eventTimings[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"darrentfy"},"content":"            throw new DukeException(\"Invalid command! Please include when the event ends\");","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"darrentfy"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(eventTimings[0].trim(), inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"darrentfy"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(eventTimings[1].trim(), inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"darrentfy"},"content":"        return new EventCommand(eventDetails[0].trim(), from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":119}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"    private String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"                File parentDir \u003d file.getParentFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"                if (parentDir !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"                    parentDir.mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"darrentfy"},"content":"            StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"darrentfy"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"darrentfy"},"content":"                String str \u003d String.format(\"%s | %s | %s\\n\", task.getType(),","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"darrentfy"},"content":"                        task.isDone() ? 1 : 0, task.getDetails());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"darrentfy"},"content":"                result.append(str);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"darrentfy"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"darrentfy"},"content":"            fw.write(result.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"darrentfy"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"darrentfy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"darrentfy"},"content":"            System.out.println(\"Something went wrong when saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"darrentfy"},"content":"    public ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"darrentfy"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"darrentfy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"darrentfy"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"darrentfy"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"darrentfy"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"darrentfy"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"darrentfy"},"content":"                return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"darrentfy"},"content":"            scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"darrentfy"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"darrentfy"},"content":"                String[] line \u003d scanner.nextLine().split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"darrentfy"},"content":"                String taskType \u003d line[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"darrentfy"},"content":"                boolean isDone \u003d line[1].equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"darrentfy"},"content":"                String description \u003d line[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"darrentfy"},"content":"                Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"darrentfy"},"content":"                switch (taskType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"darrentfy"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"darrentfy"},"content":"                        task \u003d new Todo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"darrentfy"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"darrentfy"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"darrentfy"},"content":"                        LocalDateTime by \u003d LocalDateTime.parse(line[3].trim(), inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"darrentfy"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"darrentfy"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"darrentfy"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"darrentfy"},"content":"                        LocalDateTime from \u003d LocalDateTime.parse(line[3].trim(), inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"darrentfy"},"content":"                        LocalDateTime to \u003d LocalDateTime.parse(line[4].trim(), inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"darrentfy"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"darrentfy"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"darrentfy"},"content":"                    default:","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"darrentfy"},"content":"                        throw new DukeException(\"Invalid format found in ./data/tasks.txt,\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"darrentfy"},"content":"                                \" please ensure data is in correct format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"darrentfy"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"darrentfy"},"content":"                if (isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"darrentfy"},"content":"                    task.setDone(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"darrentfy"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"darrentfy"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"darrentfy"},"content":"        } catch (IOException | DukeException | DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"darrentfy"},"content":"            System.out.println(\"Something went wrong when loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"darrentfy"},"content":"        } finally {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"darrentfy"},"content":"            if (scanner !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"darrentfy"},"content":"                scanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"darrentfy"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"darrentfy":95}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"        System.out.println(\" -------------------------------------------------------------------\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"        System.out.println(\"  Hello! I\u0027m Handsome!\\n  What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"        System.out.println(\" Error: \" + errorMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"        System.out.println(\" Something went wrong when loading tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"darrentfy"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"darrentfy"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"darrentfy"},"content":"        System.out.println(\"  Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":40}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"    public String getType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"        return \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"        return super.getDetails() + \" | \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"        return super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"darrentfy":28}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"    public String getType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"        return \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"        return super.getDetails() + \" | \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"                + \" | \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"        return super.toString() + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"darrentfy":32}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"public class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"    public String getType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"        return \" \";","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"darrentfy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"darrentfy"},"content":"        return this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"darrentfy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"darrentfy"},"content":"        return \"[\" + this.getType() + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"darrentfy":44}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"darrentfy"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"darrentfy"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"darrentfy"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"darrentfy"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"darrentfy"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"darrentfy"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"darrentfy"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"darrentfy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"darrentfy"},"content":"            System.out.printf(\"  %d. %s\\n\", index, task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"darrentfy"},"content":"            index++;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"darrentfy":50}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"    public String getType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"        return \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"        return super.getDetails();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"        return super.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"darrentfy":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"mark","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"unmark","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"deadline homework","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"event meeting","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"event meeting /from","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"event meeting /from 01/01/2024 2359","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"event meeting /to","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"mark abc","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"deadline homework /by 01/01/2024 2359","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"deadline homework /by 1/1/2024 2359","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"deadline homework /by 32/01/2024 2359","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"event meeting /from 01/01/2024 0800 /to 01/01/2024 1000","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"event meeting /from 1/1/2024 0800 /to 1/1/2024 1000","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"unmark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"delete 4","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"delete 2","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"darrentfy"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"darrentfy":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"darrentfy":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/task/*.java ../src/main/java/command/*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"darrentfy":1}}]
