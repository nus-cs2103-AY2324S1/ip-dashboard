[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"    public String getType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"        return \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"        return super.getDetails() + \" | \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"        return super.toString() + \"(by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"darrentfy":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"    public static void printLine(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"        System.out.println(\" ----------------------------------------\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"                + message","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"                + \"\\n ----------------------------------------\");","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.readFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"        String welcome \u003d \"  Hello! I\u0027m Handsome\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"                + \"  What can I do for you?\";","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"        String goodbye \u003d \"  Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"        printLine(welcome);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"            String input \u003d scan.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"                int index \u003d 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"                System.out.println(\" ----------------------------------------\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"                        + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"darrentfy"},"content":"                    System.out.printf(\" %d. %s%n\", index, task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"darrentfy"},"content":"                    index++;","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"darrentfy"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"darrentfy"},"content":"                System.out.println(\" ----------------------------------------\");","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"darrentfy"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"darrentfy"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"darrentfy"},"content":"                    String[] substrings \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"darrentfy"},"content":"                    String command \u003d substrings[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"darrentfy"},"content":"                    switch (command) {","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"darrentfy"},"content":"                        case \"mark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"darrentfy"},"content":"                            // user input only has the command eg \"mark\"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"darrentfy"},"content":"                            if (substrings.length \u003c 2 || substrings[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"darrentfy"},"content":"                                        \"Please include the index of the task you wish to mark\");","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"darrentfy"},"content":"                            int markTaskId \u003d Integer.parseInt(substrings[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"darrentfy"},"content":"                            if (markTaskId \u003e\u003d 0 \u0026\u0026 markTaskId \u003c tasks.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"darrentfy"},"content":"                                tasks.get(markTaskId).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"darrentfy"},"content":"                                storage.writeToFile(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"darrentfy"},"content":"                            } else { // user input is an integer bigger than size of task list","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"darrentfy"},"content":"                                String message \u003d tasks.size() \u003e 0","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"darrentfy"},"content":"                                        ? \"No such task! Please enter a task ID between 1 and \" + tasks.size()","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"darrentfy"},"content":"                                        : \"You have no tasks! Please add some tasks first\";","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"darrentfy"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"darrentfy"},"content":"                        case \"unmark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"darrentfy"},"content":"                            // user input only has the command eg \"unmark\"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"darrentfy"},"content":"                            if (substrings.length \u003c 2 || substrings[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"darrentfy"},"content":"                                        \"Please include the index of the task you wish to unmark\");","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"darrentfy"},"content":"                            int unmarkTaskId \u003d Integer.parseInt(substrings[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"darrentfy"},"content":"                            if (unmarkTaskId \u003e\u003d 0 \u0026\u0026 unmarkTaskId \u003c tasks.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"darrentfy"},"content":"                                tasks.get(unmarkTaskId).markAsUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"darrentfy"},"content":"                                storage.writeToFile(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"darrentfy"},"content":"                            } else { // user input is an integer bigger than size of task list","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"darrentfy"},"content":"                                String message \u003d tasks.size() \u003e 0","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"darrentfy"},"content":"                                        ? \"No such task! Please enter a task ID between 1 and \" + tasks.size()","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"darrentfy"},"content":"                                        : \"You have no tasks! Please add some tasks first\";","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"darrentfy"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"darrentfy"},"content":"                        case \"delete\":","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"darrentfy"},"content":"                            // user input only has the command eg \"delete\"","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"darrentfy"},"content":"                            if (substrings.length \u003c 2 || substrings[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"darrentfy"},"content":"                                        \"Please include the index of the task you wish to delete\");","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"darrentfy"},"content":"                            int deleteTaskId \u003d Integer.parseInt(substrings[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"darrentfy"},"content":"                            if (deleteTaskId \u003e\u003d 0 \u0026\u0026 deleteTaskId \u003c tasks.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"darrentfy"},"content":"                                String details \u003d tasks.get(deleteTaskId).toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"darrentfy"},"content":"                                tasks.remove(deleteTaskId);","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"darrentfy"},"content":"                                storage.writeToFile(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"darrentfy"},"content":"                                String message \u003d \" Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"darrentfy"},"content":"                                        + \"     \" + details","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"darrentfy"},"content":"                                        + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"darrentfy"},"content":"                                printLine(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"darrentfy"},"content":"                            } else { // user input is an integer bigger than size of task list","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"darrentfy"},"content":"                                String message \u003d tasks.size() \u003e 0","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"darrentfy"},"content":"                                        ? \"No such task! Please enter a task ID between 1 and \" + tasks.size()","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"darrentfy"},"content":"                                        : \"You have no tasks! Please add some tasks first\";","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"darrentfy"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"darrentfy"},"content":"                        case \"todo\":","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"darrentfy"},"content":"                            // user input only has the command eg \"todo\"","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"darrentfy"},"content":"                            if (substrings.length \u003c 2 || substrings[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! Please include details of this task\");","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"darrentfy"},"content":"                            String todoDesc \u003d substrings[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"darrentfy"},"content":"                            Todo todo \u003d new Todo(todoDesc);","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"darrentfy"},"content":"                            tasks.add(todo);","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"darrentfy"},"content":"                            storage.writeToFile(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"darrentfy"},"content":"                            printLine(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"darrentfy"},"content":"                                    + \"     \" + todo","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"darrentfy"},"content":"                                    + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"darrentfy"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"darrentfy"},"content":"                        case \"deadline\":","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"darrentfy"},"content":"                            // user input only has the command eg \"deadline\"","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"darrentfy"},"content":"                            if (substrings.length \u003c 2 || substrings[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! Please include details of this task\");","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"darrentfy"},"content":"                            String[] details \u003d substrings[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"darrentfy"},"content":"                            if (details.length \u003c 2 || details[1].trim().isEmpty()) { // user input does not have /by","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! Please include the deadline of this task\");","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"darrentfy"},"content":"                            if (details[0].split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! Please include details of this task\");","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"darrentfy"},"content":"                            LocalDateTime by \u003d LocalDateTime.parse(details[1].trim(), inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"darrentfy"},"content":"                            Deadline deadline \u003d new Deadline(details[0], by);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"darrentfy"},"content":"                            tasks.add(deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"darrentfy"},"content":"                            storage.writeToFile(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"darrentfy"},"content":"                            printLine(\" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"darrentfy"},"content":"                                    + \"     \" + deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"darrentfy"},"content":"                                    + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"darrentfy"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"darrentfy"},"content":"                        case \"event\":","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"darrentfy"},"content":"                            // user input only has the command eg \"event\"","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"darrentfy"},"content":"                            if (substrings.length \u003c 2 || substrings[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! Please include details of this task\");","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"darrentfy"},"content":"                            String[] eventDetails \u003d substrings[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"darrentfy"},"content":"                            // user input does not include /from","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"darrentfy"},"content":"                            if (eventDetails.length \u003c 2 || eventDetails[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! Please include when the event starts\");","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"darrentfy"},"content":"                            // user input does not include /from","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"darrentfy"},"content":"                            if (eventDetails[0].split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! Please include details of this task\");","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"darrentfy"},"content":"                            String[] eventTimings \u003d eventDetails[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"darrentfy"},"content":"                            // user input does not include /to","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"darrentfy"},"content":"                            if (eventTimings.length \u003c 2 || eventTimings[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"darrentfy"},"content":"                                throw new DukeException(\"Invalid command! Please include when the event ends\");","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"darrentfy"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"darrentfy"},"content":"                            LocalDateTime from \u003d LocalDateTime.parse(eventTimings[0].trim(), inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"darrentfy"},"content":"                            LocalDateTime to \u003d LocalDateTime.parse(eventTimings[1].trim(), inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"darrentfy"},"content":"                            Event event \u003d new Event(eventDetails[0], from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"darrentfy"},"content":"                            tasks.add(event);","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"darrentfy"},"content":"                            storage.writeToFile(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"darrentfy"},"content":"                            String message \u003d \" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"darrentfy"},"content":"                                    + \"     \" + event","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"darrentfy"},"content":"                                    + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"darrentfy"},"content":"                            printLine(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"darrentfy"},"content":"                            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"darrentfy"},"content":"                        default:","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"darrentfy"},"content":"                            throw new DukeException(\"Sorry! I do not recognise this command\");","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"darrentfy"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"darrentfy"},"content":"                } catch (NumberFormatException e) { // user inputs invalid argument for mark and unmark eg. \"mark ab\"","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"darrentfy"},"content":"                    printLine(\"Invalid command! Please enter only one valid task ID\");","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"darrentfy"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"darrentfy"},"content":"                    printLine(\"Invalid date and time format! Please use the format dd/mm/yyyy hhmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"darrentfy"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"darrentfy"},"content":"                    printLine(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"darrentfy"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"darrentfy"},"content":"        printLine(goodbye);","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":176,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"-":4,"darrentfy":172}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"darrentfy":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"    public String getType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"        return \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"        return super.getDetails() + \" | \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"                + \" | \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"        return super.toString() + \"(from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"darrentfy":30}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    private String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"                File parentDir \u003d file.getParentFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"                if (parentDir !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"                    parentDir.mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"            StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"                String str \u003d String.format(\"%s | %s | %s\\n\", task.getType(),","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"                        task.isDone ? 1 : 0, task.getDetails());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"                result.append(str);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"darrentfy"},"content":"            fw.write(result.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"darrentfy"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"darrentfy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"darrentfy"},"content":"            System.out.println(\"Something went wrong when saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"darrentfy"},"content":"    public ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"darrentfy"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"darrentfy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"darrentfy"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"darrentfy"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"darrentfy"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"darrentfy"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"darrentfy"},"content":"                return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"darrentfy"},"content":"            scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"darrentfy"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"darrentfy"},"content":"                String[] line \u003d scanner.nextLine().split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"darrentfy"},"content":"                String taskType \u003d line[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"darrentfy"},"content":"                boolean isDone \u003d line[1].equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"darrentfy"},"content":"                String description \u003d line[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"darrentfy"},"content":"                Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"darrentfy"},"content":"                switch (taskType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"darrentfy"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"darrentfy"},"content":"                        task \u003d new Todo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"darrentfy"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"darrentfy"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"darrentfy"},"content":"                        LocalDateTime by \u003d LocalDateTime.parse(line[3].trim(), inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"darrentfy"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"darrentfy"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"darrentfy"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"darrentfy"},"content":"                        LocalDateTime from \u003d LocalDateTime.parse(line[3].trim(), inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"darrentfy"},"content":"                        LocalDateTime to \u003d LocalDateTime.parse(line[4].trim(), inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"darrentfy"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"darrentfy"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"darrentfy"},"content":"                    default:","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"darrentfy"},"content":"                        throw new DukeException(\"Invalid format found in ./data/duke.txt,\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"darrentfy"},"content":"                                \" please ensure data is in correct format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"darrentfy"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"darrentfy"},"content":"                if (isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"darrentfy"},"content":"                    task.isDone \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"darrentfy"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"darrentfy"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"darrentfy"},"content":"        } catch (IOException | DukeException | DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"darrentfy"},"content":"            System.out.println(\"Something went wrong when loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"darrentfy"},"content":"        } finally {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"darrentfy"},"content":"            if (scanner !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"darrentfy"},"content":"                scanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"darrentfy"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"darrentfy"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"darrentfy"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"darrentfy":88}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"        System.out.println(\" ----------------------------------------\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"                + \"  Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"                + \"     \" + this","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"                + \"\\n ----------------------------------------\");","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"        System.out.println(\" ----------------------------------------\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"                + \"  OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"                + \"     \" + this","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"                + \"\\n ----------------------------------------\");","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"    public String getType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"        return \" \";","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"darrentfy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"darrentfy"},"content":"        return this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"darrentfy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"darrentfy"},"content":"        return \"[\" + this.getType() + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"darrentfy":42}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"    public String getType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"        return \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"        return super.getDetails();","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"        return super.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"darrentfy":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrentfy"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"darrentfy"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"darrentfy"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"darrentfy"},"content":"mark","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"darrentfy"},"content":"unmark","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"darrentfy"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"darrentfy"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"darrentfy"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"darrentfy"},"content":"deadline homework","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"darrentfy"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"darrentfy"},"content":"event meeting","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"darrentfy"},"content":"event meeting /from","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"darrentfy"},"content":"event meeting /to","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"darrentfy"},"content":"mark abc","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"darrentfy"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"darrentfy"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"darrentfy"},"content":"deadline homework /by 01/01/2024 2359","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"darrentfy"},"content":"deadline homework /by 1/1/2024 2359","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"darrentfy"},"content":"deadline homework /by 32/01/2024 2359","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"darrentfy"},"content":"event meeting /from 01/01/2024 0800 /to 01/01/2024 1000","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"darrentfy"},"content":"event meeting /from 1/1/2024 0800 /to 1/1/2024 1000","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"darrentfy"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"darrentfy"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"darrentfy"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"darrentfy"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"darrentfy"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"darrentfy"},"content":"unmark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"darrentfy"},"content":"delete 4","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"darrentfy"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"darrentfy"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"darrentfy"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"darrentfy":31}}]
