[{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"D | 1 | fewqf | feqf","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"E | 0 | efwf | fewfe to feqfq","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"winson8222":2}},{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":" * The Command Class encapsulates the functions to check the input string with the available commands.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"public class Commands {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"     * The Enum Class encapsulates all the available commands.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    enum CommandType {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"        MARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"        UNMARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        LIST,","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"        EVENT,","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        TODO,","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"        BYE,","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"        DELETE,","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"     * This method Run the Scanner to begin taking inputs from user, and check to see which commands to run.","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    public static void Run(Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        ItemList items \u003d storage.getItems();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        do {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"            if(!sc.hasNextLine()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"                String echo \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"                String command \u003d echo.split(\" \")[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"                CommandType given \u003d CommandType.valueOf(command.toUpperCase());","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"                switch(given) {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"                    case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"                        isRunning \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"                    case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"                        items.showitems();","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"                    case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"                        Pattern markpattern \u003d Pattern.compile(\"mark (\\\\d+).*\");","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"                        Matcher matcher \u003d markpattern.matcher(echo);","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"                        if(matcher.matches()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"                            String digitString \u003d matcher.group(1);","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"                            int number \u003d Integer.parseInt(digitString);","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"                            items.markDone(number);","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"                        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"                            UI.printMessage(\"Invalid mark input\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"                        Pattern unmarkpattern \u003d Pattern.compile(\"unmark (\\\\d+).*\");","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"                        matcher \u003d unmarkpattern.matcher(echo);","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"                        if(matcher.matches()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"                            String digitString \u003d matcher.group(1);","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"                            int number \u003d Integer.parseInt(digitString);","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"                            items.markUndone(number);","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"                        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"                            UI.printMessage(\"Invalid unmark input\");","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"                        Pattern deletepattern \u003d Pattern.compile(\"delete (\\\\d+).*\");","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"                        matcher \u003d deletepattern.matcher(echo);","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"                        if(matcher.matches()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"                            String digitString \u003d matcher.group(1);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"                            int number \u003d Integer.parseInt(digitString);","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"                            items.delete(number);","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"                        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"                            UI.printMessage(\"Invalid delete input\");","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"                        Pattern deadlinepattern \u003d Pattern.compile( \"deadline (.*?) /by (.*)\");","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"                        matcher \u003d deadlinepattern.matcher(echo);","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"                        if(matcher.matches()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"                            String task \u003d matcher.group(1);","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"                            String by \u003d matcher.group(2);","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"                            items.addDeadline(task, by);","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"                        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"                            throw new DeadlineException();","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"                    case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"                        Pattern todopattern \u003d Pattern.compile( \"todo (.*)\");","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"                        matcher \u003d todopattern.matcher(echo);","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"                        if(matcher.matches()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"                            String task \u003d matcher.group(1);","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"                            items.addTodo(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"                        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"                            throw new ToDoException();","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"                        Pattern eventpattern \u003d Pattern.compile( \"event (.*?) /from (.*?) /to (.*)\");","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"                        matcher \u003d eventpattern.matcher(echo);","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"                        if(matcher.matches()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"                            String task \u003d matcher.group(1);","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"                            String from \u003d matcher.group(2);","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"                            String to \u003d matcher.group(3);","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"                            items.addEvent(task, from, to);","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"                        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"                            throw new EventException();","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"                    default:","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"                        throw new DukeException();","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"                UI.printMessage(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"                UI.printMessage(\"Invalid input\");","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"        } while (isRunning);","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"        Greeting.bye();","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":135}},{"path":"src/main/java/Dates.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"public class Dates {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"    static final Pattern datepattern \u003d Pattern.compile(\"^(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[0-2])/(\\\\d{4}) (\\\\d{4}$)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    static final Pattern dateStringPattern \u003d Pattern.compile(\"\\\\d{1,2} (January|February|March|April|May|June|July|August|September|October|November|December) \\\\d{4} \\\\d{2}:\\\\d{2}\");","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    public static boolean checkDateinput(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d Dates.datepattern.matcher(date);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    public static LocalDateTime convertToDateTime(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        return dateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    public static boolean checkDateString(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"        String pattern \u003d \"\\\\d{1,2} (January|February|March|April|May|June|July|August|September|October|November|December) \\\\d{4} \\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        Pattern compiledPattern \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d compiledPattern.matcher(date);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public static LocalDateTime createDateTime(String date){","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        return dateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"winson8222":39}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":" * Deadline class is a task that contains a name and an end date","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"    private String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    private LocalDateTime bydateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    public Deadline(String name, LocalDateTime bydateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        super(name);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"        this.bydateTime \u003d bydateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        this.by \u003d Task.printDate(bydateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of a deadline task when it is in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of a Deadline Task","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    public String showTaskinList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        return \"[D]\" + super.showTaskinList() + \"(\" + \"by: \" + this.by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    public String printList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        return \"D | \" + super.printList() + \" | \" + this.by;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":37}},{"path":"src/main/java/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":" * The DeadlineException Class is used when user does not follow the deadline input format.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"public class DeadlineException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"    public DeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of DeadlineException","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of an DeadlineException","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        return \"☹ This is not a valid Deadline input\";","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"import java.util.*;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":" * Duke is entry point of our program","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    static final String LISTPATH \u003d \"./data/list.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        Greeting.greet();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        Commands.Run(this.storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        new Duke(LISTPATH).run();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"winson8222":24,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":" * The DukeException Class is used when user does not follow any input format.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of DukeException","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of an DukeException","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"        return \"☹ This is not a valid input\";","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":20}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":" * Event class is a task that contains a name and an end date and a start date","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"    private String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"    private String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    public Event (String name, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    public Event (String name, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"        super(name);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"        this.from \u003d Task.printDate(fromDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"        this.to \u003d Task.printDate(toDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of a event task when it is in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of an event Task","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    public String showTaskinList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        return \"[E]\" + super.showTaskinList() + \"(\" + \"from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    public String printList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        return \"E | \" + super.printList() + \" | \" + this.from + \" to \" + this.to;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":38}},{"path":"src/main/java/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":" * The EventException Class is used when user does not follow Event input format.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"public class EventException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"    public EventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of EventException","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of an EventException","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        return \"☹ This is not a valid event input\";","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":19}},{"path":"src/main/java/Greeting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":" * This class encapsulates the functions used to print statements when user enters and exits the program.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"public class Greeting {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"    static final String linebreak \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"     * This method prints out the line when user start the program","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"        UI.printMessage(\"Hello! I\u0027m chatbot\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"     * This method prints out the line when user exit the program","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public static void bye() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"        UI.printMessage(bye);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"winson8222":23}},{"path":"src/main/java/ItemList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":" * This class encapsulates the items being that are added by the users, and","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":" * the functions used to list them out, mark them add and delete items from it","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"public class ItemList {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    private int len;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    private File file;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    public ItemList(File file) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        this.len \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public ItemList(File file, int len, ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        this.items \u003d items;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        this.len \u003d len;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     * This method add a Deadline task to the item list.","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"     * @param name the string name of the Deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"     * @param by the string of the time the task ends.","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    public void addDeadline(String name, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Please enter an item\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        if (by.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Please enter an end date\");","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        Deadline deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"        if(Dates.checkDateinput(by)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"            deadline \u003d new Deadline(name, Dates.convertToDateTime(by));","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"            deadline \u003d new Deadline(name, by);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e copy \u003d (ArrayList\u003cTask\u003e) this.items.clone();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"            this.items.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"            this.len++;","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"            System.out.println(Greeting.linebreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Got it. I\u0027ve added this task:\",this.items.get(this.len-1).showTaskinList(),","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"                    \"Now you have \" + String.valueOf(len) + \" tasks in this list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"            this.items \u003d copy;","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"            this.len--;","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"            UI.printFileError();","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"     * This method add a Todo task to the item list.","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"     * @param newitem the string name of the todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    public void addTodo(String newitem) {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"        if (newitem.equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Please enter an item\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e copy \u003d (ArrayList\u003cTask\u003e) this.items.clone();","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"            this.items.add(new ToDo(newitem));","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"            this.len++;","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Got it. I\u0027ve added this task:\",this.items.get(this.len-1).showTaskinList(),","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"                    \"Now you have \" + String.valueOf(len) + \" tasks in this list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"            this.items \u003d copy;","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"            this.len--;","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"            UI.printFileError();","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"     * This method add an Event task to the item list.","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"     * @param newitem the string name of the event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"     * @param from the string name of the start date.","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"     * @param to the string name of the end date.","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"    public void addEvent(String newitem, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"        if (newitem.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Please enter an item\");","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"        if (from.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Please enter a start date\");","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"        if (to.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Please enter an end date\");","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"        Event event;","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"        if(Dates.checkDateinput(from) \u0026\u0026 Dates.checkDateinput(to))  {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"            event \u003d new Event(newitem, Dates.convertToDateTime(from), Dates.convertToDateTime(to));","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"            event \u003d new Event(newitem, from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e copy \u003d (ArrayList\u003cTask\u003e) this.items.clone();","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"            this.items.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"            this.len++;","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Got it. I\u0027ve added this task:\", this.items.get(this.len-1).showTaskinList()","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"            ,\"Now you have \" + String.valueOf(len) + \" tasks in this list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"            this.items \u003d copy;","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"            this.len--;","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"            UI.printFileError();","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"winson8222"},"content":"     * This method print out the items currently in the list","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"winson8222"},"content":"    public void showitems() {","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"winson8222"},"content":"        if (this.len \u003c\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"No item in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"winson8222"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"winson8222"},"content":"        UI.printList(this.items);","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"winson8222"},"content":"     * This method mark the event at a specified index as done","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"winson8222"},"content":"     * @param index the index of the task to be marked done","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"winson8222"},"content":"    public void markDone(int index) {","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"winson8222"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"winson8222"},"content":"        if (i \u003c 0 || i \u003e\u003d this.len) {","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"winson8222"},"content":"            UI.NoSuchTaskError();","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"winson8222"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"winson8222"},"content":"            this.items.get(i).setDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Nice! I\u0027ve marked this task as done:\", this.items.get(i).showTaskinList());","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"winson8222"},"content":"            this.items.get(i).setUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"winson8222"},"content":"            UI.printFileError();","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"winson8222"},"content":"     * This method mark the event at a specified index as undone","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"winson8222"},"content":"     * @param index the index of the task to be marked undone","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"winson8222"},"content":"    public void markUndone(int index) {","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"winson8222"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"winson8222"},"content":"        if (i \u003c 0 || i \u003e\u003d this.len) {","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"winson8222"},"content":"            UI.NoSuchTaskError();","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"winson8222"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"winson8222"},"content":"            this.items.get(i).setUndone();","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"OK, I\u0027ve marked this task as not done yet:\",this.items.get(i).showTaskinList());","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"winson8222"},"content":"            this.items.get(i).setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"winson8222"},"content":"            UI.printFileError();","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"winson8222"},"content":"     * This method delete the event at a specified index.","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"winson8222"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"winson8222"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"winson8222"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"winson8222"},"content":"        if(this.len \u003c\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Nothing to Delete\");","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"winson8222"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e copy \u003d (ArrayList\u003cTask\u003e) this.items.clone();","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"winson8222"},"content":"            String todelete \u003d this.items.get(index - 1).showTaskinList();","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"winson8222"},"content":"            this.items.remove(index-1);","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"winson8222"},"content":"            this.len--;","lastModifiedDate":"2023-08-24"},{"lineNumber":219,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"Noted. I\u0027ve removed this task:\", todelete);","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"winson8222"},"content":"            this.items \u003d copy;","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"winson8222"},"content":"            this.len++;","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"winson8222"},"content":"            UI.printFileError();","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"winson8222"},"content":"    public void saveAll() throws IOException{","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"winson8222"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"winson8222"},"content":"            for (int i \u003d 0; i \u003c this.items.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"winson8222"},"content":"                if(i \u003d\u003d this.items.size() - 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"winson8222"},"content":"                    writer.write(this.items.get(i).printList());","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"winson8222"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"winson8222"},"content":"                    writer.write(this.items.get(i).printList() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"winson8222"},"content":"            writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":242,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":244,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":246,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":247,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":248,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":249,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":250,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"winson8222":251}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"    private ItemList items;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    public Storage(){","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"            this.items \u003d loadAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"            this.items \u003d new ItemList(new File(Duke.LISTPATH));","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"            System.out.println(Greeting.linebreak);","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"            System.out.println(\"List not found, empty list will be created\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"            System.out.println(Greeting.linebreak);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    };","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    public ItemList getItems(){","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"        return this.items;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    private static ItemList loadAll() throws FileNotFoundException {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        File file \u003d new File(Duke.LISTPATH);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        int len \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"            if (line.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"                String[] para \u003d line.split(\" | \");","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"                String description \u003d para[4];","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"                ToDo newtask \u003d new ToDo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"                if (!para[2].equals(\"0\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"                    newtask.setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"                items.add(newtask);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"                len++;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"                continue;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"            if (line.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"                String[] para \u003d line.split(\" \\\\| \", 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"                String description \u003d para[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"                String by \u003d para[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"                Deadline newtask;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"                if (Dates.checkDateString(by)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"                    newtask \u003d new Deadline(description, Dates.createDateTime(by));","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"                    newtask \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"                if (!para[1].equals(\"0\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"                    newtask.setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"                items.add(newtask);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"                len++;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"                continue;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"            if(line.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"                String[] para \u003d line.split(\" \\\\| \", 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"                String description \u003d para[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"                String block \u003d para[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"                String[] fromTo \u003d block.split(\" to \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"                Event newtask;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"                if (Dates.checkDateString(fromTo[0]) \u0026\u0026 Dates.checkDateString(fromTo[1])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"                    newtask \u003d new Event(description, Dates.createDateTime(fromTo[0]),","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"                            Dates.createDateTime(fromTo[1]));","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"                    newtask \u003d new Event(description, fromTo[0],fromTo[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"                if (!para[1].equals(\"0\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"                    newtask.setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"                items.add(newtask);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"                len++;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"        s.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        return new ItemList(file, len, items);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"winson8222":85}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":" * The Task class contains a name and its status (if it is done or not done), and the functions to set it as","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":" * done/undone, and give the string representations of it, its status and it in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    private String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"     * This method set this task as done","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"     * This method set this task as undone","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    public void setUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"     * This method gives the name of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     * @return the name of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    public String showTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"        return this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of the status of the task (done or not done)","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"     * @return the string representation of the done status of a task.","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    private String statusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"     * This gives the string representation of the task in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"     * @return the string representation of the task in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"    public String showTaskinList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        return this.statusIcon() + \" \" + this.showTask();","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"    public String printList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"            return \"1 | \" + this.showTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"            return \"0 | \" + this.showTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"    public static String printDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        String formattedDate \u003d dateTime.format(formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        return formattedDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"winson8222":74}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":" * ToDo class is a task that contains a name only without any dates","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of a ToDo task when it is in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of a todo Task","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    public String showTaskinList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"        return \"[T]\" + super.showTaskinList();","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public String printList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        return \"T | \" + super.printList();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":24}},{"path":"src/main/java/ToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":" * The ToDoException Class is used when user does not follow Event input format.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"public class ToDoException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"    public ToDoException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of ToDoException","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of an ToDoException","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"        return \"☹ This is not a valid Todo input\";","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":19}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"public class UI {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"    public static void printMessage(String... msgs) {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"        System.out.println(Greeting.linebreak);","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"        for (String msg : msgs) {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"            System.out.println(msg);","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"        System.out.println(Greeting.linebreak);","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    public static void printFileError() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"        UI.printMessage(\"Something is wrong with the list file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    public static void NoSuchTaskError() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        UI.printMessage(\"No Such Task\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    public static void printList(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"        System.out.println(Greeting.linebreak);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"        for(int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            String index \u003d String.valueOf(i + 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"            System.out.println(index + \". \" + items.get(i).showTaskinList());","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"        System.out.println(Greeting.linebreak);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"winson8222":29}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"hello","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"deadline Submit project /by end of week","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"deadline Finish assignment /by Monday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"event bday /from here /to there","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"todo this","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    echo \"Test1 result: PASSED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    echo \"Test1 result: FAILED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":6,"-":36}},{"path":"text-ui-test/runtest2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"    mkdir ../bin","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"# delete output from previous run","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    exit 1","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"java -classpath ../bin Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"cp EXPECTED2.TXT EXPECTED2-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"dos2unix ACTUAL2.TXT EXPECTED2-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"diff ACTUAL2.TXT EXPECTED2-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    echo \"Test2 result: PASSED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    exit 0","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"else","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    echo \"Test2 result: FAILED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    exit 1","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":39}}]
