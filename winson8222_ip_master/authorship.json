[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"sourceSets {","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    main {","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        resources {","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"            srcDirs \u0027data\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"    archiveFileName \u003d \"ChatBot.jar\"","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"    // Include the data directory in the root of the shadow JAR","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"    from(\u0027data\u0027) {","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"        into \u0027/\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"checkstyle {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"winson8222":34,"-":41}},{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"T | 0 | add ","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"winson8222":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"# Chat Bot User Guide","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"## Installation","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"1. Download ChatBot.jar file to a you desired directory.","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"2. Run ChatBot.jar","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"Note that on first use, a data folder will be created, that contains saved data. **Do not modify the list.txt inside.**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"1. Add 3 different type of tasks: Todo, Deadline, Event.","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"2. View the current added tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"3. Marking existing tasks as done/not done.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"4. Rescheduling existing tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"5. Delete existing tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"# Chat Bot","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"Chat Bot is a chat bot that allows you to add, manage and view tasks to be done in an interactive manner","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"## Basics","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"1. Run ChatBot.jar to start up ChatBot","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"2. Enter commands into the chat box displayed to and click send to interact with Chat Bot.","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"3. Enter command \"bye\" and send to end Chat Bot session.","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"## Commands to Add/Show Tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"### Listing Tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"\u003e list","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"Expected output: ","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"This list of all the current tasks with index added to Chat Bot.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"Possible Errors:","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"\u003e No item in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"### Adding a Todo task","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"\u003e todo \u003c description of Todo task \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"This will add a Todo task into the current list of tasks in Chat Bot","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"\u003e Got it.I\u0027ve added this task: \u003cbr/\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"\u003e \u003c task \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"\u003e ","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"\u003e Now you have \u003c Number of task \u003e in this list","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"Possible Errors:","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"\u003e ☹ This is not a valid Todo input","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"### Adding a Deadline task","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"\u003e deadline { description of task } /by { deadline of the task }","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"This will add a Event task with specified deadline into the current list of tasks in Chat Bot.","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"\u003e Got it.I\u0027ve added this task: \u003cbr/\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"\u003e \u003c task \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"\u003e Now you have \u003c Number of task \u003e in this list","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"Possible Errors:","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"\u003e ☹ This is not a valid Deadline input","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"### Adding an Event task","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"\u003e event { description of task } /from { start time of the task } /to { end time of the task }","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"This will add a deadline task with specified start and end time into the current list of tasks in Chat Bot.","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"\u003e Got it.I\u0027ve added this task: \u003cbr/\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"\u003e \u003c task \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"\u003e Now you have \u003c Number of task \u003e in this list","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"Possible Errors:","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"\u003e ☹ This is not a valid Event input","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"## Commands to edit existing Tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"### Deleting a task","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"\u003e delete \u003c index of the task \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"This will delete a task of a specifed index. To find out a index of a task use the list command.","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"\u003e Noted. I\u0027ve removed this task: \u003cbr /\u003e { task deleted }","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"Possible Errors:","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"\u003e Nothing to Delete ","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"\u003e ","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"\u003e No task with this index","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"\u003e ","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"\u003e Invalid delete input","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"### Rescheduling a task","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"#### To reschedule Deadline:","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"\u003e reschedule \u003c index of task \u003e /by \u003c deadline of the task \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"#### To reschedule Event:","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"\u003e reschedule \u003c index of task \u003e /from \u003c start time of the task \u003e /to \u003c end time of the task \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"This change the time that is previously set when creating the Event or Deadline.","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"\u003e Task \u003c index \u003e rescheduled!","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"Possible Errors","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"\u003e This is not an Event task!","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"\u003e This is not a Deadline task!","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"\u003e Invalid Reschedule input","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"### Mark a task as done","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"\u003e mark \u003c index of the task \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"This will mark an existing task of that index to be done.","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"The task will now be displayed as:","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"\u003e [T][X] example","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"\u003e Nice! I\u0027ve marked this task as done: \u003cbr/\u003e \u003c task \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"Possible Errors","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"\u003e No Such Task","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"winson8222"},"content":"\u003e Invalid mark input","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"winson8222"},"content":"### Mark a task as not done","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"winson8222"},"content":"\u003e unmark \u003c index \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"winson8222"},"content":"This will mark an existing task of that index to be not done.","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"winson8222"},"content":"The task will now be displayed as:","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"winson8222"},"content":"\u003e [T][\u0026ensp;\u0026ensp;] example","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"winson8222"},"content":"Expected output:","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"winson8222"},"content":"\u003e OK,I\u0027ve marked this task as not done yet:\u003cbr/\u003e \u003c task \u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"winson8222"},"content":" ","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"winson8222"},"content":"Possible Errors","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"winson8222"},"content":"\u003e No Such Task","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"winson8222"},"content":"\u003e ","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"winson8222"},"content":"\u003e Invalid unmark input","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"winson8222"},"content":"## Datetime Format to follow","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"winson8222"},"content":"If you want the Deadline/Event timing to be in Datetime format, follow this structure when adding/rescheduling the tasks:","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"winson8222"},"content":"\u003e DD/MM/YYYY TTTT","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"winson8222"},"content":"The following example","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"winson8222"},"content":"\u003e deadline return book /by 2/12/2019 1800","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"winson8222"},"content":"will be added and diaplayed as:","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"winson8222"},"content":"\u003e [D][\u0026ensp;\u0026ensp;] return book (by: 02 December 2019 18:00)","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"winson8222"},"content":"## Things to Note","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"winson8222"},"content":"Do not edit data/list.txt as it will affect the loading of the existing data on next start up.","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"winson8222":148,"-":26}},{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import duke.task.ItemList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":" * The Command Class encapsulates the functions to check the input string with the available commands.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"public class Commands {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"     * The Enum Class encapsulates all the available commands.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public enum CommandType {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        MARK, UNMARK, LIST, EVENT, DEADLINE, TODO, BYE, DELETE, FIND, RESCHEDULE","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     * This method Run the Scanner to begin taking inputs from user, and check to see which commands to run.","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    public static void run(Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        ItemList items \u003d storage.getItems();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        while (isRunning) {","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"            if (!sc.hasNextLine()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"            Parser parser \u003d new Parser(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"            try {","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"                CommandType commandType \u003d CommandType.valueOf(parser.getCommand());","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"                if (commandType \u003d\u003d CommandType.BYE) {","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"                } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"                    executeCommand(commandType, parser, items);","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"                UI.printMessage(\"Invalid input\");","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"                UI.printMessage(e.toString());","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        Greeting.bye();","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    private static void executeCommand(CommandType commandType, Parser parser, ItemList items) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"            items.showitems();","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"            parser.parseMark(items);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"            parser.parseUnmark(items);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        case DELETE:","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"            parser.parseDelete(items);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"            parser.parseDeadline(items);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"        case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"            parser.parseTodo(items);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"        case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"            parser.parseEvent(items);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"        case FIND:","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"            parser.parseFind(items);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        case RESCHEDULE:","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"            parser.parseReschedule(items);","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"        default:","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"            throw new DukeException();","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":91}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        assert text !\u003d null : \"text should not be null!\";","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        assert img !\u003d null : \"img should not be null!\";","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        HBox innerHBox \u003d (HBox) getChildren().get(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(innerHBox.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        innerHBox.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        assert img !\u003d null: \"User Image is null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"winson8222":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":" * Duke is entry point of our program","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    public static final String LISTPATH \u003d \"./data/list.txt\";","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    ","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    private final UiResponse uiResponse;","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public Duke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        this.uiResponse \u003d new UiResponse(this.storage);","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    /** Starts duke program. */","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        Greeting.greet();","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"        Commands.run(this.storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    public static void main(String[] arg) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"     * Gets response based on the input String given.","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"     * @param input string input by users","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"     * @return the response based on the user input in String format","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        return this.uiResponse.getResponseString(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"winson8222":56,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":" * The DukeException Class is used when user does not follow any input format.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of DukeException","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of an DukeException","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        return \"☹ This is not a valid input\";","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":21}},{"path":"src/main/java/duke/Greeting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":" * This class encapsulates the functions used to print statements when user enters and exits the program.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"public class Greeting {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    public static final String BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    private static final String GREET \u003d \"Hello! I\u0027m chatbot\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"     * This method prints out the line when user start the program","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public static String greet() {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        UI.printMessage(GREET);","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"        return GREET;","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     * This method prints out the line when user exit the program","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    public static String bye() {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        UI.printMessage(BYE);","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        return BYE;","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"winson8222":32}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"winson8222":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.net.URL;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":" * Main entry point to the application","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"            URL resource \u003d Main.class.getResource(\"/view/MainWindow.fxml\");","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"            assert resource !\u003d null : \"MainWindow.fxml is missing!\";","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(resource);","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"winson8222":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        showDukeGreeting();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        assert userImage !\u003d null : \"User Image is null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        if (response.equals(Greeting.bye())) {","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"            Timeline exitTimeline \u003d new Timeline(new KeyFrame(Duration.seconds(1), ae -\u003e System.exit(0)));","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"            exitTimeline.play();","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"    private void showDukeGreeting() {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Greeting.greet(), dukeImage));","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"winson8222":63}},{"path":"src/main/java/duke/UiResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import duke.task.ItemList;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"public class UiResponse {","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    public UiResponse(Storage storage) {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"     * Gets a response from Chat Bot based on the input string","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"     * @param input The user string passed in","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of the Chat Bot response","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    public String getResponseString(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"        ItemList items \u003d this.storage.getItems();","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            Parser parser \u003d new Parser(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"            String command \u003d parser.getCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"            Commands.CommandType given \u003d Commands.CommandType.valueOf(command);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"            switch (given) {","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"            case BYE:","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"                return Greeting.bye();","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"            case LIST:","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"                return items.showitems();","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"            case MARK:","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"                return parser.parseMark(items);","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"                return parser.parseUnmark(items);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"            case DELETE:","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"                return parser.parseDelete(items);","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"                return parser.parseDeadline(items);","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"            case TODO:","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"                return parser.parseTodo(items);","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"            case EVENT:","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"                return parser.parseEvent(items);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"            case FIND:","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"                return parser.parseFind(items);","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"            case RESCHEDULE:","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"                return parser.parseReschedule(items);","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"            default:","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"                throw new DukeException();","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(e.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Invalid input\");","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"winson8222":62}},{"path":"src/main/java/duke/dates/Dates.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.dates;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":" * Execute any date related parsing task","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"public class Dates {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    public static final DateTimeFormatter DATE_PRINTING_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    static final Pattern DATEPATTERN \u003d Pattern.compile(\"^(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[0-2])\"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"            + \"/(\\\\d{4}) (\\\\d{4}$)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    static final Pattern DATE_CHECKING_PATTERN \u003d Pattern.compile(\"\\\\d{1,2} \"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"            + \"(January|February|March|April|May|June|July|August|\"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"            + \"September|October|November|December) \\\\d{4} \\\\d{2}:\\\\d{2}\");","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    static final DateTimeFormatter INPUT_TO_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    static final DateTimeFormatter DATALIST_TO_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public static boolean checkDateinput(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d Dates.DATEPATTERN.matcher(date);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"     * Convert a date string from line into a LocalDateTime class","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     * @param date the string of a data in the format specified by input requirements","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"     * @return LocalDateTime class based on the date String","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    public static LocalDateTime convertToDateTime(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        return LocalDateTime.parse(date, INPUT_TO_DATE_FORMATTER);","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     * Check of the date String from the list matches the pattern","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     * @return True if the date String matches the pattern","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    public static boolean checkDateString(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d DATE_CHECKING_PATTERN.matcher(date);","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"     * Convert a date string from data list into a LocalDateTime class","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"     * @return LocalDateTime class based on the date String","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"    public static LocalDateTime createDateTime(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        return LocalDateTime.parse(date, DATALIST_TO_DATE_FORMATTER);","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"winson8222":60}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import duke.dates.Dates;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import duke.task.ItemList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import duke.task.deadline.Deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import duke.task.deadline.DeadlineException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import duke.task.event.Event;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import duke.task.event.EventException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import duke.task.todo.ToDoException;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":" * Parser class is responsible for parsing a single String command line into operation on item list.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    private static final Pattern MARK_PATTERN \u003d Pattern.compile(\"mark (\\\\d+).*\");","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    private static final Pattern UNMARK_PATTERN \u003d Pattern.compile(\"unmark (\\\\d+).*\");","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    private static final Pattern DELETE_PATTERN \u003d Pattern.compile(\"delete (\\\\d+).*\");","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    private static final Pattern DEADLINE_PATTERN \u003d Pattern.compile(\"deadline (.*?) /by (.*)\");","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    private static final Pattern TODO_PATTERN \u003d Pattern.compile(\"todo (.*)\");","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    private static final Pattern EVENT_PATTERN \u003d Pattern.compile(\"event (.*?) /from (.*?) /to (.*)\");","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    private static final Pattern RESCHEDULE_EVENT_PATTERN \u003d Pattern.compile(\"reschedule (\\\\d+) /from (.*?) /to (.*)\");","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    private static final Pattern RESCHEDULE_DEADLINE_PATTERN \u003d Pattern.compile(\"reschedule (\\\\d+) /by (.*?)\");","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    private static final Pattern FIND_PATTERN \u003d Pattern.compile(\"find (.*?)\");","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    private final String line;","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    public Parser(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        assert line !\u003d null \u0026\u0026 !line.isEmpty() : \"Line should not be null or empty!\";","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        this.line \u003d line;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"     * return the string line into Command string","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"     * @return the Command in string form","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    public String getCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        String command \u003d this.line.split(\" \")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        return command.toUpperCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"     * Execute marking operation on the item list based on the line String","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"     * @param items Items used to execute the operation on","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"     * @return String representation of the marking operation of a task","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"    public String parseMark(ItemList items) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d MARK_PATTERN.matcher(this.line);","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"            String digitString \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"            int number \u003d Integer.parseInt(digitString);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"            return items.markDone(number);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Invalid mark input\");","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"     * Execute Unmarking operation on the item list based on the line String","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"     * @param items Items used to execute the operation on","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"     * @return String representation of the unmarking operation of a task","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"    public String parseUnmark(ItemList items) {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d UNMARK_PATTERN.matcher(this.line);","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"            String digitString \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"            int number \u003d Integer.parseInt(digitString);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"            return items.markUndone(number);","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Invalid unmark input\");","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"     * Execute adding Event operation on the item list based on the line String","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"     * @param items Items used to execute the operation on","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"     * @return String representation of the Deletion of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"    public String parseDelete(ItemList items) {","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d DELETE_PATTERN.matcher(this.line);","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"            String digitString \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"            int number \u003d Integer.parseInt(digitString);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"            return items.delete(number);","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Invalid delete input\");","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"     * Execute adding Deadline operation on the item list based on the line String","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"     * @param items Items used to execute the operation on","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"     * @return String representation of the Deadline that is parsed","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"    public String parseDeadline(ItemList items) throws DeadlineException {","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d DEADLINE_PATTERN.matcher(this.line);","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"            String task \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"            String by \u003d matcher.group(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"            return items.addDeadline(task, by);","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"            throw new DeadlineException();","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"     * Executes adding ToDo operation on the item list based on the line String","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"     * @param items Items used to execute the operation on","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"     * @return String representation of the Todo that is parsed","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"    public String parseTodo(ItemList items) throws ToDoException {","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d TODO_PATTERN.matcher(line);","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"            String task \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"            return items.addTodo(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"            throw new ToDoException();","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"     * Executes adding Event operation on the item list based on the line String","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"     * @param items Items used to execute the operation on","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"     * @return String representation of the Event that is parsed","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"winson8222"},"content":"    public String parseEvent(ItemList items) throws EventException {","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d EVENT_PATTERN.matcher(this.line);","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"winson8222"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"winson8222"},"content":"            String task \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"winson8222"},"content":"            String from \u003d matcher.group(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"winson8222"},"content":"            String to \u003d matcher.group(3);","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"winson8222"},"content":"            return items.addEvent(task, from, to);","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"winson8222"},"content":"            throw new EventException();","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"winson8222"},"content":"    public String parseFind(ItemList items) {","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"winson8222"},"content":"        Matcher matcher \u003d FIND_PATTERN.matcher(this.line);","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"winson8222"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"winson8222"},"content":"            String task \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"winson8222"},"content":"            return items.find(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Invalid find input\");","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"winson8222"},"content":"    public String parseReschedule(ItemList items) {","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"winson8222"},"content":"        Matcher eventMatcher \u003d RESCHEDULE_EVENT_PATTERN.matcher(this.line);","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"winson8222"},"content":"        Matcher deadlineMatcher \u003d RESCHEDULE_DEADLINE_PATTERN.matcher(this.line);","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"winson8222"},"content":"        if (eventMatcher.matches()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"winson8222"},"content":"            String number \u003d eventMatcher.group(1);","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"winson8222"},"content":"            String checkOutcome \u003d items.checkType(number);","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"winson8222"},"content":"            if (!checkOutcome.equals(\"EVENT\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"winson8222"},"content":"                return UI.printMessage(\"This is not an Event task!\");","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"winson8222"},"content":"            String from \u003d eventMatcher.group(2);","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"winson8222"},"content":"            String to \u003d eventMatcher.group(3);","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"winson8222"},"content":"            Event newEvent \u003d (Event) items.getTask(number);","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"winson8222"},"content":"            if (Dates.checkDateinput(from) \u0026\u0026 Dates.checkDateinput(to)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"winson8222"},"content":"                return items.setItems(newEvent.reschedule(Dates.convertToDateTime(from),","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"winson8222"},"content":"                        Dates.convertToDateTime(to)), number);","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"winson8222"},"content":"            } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":181,"author":{"gitId":"winson8222"},"content":"                return items.setItems(newEvent.reschedule(from, to), number);","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"winson8222"},"content":"        if (deadlineMatcher.matches()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"winson8222"},"content":"            String number \u003d deadlineMatcher.group(1);","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"winson8222"},"content":"            String checkOutcome \u003d items.checkType(number);","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"winson8222"},"content":"            if (!checkOutcome.equals(\"DEADLINE\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"winson8222"},"content":"                return UI.printMessage(\"This is not a Deadline task!\");","lastModifiedDate":"2023-09-21"},{"lineNumber":191,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"winson8222"},"content":"            String by \u003d deadlineMatcher.group(2);","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"winson8222"},"content":"            Deadline newDeadline \u003d (Deadline) items.getTask(number);","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"winson8222"},"content":"            if (Dates.checkDateinput(by)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"winson8222"},"content":"                return items.setItems(newDeadline.reschedule(Dates.convertToDateTime(by)), number);","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"winson8222"},"content":"            } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"winson8222"},"content":"                return items.setItems(newDeadline.reschedule(by), number);","lastModifiedDate":"2023-09-13"},{"lineNumber":201,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Invalid Reschedule input\");","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":205,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":206,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":207,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"winson8222":207}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import duke.dates.Dates;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import duke.task.ItemList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import duke.task.deadline.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import duke.task.event.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import duke.task.todo.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":" * Storage class loads the local data into the program, and into a. ItemList.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    private ItemList items;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    public Storage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            this.items \u003d loadAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"            this.items \u003d new ItemList(new File(Duke.LISTPATH));","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"            UI.printMessage(\"List not found, empty list will be created\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    };","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    private static ToDo parseTodo(String line) {","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        String[] para \u003d line.split(\" | \");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        String description \u003d para[4];","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        if (!para[2].equals(\"0\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"            newTask.setDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"        return newTask;","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    private static Deadline parseDeadline(String line) {","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        String[] para \u003d line.split(\" \\\\| \", 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        String description \u003d para[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        String by \u003d para[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        Deadline newTask;","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        if (Dates.checkDateString(by)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"            newTask \u003d new Deadline(description, Dates.createDateTime(by));","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"            newTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"        if (!para[1].equals(\"0\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"            newTask.setDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        return newTask;","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"    private static Event parseEvent(String line) {","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"        String[] para \u003d line.split(\" \\\\| \", 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"        String description \u003d para[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        String block \u003d para[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"        String[] fromTo \u003d block.split(\" to \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        Event newTask;","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"        if (Dates.checkDateString(fromTo[0]) \u0026\u0026 Dates.checkDateString(fromTo[1])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"            newTask \u003d new Event(description, Dates.createDateTime(fromTo[0]),","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"                    Dates.createDateTime(fromTo[1]));","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"            newTask \u003d new Event(description, fromTo[0], fromTo[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        if (!para[1].equals(\"0\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"            newTask.setDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        return newTask;","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"     * returns the Items being stored in Storage","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"     * @return the items stored that is loaded from local storage","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"    public ItemList getItems() {","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"        return this.items;","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"    private static ItemList loadAll() throws IOException {","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"        File file \u003d getFile();","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"        int noOfItems \u003d 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"            if (line.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"                items.add(parseTodo(line));","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"                noOfItems++;","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"                continue;","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"            if (line.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"                items.add(parseDeadline(line));","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"                noOfItems++;","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"                continue;","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"            if (line.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"                items.add(parseEvent(line));","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"                noOfItems++;","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"        s.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"        return new ItemList(file, noOfItems, items);","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"    private static File getFile() {","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"        File file \u003d new File(Duke.LISTPATH);","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"            try {","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"                File parentDirectory \u003d file.getParentFile();  // get the parent directory, which is \u0027data\u0027 in this case","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"                if (!parentDirectory.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"                    boolean success \u003d parentDirectory.mkdirs();","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"                    if (!success) {","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"                        System.err.println(\"Failed to create directory: \" + parentDirectory.getPath());","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"                        return null;","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"                    }","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"                file.createNewFile();  // create the file inside the directory","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"                System.err.println(\"Error occurred while creating file: \" + e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"                return null; // or handle the error in another appropriate way","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"        assert file.isFile() : \"The provided path does not point to a valid file: \" + Duke.LISTPATH;","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"        return file;","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"winson8222":139}},{"path":"src/main/java/duke/task/ItemList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import duke.dates.Dates;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import duke.task.deadline.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import duke.task.event.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import duke.task.todo.ToDo;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":" * This class encapsulates the items being that are added by the users, and","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":" * the functions used to list them out, mark them add and delete items from it","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"public class ItemList {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    private int len;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    private File file;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public ItemList(File file) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        this.len \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public ItemList(File file, int len, ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        this.items \u003d items;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        this.len \u003d len;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"     * This method add a Deadline task to the item list.","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     * @param name the string name of the Deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     * @param by the string of the time the task ends.","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    public String addDeadline(String name, String by) {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Please enter an item\");","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"        if (by.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Please enter an end date\");","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        Deadline deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        if (Dates.checkDateinput(by)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"            deadline \u003d new Deadline(name, Dates.convertToDateTime(by));","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"            deadline \u003d new Deadline(name, by);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e copy \u003d (ArrayList\u003cTask\u003e) this.items.clone();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"            this.items.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"            this.len++;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Got it. I\u0027ve added this task:\" , this.items.get(this.len - 1).showTaskinList(),","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"                    \"Now you have \" + String.valueOf(len) + \" tasks in this list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"            this.items \u003d copy;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"            this.len--;","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"            return UI.printFileError();","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"     * This method add a Todo task to the item list.","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"     * @param newitem the string name of the todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"    public String addTodo(String newitem) {","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"        if (newitem.equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Please enter an item\");","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e copy \u003d (ArrayList\u003cTask\u003e) this.items.clone();","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"            this.items.add(new ToDo(newitem));","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"            this.len++;","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Got it. I\u0027ve added this task:\" , this.items.get(this.len - 1).showTaskinList(),","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"                     \"\\n\" + \"Now you have \" + String.valueOf(len) + \" tasks in this list\");","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"            this.items \u003d copy;","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"            this.len--;","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"            return UI.printFileError();","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"     * This method add an Event task to the item list.","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"     * @param newitem the string name of the event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"     * @param from the string name of the start date.","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"     * @param to the string name of the end date.","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"    public String addEvent(String newitem, String from, String to) {","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"        if (newitem.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Please enter an item\");","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"        if (from.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Please enter an item\");","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"        if (to.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Please enter an end date\");","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"        Event event;","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"        if (Dates.checkDateinput(from) \u0026\u0026 Dates.checkDateinput(to)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"            event \u003d new Event(newitem, Dates.convertToDateTime(from), Dates.convertToDateTime(to));","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"            event \u003d new Event(newitem, from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e copy \u003d (ArrayList\u003cTask\u003e) this.items.clone();","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"            this.items.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"            this.len++;","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Got it. I\u0027ve added this task:\", this.items.get(this.len - 1).showTaskinList(),","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"                 \"Now you have \" + String.valueOf(len) + \" tasks in this list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"            this.items \u003d copy;","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"            this.len--;","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"            return UI.printFileError();","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"winson8222"},"content":"     * This method print out the items currently in the list","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"winson8222"},"content":"    public String showitems() {","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"winson8222"},"content":"        if (this.len \u003c\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"No item in the list.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"winson8222"},"content":"        return UI.printList(this.items);","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"winson8222"},"content":"     * This method mark the event at a specified index as done","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"winson8222"},"content":"     * @param index the index of the task to be marked done","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"winson8222"},"content":"    public String markDone(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"winson8222"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"winson8222"},"content":"        if (i \u003c 0 || i \u003e\u003d this.len) {","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"winson8222"},"content":"            return UI.noSuchTaskError();","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"winson8222"},"content":"            this.items.get(i).setDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Nice! I\u0027ve marked this task as done:\" , this.items.get(i).showTaskinList());","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"winson8222"},"content":"            this.items.get(i).setUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"winson8222"},"content":"            return UI.printFileError();","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"winson8222"},"content":"     * This method mark the event at a specified index as undone","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"winson8222"},"content":"     * @param index the index of the task to be marked undone","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"winson8222"},"content":"    public String markUndone(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"winson8222"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"winson8222"},"content":"        if (i \u003c 0 || i \u003e\u003d this.len) {","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"winson8222"},"content":"            return UI.noSuchTaskError();","lastModifiedDate":"2023-09-06"},{"lineNumber":183,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"winson8222"},"content":"            this.items.get(i).setUndone();","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"OK, I\u0027ve marked this task as not done yet:\" , this.items.get(i).showTaskinList());","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":190,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"winson8222"},"content":"            this.items.get(i).setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"winson8222"},"content":"            return UI.printFileError();","lastModifiedDate":"2023-09-06"},{"lineNumber":193,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":197,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"winson8222"},"content":"     * This method delete the event at a specified index.","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"winson8222"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"winson8222"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"winson8222"},"content":"    public String delete(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":205,"author":{"gitId":"winson8222"},"content":"        if (this.len \u003c\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Nothing to Delete\");","lastModifiedDate":"2023-09-06"},{"lineNumber":207,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"winson8222"},"content":"        if (this.len \u003c\u003d index) {","lastModifiedDate":"2023-09-21"},{"lineNumber":210,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"No task with this index\");","lastModifiedDate":"2023-09-21"},{"lineNumber":211,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":212,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e copy \u003d (ArrayList\u003cTask\u003e) this.items.clone();","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"winson8222"},"content":"            String todelete \u003d this.items.get(index - 1).showTaskinList();","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"winson8222"},"content":"            this.items.remove(index - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"winson8222"},"content":"            this.len--;","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Noted. I\u0027ve removed this task:\" , todelete);","lastModifiedDate":"2023-09-06"},{"lineNumber":219,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"winson8222"},"content":"            this.items \u003d copy;","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"winson8222"},"content":"            this.len++;","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"winson8222"},"content":"            return UI.printFileError();","lastModifiedDate":"2023-09-06"},{"lineNumber":223,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"winson8222"},"content":"    public void saveAll() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"winson8222"},"content":"        FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"winson8222"},"content":"        for (int i \u003d 0; i \u003c this.items.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"winson8222"},"content":"            if (i \u003d\u003d this.items.size() - 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"winson8222"},"content":"                writer.write(this.items.get(i).printList());","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"winson8222"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"winson8222"},"content":"                writer.write(this.items.get(i).printList() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"winson8222"},"content":"        writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"winson8222"},"content":"     * Gives the string representation of the found task that contains the key given","lastModifiedDate":"2023-09-21"},{"lineNumber":242,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":243,"author":{"gitId":"winson8222"},"content":"     * @param key the key that is used to search the task","lastModifiedDate":"2023-09-21"},{"lineNumber":244,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of the found task based on the key given","lastModifiedDate":"2023-09-21"},{"lineNumber":245,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":246,"author":{"gitId":"winson8222"},"content":"    public String find(String key) {","lastModifiedDate":"2023-09-06"},{"lineNumber":247,"author":{"gitId":"winson8222"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d this.items.stream()","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"winson8222"},"content":"                .filter(task -\u003e task.showTask().contains(key))","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"winson8222"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-08-30"},{"lineNumber":250,"author":{"gitId":"winson8222"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"No matched item\");","lastModifiedDate":"2023-09-06"},{"lineNumber":252,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"winson8222"},"content":"            return UI.printFound(filteredTasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":254,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"winson8222"},"content":"    public String checkType(String number) {","lastModifiedDate":"2023-09-13"},{"lineNumber":258,"author":{"gitId":"winson8222"},"content":"        int index \u003d Integer.valueOf(number) - 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":259,"author":{"gitId":"winson8222"},"content":"        if (index \u003e this.len || index \u003c 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":260,"author":{"gitId":"winson8222"},"content":"            return \"OUT_OF_RANGE\";","lastModifiedDate":"2023-09-13"},{"lineNumber":261,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":262,"author":{"gitId":"winson8222"},"content":"        Task toCheck \u003d this.items.get(index);","lastModifiedDate":"2023-09-13"},{"lineNumber":263,"author":{"gitId":"winson8222"},"content":"        if (toCheck instanceof Deadline) {","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"winson8222"},"content":"            return \"DEADLINE\";","lastModifiedDate":"2023-09-13"},{"lineNumber":265,"author":{"gitId":"winson8222"},"content":"        } else if (toCheck instanceof Event) {","lastModifiedDate":"2023-09-13"},{"lineNumber":266,"author":{"gitId":"winson8222"},"content":"            return \"EVENT\";","lastModifiedDate":"2023-09-13"},{"lineNumber":267,"author":{"gitId":"winson8222"},"content":"        } else if (toCheck instanceof ToDo) {","lastModifiedDate":"2023-09-13"},{"lineNumber":268,"author":{"gitId":"winson8222"},"content":"            return \"TODO\";","lastModifiedDate":"2023-09-13"},{"lineNumber":269,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":270,"author":{"gitId":"winson8222"},"content":"            return \"NONE\";","lastModifiedDate":"2023-09-13"},{"lineNumber":271,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":272,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":273,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":274,"author":{"gitId":"winson8222"},"content":"    public String setItems(Task task, String index) {","lastModifiedDate":"2023-09-13"},{"lineNumber":275,"author":{"gitId":"winson8222"},"content":"        this.items.set(Integer.valueOf(index) - 1, task);","lastModifiedDate":"2023-09-13"},{"lineNumber":276,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":277,"author":{"gitId":"winson8222"},"content":"            this.saveAll();","lastModifiedDate":"2023-09-13"},{"lineNumber":278,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Task \" + index + \" rescheduled!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":279,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":280,"author":{"gitId":"winson8222"},"content":"            return UI.printMessage(\"Change cannot be saved\");","lastModifiedDate":"2023-09-13"},{"lineNumber":281,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":282,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":283,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":284,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":285,"author":{"gitId":"winson8222"},"content":"     * Gives the Task with the specified index in the list","lastModifiedDate":"2023-09-21"},{"lineNumber":286,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":287,"author":{"gitId":"winson8222"},"content":"     * @param index the index of the task to locate the task","lastModifiedDate":"2023-09-21"},{"lineNumber":288,"author":{"gitId":"winson8222"},"content":"     * @return The task with the specific index","lastModifiedDate":"2023-09-21"},{"lineNumber":289,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":290,"author":{"gitId":"winson8222"},"content":"    public Task getTask(String index) {","lastModifiedDate":"2023-09-13"},{"lineNumber":291,"author":{"gitId":"winson8222"},"content":"        return this.items.get(Integer.valueOf(index) - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":292,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":293,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":294,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":295,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":296,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":297,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":298,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":299,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":300,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"winson8222":300}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import duke.dates.Dates;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":" * The Task class contains a name and its status (if it is done or not done), and the functions to set it as","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":" * done/undone, and give the string representations of it, its status and it in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"    private String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     * This method set this task as done","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"     * This method set this task as undone","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    public void setUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     * This method gives the name of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"     * @return the name of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    public String showTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        return this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of the status of the task (done or not done)","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"     * @return the string representation of the done status of a task.","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"    private String statusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"     * This gives the string representation of the task in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"     * @return the string representation of the task in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"    public String showTaskinList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"        return this.statusIcon() + \" \" + this.showTask();","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"     * Gives the string representation of the current items","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"     * @return the string representation of the current items","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"    public String printList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"            return \"1 | \" + this.showTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"            return \"0 | \" + this.showTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    public static String printDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"        return dateTime.format(Dates.DATE_PRINTING_FORMATTER);","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"winson8222":82}},{"path":"src/main/java/duke/task/deadline/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.task.deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":" * Deadline class is a task that contains a name and an end date","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    private String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public Deadline(String name, LocalDateTime byDateTime) {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        super(name);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"        this.by \u003d Task.printDate(byDateTime);","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     * Gives the string representation of a deadline task when it is in a list","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of a Deadline Task","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    public String showTaskinList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        return \"[D]\" + super.showTaskinList() + \"(\" + \"by: \" + this.by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of a Deadline task when it is in the saved list","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of a Deadline task in the saved list","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    public String printList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        return \"D | \" + super.printList() + \" | \" + this.by;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"     * Creates the new Deadline object with the new by time","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"     * @param by The end time of a deadline in String","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"     * @return A new Deadline object with new by time","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    public Deadline reschedule(String by) {","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        return new Deadline(this.showTask(), by);","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"     * Creates the new Deadline object with the new DateTime","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"     * @param byDateTime The end time of a deadline in String in DateTime","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"     * @return A new Deadline object with new by time in DateTime","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"    public Deadline reschedule(LocalDateTime byDateTime) {","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"        return new Deadline(this.showTask(), byDateTime);","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":65}},{"path":"src/main/java/duke/task/deadline/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.task.deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":" * The DeadlineException Class is used when user does not follow the deadline input format.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"public class DeadlineException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    public DeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of DeadlineException","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of an DeadlineException","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        return \"☹ This is not a valid Deadline input\";","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":22}},{"path":"src/main/java/duke/task/event/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.task.event;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":" * Event class is a task that contains a name and an end date and a start date","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"    private String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    private String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    public Event(String name, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"        super(name);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        this.from \u003d Task.printDate(fromDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        this.to \u003d Task.printDate(toDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of a event task when it is in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of an event Task","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    public String showTaskinList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        return \"[E]\" + super.showTaskinList() + \"(\" + \"from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of an Event task when it is in the saved list","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of a Event task in the saved list","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    public String printList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        return \"E | \" + super.printList() + \" | \" + this.from + \" to \" + this.to;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"     * Create a new Event object with new from and to time in DateTime","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"     * @param fromDateTime The new start time of the event in DateTime","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"     * @param toDateTime The new end time of the event in DateTime","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"     * @return an Event object with new from and to time in DateTime","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"    public Event reschedule(LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        return new Event(this.showTask(), fromDateTime, toDateTime);","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"     * Create a new Event object with new from and to time","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"     * @param from The new start time of the event","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"     * @param to The new end time of the event","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"     * @return an Event object with new from and to time","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"    public Event reschedule(String from, String to) {","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"        return new Event(this.showTask(), from, to);","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":68}},{"path":"src/main/java/duke/task/event/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.task.event;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":" * The EventException Class is used when user does not follow Event input format.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    public EventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of EventException","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of an EventException","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"        return \"☹ This is not a valid event input\";","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":23}},{"path":"src/main/java/duke/task/todo/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.task.todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":" * ToDo class is a task that contains a name only without any dates","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of a ToDo task when it is in a list","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of a ToDo Task","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    public String showTaskinList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        return \"[T]\" + super.showTaskinList();","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of a ToDo task when it is in the saved list","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of a ToDo task in the saved list","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    public String printList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        return \"T | \" + super.printList();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":33}},{"path":"src/main/java/duke/task/todo/ToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.task.todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":" * The ToDoException Class is used when user does not follow Event input format.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"public class ToDoException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    public ToDoException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"     * This method gives the string representation of ToDoException","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"     * @return The String representation of an ToDoException","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"        return \"☹ This is not a valid Todo input\";","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":23}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"public class UI {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"    public static final String LINEBREAK \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"    public static String printMessage(String... msgs) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"        String toprint \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"        for (String msg : msgs) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"            System.out.println(msg);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"            toprint +\u003d msg + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        return toprint;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    public static String printFileError() {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"        UI.printMessage(\"Something is wrong with the list file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"        return \"Something is wrong with the list file\";","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    public static String noSuchTaskError() {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        return UI.printMessage(\"No Such Task\");","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public static String printList(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        String response \u003d \"\" ;","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"            String index \u003d String.valueOf(i + 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"            String newprint \u003d index + \". \" + items.get(i).showTaskinList();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"            System.out.println(newprint);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"            response +\u003d newprint + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"        return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    public static String printFound(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        String toprint \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"            String index \u003d String.valueOf(i + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"            String newtoprint \u003d index + \". \" + items.get(i).showTaskinList();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"            System.out.println(newtoprint);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"            toprint +\u003d newtoprint + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        return toprint;","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"winson8222":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"                \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"            \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"winson8222":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"winson8222":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.io.File;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import duke.task.ItemList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import duke.task.deadline.DeadlineException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import duke.task.todo.ToDoException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    private ItemList items;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    public void setup() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        this.items \u003d new ItemList(new File(Duke.LISTPATH));","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    public void parseToDoTest_normalInput(){","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        Parser parser \u003d new Parser(\"todo newTODO\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"            parser.parseTodo(this.items);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"            outputStreamCaptor.reset();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"            this.items.showitems();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"            String expected \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"                    \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"                    \"1. [T][ ] newTODO\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"                    \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"            String actualOutput \u003d outputStreamCaptor.toString().trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"            assertEquals(expected, actualOutput);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        } catch (ToDoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    public void parseToDoTest_noNameInput_throwTodoException(){","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        Parser parser \u003d new Parser(\"todo\");","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"            parser.parseTodo(this.items);","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"            outputStreamCaptor.reset();","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"            this.items.showitems();","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"            fail();","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        } catch (ToDoException ignored) {","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"    public void parseDeadlineTest_dateInput(){","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"        Parser parser \u003d new Parser(\"deadline test /by 2/12/2019 1800\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"            parser.parseDeadline(this.items);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"            outputStreamCaptor.reset();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"            this.items.showitems();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"            String expected \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"                    \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"                    \"1. [D][ ] test(by: 02 December 2019 18:00)\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"                    \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"            String actualOutput \u003d outputStreamCaptor.toString().trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"            assertEquals(expected, actualOutput);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"        } catch (DeadlineException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"    public void parseDeadlineTest_normalInput(){","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"        Parser parser \u003d new Parser(\"deadline test /by today\");","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"            parser.parseDeadline(this.items);","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"            outputStreamCaptor.reset();","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"            this.items.showitems();","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"            String expected \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"                    \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"                    \"1. [D][ ] test(by: today)\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"                    \"____________________________________________________________\";","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"            String actualOutput \u003d outputStreamCaptor.toString().trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"            assertEquals(expected, actualOutput);","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"        } catch (DeadlineException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"            fail();","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"    public void parseDeadlineTest_invalidInput_throwDeadlineException(){","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"        Parser parser \u003d new Parser(\"deadline test /by\");","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"            parser.parseDeadline(this.items);","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"            outputStreamCaptor.reset();","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"            this.items.showitems();","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"            fail();","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"        } catch (DeadlineException ignored) {","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"winson8222":114}},{"path":"src/test/java/duke/task/ItemListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"public class ItemListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    private ItemList items;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public void setup() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"        this.items \u003d new ItemList(new File(Duke.LISTPATH));","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    public void showItemsTest_standardInput(){","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"        items.addEvent(\"testevent\", \"today\", \"tomorrow\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        items.addTodo(\"testtodo\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        items.addDeadline(\"testDeadline\", \"soon\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        outputStreamCaptor.reset();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        this.items.showitems();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        String expected \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"                \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"                \"1. [E][ ] testevent(from: today to: tomorrow)\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"                \"2. [T][ ] testtodo\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"                \"3. [D][ ] testDeadline(by: soon)\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        String actualOutput \u003d outputStreamCaptor.toString().trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        assertEquals(expected , actualOutput);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    public void showItemsTest_noInput(){","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        this.items.showitems();","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        String expected \u003d  \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"                \"No item in the list.\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        String actualOutput \u003d outputStreamCaptor.toString().trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        assertEquals(expected , actualOutput);","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"winson8222":58}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"hello","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"deadline Submit project /by end of week","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"deadline Finish assignment /by Monday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"event bday /from here /to there","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"todo this","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    echo \"Test1 result: PASSED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    echo \"Test1 result: FAILED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":6,"-":36}},{"path":"text-ui-test/runtest2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"    mkdir ../bin","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"# delete output from previous run","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    exit 1","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"java -classpath ../bin Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"cp EXPECTED2.TXT EXPECTED2-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"dos2unix ACTUAL2.TXT EXPECTED2-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"diff ACTUAL2.TXT EXPECTED2-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    echo \"Test2 result: PASSED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    exit 0","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"else","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    echo \"Test2 result: FAILED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    exit 1","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"winson8222":39}}]
