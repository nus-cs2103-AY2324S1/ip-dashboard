[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"mainClassName \u003d \u0027emiya.Launcher\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"run {","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"    mainClass.set(\"emiya.Launcher\")","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"    archiveBaseName \u003d \"emiya\"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"    archiveFileName \u003d \"emiya.jar\"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"-":40,"seantehds":29}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"# The Emiya Chatbot: Winning the War, One Task At a Time!","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"Emiya is here to win the Holy Grail War! Emiya is a chatbot that one can interact with through the **Command-Line Interface (CLI)**.","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"Emiya also contains a **Graphical-User Interface(GUI)** to make your user experience a more eye-pleasing and interesting one!","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"![EmiyaTaskManager Screenshot](/Ui.png)","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"## Quick-start Guide","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"1. Ensure that you have Java 11 installed on your computer.","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"2. Download the latest `emiya.jar` from this page.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"3. Drag and drop the file from your computer\u0027s downloads into any folder you want.","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"4. Open up the Command-Line Interface for your device\u0027s operating system.","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"5. Use the `cd` command to change directories to where `emiya.jar` is stored.","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"6. Use the command `java -jar emiya.jar` to get the application running.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"Congratulations! You have just launched Emiya. Trace On!","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"## Command Summary","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"For all commands, all parts in upper-case are variables you can change! Try it out for yourself!","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"| Commands                                               | Description                                                                               |","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"|--------------------------------------------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"| `help`                                                 | Shows all available commands, as well as their usage.                                     |","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"| `todo TASK_DESCRIPTION`                                | Creates a Todo task with a given description.                                             |","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"| `deadline TASK_DESCRIPTION /by DEADLINE`               | Creates a Deadline task with a given description and deadline.                            |","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"| `event TASK_DESCRIPTION /from START_DATE /to END_DATE` | Creates a Event task with a given description, start date and end date.                   |","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"| `list`                                                 | Lists all tasks currently within the list of tasks.                                       |","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"| `mark INDEX`                                           | Marks a task at a specified index as completed.                                           |","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"| `unmark INDEX`                                         | Remove the completed status from a task.                                                  |","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"| `delete INDEX`                                         | Deletes the task at the specified index in the list of tasks.                             |","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"| `find WORD`                                            | Searches and displays all tasks within the list of tasks that contain the specified word. |","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"| `bye`                                                  | Quits the application.                                                                    |","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"## Main Features","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"* **Creation of Tasks**: Emiya is able to create Tasks, which are separated into 3 different types: `todo`, `deadline`, and `event`.","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"    * `todo`: Todo tasks help you to keep track of tasks that do not have strict deadlines.","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"    * `deadline`: Deadline tasks help you to keep track of tasks that have certain specific deadlines.","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"    * `event`: Event tasks help you to keep track of events that happen within a specific duration.","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"* **Marking of Tasks**: Emiya is able to keep track of the status of the tasks. Tasks can be marked as either completed or incomplete, which can be displayed when the tasks are listed out with the `list` command.","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"* **Deleting of Tasks**: Emiya can delete tasks that have been added into the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"* **Displaying all Tasks**: Emiya can list out all tasks currently within the task list, allowing users to see all tasks they currently have with a simple `list` command.","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"* **Displaying all available Commands**: Emiya can display all commands that users can use within the application, along with a description of what each method does and how it can be used.","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"### `help`","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"Displays all available commands to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"`help`","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"A list of all available commands for the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"Here\u0027s a list of all possible commands!","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"/* ","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"    rest of the description of all commands","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"*/","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"### `todo`","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"Creates a Todo task with a given description.","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"`todo TASK_DESCRIPTION`","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"Informs the user of the Todo task being successfully created.","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"Sure! I have added this task to the list:","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"[T][] TASK_DESCRIPTION","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"Now you have NUMBER_OF_TASKS tasks in your list!","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"### `deadline`","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"Creates a Deadline task with a given description and deadline.","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"seantehds"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"seantehds"},"content":"`deadline TASK_DESCRIPTION /by DEADLINE`","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"seantehds"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"seantehds"},"content":"Informs the user of the Deadline task being successfully created.","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"seantehds"},"content":"Sure! I have added this task to the list:","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"seantehds"},"content":"[D][] TASK_DESCRIPTION (by: DEADLINE)","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"seantehds"},"content":"Now you have NUMBER_OF_TASKS tasks in your list!","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"seantehds"},"content":"### `event`","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"seantehds"},"content":"Creates an Event task with a given description, start date and end date.","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"seantehds"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"seantehds"},"content":"`event TASK_DESCRIPTION /from START_DATE /to END_DATE`","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"seantehds"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"seantehds"},"content":"Informs the user of the Event task being successfully created.","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"seantehds"},"content":"Sure! I have added this task to the list:","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"seantehds"},"content":"[E][] TASK_DESCRIPTION (from: START_DATE to: END_DATE)","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"seantehds"},"content":"Now you have NUMBER_OF_TASKS tasks in your list!","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"seantehds"},"content":"### `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"seantehds"},"content":"Lists out all tasks currently in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"seantehds"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"seantehds"},"content":"`list`","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"seantehds"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"seantehds"},"content":"Lists out all tasks currently in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"seantehds"},"content":"Lots of things to do! Get to it!","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"seantehds"},"content":"/*","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"seantehds"},"content":"    list of all tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"seantehds"},"content":"*/","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"seantehds"},"content":"### `mark`","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"seantehds"},"content":"Mark a task at a specified index as completed.","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"seantehds"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"seantehds"},"content":"`mark TASK_INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"seantehds"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"seantehds"},"content":"Informs the user that the task has been marked as completed.","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"seantehds"},"content":"Nice job! I have marked this task as done:","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"seantehds"},"content":"/*","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"seantehds"},"content":"    insert details of task","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"seantehds"},"content":"*/","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"seantehds"},"content":"Now you have NUMBER_OF_TASKS tasks in your list!","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"seantehds"},"content":"### `unmark`","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"seantehds"},"content":"Unmark a task at a specified index to indicate that the task is incompleted.","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"seantehds"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"seantehds"},"content":"`unmark TASK_INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"seantehds"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"seantehds"},"content":"Informs the user that the task has been unmarked.","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":176,"author":{"gitId":"seantehds"},"content":"Oof, alright I have set this task as unmarked:","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"seantehds"},"content":"/*","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"seantehds"},"content":"    insert details of task","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"seantehds"},"content":"*/","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"seantehds"},"content":"Now you have NUMBER_OF_TASKS tasks in your list!","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"seantehds"},"content":"### `delete`","lastModifiedDate":"2023-09-18"},{"lineNumber":184,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"seantehds"},"content":"Delete a task at a specified index.","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"seantehds"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"seantehds"},"content":"`delete TASK_INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"seantehds"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"seantehds"},"content":"Informs the user that the task has been deleted.","lastModifiedDate":"2023-09-18"},{"lineNumber":194,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":195,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":196,"author":{"gitId":"seantehds"},"content":"Sure, I shall now delete the following task:","lastModifiedDate":"2023-09-18"},{"lineNumber":197,"author":{"gitId":"seantehds"},"content":"/*","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"seantehds"},"content":"    insert details of task","lastModifiedDate":"2023-09-18"},{"lineNumber":199,"author":{"gitId":"seantehds"},"content":"*/","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"seantehds"},"content":"Now you have NUMBER_OF_TASKS tasks in your list!","lastModifiedDate":"2023-09-18"},{"lineNumber":201,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":202,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":203,"author":{"gitId":"seantehds"},"content":"### `find`","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":205,"author":{"gitId":"seantehds"},"content":"Finds all tasks that contain a specified keyword.","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":209,"author":{"gitId":"seantehds"},"content":"`find WORD`","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":213,"author":{"gitId":"seantehds"},"content":"Lists all tasks that contain the specified keyword with the task description.","lastModifiedDate":"2023-09-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":216,"author":{"gitId":"seantehds"},"content":"Sure, here are all the tasks that have the word in them:","lastModifiedDate":"2023-09-18"},{"lineNumber":217,"author":{"gitId":"seantehds"},"content":"/*","lastModifiedDate":"2023-09-18"},{"lineNumber":218,"author":{"gitId":"seantehds"},"content":"    insert details of tasks containing the word","lastModifiedDate":"2023-09-18"},{"lineNumber":219,"author":{"gitId":"seantehds"},"content":"*/","lastModifiedDate":"2023-09-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":221,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":222,"author":{"gitId":"seantehds"},"content":"### `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":223,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":224,"author":{"gitId":"seantehds"},"content":"Quits the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"seantehds"},"content":"Example of usage: ","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"seantehds"},"content":"`bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":229,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":230,"author":{"gitId":"seantehds"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":232,"author":{"gitId":"seantehds"},"content":"Prints following message, then quits the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":233,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":234,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":235,"author":{"gitId":"seantehds"},"content":"Goodbye!","lastModifiedDate":"2023-09-20"},{"lineNumber":236,"author":{"gitId":"seantehds"},"content":"```","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"-":21,"seantehds":215}},{"path":"src/main/java/emiya/Emiya.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.CreateDirectoryFailException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateTimeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateTimeFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":" * The main class that contains all the necessary components for the app to work.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"public class Emiya {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    private String dirName;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"    private String fileName;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     * Constructor for an Emiya instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * @param dirName The directory that the application data should be stored in.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * @param fileName The file that the application data should be stored in.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    public Emiya(String dirName, String fileName) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"        this.dirName \u003d dirName;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"        return this.taskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    public Storage getStorage() {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        return this.storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"    public Ui getUi() {","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        return this.ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"    public Parser getParser() {","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        return this.parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"    public String getDirName() {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"        return this.dirName;","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"    public String getFileName() {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        return this.fileName;","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"     * Load the contents of the specified file into the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"    public void loadList() {","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"        assert taskList.size() \u003d\u003d 0 : \"The TaskList instance is initialised empty and contains no tasks within.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"        boolean isTaskAddedToList \u003d false;","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"            storage.createDirectory(dirName);","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"            storage.createFileInDirectory(fileName, dirName);","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"            isTaskAddedToList \u003d storage.fillListWithFileContent(taskList, storage.getFileContents(fileName, dirName));","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"        } catch (CreateDirectoryFailException | InvalidDateTimeException | WrongDateTimeFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"        assert isTaskAddedToList ? taskList.size() \u003e 0 : taskList.size() \u003d\u003d 0 : \"The TaskList instance will now \"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"                + \"be filled.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":80}},{"path":"src/main/java/emiya/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.commands.ByeCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.commands.Command;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.commands.DeadlineCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.commands.DeleteCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.commands.EventCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.commands.FindCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.commands.HelpCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.commands.ListCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.commands.MarkCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"import emiya.commands.TodoCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"import emiya.commands.UnknownCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"import emiya.commands.UnmarkCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":" * An enum that contains all the keywords used to identify what command to run.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"public enum Keyword {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"    TODO(\"todo\", new TodoCommand()), DEADLINE(\"deadline\", new DeadlineCommand()),","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    EVENT(\"event\", new EventCommand()), LIST(\"list\", new ListCommand()),","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    MARK(\"mark\", new MarkCommand()), UNMARK(\"unmark\", new UnmarkCommand()),","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    DELETE(\"delete\", new DeleteCommand()), FIND(\"find\", new FindCommand()),","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    BYE(\"bye\", new ByeCommand()), HELP(\"help\", new HelpCommand()),","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    UNKNOWN(\"unknown\", new UnknownCommand());","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    private final String type;","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    private final Command command;","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    Keyword(String type, Command command) {","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"    public Command getCommand() {","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        return this.command;","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"     * Returns the respective command of the input string.","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"     * @param value The input String containing the command.","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"     * @return The respective command of the input string.","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"    public static Keyword getCommandKeyword(String value) {","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        for (Keyword kwd : Keyword.values()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"            if (kwd.type.equals(value)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"                return kwd;","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        return UNKNOWN;","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"seantehds":53}},{"path":"src/main/java/emiya/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"     * Constructor for this class.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    public Launcher() {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"     * Used to start the program.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"     * @param args String arguments.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":24}},{"path":"src/main/java/emiya/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.controllers.MainWindow;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":" * A GUI for Emiya taskbot.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"     * Constructor for this class.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"    public Main() {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * Starts the main application.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     * @param stage Main primary stage for this application.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"            stage.setTitle(\"Emiya Task Manager\");","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().createEmiyaInstance();","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":44}},{"path":"src/main/java/emiya/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" * A class that represents the Bye command.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"     * Exits the user out of the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    public static void exit() {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"        Platform.exit();","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"    public String giveHelpDescription() {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"        return \"Bye: This command exits and closes the program!\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"                + \"The format for the input is as follows:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"                + \"bye\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"seantehds":23}},{"path":"src/main/java/emiya/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"     * Returns the description of the command, as well as its usage. Used by the help command.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"     * @return A String description of the command and its usage.","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    public String giveHelpDescription() {","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"        return \"\";","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    };","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"seantehds":13}},{"path":"src/main/java/emiya/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmptyDeadlineException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateTimeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.NoByException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.UnknownCommandException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateTimeFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.parser.Parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.task.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"import emiya.ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":" * A class that represents the Deadline command.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"     * Creates a Deadline task object and adds the task into the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"     * @param taskDetails A String that contains the input from the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     * @param parser The Parser instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * @param taskList The TaskList instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * @param storage The Storage instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     * @param ui The Ui instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the file that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that the Deadline task has been successfully added","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     *     into the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     * @throws EmptyDeadlineException An exception that is thrown when the user uses a deadline command","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"     *     but does not input in task details.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"     * @throws NoByException An exception that is thrown when the user does not include /by in their deadline command.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"     * @throws InvalidDateTimeException An exception that is thrown when the user input contains an invalid date.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"     * @throws WrongDateTimeFormatException An exception that is thrown when the date that the user gives","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"     *     is in the wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"     * @throws UnknownCommandException An exception that is thrown when an unknown command is given by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"    public static String createDeadline(String taskDetails, Parser parser, TaskList taskList, Storage storage,","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"            Ui ui, String fileName, String dirName) throws EmptyDeadlineException,","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"            NoByException, InvalidDateTimeException, WrongDateTimeFormatException, UnknownCommandException {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        if (taskDetails.equals(\"\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"            throw new EmptyDeadlineException();","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        String[] deadlineDetails \u003d parser.parseForDeadline(taskDetails);","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        Deadline deadline \u003d new Deadline(false, deadlineDetails[0], deadlineDetails[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"        taskList.add(deadline);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"        storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"            return ui.addedSingularMessage(deadline, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"            return ui.addedPluralMessage(deadline, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"    public String giveHelpDescription() {","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"        return \"Deadline: This command creates a Deadline to help you keep track of any tasks with a deadline!\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"                + \"The format for the input is as follows:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"                + \"deadline NAME_OF_TASK /by DATE_TIME,\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"                + \"where DATE_TIME is in the format YYYY-MM-DD TTTT.\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"                + \"Note that the time given has to be in 24 hour format!\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":64}},{"path":"src/main/java/emiya/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmptyDeleteException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.OutOfListBoundsException;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.UnknownCommandException;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.logic.Logic;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":" * A class that represents the Delete command.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"     * Removes a Task from the TaskList instance, at a specified position within the TaskList.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"     * @param posString The position at which the task should be deleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"     * @param taskList The TaskList instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"     * @param storage The Storage instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     * @param ui The Ui instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the file that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that the task has been successfully deleted from the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     * @throws OutOfListBoundsException An exception that is thrown when the user tries to access a task that","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     *     does not exist.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * @throws EmptyDeleteException An exception that is thrown when the user uses a delete command without","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     *     providing a list index.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    public static String delete(String posString, TaskList taskList, Storage storage, Ui ui, String fileName,","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"                                String dirName) throws OutOfListBoundsException,","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"            EmptyDeleteException, UnknownCommandException {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        if (posString.equals(\"\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"            throw new EmptyDeleteException();","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        if (!Logic.isNumeric(posString)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        int pos \u003d Integer.parseInt(posString);","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        if (pos \u003c\u003d 0 || pos \u003e taskList.size()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"            throw new OutOfListBoundsException();","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        Task task \u003d taskList.get(pos - 1);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        taskList.remove(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"            return ui.deletedSingularMessage(task, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"            return ui.deletedPluralMessage(task, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"    public String giveHelpDescription() {","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"        return \"Delete: This command deletes any task!\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"                + \"The format for the input is as follows:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"                + \"delete INDEX,\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"                + \"where INDEX is the position of the task within the list.\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":66}},{"path":"src/main/java/emiya/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmptyEventException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateTimeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.NoFromException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.NoToException;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.UnknownCommandException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateTimeFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.parser.Parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.task.Event;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"import emiya.ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":" * A class that represents the Event command.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"     * Creates an Event task object and adds the task into the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     * @param taskDetails A String that contains the input from the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * @param parser The Parser instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * @param taskList The TaskList instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     * @param storage The Storage instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     * @param ui The Ui instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the file that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that the Event task has been successfully added","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     *     into the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"     * @throws EmptyEventException An exception that is thrown when the user uses an event command but","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"     *     does not input in task details.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"     * @throws NoFromException An exception that is thrown when the user does not use /from in their event command.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"     * @throws NoToException An exception that is thrown when the user does not use /to in their event command.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"     * @throws InvalidDateTimeException An exception that is thrown when the user input contains an invalid date.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"     * @throws WrongDateTimeFormatException An exception that is thrown when the date that the user gives is","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"     *     in the wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    public static String createEvent(String taskDetails, Parser parser, TaskList taskList, Storage storage,","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"                                      Ui ui, String fileName, String dirName) throws EmptyEventException,","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"            NoFromException, NoToException, InvalidDateTimeException, WrongDateTimeFormatException,","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"            UnknownCommandException {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        if (taskDetails.equals(\"\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"            throw new EmptyEventException();","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"        // parsedEventDetails are in the order of nameOfTask, start date, end date","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        String[] parsedEventDetails \u003d parser.parseForEvent(taskDetails);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        Event event \u003d new Event(false, parsedEventDetails[0], parsedEventDetails[1], parsedEventDetails[2]);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        taskList.add(event);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"            return ui.addedSingularMessage(event, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"            return ui.addedPluralMessage(event, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"    public String giveHelpDescription() {","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"        return \"Event: This command creates an Event to help you keep track of any tasks with a start and end date!\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"                + \"The format for the input is as follows:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"                + \"event NAME_OF_TASK /from START_TIME /to END_TIME,\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"                + \"where START_TIME and END_TIME is in the format YYYY-MM-DD TTTT.\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"                + \"Note that the time given has to be in 24 hour format!\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":68}},{"path":"src/main/java/emiya/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.CannotFindWordException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmptyFindException;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.ListEmptyException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":" * A class that represents the Find command.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"     * Finds tasks in the task list that contain a specific input from the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"     * @param word The specific word that the user is searching for from among the tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"     * @param taskList The TaskList instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"     * @return A String that contains the tasks that contain the input from the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"     * @throws ListEmptyException An exception that is thrown when the user tries to access the list when the list","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"     *     is empty.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"     * @throws CannotFindWordException An exception that is thrown when the word cannot be found from the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"     * @throws EmptyFindException An exception that is thrown when the find command is used by the user","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     *     without providing a word to find.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    public static String find(String word, TaskList taskList) throws ListEmptyException, CannotFindWordException,","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"            EmptyFindException {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"        if (word.equals(\"\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"            throw new EmptyFindException();","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"            return taskList.find(word);","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"    public String giveHelpDescription() {","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        return \"Find: This command finds any task that contains a given keyword!\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"                + \"The format for the input is as follows:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"                + \"find WORD,\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"                + \"where WORD is the word of interest.\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":41}},{"path":"src/main/java/emiya/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.Keyword;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" * A class that represents the Help command.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"     * Returns a String containing a description of all commands, as well as how to use them.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"     * @return A string containing the description of all commands and their usage.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    public static String help() {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"        StringBuilder helpList \u003d new StringBuilder(\"Here\u0027s a list of all possible commands!\\n\");","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"        for (Keyword kwd : Keyword.values()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"            String helpDescription \u003d kwd.getCommand().giveHelpDescription();","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"            if (helpDescription.equals(\"\")) {","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"                continue;","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"            helpList.append(helpDescription);","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"            helpList.append(\"\\n\");","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"        return helpList.toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"seantehds":27}},{"path":"src/main/java/emiya/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"    public String giveHelpDescription() {","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"        return \"List: This command shows you all tasks currently within the list of tasks!\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"                + \"The format for the input is as follows:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"                + \"list\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"seantehds":10}},{"path":"src/main/java/emiya/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.AlreadyMarkedException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmptyMarkException;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.OutOfListBoundsException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.UnknownCommandException;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.logic.Logic;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":" * A class that represents the Mark command.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"     * Marks the task within the task list at the specified position as completed.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"     * @param posString The position at which the task should be deleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"     * @param taskList The TaskList instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"     * @param storage The Storage instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     * @param ui The Ui instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the file that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that the task has been successfully marked in the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     * @throws EmptyMarkException An exception that is thrown when the mark command is used by the user without","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     *     providing an index for the list","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * @throws OutOfListBoundsException An exception that is thrown when the user tries to access a task that","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     *     does not exist.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    public static String mark(String posString, TaskList taskList, Storage storage, Ui ui, String fileName,","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"                              String dirName) throws EmptyMarkException, OutOfListBoundsException,","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"            UnknownCommandException, AlreadyMarkedException {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        if (posString.equals(\"\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"            throw new EmptyMarkException();","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        if (!Logic.isNumeric(posString)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        int pos \u003d Integer.parseInt(posString);","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        if (pos \u003c\u003d 0 || pos \u003e taskList.size()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"            throw new OutOfListBoundsException();","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        taskList.get(pos - 1).setMarked();","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        return ui.markedMessage(pos, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"    public String giveHelpDescription() {","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"        return \"Mark: This command marks any task in the list as completed!!\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"                + \"The format for the input is as follows:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"                + \"mark INDEX,\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"                + \"where INDEX is the position of the task within the list.\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":61}},{"path":"src/main/java/emiya/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmptyTodoException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.task.ToDo;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":" * A class that represents the Todo command.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"     * Creates a Todo task object and adds the task into the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"     * @param taskDetails A String that contains the input from the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"     * @param taskList The TaskList instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"     * @param storage The Storage instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"     * @param ui The Ui instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the file that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that the Todo task has been successfully added","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     *     into the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * @throws EmptyTodoException An exception that is thrown when the user uses a todo command","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     *     but does not input in task details.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    public static String createTodo(String taskDetails, TaskList taskList, Storage storage, Ui ui,","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"                                    String fileName, String dirName) throws EmptyTodoException {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"        if (taskDetails.equals(\"\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"            throw new EmptyTodoException();","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"        ToDo todo \u003d new ToDo(false, taskDetails);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"            return ui.addedSingularMessage(todo, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"            return ui.addedPluralMessage(todo, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"    public String giveHelpDescription() {","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        return \"Todo: This command creates a Todo task to help you keep track of any tasks you need to get done!\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"                + \"The format for the input is as follows:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"                + \"todo NAME_OF_TASK.\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":50}},{"path":"src/main/java/emiya/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"seantehds":5}},{"path":"src/main/java/emiya/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.AlreadyUnmarkedException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmptyUnmarkException;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.OutOfListBoundsException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.UnknownCommandException;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.logic.Logic;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":" * A class that represents the Unmark command.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"     * Marks the task within the task list at the specified position as not completed.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"     * @param posString The position at which the task should be deleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"     * @param taskList The TaskList instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"     * @param storage The Storage instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     * @param ui The Ui instance associated with the task bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the file that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory that the newly updated task list will be written into.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that the task has been successfully marked in the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     * @throws EmptyUnmarkException An exception that is thrown when the unmark command is used by the user","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     *     without providing an index for the list","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * @throws OutOfListBoundsException An exception that is thrown when the user tries to access a task that","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     *     does not exist.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    public static String unmark(String posString, TaskList taskList, Storage storage, Ui ui, String fileName,","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"                                String dirName) throws EmptyUnmarkException, OutOfListBoundsException,","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"            UnknownCommandException, AlreadyUnmarkedException {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        if (posString.equals(\"\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"            throw new EmptyUnmarkException();","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        if (!Logic.isNumeric(posString)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        int pos \u003d Integer.parseInt(posString);","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        if (pos \u003c\u003d 0 || pos \u003e taskList.size()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"            throw new OutOfListBoundsException();","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        taskList.get(pos - 1).setUnmarked();","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        return ui.unmarkedMessage(pos, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"    public String giveHelpDescription() {","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        return \"Unmark: This command marks any task in the list as incomplete!!\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"                + \"The format for the input is as follows:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"                + \"unmark INDEX,\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"                + \"where INDEX is the position of the task within the list.\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":62}},{"path":"src/main/java/emiya/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.controllers;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * The Label instance that displays text.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     * The ImageView instance that displays an image.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"     * Returns a new DialogBox instance.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"     * @param text Text to be displayed within the DialogBox.","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"     * @param img Image to be displayed within the DialogBox.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        dialog.setMinSize(275, Label.USE_PREF_SIZE);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        dialog.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"        dialog.setPadding(new Insets(0, 5, 0, 5));","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"    private void setAlignmentEmiya() {","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"        dialog.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"    public static DialogBox getEmiyaDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"        db.setAlignmentEmiya();","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":80}},{"path":"src/main/java/emiya/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.controllers;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.Emiya;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.commands.ByeCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.commands.DeadlineCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.commands.DeleteCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.commands.EventCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.commands.FindCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.commands.HelpCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.commands.MarkCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"import emiya.commands.TodoCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"import emiya.commands.UnmarkCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmiyaException;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.UnknownCommandException;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"import emiya.ui.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"    private Emiya emiya;","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Saber.png\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Emiya.png\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"    public void setEmiya(Emiya e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"        emiya \u003d e;","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"     * Instantiates an Emiya instance, then loads the contents of the specified file into the task list","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"     * of the instance.","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"    public void createEmiyaInstance() {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"        emiya \u003d new Emiya(\"data\", \"emiya.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        emiya.loadList();","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"                DialogBox.getEmiyaDialog(Ui.WELCOME_MESSAGE, dukeImage)","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"        );","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Emiya\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"     * the dialog container. Executes the command given by the user. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"        String response;","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"            String[] parsedInput \u003d emiya.getParser().parseToRemoveUnknownCommands(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"            String taskDetails \u003d parsedInput[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"            Keyword typeOfTask \u003d Keyword.getCommandKeyword(parsedInput[0]);","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"            switch (typeOfTask) {","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"            case LIST:","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"                response \u003d emiya.getTaskList().list();","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"            case MARK:","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"                response \u003d MarkCommand.mark(taskDetails, emiya.getTaskList(), emiya.getStorage(),","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"                        emiya.getUi(), emiya.getFileName(), emiya.getDirName());","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"                response \u003d UnmarkCommand.unmark(taskDetails, emiya.getTaskList(), emiya.getStorage(),","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"                        emiya.getUi(), emiya.getFileName(), emiya.getDirName());","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"            case DELETE:","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"                response \u003d DeleteCommand.delete(taskDetails, emiya.getTaskList(), emiya.getStorage(),","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"seantehds"},"content":"                        emiya.getUi(), emiya.getFileName(), emiya.getDirName());","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"seantehds"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"seantehds"},"content":"            case TODO:","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"seantehds"},"content":"                response \u003d TodoCommand.createTodo(taskDetails, emiya.getTaskList(), emiya.getStorage(),","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"seantehds"},"content":"                        emiya.getUi(), emiya.getFileName(), emiya.getDirName());","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"seantehds"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"seantehds"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"seantehds"},"content":"                response \u003d DeadlineCommand.createDeadline(taskDetails, emiya.getParser(), emiya.getTaskList(),","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"seantehds"},"content":"                        emiya.getStorage(), emiya.getUi(), emiya.getFileName(), emiya.getDirName());;","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"seantehds"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"seantehds"},"content":"            case EVENT:","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"seantehds"},"content":"                response \u003d EventCommand.createEvent(taskDetails, emiya.getParser(), emiya.getTaskList(),","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"seantehds"},"content":"                        emiya.getStorage(), emiya.getUi(), emiya.getFileName(), emiya.getDirName());","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"seantehds"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"seantehds"},"content":"            case FIND:","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"seantehds"},"content":"                response \u003d FindCommand.find(taskDetails, emiya.getTaskList());","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"seantehds"},"content":"                break;","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"seantehds"},"content":"            case HELP:","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"seantehds"},"content":"                response \u003d HelpCommand.help();","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"seantehds"},"content":"                break;","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"seantehds"},"content":"            case BYE:","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"seantehds"},"content":"                response \u003d \"Goodbye!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"seantehds"},"content":"                ByeCommand.exit();","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"seantehds"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"seantehds"},"content":"            default:","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"seantehds"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"seantehds"},"content":"        } catch (EmiyaException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"seantehds"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"seantehds"},"content":"        assert response !\u003d null : \"At the end, there will be a response to be printed and shown to the user.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"seantehds"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"seantehds"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"seantehds"},"content":"                DialogBox.getEmiyaDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":127,"author":{"gitId":"seantehds"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"seantehds"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":131}},{"path":"src/main/java/emiya/datehandler/DateHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.datehandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import static emiya.parser.Parser.parseForDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import java.time.Month;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateTimeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateTimeFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":" * A class defined to determine what LocalDateTime object needs to be instantiated after the input","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":" * from the user has been parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"public class DateHandler {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    private static final String EXAMPLE_OF_CORRECT_FORMAT \u003d \"Sep 10 2023 20:00:00\";","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"     * A static method that builds up the necessary String needed to instantiate the necessary","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     *     LocalDateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * @param strFormat The String input collected from the user","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * @return A LocalDateTime object that contains information about the date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     *     specified by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     * @throws WrongDateTimeFormatException If the date given by the user is in the wrong format.","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     * @throws InvalidDateTimeException If the date given by the user is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"    public static LocalDateTime determineDateTime(String strFormat)","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"            throws WrongDateTimeFormatException, InvalidDateTimeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"        // after parsing, array will be in format: [date, hour, min]","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"        String[] parsedDate \u003d parseForDate(strFormat);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        assert parsedDate.length \u003d\u003d 3 : \"If program reaches this point, parsedDate should contain the date and time\"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"                + \"components only and with the correct format.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        StringBuilder finalDateTimeStr \u003d new StringBuilder(parsedDate[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(\"T\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(parsedDate[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(\":\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(parsedDate[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(\":\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(\"00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        return LocalDateTime.parse(finalDateTimeStr.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"     * A static method to used when the date and time information of a LocalDateTime object is to be","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"     * printed out and displayed to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"     * @param dateTime Takes in a LocalDateTime object that contains the date and time information","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"     * @return A String that is formatted in the format MMM DD YYYY HH:MM:SS.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"    public static String correctDateTimeFormat(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"        int year \u003d dateTime.getYear();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        Month month \u003d dateTime.getMonth();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"        int day \u003d dateTime.getDayOfMonth();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"        int hour \u003d dateTime.getHour();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"        int min \u003d dateTime.getMinute();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"        StringBuilder finalStr \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"        finalStr.append(month.getDisplayName(TextStyle.SHORT, Locale.ENGLISH));","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"        finalStr.append(day \u003c 10 ? \"0\" + day : day);","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"        finalStr.append(year);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"        finalStr.append(hour \u003c 10 ? \"0\" + hour : hour);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\":\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"        finalStr.append(min \u003c 10 ? \"0\" + min : min);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\":\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\"00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"        assert finalStr.length() \u003d\u003d EXAMPLE_OF_CORRECT_FORMAT.length() : \"Final Date to be printed should be \"","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"                + \"the same as the example with correct format.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"        return finalStr.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seantehds":79}},{"path":"src/main/java/emiya/emiyaexception/AlreadyMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public class AlreadyMarkedException extends EmiyaException {","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"    public AlreadyMarkedException() {","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"        super(\"This task is already marked!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"seantehds":7}},{"path":"src/main/java/emiya/emiyaexception/AlreadyUnmarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public class AlreadyUnmarkedException extends EmiyaException {","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"    public AlreadyUnmarkedException() {","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"        super(\"This task is already unmarked!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"seantehds":7}},{"path":"src/main/java/emiya/emiyaexception/CannotFindWordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the program is unable to find a specified word from the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class CannotFindWordException extends EmiyaException {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public CannotFindWordException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"Cannot find word given in task list!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":10}},{"path":"src/main/java/emiya/emiyaexception/CreateDirectoryFailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the program is unable to create a new directory.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" * This is used to create the directory that the list contents will be saved into.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"public class CreateDirectoryFailException extends EmiyaException {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    public CreateDirectoryFailException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"        super(\"Failed to create directory\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"seantehds":12}},{"path":"src/main/java/emiya/emiyaexception/EmiyaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * Base exception that is the superclass of all other exceptions that are written.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class EmiyaException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public EmiyaException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":11}},{"path":"src/main/java/emiya/emiyaexception/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user uses a deadline command but does not input in task details.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"public class EmptyDeadlineException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public EmptyDeadlineException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        super(\"Oh no! Deadline tasks cannot be empty! Please try again!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":11}},{"path":"src/main/java/emiya/emiyaexception/EmptyDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user uses a delete command without providing a list index.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class EmptyDeleteException extends EmiyaException {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public EmptyDeleteException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"Please give a list index for delete operations!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":10}},{"path":"src/main/java/emiya/emiyaexception/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user uses an event command but does not input in task details.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class EmptyEventException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public EmptyEventException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"Oh no! Event tasks cannot be empty! Please try again!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":10}},{"path":"src/main/java/emiya/emiyaexception/EmptyFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the find command is used by the user without providing a word to find.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class EmptyFindException extends EmiyaException {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public EmptyFindException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"Oh no! Find tasks cannot be empty! Please try again!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":11}},{"path":"src/main/java/emiya/emiyaexception/EmptyMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the mark command is used by the user","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * without providing an index for the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"public class EmptyMarkException extends EmiyaException {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public EmptyMarkException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        super(\"Please give a list index for mark operations!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":11}},{"path":"src/main/java/emiya/emiyaexception/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user uses a todo command but does not input in task details.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class EmptyTodoException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"Oh no! Todo tasks cannot be empty! Please try again!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":10}},{"path":"src/main/java/emiya/emiyaexception/EmptyUnmarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the unmark command is used by the user","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * without providing an index for the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"public class EmptyUnmarkException extends EmiyaException {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public EmptyUnmarkException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        super(\"Please give a list index for unmark operations!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":11}},{"path":"src/main/java/emiya/emiyaexception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user input contains an invalid date.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class InvalidDateTimeException extends EmiyaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"Please enter a valid date!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"seantehds":10}},{"path":"src/main/java/emiya/emiyaexception/ListEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user tries to access the list when the list is empty.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class ListEmptyException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public ListEmptyException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"List is empty! Please add items to list before trying to display list contents!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":10}},{"path":"src/main/java/emiya/emiyaexception/NoByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user does not include /by in their deadline command.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"public class NoByException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public NoByException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        super(\"It seems like there\u0027s an error in your input! Did you remember to use /by in your input?\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":12}},{"path":"src/main/java/emiya/emiyaexception/NoFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user does not use /from in their event command.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"public class NoFromException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public NoFromException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        super(\"It seems like there\u0027s an error in your input! Did you remember to use /from in your input?\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":11}},{"path":"src/main/java/emiya/emiyaexception/NoToException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user does not use /to in their event command.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class NoToException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public NoToException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"It seems like there\u0027s an error in your input! Did you remember to use /to in your input?\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":10}},{"path":"src/main/java/emiya/emiyaexception/OutOfListBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user tries to access a task that does not exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class OutOfListBoundsException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public OutOfListBoundsException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"Task does not exist! Please try with a different value\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":10}},{"path":"src/main/java/emiya/emiyaexception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when an unknown command is given by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class UnknownCommandException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"Unknown command received! Please try again!\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":10}},{"path":"src/main/java/emiya/emiyaexception/WrongDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the date that the user gives is in the wrong format.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"public class WrongDateTimeFormatException extends EmiyaException {","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public WrongDateTimeFormatException() {","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        super(\"Please give the date in the format of YYYY-MM-DD TTTT, \"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"where T represents the time in the 24 hour format\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seantehds":12}},{"path":"src/main/java/emiya/logic/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.logic;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import static java.lang.Integer.MAX_VALUE;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import static java.lang.Integer.MIN_VALUE;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import java.time.YearMonth;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":" * A class that contains methods to check whether given inputs are valid as well as what type of input it is","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"public class Logic {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    // Used to check whether a given string contains purely numeric values.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"        return str.matches(\"\\\\d+\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"    public static boolean isValidYear(int year) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"        return (MIN_VALUE \u003c year \u0026\u0026 year \u003c MAX_VALUE);","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    public static boolean isValidMonth(int month) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"        return (month \u003e 0 \u0026\u0026 month \u003c 13);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * Returns whether a given month, day and year input is valid.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     * @param day The integer representing the day of the month.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     * @param month The integer representing the month of the year.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"     * @param year The year to check for.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"     * @return Boolean representing whether a given input is a valid day.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"    public static boolean isValidDay(int day, int month, int year) {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        YearMonth yearMonth \u003d YearMonth.of(year, month);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"        return (day \u003e 0 \u0026\u0026 day \u003c\u003d yearMonth.lengthOfMonth());","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    public static boolean isValidHour(int hour) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        return (hour \u003e\u003d 0 \u0026\u0026 hour \u003c\u003d 23);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"    public static boolean isValidMinute(int min) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        return (min \u003e\u003d 0 \u0026\u0026 min \u003c\u003d 59);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"     * Returns whether a given date and time is invalid or not","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"     * @param year The year to check for.","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"     * @param month The integer representing the month of the year.","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"     * @param day The integer representing the day of the month.","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"     * @param hour The hour to check for, in 24-hour format.","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"     * @param min The minutes to check for.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"     * @return Boolean representing whether a given input is invalid or not.","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"    public static boolean isInvalidDateTime(int year, int month, int day, int hour, int min) {","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"        return (!isValidYear(year) || !isValidMonth(month) || !isValidDay(day, month, year)","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"                || !isValidHour(hour) || !isValidMinute(min));","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"     * Returns whether the input is in the wrong format required to be used by the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"     * @param timePart The String containing the user\u0027s input for the time of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"     * @return Boolean representing whether the given string is in the wrong format or not.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"    public static boolean isWrongTimeFormat(String timePart) {","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"        String hourStr \u003d timePart.substring(0, 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"        String minStr \u003d timePart.substring(2, 4);","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"        boolean isWrongInputLengthForTime \u003d timePart.length() !\u003d 4;","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"        boolean isNotNumericInputTime \u003d !Logic.isNumeric(hourStr)","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"                || !Logic.isNumeric(minStr);","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"        return isWrongInputLengthForTime || isNotNumericInputTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"     * Returns whether the input is in the wrong format required to be used by the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"     * @param partsOfDate The String array containing the user\u0027s input for the date of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"     * @return Boolean representing whether the given string is in the wrong format or not.","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"    public static boolean isWrongDateFormat(String[] partsOfDate) {","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"        boolean isWrongInputFormatForDate \u003d partsOfDate.length \u003c 3;","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"        boolean isNotNumericInputDate \u003d !Logic.isNumeric(partsOfDate[0]) || !Logic.isNumeric(partsOfDate[1])","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"                || !Logic.isNumeric(partsOfDate[2]);","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"        return isWrongInputFormatForDate || isNotNumericInputDate;","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"seantehds"},"content":"     * A method that helps to check whether a given String input is a part of the reserved keyword enum.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"seantehds"},"content":"     * @param test The input that is to be checked against the keyword enum.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"seantehds"},"content":"     * @return A boolean that indicates whether the given input is part of the keyword enum.","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"seantehds"},"content":"    public static boolean enumContainsKeyword(String test) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"seantehds"},"content":"        for (Keyword k : Keyword.values()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"seantehds"},"content":"            if (k.name().equals(test)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"seantehds"},"content":"                return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"seantehds"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seantehds":104}},{"path":"src/main/java/emiya/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import static emiya.logic.Logic.enumContainsKeyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import static emiya.logic.Logic.isInvalidDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import static emiya.logic.Logic.isWrongDateFormat;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import static emiya.logic.Logic.isWrongTimeFormat;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateTimeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.NoByException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.NoFromException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.NoToException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.UnknownCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateTimeFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":" * A class that takes in a String input from the user and parses it to determine what command","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":" * the user has given.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    private String[] parsedInput;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    public Parser() {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"        this.parsedInput \u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     * Breaks down the input into smaller, separate strings to determine what command the user wished to run.","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * @param input A String input that is taken in from the user. Will be parsed to determine what command","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     *              to execute.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     * @return A String array that contains the commands, as well as details needed for the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"     * @throws UnknownCommandException When a user gives a command that is unknown.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"    public String[] parseToRemoveUnknownCommands(String input) throws UnknownCommandException {","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        // this part splits the input into 2 parts, depending on whitespace (if possible)","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        String[] partsOfInput \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        if (partsOfInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"            partsOfInput \u003d new String[] {partsOfInput[0] , \"\"};","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        boolean isNotAKeyword \u003d !enumContainsKeyword(partsOfInput[0].toUpperCase());","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        // if input is a single word AND it is not a keyword, throw UnknownCommandException","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        if (isNotAKeyword) {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        String typeOfTask \u003d partsOfInput[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d partsOfInput[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        this.parsedInput \u003d new String[] {typeOfTask, taskDetails};","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"        return this.parsedInput;","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"     * Parses the details of the deadline task in order to determine","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"     * important details of the deadline task, such as when the task has to be done","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"     * by.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"     * @param taskDetails A String that contains details about the deadline task, such as when the","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"     *                    task has to be finished by.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"     * @return A String array that contains the input from the user parsed into sections","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"     *     that can be understood by the rest of the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"     * @throws NoByException When the user does not use the keyword /by in his input.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"     * @throws UnknownCommandException An exception that is thrown when an unknown command is given by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"    public String[] parseForDeadline(String taskDetails) throws NoByException, UnknownCommandException {","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"        String[] deadlineDetails \u003d taskDetails.split(\" /by \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"        if (!taskDetails.contains(\"/by\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"            throw new NoByException();","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"        if (deadlineDetails.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"        this.parsedInput \u003d deadlineDetails;","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"        return deadlineDetails;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"     * Parses the details of the deadline task in order to determine","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"     * important details of the deadline task, such as when the task has to be done","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"     * by.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"     * @param taskDetails A String that contains details about the deadline task, such as when the","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"     *                    event starts and when it ends.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"     * @return A String array that contains the input from the user parsed into sections","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"     *     that can be understood by the rest of the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"     * @throws NoToException When the user does not use the keyword /to in his input.","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"     * @throws NoFromException When the user does not use the keyword /from in his input.","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"    public String[] parseForEvent(String taskDetails) throws NoToException, NoFromException, UnknownCommandException {","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"seantehds"},"content":"        String[] eventDetails \u003d taskDetails.split(\" /from \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"seantehds"},"content":"        if (!taskDetails.contains(\"/from\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"seantehds"},"content":"            throw new NoFromException();","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"seantehds"},"content":"        if (!taskDetails.contains(\"/to\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"seantehds"},"content":"            throw new NoToException();","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"seantehds"},"content":"        if (eventDetails.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"seantehds"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"seantehds"},"content":"        String[] eventDurationDetails \u003d eventDetails[1].split(\" /to \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"seantehds"},"content":"        if (eventDurationDetails.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"seantehds"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"seantehds"},"content":"        this.parsedInput \u003d new String[] {eventDetails[0], eventDurationDetails[0], eventDurationDetails[1]};","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"seantehds"},"content":"        return this.parsedInput;","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"seantehds"},"content":"     * Parses input into String objects that can be understood by the rest of the program.","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"seantehds"},"content":"     * @param input A String input that represents a certain date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"seantehds"},"content":"     * @return A String array that contains sections that can be understood by the rest of the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"seantehds"},"content":"     * @throws InvalidDateTimeException When the date given is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"seantehds"},"content":"     * @throws WrongDateTimeFormatException When the date given is in the wrong format.","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"seantehds"},"content":"    public static String[] parseForDate(String input) throws InvalidDateTimeException, WrongDateTimeFormatException {","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"seantehds"},"content":"        String[] partsOfDateTime \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"seantehds"},"content":"        // word/no whitespace used","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"seantehds"},"content":"        if (partsOfDateTime.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"seantehds"},"content":"            throw new WrongDateTimeFormatException();","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"seantehds"},"content":"        String datePart \u003d partsOfDateTime[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"seantehds"},"content":"        String timePart \u003d partsOfDateTime[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"seantehds"},"content":"        String[] partsOfDate \u003d datePart.split(\"-\", 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"seantehds"},"content":"        // if second part is not the time in 24h format/date not given in correct format","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"seantehds"},"content":"        if (isWrongTimeFormat(timePart) || isWrongDateFormat(partsOfDate)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"seantehds"},"content":"            throw new WrongDateTimeFormatException();","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"seantehds"},"content":"        int year \u003d Integer.parseInt(partsOfDate[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"seantehds"},"content":"        int month \u003d Integer.parseInt(partsOfDate[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"seantehds"},"content":"        int day \u003d Integer.parseInt(partsOfDate[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"seantehds"},"content":"        int hour \u003d Integer.parseInt(timePart.substring(0, 2));","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"seantehds"},"content":"        int min \u003d Integer.parseInt(timePart.substring(2, 4));","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"seantehds"},"content":"        if (isInvalidDateTime(year, month, day, hour, min)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"seantehds"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"seantehds"},"content":"        return new String[] {datePart, hour \u003c 10 ? \"0\" + hour : hour + \"\", min \u003c 10 ? \"0\" + min : min + \"\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":146}},{"path":"src/main/java/emiya/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.CreateDirectoryFailException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateTimeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateTimeFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"import emiya.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"import emiya.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"import emiya.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"import emiya.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":" * A class that contains methods that handle reading from a file and writing to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    public Storage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     * A method that reads a text file and returns the contents of the file as a String.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the file that is to be accessed.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory that contains the file to be accessed.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     * @return A String containing the contents of the file indicated by fileName.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    public String getFileContents(String fileName, String dirName) {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"        String path \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"        String pathToDataDir \u003d Paths.get(path, dirName).toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        Path pathToDataDoc \u003d Paths.get(pathToDataDir, fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"            byte[] bytes \u003d Files.readAllBytes(pathToDataDoc);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"            String content \u003d new String(bytes);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"            res \u003d content;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        return res;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"     * A method that creates a directory if it does not exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory to be created if it does not already exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"     * @throws CreateDirectoryFailException When the directory cannot be created.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"    public boolean createDirectory(String dirName) throws CreateDirectoryFailException {","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"        String path \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"        String pathToDataDir \u003d Paths.get(path, dirName).toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"        File dataDir \u003d new File(pathToDataDir);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"            boolean result \u003d dataDir.mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"            if (!result) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"                throw new CreateDirectoryFailException();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"            return true;","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"        return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"     * A method that creates an empty text file with a specified name inside a specified directory","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"     * if it does not already exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the file that is created if it does not already exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory in which the file should be created in.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"    public boolean createFileInDirectory(String fileName, String dirName) {","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"        String path \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"        String pathToDataDir \u003d Paths.get(path, dirName).toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"        Path pathToDataDoc \u003d Paths.get(pathToDataDir, fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"        String pathToDataDocStr \u003d pathToDataDoc.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"        File dataDoc \u003d new File(pathToDataDocStr);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"        if (!dataDoc.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"            String testData \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"                Files.write(pathToDataDoc, testData.getBytes());","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"                return true;","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"seantehds"},"content":"        return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"seantehds"},"content":"     * A method that writes the contents of a TaskList object into a specified file within a specified","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"seantehds"},"content":"     * directory.","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"seantehds"},"content":"     * @param taskList A TaskList instance that contains Tasks that need to be written into the","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"seantehds"},"content":"     *                 specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the specific file that the contents of the TaskList has to be written","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"seantehds"},"content":"     *                 into.","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory that contains the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"seantehds"},"content":"    public void writeToFileFromTaskList(TaskList taskList, String fileName, String dirName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"seantehds"},"content":"        String path \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"seantehds"},"content":"        String pathToDataDir \u003d Paths.get(path, dirName).toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"seantehds"},"content":"        Path pathToDataDoc \u003d Paths.get(pathToDataDir, fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"seantehds"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"seantehds"},"content":"        for (Task task : taskList.getTaskArrayList()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"seantehds"},"content":"            str.append(task.printTypeOfTask());","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"seantehds"},"content":"            str.append(\"| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"seantehds"},"content":"            str.append(task.printStatusString());","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"seantehds"},"content":"            str.append(\"| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"seantehds"},"content":"            str.append(task.printTaskDetailsString());","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"seantehds"},"content":"            str.append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"seantehds"},"content":"            Files.write(pathToDataDoc, str.toString().getBytes());","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"seantehds"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"seantehds"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"seantehds"},"content":"     * A method that is able to populate a given TaskList instance with the contents of a file,","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"seantehds"},"content":"     * which is given in a String.","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"seantehds"},"content":"     * @param taskList A TaskList instance in which the Tasks should be populated into.","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"seantehds"},"content":"     * @param fileContent A String that contains all the Tasks that should be written into the","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"seantehds"},"content":"     *                    TaskList instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"seantehds"},"content":"     * @throws WrongDateTimeFormatException When the format of the date received from the fileContent","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"seantehds"},"content":"     *     is of the wrong format.","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"seantehds"},"content":"     * @throws InvalidDateTimeException When the date received from the fileContent","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"seantehds"},"content":"     *     is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"seantehds"},"content":"    public boolean fillListWithFileContent(TaskList taskList, String fileContent)","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"seantehds"},"content":"            throws WrongDateTimeFormatException, InvalidDateTimeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"seantehds"},"content":"        String[] tasksStrArr \u003d fileContent.split(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"seantehds"},"content":"        for (String tasksStr : tasksStrArr) {","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"seantehds"},"content":"            if (tasksStr.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"seantehds"},"content":"                continue;","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"seantehds"},"content":"            String[] tasksStrParts \u003d tasksStr.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"seantehds"},"content":"            String taskType \u003d tasksStrParts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"seantehds"},"content":"            int isCompletedInt \u003d Integer.parseInt(tasksStrParts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"seantehds"},"content":"            boolean isCompletedBool \u003d (isCompletedInt \u003d\u003d 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"seantehds"},"content":"            String taskDetails \u003d tasksStrParts[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"seantehds"},"content":"            String firstDate \u003d tasksStrParts[3];","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"seantehds"},"content":"            String secondDate \u003d tasksStrParts[4];","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"seantehds"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"seantehds"},"content":"                taskList.add(new ToDo(isCompletedBool, taskDetails));","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"seantehds"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"seantehds"},"content":"                taskList.add(new Deadline(isCompletedBool, taskDetails, firstDate));","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"seantehds"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"seantehds"},"content":"                taskList.add(new Event(isCompletedBool, taskDetails, firstDate, secondDate));","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"seantehds"},"content":"        return taskList.size() \u003e 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"seantehds":168}},{"path":"src/main/java/emiya/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.datehandler.DateHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateTimeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateTimeFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":" * A class representing the Deadline tasks that the user can create.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    private final String dateOfDeadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    private LocalDateTime localDateTime \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    public Deadline(boolean isCompleted, String nameOfTask, String dateOfDeadline)","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"            throws WrongDateTimeFormatException, InvalidDateTimeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"        super(isCompleted, nameOfTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"        this.localDateTime \u003d DateHandler.determineDateTime(dateOfDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"        this.dateOfDeadline \u003d dateOfDeadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"            return \"[D][X] \" + taskDescription + \" (by: \" + DateHandler.correctDateTimeFormat(localDateTime) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"            return \"[D][ ] \" + taskDescription + \" (by: \" + DateHandler.correctDateTimeFormat(localDateTime) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"    public String printTypeOfTask() {","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        return \"D \";","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"    public String printTaskDetailsString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        return super.taskDescription + \" | \" + dateOfDeadline + \" | \" + \" \";","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"seantehds":42}},{"path":"src/main/java/emiya/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.datehandler.DateHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateTimeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateTimeFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":" * A class representing the Event tasks that the user can create.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    private final String start;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    private final String end;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"    private LocalDateTime localDateTimeStart \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    private LocalDateTime localDateTimeEnd \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    public Event(boolean isCompleted, String nameOfTask, String start, String end)","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"            throws WrongDateTimeFormatException, InvalidDateTimeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"        super(isCompleted, nameOfTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"        this.localDateTimeStart \u003d DateHandler.determineDateTime(start);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"        this.localDateTimeEnd \u003d DateHandler.determineDateTime(end);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"            return \"[E][X] \" + taskDescription + \" (from: \" + DateHandler.correctDateTimeFormat(localDateTimeStart)","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"                    + \" to: \" + DateHandler.correctDateTimeFormat(localDateTimeEnd) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"            return \"[E][ ] \" + taskDescription + \" (from: \" + DateHandler.correctDateTimeFormat(localDateTimeStart)","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"                    + \" to: \" + DateHandler.correctDateTimeFormat(localDateTimeEnd) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    public String printTypeOfTask() {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        return \"E \";","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"    public String printTaskDetailsString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        return super.taskDescription + \" |\" + \" \" + start + \" |\" + \" \" + end;","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"seantehds":48}},{"path":"src/main/java/emiya/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.AlreadyMarkedException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.AlreadyUnmarkedException;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":" * An abstract class the other Task subtypes inherit from.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    public Task(boolean isCompleted, String taskDescription) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"            return \"[X] \" + taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"            return \"[ ] \" + taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     * Returns a String that indicates what type of task it is.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * @return Returns a String that indicates what type of task it is.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"    public abstract String printTypeOfTask();","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"     * Returns a String that indicates whether the task is completed or not.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"     * @return Returns a String that indicates whether the task is completed or not.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"    public String printStatusString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"            return \"1 \";","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"            return \"0 \";","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"     * Returns a String that contains the details of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"     * @return Returns a String that contains the details of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"    public abstract String printTaskDetailsString();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"    public void setUnmarked() throws AlreadyUnmarkedException {","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        if (!this.isCompleted) {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"            throw new AlreadyUnmarkedException();","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"    public void setMarked() throws AlreadyMarkedException {","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"            throw new AlreadyMarkedException();","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"seantehds":65}},{"path":"src/main/java/emiya/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.CannotFindWordException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.ListEmptyException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":" * A class that represents the list of Tasks within the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"        return this.taskArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    public Task get(int pos) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"        return this.taskArrayList.get(pos);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    public void remove(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"        this.taskArrayList.remove(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"        return this.taskArrayList.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        this.taskArrayList.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"     * Returns the contents of the list as a String.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"     * @return Returns the contents of the list as a String.","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"     * @throws ListEmptyException An exception that is thrown when the user tries to access the list when","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"     *     the list is empty.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"    public String list() throws ListEmptyException {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"        int listPointer \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"        StringBuilder listString \u003d new StringBuilder(\"Lots of things to do! Get to it!:\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        if (taskArrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"            throw new ListEmptyException();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"            String listItem \u003d listPointer + \".\" + task + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"            listPointer++;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"            listString.append(listItem);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        return listString.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"     * Return the tasks in the task list that contains the input in their description.","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"     * @param word The input given by the user to search for among the tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"     * @return The tasks within the task list that contain the input as a String.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"     * @throws ListEmptyException An exception that is thrown when the user tries to access the list when","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"     *     the list is empty.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"     * @throws CannotFindWordException An exception that is thrown when the program is unable to find","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"     *     a specified word from the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"    public String find(String word) throws ListEmptyException, CannotFindWordException {","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"        int listPointer \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"        StringBuilder listString \u003d new StringBuilder(\"Sure, here are all the tasks that have this word in them:\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"        if (taskArrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"            throw new ListEmptyException();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"            String taskDescription \u003d task.taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"            if (taskDescription.contains(word)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"                String listItem \u003d listPointer + \".\" + task + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"                listPointer++;","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"                listString.append(listItem);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"                isFound \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"        if (!isFound) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"            throw new CannotFindWordException();","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"        return listString.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":91}},{"path":"src/main/java/emiya/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * A class representing the Todo tasks that the user can create.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public ToDo(boolean isCompleted, String nameOfTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(isCompleted, nameOfTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"            return \"[T][X] \" + taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"            return \"[T][ ] \" + taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    public String printTypeOfTask() {","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"        return \"T \";","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    public String printTaskDetailsString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"        return super.taskDescription + \" | \" + \" \" + \" | \" + \" \";","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"seantehds":30}},{"path":"src/main/java/emiya/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":" * A class containing messages that should be displayed to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Emiya!\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"            + \"What can I do for you?\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"            + \"If any help is required, input \\\"help\\\" into the user input box below, then press enter!\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"     * Returns a string that indicates that a task has been added to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"     * Used when the task list only contains one task.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that a task has been added to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    public String addedSingularMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"        return \"Sure! I have added this task to the list:\\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"                + \"Now you have \" + taskList.size() + \" task in your list!\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"     * Returns a string that indicates that a task has been added to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"     * Used when the task list contains anything other than one task.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that a task has been added to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"    public String addedPluralMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"        return \"Sure! I have added this task to the list:\\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in your list!\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"     * Returns a string that indicates that a task has been deleted from the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"     * Used when the task list only contains one task.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that a task has been added to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"    public String deletedSingularMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        return \"Sure, I shall now delete the following task:\\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"                + \"Now you have \" + taskList.size() + \" task in your list!\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"     * Returns a string that indicates that a task has been deleted from the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"     * Used when the task list contains anything other than one task.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that a task has been added to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"    public String deletedPluralMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"        return \"Sure, I shall now delete the following task:\\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in your list!\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"     * Returns a string that indicates that a task has been marked.","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"     * @param position The position the task that was marked is at.","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that a task has been marked.","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"    public String markedMessage(int position, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"        return \"Nice job! I have marked this task as done:\\n\" + taskList.get(position - 1) + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"     * Returns a string that indicates that a task has been unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"     * @param position The position the task that was marked is at.","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"     * @return A String that indicates that a task has been unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"    public String unmarkedMessage(int position, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"        return \"Oof, alright I have set this task as unmarked:\\n\" + taskList.get(position - 1) + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":87}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: BEE9E4;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"emiya.controllers.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: CAECCFF;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: BEE9E4;\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"seantehds":19}},{"path":"src/test/java/emiya/datehandler/DateHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.datehandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateTimeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateTimeFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import static emiya.datehandler.DateHandler.determineDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"public class DateHandlerTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    public void determineDateTime_correctDateTimeFormat_dateTimeObjectsEqual(){","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"        LocalDateTime testObj;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-09-01 1200\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"            testObj \u003d determineDateTime(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateTimeFormatException | InvalidDateTimeException e ) {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"        assertEquals(LocalDateTime.of(2023, 9,1,12,0), testObj);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    public void determineDateTime_wrongDateFormat_exceptionThrown(){","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023/09/01 1200\";","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"            LocalDateTime result \u003d determineDateTime(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected WrongDateTimeFormatException to be thrown\");","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateTimeFormatException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"            // Test passes","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"            fail(\"Unexpected InvalidDateException thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    public void determineDateTime_wrongTimeFormat_exceptionThrown(){","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-09-01 2.00pm\";","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"            LocalDateTime result \u003d determineDateTime(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected WrongDateTimeFormatException to be thrown\");","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateTimeFormatException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"            // Test passes","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"            fail(\"Unexpected InvalidDateException thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"    public void determineDateTime_invalidTimeGiven_exceptionThrown(){","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-09-01 1793\";","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"            LocalDateTime result \u003d determineDateTime(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected InvalidDateException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateTimeFormatException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"            fail(\"Unexpected WrongDateTimeFormatException thrown\");","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"            // Test passes","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":64}},{"path":"src/test/java/emiya/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    // featureUnderTest_testScenario_expectedBehavior","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    public void parseToRemoveUnknownCommands_correctlyFormattedInput_generateExpectedOutput() throws UnknownCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"todo finish homework\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"        String[] expectedOutput \u003d {\"todo\", \"finish homework\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"        assertArrayEquals(expectedOutput, parser.parseToRemoveUnknownCommands(input));","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    public void parseForDeadline_correctlyFormattedInput_generateExpectedOutput() throws NoByException,","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"            UnknownCommandException {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"finish homework /by 2023-09-01 1500\";","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"        String[] expectedOutput \u003d {\"finish homework\", \"2023-09-01 1500\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"        assertArrayEquals(expectedOutput, parser.parseForDeadline(taskDetails));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    public void parseForEvent_correctlyFormattedInput_generateExpectedOutput() throws NoToException, NoFromException,","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"            UnknownCommandException {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"attend meeting /from 2023-09-01 1500 /to 2023-09-01 1600\";","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        String[] expectedOutput \u003d {\"attend meeting\", \"2023-09-01 1500\", \"2023-09-01 1600\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"        assertArrayEquals(expectedOutput, parser.parseForEvent(taskDetails));","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"    public void parseForDate_correctlyFormattedInput_generateExpectedOutput() throws InvalidDateTimeException,","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"            WrongDateTimeFormatException {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-09-01 1500\";","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        String[] expectedOutput \u003d {\"2023-09-01\", \"15\", \"00\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        assertArrayEquals(expectedOutput, parser.parseForDate(input));","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"    public void parseToRemoveUnknownCommands_invalidInput1_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"invalid\";","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"            parser.parseToRemoveUnknownCommands(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected UnknownCommandException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"    public void parseToRemoveUnknownCommands_invalidInput2_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"dead \";","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"            parser.parseToRemoveUnknownCommands(input);","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected UnknownCommandException to be thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"    public void parseForDeadline_noByInInput1_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"finish homework tomorrow\";","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"            parser.parseForDeadline(taskDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected NoByException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"        } catch (UnknownCommandException e){","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"            fail(\"Did not throw correct exception\");","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"        } catch (NoByException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"    public void parseForDeadline_noByInInput2_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"finish homework by tomorrow\";","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"seantehds"},"content":"            parser.parseForDeadline(taskDetails);","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected NoByException to be thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"seantehds"},"content":"        } catch (UnknownCommandException e){","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"seantehds"},"content":"            fail(\"Did not throw correct exception\");","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"seantehds"},"content":"        } catch (NoByException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"seantehds"},"content":"    public void parseForDeadline_noDeadlineDescription_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"/by 2023-09-09 1800\";","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"seantehds"},"content":"            parser.parseForDeadline(taskDetails);","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected UnknownCommandException to be thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"seantehds"},"content":"        } catch (NoByException e){","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"seantehds"},"content":"            fail(\"Did not throw correct exception\");","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"seantehds"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"seantehds"},"content":"    public void parseForEvent_noFromInInput1_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"attend meeting 9am to 11am\";","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"seantehds"},"content":"            parser.parseForEvent(taskDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected NoFromException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"seantehds"},"content":"        } catch (NoToException | UnknownCommandException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"seantehds"},"content":"            fail(\"Wrong Exception thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"seantehds"},"content":"        } catch (NoFromException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"seantehds"},"content":"    public void parseForEvent_noFromInInput2_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"attend meeting from 9am /to 11am\";","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"seantehds"},"content":"            parser.parseForEvent(taskDetails);","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected NoFromException to be thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"seantehds"},"content":"        } catch (NoToException | UnknownCommandException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"seantehds"},"content":"            fail(\"Wrong Exception thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"seantehds"},"content":"        } catch (NoFromException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"seantehds"},"content":"    public void parseForEvent_noToInInput1_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"attend meeting /from 9am 11am\";","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"seantehds"},"content":"            parser.parseForEvent(taskDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected NoToException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"seantehds"},"content":"        } catch (NoFromException | UnknownCommandException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"seantehds"},"content":"            fail(\"Wrong Exception thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"seantehds"},"content":"        } catch (NoToException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"seantehds"},"content":"    public void parseForEvent_noToInInput2_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"attend meeting /from 9am to 11am\";","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"seantehds"},"content":"            parser.parseForEvent(taskDetails);","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected NoToException to be thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"seantehds"},"content":"        } catch (NoFromException | UnknownCommandException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"seantehds"},"content":"            fail(\"Wrong Exception thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"seantehds"},"content":"        } catch (NoToException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"seantehds"},"content":"    public void parseForEvent_noEventDescription_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"/from 2023-09-09 1800 /to 2023-09-09 2000\";","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"seantehds"},"content":"            parser.parseForEvent(taskDetails);","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected UnknownCommandException to be thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"seantehds"},"content":"        } catch (NoFromException | NoToException e){","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"seantehds"},"content":"            fail(\"Did not throw correct exception\");","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"seantehds"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"seantehds"},"content":"    public void parseForDate_wrongFormatForDate1_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023/09/01 1500\";","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"seantehds"},"content":"            parser.parseForDate(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected WrongDateTimeFormatException to be thrown\");","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"seantehds"},"content":"            fail(\"Wrong exception thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateTimeFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"seantehds"},"content":"    public void parseForDate_wrongFormatForDate2_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"1/2/2023 1500\";","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"seantehds"},"content":"            parser.parseForDate(input);","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected WrongDateTimeFormatException to be thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"seantehds"},"content":"            fail(\"Wrong exception thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateTimeFormatException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":210,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"seantehds"},"content":"    public void parseForDate_invalidDateInput1_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":216,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-13-01 1500\";","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"seantehds"},"content":"            parser.parseForDate(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected InvalidDateException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateTimeFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":222,"author":{"gitId":"seantehds"},"content":"            fail(\"Wrong exception thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":223,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":224,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":229,"author":{"gitId":"seantehds"},"content":"    public void parseForDate_invalidTimeInput1_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":230,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-12-01 2569\";","lastModifiedDate":"2023-09-20"},{"lineNumber":232,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":233,"author":{"gitId":"seantehds"},"content":"            parser.parseForDate(input);","lastModifiedDate":"2023-09-20"},{"lineNumber":234,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected InvalidDateException to be thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":235,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateTimeFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":236,"author":{"gitId":"seantehds"},"content":"            fail(\"Wrong exception thrown\");","lastModifiedDate":"2023-09-20"},{"lineNumber":237,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":238,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":241}}]
