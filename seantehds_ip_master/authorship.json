[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    mainClass.set(\"emiya.Emiya\")","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"    archiveBaseName \u003d \"emiya\"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"    archiveFileName \u003d \"emiya.jar\"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"-":40,"seantehds":8}},{"path":"src/main/java/emiya/Emiya.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmiyaException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmptyDeadlineException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmptyEventException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.EmptyTodoException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.OutOfListBoundsException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.UnknownCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"import emiya.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"import emiya.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"import emiya.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"import emiya.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"import emiya.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"import emiya.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"public class Emiya {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    // must remove static at the end","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    private String dirName;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    private String fileName;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    public Emiya(String dirName, String fileName) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"        this.dirName \u003d dirName;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        // shift try-catch to emiya.storage.Storage; maybe no need shift?","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"            storage.createDirectory(dirName);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"            storage.createFileInDirectory(fileName, dirName);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"            storage.fillListWithFileContent(taskList, storage.fileContents(fileName, dirName));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        } catch (EmiyaException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        // keep","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        Scanner myScannerObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        System.out.println(emiya.ui.Ui.WELCOME_MESSAGE);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"        while (true) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"                // nextLine is blocking, so can have this here","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"                String input \u003d myScannerObj.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"                // Terminates the program by exiting the while loop.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"                // kiv shift where","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"                if (input.equals(\"I am the bone of my sword\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"                    System.out.println(Ui.UBW);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"                    continue;","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"                // kiv shift where","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"                if (input.equals(\"dead\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"                    System.out.println(Ui.DEAD);","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"                    continue;","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"                // shift to TaskList: DONE (includes ListPointer)","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"                // Method to list out all items in list. If the list is empty, throws exception","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"                // and informs user to add items to list.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"                    taskList.list();","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"                    continue;","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"                Integer[] position \u003d new Integer[] {null};","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"                String[] parsedInput \u003d parser.parseToRemoveUnknownCommands(position, input);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"                String typeOfTask \u003d parsedInput[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"                String taskDetails \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"                if (parsedInput.length \u003e 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"                    taskDetails \u003d parsedInput[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"                switch (typeOfTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"seantehds"},"content":"                case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"seantehds"},"content":"                    if (position[0] !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"seantehds"},"content":"                        if (position[0] \u003c\u003d 0 || position[0] \u003e taskList.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"seantehds"},"content":"                            throw new OutOfListBoundsException();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"seantehds"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"seantehds"},"content":"                        taskList.get(position[0] - 1).setMarked();","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"seantehds"},"content":"                        System.out.println(ui.markedMessage(position[0], taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"seantehds"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"seantehds"},"content":"                        throw new UnknownCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"seantehds"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"seantehds"},"content":"                    storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"seantehds"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"seantehds"},"content":"                case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"seantehds"},"content":"                    if (position[0] !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"seantehds"},"content":"                        if (position[0] \u003c\u003d 0 || position[0] \u003e taskList.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"seantehds"},"content":"                            throw new OutOfListBoundsException();","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"seantehds"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"seantehds"},"content":"                        taskList.get(position[0] - 1).setUnmarked();","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"seantehds"},"content":"                        System.out.println(ui.unmarkedMessage(position[0], taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"seantehds"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"seantehds"},"content":"                        throw new UnknownCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"seantehds"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"seantehds"},"content":"                    storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"seantehds"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"seantehds"},"content":"                case \"delete\":","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"seantehds"},"content":"                    if (position[0] !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"seantehds"},"content":"                        if (position[0] \u003c\u003d 0 || position[0] \u003e taskList.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"seantehds"},"content":"                            throw new OutOfListBoundsException();","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"seantehds"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"seantehds"},"content":"                        Task task \u003d taskList.get(position[0] - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"seantehds"},"content":"                        taskList.remove(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"seantehds"},"content":"                        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"seantehds"},"content":"                            System.out.println(ui.deletedSingularMessage(task, taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"seantehds"},"content":"                        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"seantehds"},"content":"                            System.out.println(ui.deletedPluralMessage(task, taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"seantehds"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"seantehds"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"seantehds"},"content":"                        throw new UnknownCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"seantehds"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"seantehds"},"content":"                    storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"seantehds"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"seantehds"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"seantehds"},"content":"                    // need to be able to go through the rest of the string and add it inside","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"seantehds"},"content":"                    if (taskDetails.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"seantehds"},"content":"                        throw new EmptyTodoException();","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"seantehds"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"seantehds"},"content":"                    ToDo todo \u003d new ToDo(false, taskDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"seantehds"},"content":"                    taskList.add(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"seantehds"},"content":"                    if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"seantehds"},"content":"                        System.out.println(ui.addedSingularMessage(todo, taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"seantehds"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"seantehds"},"content":"                        System.out.println(ui.addedPluralMessage(todo, taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"seantehds"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"seantehds"},"content":"                    storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"seantehds"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"seantehds"},"content":"                case \"deadline\": // go through taskDetails and find /by","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"seantehds"},"content":"                    if (taskDetails.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"seantehds"},"content":"                        throw new EmptyDeadlineException();","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"seantehds"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"seantehds"},"content":"                    String[] deadlineDetails \u003d parser.parseForDeadline(taskDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"seantehds"},"content":"                    Deadline deadline \u003d new Deadline(false, deadlineDetails[0], deadlineDetails[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"seantehds"},"content":"                    taskList.add(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"seantehds"},"content":"                    if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"seantehds"},"content":"                        System.out.println(ui.addedSingularMessage(deadline, taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"seantehds"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"seantehds"},"content":"                        System.out.println(ui.addedPluralMessage(deadline, taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"seantehds"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"seantehds"},"content":"                    storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"seantehds"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"seantehds"},"content":"                case \"event\": // need to go through taskDetails and find /from and /to","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"seantehds"},"content":"                    if (taskDetails.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"seantehds"},"content":"                        throw new EmptyEventException();","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"seantehds"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"seantehds"},"content":"                    String[] parsedEventDetails \u003d parser.parseForEvent(taskDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"seantehds"},"content":"                    Event event \u003d new Event(false, parsedEventDetails[0], parsedEventDetails[1], parsedEventDetails[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"seantehds"},"content":"                    taskList.add(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"seantehds"},"content":"                    if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"seantehds"},"content":"                        System.out.println(ui.addedSingularMessage(event, taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"seantehds"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"seantehds"},"content":"                        System.out.println(ui.addedPluralMessage(event, taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"seantehds"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"seantehds"},"content":"                    storage.writeToFileFromTaskList(taskList, fileName, dirName);","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"seantehds"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"seantehds"},"content":"                default:","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"seantehds"},"content":"                    throw new UnknownCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"seantehds"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"seantehds"},"content":"            } catch (EmiyaException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"seantehds"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"seantehds"},"content":"        System.out.println(emiya.ui.Ui.EXIT_MESSAGE);","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"seantehds"},"content":"        myScannerObj.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"seantehds"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"seantehds"},"content":"        new Emiya(\"data\", \"emiya.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":191}},{"path":"src/main/java/emiya/Keywords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public enum Keywords {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"    TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"    MARK(\"mark\"), UNMARK(\"unmark\"), DELETE(\"delete\"), FIND(\"find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    private String type;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    Keywords(String type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    public String getType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"        return this.type;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"seantehds":15}},{"path":"src/main/java/emiya/datehandler/DateHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.datehandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import static emiya.parser.Parser.parseForDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import java.time.Month;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":" * A class defined to determine what LocalDateTime object needs to be instantiated after the input","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":" * from the user has been parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"public class DateHandler {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"     * A static method that builds up the necessary String needed to instantiate the necessary","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"     * LocalDateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"     * @param strFormat The String input collected from the user","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"     * @return A LocalDateTime object that contains information about the date and time","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * specified by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * @throws WrongDateFormatException If the date given by the user is in the wrong format.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     * @throws InvalidDateException If the date given by the user is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    public static LocalDateTime determineDateTime(String strFormat)","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"            throws WrongDateFormatException, InvalidDateException {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"        String[] parsedDate \u003d parseForDate(strFormat);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"        StringBuilder finalDateTimeStr \u003d new StringBuilder(parsedDate[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(\"T\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(parsedDate[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(\":\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(parsedDate[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(\":\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"        finalDateTimeStr.append(\"00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        return LocalDateTime.parse(finalDateTimeStr.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"     * A static method to used when the date and time information of a LocalDateTime object is to be","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"     * printed out and displayed to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"     * @param dateTime Takes in a LocalDateTime object that contains the date and time information","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"     * @return A String that is formatted in the format MMM DD YYYY HH:MM:SS.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"    public static String correctDateTimeFormat(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        int year \u003d dateTime.getYear();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        Month month \u003d dateTime.getMonth();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"        int day \u003d dateTime.getDayOfMonth();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"        int hour \u003d dateTime.getHour();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"        int min \u003d dateTime.getMinute();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        StringBuilder finalStr \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"        finalStr.append(month.getDisplayName(TextStyle.SHORT, Locale.ENGLISH));","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"        finalStr.append(day);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"        finalStr.append(year);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"        finalStr.append(hour \u003c 10 ? \"0\" + hour : hour);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\":\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"        finalStr.append(min \u003c 10 ? \"0\" + min : min);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\":\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"        finalStr.append(\"00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"        return finalStr.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seantehds":72}},{"path":"src/main/java/emiya/emiyaexception/CannotFindWordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public class CannotFindWordException extends EmiyaException{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"    public CannotFindWordException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"                \"Cannot find word given in task list!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":9}},{"path":"src/main/java/emiya/emiyaexception/CreateDirectoryFailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the program is unable to create a new directory.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" * This is used to create the directory that the list contents will be saved into.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"public class CreateDirectoryFailException extends EmiyaException {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    public CreateDirectoryFailException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"                + \"Failed to create directory\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"seantehds":14}},{"path":"src/main/java/emiya/emiyaexception/EmiyaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * Base exception that is the superclass of all other exceptions that are written.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class EmiyaException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public EmiyaException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":11}},{"path":"src/main/java/emiya/emiyaexception/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user uses a deadline command but does not input in task details.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"public class EmptyDeadlineException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public EmptyDeadlineException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"Oh no! Deadline tasks cannot be empty! Please try again!\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":13}},{"path":"src/main/java/emiya/emiyaexception/EmptyDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public class EmptyDeleteException extends EmiyaException{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"    public EmptyDeleteException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"                \"Please give a list index for delete operations!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":9}},{"path":"src/main/java/emiya/emiyaexception/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user uses an event command but does not input in task details.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class EmptyEventException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public EmptyEventException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"                + \"Oh no! Event tasks cannot be empty! Please try again!\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":12}},{"path":"src/main/java/emiya/emiyaexception/EmptyFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public class EmptyFindException extends EmiyaException{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"    public EmptyFindException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"                \"Oh no! Find tasks cannot be empty! Please try again!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":11}},{"path":"src/main/java/emiya/emiyaexception/EmptyMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public class EmptyMarkException extends EmiyaException{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"    public EmptyMarkException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"                \"Please give a list index for mark operations!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":9}},{"path":"src/main/java/emiya/emiyaexception/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user uses a todo command but does not input in task details.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class EmptyTodoException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"                + \"Oh no! Todo tasks cannot be empty! Please try again!\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":12}},{"path":"src/main/java/emiya/emiyaexception/EmptyUnmarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public class EmptyUnmarkException extends EmiyaException{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"    public EmptyUnmarkException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"                \"Please give a list index for unmark operations!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":9}},{"path":"src/main/java/emiya/emiyaexception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user input contains an invalid date.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class InvalidDateException extends EmiyaException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public InvalidDateException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"                + \"Please enter a valid date!\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"seantehds":12}},{"path":"src/main/java/emiya/emiyaexception/ListEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user uses the list command when the list is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class ListEmptyException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public ListEmptyException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"                + \"List is empty! Please add items to list before trying to display list contents!\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":12}},{"path":"src/main/java/emiya/emiyaexception/NoByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user does not include /by in their deadline command.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"public class NoByException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public NoByException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"It seems like there\u0027s an error in your input! Did you remember to use /by in your input?\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":14}},{"path":"src/main/java/emiya/emiyaexception/NoFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user does not use /from in their event command.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"public class NoFromException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public NoFromException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"It seems like there\u0027s an error in your input! Did you remember to use /from in your input?\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":13}},{"path":"src/main/java/emiya/emiyaexception/NoToException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user does not use /to in their event command.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class NoToException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public NoToException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"                + \"It seems like there\u0027s an error in your input! Did you remember to use /to in your input?\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":12}},{"path":"src/main/java/emiya/emiyaexception/OutOfListBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the user tries to access a task that does not exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class OutOfListBoundsException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public OutOfListBoundsException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"                + \"Task does not exist! Please try with a different value\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":12}},{"path":"src/main/java/emiya/emiyaexception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when an unknown command is given by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class UnknownCommandException extends EmiyaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"                + \"Unknown command received! Please try again!\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"seantehds":12}},{"path":"src/main/java/emiya/emiyaexception/WrongDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.emiyaexception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":" * An exception that is thrown when the date that the user gives is in the wrong format.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"public class WrongDateFormatException extends EmiyaException {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public WrongDateFormatException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        super(\"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"                + \"Please give the date in the format of YYYY-MM-DD TTTT, \"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"                + \"where T represents the time in the 24 hour format\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seantehds":14}},{"path":"src/main/java/emiya/logic/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.logic;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.Keywords;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":" * A class that contains methods to check whether given inputs are valid as well as what type of input it is","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"public class Logic {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    // Used to check whether a given string contains purely numeric values.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"        return str.matches(\"\\\\d+\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    public static boolean isValidYear(int year) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"        return (year \u003e 0 \u0026\u0026 year \u003c 9999);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    public static boolean isValidMonth(int month) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"        return (month \u003e 0 \u0026\u0026 month \u003c 13);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    public static boolean isValidDay(int day) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"        return (day \u003e 0 \u0026\u0026 day \u003c 32);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    public static boolean isValidHour(int hour) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"        return (hour \u003e\u003d 0 \u0026\u0026 hour \u003c\u003d 23);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"    public static boolean isValidMinute(int min) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"        return (min \u003e\u003d 0 \u0026\u0026 min \u003c\u003d 59);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"     * A method that helps to check whether a given String input is a part of the reserved keyword enum.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"     * @param test The input that is to be checked against the keyword enum.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"     * @return A boolean that indicates whether the given input is part of the keyword enum.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    public static boolean enumContainsKeyword(String test) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        for (Keywords k : Keywords.values()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"            if (k.name().equals(test)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"                return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"seantehds":48}},{"path":"src/main/java/emiya/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import static emiya.logic.Logic.enumContainsKeyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.NoByException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.NoFromException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.NoToException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.UnknownCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.logic.Logic;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":" * A class that takes in a String input from the user and parses it to determine what command","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":" * the user has given.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    public Parser() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"     * A method that takes in the initial input from the user to determine the type of command","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"     * the user wishes to run. The method breaks down the input into smaller, separate strings to","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"     * achieve this.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"     * @param position An Integer object that is passed in to determine what position needs to be changed","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     *                 for certain commands, such as mark and unmark.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * @param input A String input that is taken in from the user. Will be parsed to determine what command","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     *              to execute.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     * @return A String array that contains the commands, as well as details needed for the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"     * @throws UnknownCommandException When a user gives a command that is unknown.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"    public String[] parseToRemoveUnknownCommands(Integer[] position, String input) throws UnknownCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        // this part splits the input into 2 parts, depending on whitespace (if possible)","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        String[] partsOfInput \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        // if input is a single word AND it is not a keyword, throw UnknownCommandException","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"        if (partsOfInput.length \u003c 2 \u0026\u0026 !enumContainsKeyword(partsOfInput[0].toUpperCase())) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"        // figure out what command is being input","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        String typeOfTask \u003d partsOfInput[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        // if it is a mark/unmark, this will be number, else is part of command","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"        if (partsOfInput.length \u003e 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"            taskDetails \u003d partsOfInput[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        // for mark/unmark commands","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        if (Logic.isNumeric(taskDetails)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"            position[0] \u003d Integer.parseInt(taskDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"            return new String[] {typeOfTask};","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"        } else { // any other command, need pass in task details as well","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"            return new String[] {typeOfTask, taskDetails};","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"     * A method that parses the details of the deadline task in order to determine","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"     * important details of the deadline task, such as when the task has to be done","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"     * by.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"     * @param taskDetails A String that contains details about the deadline task, such as when the","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"     *                    task has to be finished by.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"     * @return A String array that contains the input from the user parsed into sections","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"     * that can be understood by the rest of the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"     * @throws NoByException When the user does not use the keyword /by in his input.","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"    public String[] parseForDeadline(String taskDetails) throws NoByException {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"        String[] deadlineDetails \u003d taskDetails.split(\" /by \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"        if (deadlineDetails.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"            throw new NoByException();","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"        return deadlineDetails;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"     * A method that parses the details of the deadline task in order to determine","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"     * important details of the deadline task, such as when the task has to be done","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"     * by.","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"     * @param taskDetails A String that contains details about the deadline task, such as when the","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"     *                    event starts and when it ends.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"     * @return A String array that contains the input from the user parsed into sections","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"     * that can be understood by the rest of the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"     * @throws NoToException When the user does not use the keyword /to in his input.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"     * @throws NoFromException When the user does not use the keyword /from in his input.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"    public String[] parseForEvent(String taskDetails) throws NoToException, NoFromException {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"        String[] eventDetails \u003d taskDetails.split(\" /from \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"        if (eventDetails.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"seantehds"},"content":"            throw new NoFromException();","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"seantehds"},"content":"        String[] eventDurationDetails \u003d eventDetails[1].split(\" /to \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"seantehds"},"content":"        if (eventDurationDetails.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"seantehds"},"content":"            throw new NoToException();","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"seantehds"},"content":"        return new String[] {eventDetails[0], eventDurationDetails[0], eventDurationDetails[1]};","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"seantehds"},"content":"     * A static method that takes in a String that contains the date information about the task, and","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"seantehds"},"content":"     * parses it into sections that can be understood by the rest of the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"seantehds"},"content":"     * @param input A String input that represents a certain date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"seantehds"},"content":"     * @return A String array that contains sections that can be understood by the rest of the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"seantehds"},"content":"     * @throws InvalidDateException When the date given is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"seantehds"},"content":"     * @throws WrongDateFormatException When the date given is in the wrong format.","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"seantehds"},"content":"    public static String[] parseForDate(String input) throws InvalidDateException, WrongDateFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"seantehds"},"content":"        String[] partsOfDateTime \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"seantehds"},"content":"        // word/no whitespace used","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"seantehds"},"content":"        if (partsOfDateTime.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"seantehds"},"content":"            throw new WrongDateFormatException();","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"seantehds"},"content":"        String datePart \u003d partsOfDateTime[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"seantehds"},"content":"        String timePart \u003d partsOfDateTime[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"seantehds"},"content":"        String[] partsOfDate \u003d datePart.split(\"-\", 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"seantehds"},"content":"        // if second part is not the time in 24h format/date not given in correct format","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"seantehds"},"content":"        if (timePart.length() !\u003d 4 || !Logic.isNumeric(timePart.substring(0, 2))","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"seantehds"},"content":"                || !Logic.isNumeric(timePart.substring(2, 4)) || partsOfDate.length \u003c 3","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"seantehds"},"content":"                || !Logic.isNumeric(partsOfDate[0]) || !Logic.isNumeric(partsOfDate[1])","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"seantehds"},"content":"                || !Logic.isNumeric(partsOfDate[2])) {","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"seantehds"},"content":"            throw new WrongDateFormatException();","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"seantehds"},"content":"        int year \u003d Integer.parseInt(partsOfDate[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"seantehds"},"content":"        int month \u003d Integer.parseInt(partsOfDate[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"seantehds"},"content":"        int day \u003d Integer.parseInt(partsOfDate[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"seantehds"},"content":"        int hour \u003d Integer.parseInt(timePart.substring(0, 2));","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"seantehds"},"content":"        int min \u003d Integer.parseInt(timePart.substring(2, 4));","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"seantehds"},"content":"        // if given date is invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"seantehds"},"content":"        if (!Logic.isValidYear(year) || !Logic.isValidMonth(month)","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"seantehds"},"content":"                || !Logic.isValidDay(day) || !Logic.isValidHour(hour)","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"seantehds"},"content":"                || !Logic.isValidMinute(min)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"seantehds"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"seantehds"},"content":"        return new String[] {datePart, hour \u003c 10 ? \"0\" + hour : hour + \"\", min \u003c 10 ? \"0\" + min : min + \"\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":145}},{"path":"src/main/java/emiya/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.CreateDirectoryFailException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"import emiya.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"import emiya.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"import emiya.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"import emiya.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":" * A class that contains methods that handle reading from a file and writing to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    public Storage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"     * A method that reads a text file and returns the contents of the file as a String.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the file that is to be accessed.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory that contains the file to be accessed.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"     * @return A String containing the contents of the file indicated by fileName.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"    public String fileContents(String fileName, String dirName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"        String path \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        String pathToDataDir \u003d Paths.get(path, dirName).toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        Path pathToDataDoc \u003d Paths.get(pathToDataDir, fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"            byte[] bytes \u003d Files.readAllBytes(pathToDataDoc);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"            String content \u003d new String(bytes);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"            res \u003d content;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        return res;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"     * A method that creates a directory if it does not exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory to be created if it does not already exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"     * @throws CreateDirectoryFailException When the directory cannot be created.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"    public void createDirectory(String dirName) throws CreateDirectoryFailException {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"        String path \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"        String pathToDataDir \u003d Paths.get(path, dirName).toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"        File dataDir \u003d new File(pathToDataDir);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"            boolean result \u003d dataDir.mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"            if (!result) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"                throw new CreateDirectoryFailException();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"     * A method that creates an empty text file with a specified name inside a specified directory","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"     * if it does not already exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the file that is created if it does not already exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory in which the file should be created in.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"    public void createFileInDirectory(String fileName, String dirName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"        String path \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"        String pathToDataDir \u003d Paths.get(path, dirName).toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"        Path pathToDataDoc \u003d Paths.get(pathToDataDir, fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"        String pathToDataDocStr \u003d pathToDataDoc.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"        File dataDoc \u003d new File(pathToDataDocStr);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"        if (!dataDoc.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"            String testData \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"                Files.write(pathToDataDoc, testData.getBytes());","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"seantehds"},"content":"     * A method that writes the contents of a TaskList object into a specified file within a specified","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"seantehds"},"content":"     * directory.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"seantehds"},"content":"     * @param taskList A TaskList instance that contains Tasks that need to be written into the","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"seantehds"},"content":"     *                 specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"seantehds"},"content":"     * @param fileName The name of the specific file that the contents of the TaskList has to be written","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"seantehds"},"content":"     *                 into.","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"seantehds"},"content":"     * @param dirName The name of the directory that contains the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"seantehds"},"content":"    public void writeToFileFromTaskList(TaskList taskList, String fileName, String dirName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"seantehds"},"content":"        String path \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"seantehds"},"content":"        String pathToDataDir \u003d Paths.get(path, dirName).toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"seantehds"},"content":"        Path pathToDataDoc \u003d Paths.get(pathToDataDir, fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"seantehds"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"seantehds"},"content":"        for (Task task : taskList.getTaskArrayList()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"seantehds"},"content":"            str.append(task.typeOfString());","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"seantehds"},"content":"            str.append(\"| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"seantehds"},"content":"            str.append(task.printStatusString());","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"seantehds"},"content":"            str.append(\"| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"seantehds"},"content":"            str.append(task.printTaskDetailsString());","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"seantehds"},"content":"            str.append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"seantehds"},"content":"            Files.write(pathToDataDoc, str.toString().getBytes());","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"seantehds"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"seantehds"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"seantehds"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"seantehds"},"content":"     * A method that is able to populate a given TaskList instance with the contents of a file,","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"seantehds"},"content":"     * which is given in a String.","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"seantehds"},"content":"     * @param taskList A TaskList instance in which the Tasks should be populated into.","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"seantehds"},"content":"     * @param fileContent A String that contains all the Tasks that should be written into the","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"seantehds"},"content":"     *                    TaskList instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"seantehds"},"content":"     * @throws WrongDateFormatException When the format of the date received from the fileContent","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"seantehds"},"content":"     * is of the wrong format.","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"seantehds"},"content":"     * @throws InvalidDateException When the date received from the fileContent","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"seantehds"},"content":"     * is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"seantehds"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"seantehds"},"content":"    public void fillListWithFileContent(TaskList taskList, String fileContent)","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"seantehds"},"content":"            throws WrongDateFormatException, InvalidDateException {","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"seantehds"},"content":"        String[] tasksStrArr \u003d fileContent.split(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"seantehds"},"content":"        for (String tasksStr : tasksStrArr) {","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"seantehds"},"content":"            if (tasksStr.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"seantehds"},"content":"                continue;","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"seantehds"},"content":"            String[] tasksStrParts \u003d tasksStr.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"seantehds"},"content":"            String taskType \u003d tasksStrParts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"seantehds"},"content":"            int isCompletedInt \u003d Integer.parseInt(tasksStrParts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"seantehds"},"content":"            boolean isCompletedBool \u003d (isCompletedInt \u003d\u003d 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"seantehds"},"content":"            String taskDetails \u003d tasksStrParts[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"seantehds"},"content":"            String firstDate \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"seantehds"},"content":"            String secondDate \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"seantehds"},"content":"            if (tasksStrParts.length \u003e\u003d 4) {","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"seantehds"},"content":"                firstDate \u003d tasksStrParts[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"seantehds"},"content":"            if (tasksStrParts.length \u003d\u003d 5) {","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"seantehds"},"content":"                secondDate \u003d tasksStrParts[4];","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"seantehds"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"seantehds"},"content":"                taskList.add(new ToDo(isCompletedBool, taskDetails));","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"seantehds"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"seantehds"},"content":"                taskList.add(new Deadline(isCompletedBool, taskDetails, firstDate));","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"seantehds"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"seantehds"},"content":"                taskList.add(new Event(isCompletedBool, taskDetails, firstDate, secondDate));","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"seantehds":165}},{"path":"src/main/java/emiya/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.datehandler.DateHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateFormatException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    private final String dateOfDeadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    private LocalDateTime localDateTime \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    public Deadline(boolean isCompleted, String nameOfTask, String dateOfDeadline)","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"            throws WrongDateFormatException, InvalidDateException {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"        super(isCompleted, nameOfTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"        this.localDateTime \u003d DateHandler.determineDateTime(dateOfDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"        this.dateOfDeadline \u003d dateOfDeadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"            return \"[D][X] \" + taskDescription + \" (by: \" + DateHandler.correctDateTimeFormat(localDateTime) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"            return \"[D][ ] \" + taskDescription + \" (by: \" + DateHandler.correctDateTimeFormat(localDateTime) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"    public String typeOfString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"        return \"D \";","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"    public String printTaskDetailsString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"        return super.taskDescription + \" |\" + \" \" + dateOfDeadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"seantehds":39}},{"path":"src/main/java/emiya/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import emiya.datehandler.DateHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateFormatException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"    private final String start;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    private final String end;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    private LocalDateTime localDateTimeStart \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    private LocalDateTime localDateTimeEnd \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"    public Event(boolean isCompleted, String nameOfTask, String start, String end)","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"            throws WrongDateFormatException, InvalidDateException {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"        super(isCompleted, nameOfTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"        this.localDateTimeStart \u003d DateHandler.determineDateTime(start);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"        this.localDateTimeEnd \u003d DateHandler.determineDateTime(end);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"            return \"[E][X] \" + taskDescription + \" (from: \" + DateHandler.correctDateTimeFormat(localDateTimeStart)","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"                    + \" to: \" + DateHandler.correctDateTimeFormat(localDateTimeEnd) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"            return \"[E][ ] \" + taskDescription + \" (from: \" + DateHandler.correctDateTimeFormat(localDateTimeStart)","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"                    + \" to: \" + DateHandler.correctDateTimeFormat(localDateTimeEnd) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"    public String typeOfString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        return \"E \";","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"    public String printTaskDetailsString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"        return super.taskDescription + \" |\" + \" \" + start + \" |\" + \" \" + end;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"seantehds":45}},{"path":"src/main/java/emiya/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"    public Task(boolean isCompleted, String taskDescription) {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"            return \"[X] \" + taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"            return \"[ ] \" + taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    public abstract String typeOfString();","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    public String printStatusString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"            return \"1 \";","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"            return \"0 \";","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"    public abstract String printTaskDetailsString();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    public void setUnmarked() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"    public void setMarked() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"seantehds":40}},{"path":"src/main/java/emiya/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.CannotFindWordException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.ListEmptyException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.ListEmptyException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"        return this.taskArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    public Task get(int pos) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"        return this.taskArrayList.get(pos);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    public void remove(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"        this.taskArrayList.remove(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"        return this.taskArrayList.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        this.taskArrayList.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"    public void list() throws ListEmptyException {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"        int listPointer \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"        StringBuilder listString \u003d new StringBuilder(\"-----------------------------------------\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"                \"Lots of things to do! Get to it!:\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        if (taskArrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"            throw new ListEmptyException();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"            String listItem \u003d listPointer + \".\" + task + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"            listPointer++;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"            listString.append(listItem);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        listString.append(\"-----------------------------------------\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        System.out.println(listString);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"    public void find(String word) throws ListEmptyException, CannotFindWordException {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"        int listPointer \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        StringBuilder listString \u003d new StringBuilder(\"-----------------------------------------\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"                \"Sure, here are all the tasks that have this word in them:\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"        if (taskArrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"            throw new ListEmptyException();","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"            String taskDescription \u003d task.taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"            if (taskDescription.contains(word)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"                String listItem \u003d listPointer + \".\" + task + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"                listPointer++;","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"                listString.append(listItem);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"                isFound \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"        if (!isFound) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"            throw new CannotFindWordException();","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"        listString.append(\"-----------------------------------------\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"        System.out.println(listString);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":77}},{"path":"src/main/java/emiya/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"    public ToDo(boolean isCompleted, String nameOfTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"        super(isCompleted, nameOfTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"            return \"[T][X] \" + taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"            return \"[T][ ] \" + taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"    public String typeOfString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"        return \"T \";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    public String printTaskDetailsString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"        return super.taskDescription;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"seantehds":27}},{"path":"src/main/java/emiya/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"    public static final String WELCOME_MESSAGE \u003d \"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"            + \"Hello! I\u0027m Emiya\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"            + \"What can I do for you?\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"            + \"-----------------------------------------\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    public static final String EXIT_MESSAGE \u003d \"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"            + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"            + \"-----------------------------------------\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"    public static final String UBW \u003d \"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"            + \"Unknown to death nor known to life\" + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"            + \"-----------------------------------------\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    public static final String DEAD \u003d \"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"            + \"People die if they are killed!\" + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"            + \"-----------------------------------------\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"    public String addedSingularMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"        return \"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"                + \"Sure! I have added this task to the list:\\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"                + \"Now you have \" + taskList.size() + \" task in your list!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"    public String addedPluralMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"        return \"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"                + \"Sure! I have added this task to the list:\\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in your list!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"    public String deletedPluralMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        return \"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"                + \"Sure, I shall now delete the following task:\\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in your list!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"    public String markedMessage(int position, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        return \"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"                + \"Nice job! I have marked this task as done:\\n\" + taskList.get(position - 1) + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"    public String unmarkedMessage(int position, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"        return \"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"                + \"Oof, alright I have set this task as unmarked:\\n\" + taskList.get(position - 1) + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"    public String deletedSingularMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"        return \"-----------------------------------------\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"                + \"Sure, I shall now delete the following task:\\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"                + \"Now you have \" + taskList.size() + \" task in your list!\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"                + \"-----------------------------------------\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":69}},{"path":"src/test/java/emiya/datehandler/DateHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.datehandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.InvalidDateException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.WrongDateFormatException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"import static emiya.datehandler.DateHandler.determineDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"public class DateHandlerTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    public void determineDateTime_correctDateTimeFormat_dateTimeObjectsEqual(){","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"        LocalDateTime testObj;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-09-01 1200\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"            testObj \u003d determineDateTime(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateFormatException | InvalidDateException e ) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"        assertEquals(LocalDateTime.of(2023, 9,1,12,0), testObj);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"    public void determineDateTime_wrongDateFormat_exceptionThrown(){","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023/09/01 1200\";","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"            LocalDateTime result \u003d determineDateTime(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected WrongDateFormatException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"            // Test passes","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"            fail(\"Unexpected InvalidDateException thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    public void determineDateTime_wrongTimeFormat_exceptionThrown(){","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-09-01 2.00pm\";","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"            LocalDateTime result \u003d determineDateTime(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected WrongDateFormatException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"            // Test passes","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"            fail(\"Unexpected InvalidDateException thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"    public void determineDateTime_invalidTimeGiven_exceptionThrown(){","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-09-01 1793\";","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"            LocalDateTime result \u003d determineDateTime(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected InvalidDateException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"            fail(\"Unexpected WrongDateFormatException thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"            // Test passes","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":64}},{"path":"src/test/java/emiya/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"package emiya.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"import emiya.emiyaexception.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    // featureUnderTest_testScenario_expectedBehavior","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"    public void parseToRemoveUnknownCommands_correctlyFormattedInput_generateExpectedOutput() throws UnknownCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"        Integer[] position \u003d new Integer[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"todo finish homework\";","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"        String[] expectedOutput \u003d {\"todo\", \"finish homework\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"        assertArrayEquals(expectedOutput, parser.parseToRemoveUnknownCommands(position, input));","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"seantehds"},"content":"    public void parseForDeadline_correctlyFormattedInput_generateExpectedOutput() throws NoByException {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"finish homework /by 2023-09-01 1500\";","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"seantehds"},"content":"        String[] expectedOutput \u003d {\"finish homework\", \"2023-09-01 1500\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"seantehds"},"content":"        assertArrayEquals(expectedOutput, parser.parseForDeadline(taskDetails));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"seantehds"},"content":"    public void parseForEvent_correctlyFormattedInput_generateExpectedOutput() throws NoToException, NoFromException {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"attend meeting /from 2023-09-01 1500 /to 2023-09-01 1600\";","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"seantehds"},"content":"        String[] expectedOutput \u003d {\"attend meeting\", \"2023-09-01 1500\", \"2023-09-01 1600\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"seantehds"},"content":"        assertArrayEquals(expectedOutput, parser.parseForEvent(taskDetails));","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"seantehds"},"content":"    public void parseForDate_correctlyFormattedInput_generateExpectedOutput() throws InvalidDateException, WrongDateFormatException{","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-09-01 1500\";","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"seantehds"},"content":"        String[] expectedOutput \u003d {\"2023-09-01\", \"15\", \"00\"};","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"seantehds"},"content":"        assertArrayEquals(expectedOutput, parser.parseForDate(input));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"seantehds"},"content":"    public void parseToRemoveUnknownCommands_invalidInput_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"seantehds"},"content":"        Integer[] position \u003d new Integer[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"invalid\";","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"seantehds"},"content":"            parser.parseToRemoveUnknownCommands(position, input);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected UnknownCommandException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"seantehds"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"seantehds"},"content":"    public void parseForDeadline_noByInInput_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"finish homework tomorrow\";","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"seantehds"},"content":"            parser.parseForDeadline(taskDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected NoByException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"seantehds"},"content":"        } catch (NoByException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"seantehds"},"content":"    public void parseForEvent_noFromInInput_exceptionThrown() throws NoToException {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"attend meeting 9am to 11am\";","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"seantehds"},"content":"            parser.parseForEvent(taskDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected NoFromException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"seantehds"},"content":"        } catch (NoFromException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"seantehds"},"content":"    public void parseForEvent_noToInInput_exceptionThrown() throws NoFromException {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"seantehds"},"content":"        String taskDetails \u003d \"attend meeting /from 9am 11am\";","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"seantehds"},"content":"            parser.parseForEvent(taskDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected NoToException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"seantehds"},"content":"        } catch (NoToException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"seantehds"},"content":"    public void parseForDate_wrongFormatForDate_exceptionThrown() throws InvalidDateException {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023/09/01 1500\";","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"seantehds"},"content":"            parser.parseForDate(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected WrongDateFormatException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"seantehds"},"content":"        } catch (WrongDateFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"seantehds"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"seantehds"},"content":"    public void parseForDate_invalidDateInput_exceptionThrown() throws WrongDateFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"seantehds"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"seantehds"},"content":"        String input \u003d \"2023-13-01 1500\";","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"seantehds"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"seantehds"},"content":"            parser.parseForDate(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"seantehds"},"content":"            fail(\"Expected InvalidDateException to be thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"seantehds"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"seantehds"},"content":"            // Test passed","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"seantehds"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"seantehds"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"seantehds"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"seantehds":119}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"todo buy a book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"deadline read book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"event reading book /from today /to Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"seantehds":9}},{"path":"text-ui-test/runtestemiya.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"seantehds"},"content":"@ECHO OFF","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"seantehds"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"seantehds"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"seantehds"},"content":"REM delete output from previous run","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"seantehds"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"seantehds"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"seantehds"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"seantehds"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"seantehds"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"seantehds"},"content":"    exit /b 1","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"seantehds"},"content":")","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"seantehds"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"seantehds"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"seantehds"},"content":"java -classpath ..\\bin emiya.Emiya \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"seantehds"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"seantehds"},"content":"REM compare the output to the expected output","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"seantehds"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"seantehds":21}}]
