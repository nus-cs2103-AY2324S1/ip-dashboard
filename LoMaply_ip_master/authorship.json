[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"    protected String limit;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"    public Deadline(String title, String limit) {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"        super(title);","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"        String time \u003d String.format(\" (by: %s)\", limit);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"        return \"[D]\" + super.toString() + time;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"LoMaply":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"     * Collection used to store all tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"    private static final ArrayList\u003cTask\u003e taskList\u003d new ArrayList\u003c\u003e(1);","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"     * Formats chatbot output with borders, first line indentation and new line character at the end","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"     * @param message message to be displayed to user","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"    private static void output(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"        String line \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"        String template \u003d line + \"     %s\\n\" + line;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"        System.out.printf((template) + \"%n\", message);","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"     * Formats chatbot output specifically for adding/removing tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"     * @param task task added to list","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"    private static void taskOutput(Task task, String action) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"        String taskMessage \u003d \"I\u0027ve %s the following task as requested:\\n       %s\\n     \"","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"                + \"There are currently %d tasks in your list.\";","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"        Duke.output(String.format(taskMessage, action, task.toString(), taskList.size()));","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"LoMaply"},"content":"     * Runs the chatbot, terminates when chatbot receives \"end\" command","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"LoMaply"},"content":"    public static void runJyuuni() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"LoMaply"},"content":"        Duke.output(\"Hey its Jyuuni, your helpful assistant.\\n     How can I help you?\");","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"LoMaply"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"LoMaply"},"content":"        boolean isRun \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"LoMaply"},"content":"        // Requests user input until program is instructed to end","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"LoMaply"},"content":"        while (isRun) {","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"LoMaply"},"content":"            String input \u003d userInput.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"LoMaply"},"content":"            String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"LoMaply"},"content":"            switch (splitInput[0]) {","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"LoMaply"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"LoMaply"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"LoMaply"},"content":"                    int index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"LoMaply"},"content":"                    Task mark \u003d taskList.get(index - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"LoMaply"},"content":"                    mark.markAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"Good job on completing this task:\\n       \" + mark);","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"LoMaply"},"content":"                } catch (NumberFormatException e) {                    // If argument of \"mark\" is not a number","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"You need to provide a valid number\");","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"LoMaply"},"content":"                } catch (IndexOutOfBoundsException e) {                // If argument is not a number from list","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"I can\u0027t mark something that doesn\u0027t exist...\\n     Try a number from the list\");","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"LoMaply"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"LoMaply"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"LoMaply"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"LoMaply"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"LoMaply"},"content":"                    int index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"LoMaply"},"content":"                    Task unmark \u003d taskList.get(index - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"LoMaply"},"content":"                    unmark.markNotDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"Unmarked task as requested:\\n       \" + unmark);","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"LoMaply"},"content":"                } catch (NumberFormatException e) {                    // If argument of \"unmark\" is not a number","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"You need to provide a valid number\");","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"LoMaply"},"content":"                } catch (IndexOutOfBoundsException e) {                // If argument is not a number from list","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"I can\u0027t unmark something that doesn\u0027t exist...\\n     Try a number from the list\");","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"LoMaply"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"LoMaply"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"LoMaply"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"LoMaply"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"LoMaply"},"content":"                    Task delete \u003d taskList.remove(Integer.parseInt(splitInput[1]) - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"LoMaply"},"content":"                    Duke.taskOutput(delete, \"removed\");","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"LoMaply"},"content":"                } catch (NumberFormatException e) {                    // If argument of \"delete\" is not a number","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"You need to provide a valid number\");","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"LoMaply"},"content":"                } catch (IndexOutOfBoundsException e) {                // If argument is not a number from list","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"I can\u0027t remove a task that doesn\u0027t exist...\\n     Try a number from the list\");","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"LoMaply"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"LoMaply"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"LoMaply"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"LoMaply"},"content":"                // Checks for description before creating task","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"LoMaply"},"content":"                if (splitInput.length !\u003d 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"Wrong format, try \\\"todo [DESCRIPTION]\\\"\");","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"LoMaply"},"content":"                } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"LoMaply"},"content":"                    Task todo \u003d new Todo(splitInput[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"LoMaply"},"content":"                    taskList.add(todo);","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"LoMaply"},"content":"                    Duke.taskOutput(todo, \"added\");","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"LoMaply"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"LoMaply"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"LoMaply"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"LoMaply"},"content":"                // ArrayIndexOutOfBounds only thrown when the string is not split -\u003e /by not present","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"LoMaply"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"LoMaply"},"content":"                    String[] deadVar \u003d splitInput[1].split(\" /by \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"LoMaply"},"content":"                    Task deadline \u003d new Deadline(deadVar[0], deadVar[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"LoMaply"},"content":"                    taskList.add(deadline);","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"LoMaply"},"content":"                    Duke.taskOutput(deadline, \"added\");","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"LoMaply"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"Wrong format, try \\\"deadline [DESCRIPTION] /by [TIME]\\\"\");","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"LoMaply"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"LoMaply"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"LoMaply"},"content":"            case \"event\":","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"LoMaply"},"content":"                // Using 1 split statement that splits by /(from|to) allows wrong combos like \"/to x /from x\"","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"LoMaply"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"LoMaply"},"content":"                    String[] eventVar \u003d splitInput[1].split(\" /from \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"LoMaply"},"content":"                    String[] times \u003d eventVar[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"LoMaply"},"content":"                    Task event \u003d new Event(eventVar[0], times[0], times[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"LoMaply"},"content":"                    taskList.add(event);","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"LoMaply"},"content":"                    Duke.taskOutput(event, \"added\");","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"LoMaply"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"LoMaply"},"content":"                    Duke.output(\"Wrong format, try \\\"event [DESCRIPTION] /from [START] /to [END]\\\"\");","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"LoMaply"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"LoMaply"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"LoMaply"},"content":"            case \"list\":","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"LoMaply"},"content":"                StringBuilder allTasks \u003d new StringBuilder(\"Here are your tasks:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":121,"author":{"gitId":"LoMaply"},"content":"                int taskNo \u003d taskList.size();","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"LoMaply"},"content":"                for (int i \u003d 0; i \u003c taskNo; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"LoMaply"},"content":"                    allTasks.append(String.format(\"\\n     %d.%s\", (i + 1), taskList.get(i).toString()));","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"LoMaply"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"LoMaply"},"content":"                Duke.output(allTasks.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":126,"author":{"gitId":"LoMaply"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":127,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"LoMaply"},"content":"            case \"end\":","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"LoMaply"},"content":"                isRun \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":130,"author":{"gitId":"LoMaply"},"content":"                Duke.output(\"Come back if you need anything else!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":131,"author":{"gitId":"LoMaply"},"content":"                userInput.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"LoMaply"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"LoMaply"},"content":"            default:","lastModifiedDate":"2023-08-20"},{"lineNumber":135,"author":{"gitId":"LoMaply"},"content":"                Duke.output(\"Sorry, I don\u0027t recognise this comment :(\");","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"LoMaply"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"LoMaply"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"LoMaply"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"LoMaply"},"content":"        Duke.runJyuuni();","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":5,"LoMaply":139}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"    protected String start;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"    protected String end;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"    public Event(String title, String start, String end) {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"        super(title);","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"        String time \u003d String.format(\" (from: %s to: %s)\", start, end);","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"        return \"[E]\" + super.toString() + time;","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"LoMaply":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"    protected String title;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"    protected Boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"    public Task(String title) {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"     * Get completed status of task","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"     * @return X if task is completed, a blank space otherwise","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"LoMaply"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"LoMaply"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"LoMaply"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"LoMaply"},"content":"        return String.format(\"[%s] %s\", this.getStatus(), title);","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"LoMaply":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"    public Todo(String title) {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"        super(title);","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"LoMaply":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LoMaply"},"content":"todo buy 2 groceries","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"LoMaply"},"content":"deadline eat lunch /by 1st june mon","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"LoMaply"},"content":"event holiday /to july","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"LoMaply"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"LoMaply"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"LoMaply"},"content":"event japan holiday trip /from mid june /to end july","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"LoMaply"},"content":"deadline stuff","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"LoMaply"},"content":"hello","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"LoMaply"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"LoMaply"},"content":"mark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"LoMaply"},"content":"unmark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"LoMaply"},"content":"unmark three","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"LoMaply"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"LoMaply"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"LoMaply"},"content":"delete task 1","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"LoMaply"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"LoMaply"},"content":"delete 3","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"LoMaply"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"LoMaply"},"content":"end","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"LoMaply":19}}]
