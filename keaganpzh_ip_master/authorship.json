[{"path":"src/main/java/Rat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import static rat.print.RatPrinter.*;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"import rat.storage.*;","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import rat.inputs.RatInput;","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates my version of Duke, called Rat.","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":" * Rat is a chatbot that helps the user keep track of their tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":" * @version Week-2","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"public class Rat {","lastModifiedDate":"2023-08-18"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     * The RatStorage object used to store and process the user\u0027s tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    static RatStorage ratStorage;","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"     * The RatInput Object used to process user input.","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    static RatInput ratInput;","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"     * The Scanner object used to read user input.","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    static Scanner sc;","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"     * Initialises the Rat program.","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"     * Instantiates a RatStorage object, Scanner object, and a RatInput Object.","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    public static void initialise() {","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"        printWelcome();","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        ratStorage \u003d new RatStorage();","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"        ratInput \u003d new RatInput(sc, ratStorage);","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"     * The main method of Rat.","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"        Rat.initialise();","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"        ratInput.handleInput();","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"        sc.close();","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-18"}],"authorContributionMap":{"keaganpzh":52}},{"path":"src/main/java/rat/inputs/RatInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package rat.inputs;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import rat.storage.*;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"import static rat.print.RatPrinter.*;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates the input handling of Rat.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"public class RatInput {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"     * The Scanner object used to read user input.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"     * This Scanner should be initialised in main.","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    Scanner sc;","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     * The RatStorage object used to store and process the user\u0027s tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     * This RatStorage should be initialised in main.","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    RatStorage ratStorage;","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for RatInput.","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"     * @param sc         The Scanner object used to read user input.","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"     * @param ratStorage The RatStorage object used to store and process the user\u0027s tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    public RatInput(Scanner sc, RatStorage ratStorage) {","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        this.ratStorage \u003d ratStorage;","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"     * Parses and processes the user input based on a set of commands.","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"     * Handles system exit.","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    public void handleInput() {","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"            String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"            String command \u003d inputArr[0];","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"            switch (command) {","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"                printExit();","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"                System.exit(0);","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"            case \"list\":","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"                this.ratStorage.listItems();","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"                this.handleMark(inputArr);","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"                this.handleUnmark(inputArr);","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"                this.handleToDo(input);","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"                this.handleDeadline(input);","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"            case \"event\":","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"                this.handleEvent(input);","lastModifiedDate":"2023-08-19"},{"lineNumber":69,"author":{"gitId":"keaganpzh"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-19"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"                this.handleDelete(input);","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"keaganpzh"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"            case \"help\":","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"                this.showCommands();","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"            default:","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"                printWithLines(\"Sorry, I don\u0027t understand what you mean by \" + input);","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"     * Handles the action of marking a task as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"keaganpzh"},"content":"     * Parses user input after the \"mark\" command.","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"     * @param inputs Array of Strings resulting from splitting the remaining user input by spaces.","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"    protected void handleMark(String[] inputs) {","lastModifiedDate":"2023-08-19"},{"lineNumber":89,"author":{"gitId":"keaganpzh"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":90,"author":{"gitId":"keaganpzh"},"content":"            int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-08-19"},{"lineNumber":91,"author":{"gitId":"keaganpzh"},"content":"            this.ratStorage.markItemDone(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":92,"author":{"gitId":"keaganpzh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":93,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"keaganpzh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":95,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(\" \\\"mark\\\" command must be followed by a number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":97,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":98,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":99,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"keaganpzh"},"content":"     * Handles the action of marking a task as not done.","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"keaganpzh"},"content":"     * Parses user input after the \"unmark\" command.","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"keaganpzh"},"content":"     * @param inputs Array of Strings resulting from splitting the remaining user input by spaces.","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"keaganpzh"},"content":"    protected void handleUnmark(String[] inputs) {","lastModifiedDate":"2023-08-19"},{"lineNumber":106,"author":{"gitId":"keaganpzh"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":107,"author":{"gitId":"keaganpzh"},"content":"            int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2023-08-19"},{"lineNumber":108,"author":{"gitId":"keaganpzh"},"content":"            this.ratStorage.unmarkItemDone(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":109,"author":{"gitId":"keaganpzh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":110,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"keaganpzh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":112,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(\" \\\"unmark\\\" command must be followed by a number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":114,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":115,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":116,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"keaganpzh"},"content":"     * Handles the action of creating a new ToDo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"keaganpzh"},"content":"     * Parses user input after the \"todo\" command.","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"keaganpzh"},"content":"     * @param params The remaining user input after the \"todo\" command.","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"keaganpzh"},"content":"    protected void handleToDo(String params) {","lastModifiedDate":"2023-08-19"},{"lineNumber":123,"author":{"gitId":"keaganpzh"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":124,"author":{"gitId":"keaganpzh"},"content":"            params \u003d params.substring(5);","lastModifiedDate":"2023-08-19"},{"lineNumber":125,"author":{"gitId":"keaganpzh"},"content":"            this.ratStorage.addToDo(params);","lastModifiedDate":"2023-08-19"},{"lineNumber":126,"author":{"gitId":"keaganpzh"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":127,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(\"To Do name cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":129,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":130,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":131,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"keaganpzh"},"content":"     * Handles the action of creating a new Deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"keaganpzh"},"content":"     * Parses user input after the \"deadline\" command.","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"keaganpzh"},"content":"     * @param params The remaining user input after the \"deadline\" command.","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"keaganpzh"},"content":"    protected void handleDeadline(String params) {","lastModifiedDate":"2023-08-19"},{"lineNumber":138,"author":{"gitId":"keaganpzh"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":139,"author":{"gitId":"keaganpzh"},"content":"            params \u003d params.substring(9);","lastModifiedDate":"2023-08-19"},{"lineNumber":140,"author":{"gitId":"keaganpzh"},"content":"            String[] paramsArr \u003d params.split(\" /by \");","lastModifiedDate":"2023-08-19"},{"lineNumber":141,"author":{"gitId":"keaganpzh"},"content":"            String name \u003d paramsArr[0];","lastModifiedDate":"2023-08-19"},{"lineNumber":142,"author":{"gitId":"keaganpzh"},"content":"            String deadline \u003d paramsArr[1];","lastModifiedDate":"2023-08-19"},{"lineNumber":143,"author":{"gitId":"keaganpzh"},"content":"            this.ratStorage.addDeadline(deadline, name);","lastModifiedDate":"2023-08-19"},{"lineNumber":144,"author":{"gitId":"keaganpzh"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":145,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(\"Deadline name cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"keaganpzh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":147,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(\"Invalid deadline format. Please use \\\"deadline \u003cname\u003e /by \u003cdeadline\u003e\\\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":150,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":151,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"keaganpzh"},"content":"     * Handles the action of creating a new Event task.","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"keaganpzh"},"content":"     * Parses user input after the \"event\" command.","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"keaganpzh"},"content":"     * @param params The remaining user input after the \"event\" command.","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"keaganpzh"},"content":"    protected void handleEvent(String params) {","lastModifiedDate":"2023-08-19"},{"lineNumber":158,"author":{"gitId":"keaganpzh"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":159,"author":{"gitId":"keaganpzh"},"content":"            params \u003d params.substring(6);","lastModifiedDate":"2023-08-19"},{"lineNumber":160,"author":{"gitId":"keaganpzh"},"content":"            String eventName \u003d params.split(\" /from \")[0];","lastModifiedDate":"2023-08-19"},{"lineNumber":161,"author":{"gitId":"keaganpzh"},"content":"            if (eventName.isEmpty()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":162,"author":{"gitId":"keaganpzh"},"content":"                printWithLines(\"Event name cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":164,"author":{"gitId":"keaganpzh"},"content":"            String[] time \u003d params.split(\" /from \")[1].split(\" /to \");","lastModifiedDate":"2023-08-19"},{"lineNumber":165,"author":{"gitId":"keaganpzh"},"content":"            String startTime \u003d time[0];","lastModifiedDate":"2023-08-19"},{"lineNumber":166,"author":{"gitId":"keaganpzh"},"content":"            String endTime \u003d time[1];","lastModifiedDate":"2023-08-19"},{"lineNumber":167,"author":{"gitId":"keaganpzh"},"content":"            this.ratStorage.addEvent(startTime, endTime, eventName);","lastModifiedDate":"2023-08-19"},{"lineNumber":168,"author":{"gitId":"keaganpzh"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":169,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(\"Event name cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"keaganpzh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":171,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(\"Invalid event format. Please use \\\"event \u003cname\u003e /from \u003cstart\u003e /to \u003cend\u003e\\\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":173,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":174,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":175,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":176,"author":{"gitId":"keaganpzh"},"content":"     * Handles the action of deleting task(s).","lastModifiedDate":"2023-08-21"},{"lineNumber":177,"author":{"gitId":"keaganpzh"},"content":"     * Parses user input after the \"delete\" command.","lastModifiedDate":"2023-08-21"},{"lineNumber":178,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"keaganpzh"},"content":"     * @param params The remaining user input after the \"delete\" command.","lastModifiedDate":"2023-08-21"},{"lineNumber":180,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"keaganpzh"},"content":"    protected void handleDelete(String params) {","lastModifiedDate":"2023-08-20"},{"lineNumber":182,"author":{"gitId":"keaganpzh"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":183,"author":{"gitId":"keaganpzh"},"content":"            params \u003d params.substring(7);","lastModifiedDate":"2023-08-20"},{"lineNumber":184,"author":{"gitId":"keaganpzh"},"content":"            if (params.equals(\"all\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":185,"author":{"gitId":"keaganpzh"},"content":"                this.ratStorage.deleteAll();","lastModifiedDate":"2023-08-20"},{"lineNumber":186,"author":{"gitId":"keaganpzh"},"content":"            } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":187,"author":{"gitId":"keaganpzh"},"content":"                int index \u003d Integer.parseInt(params);","lastModifiedDate":"2023-08-20"},{"lineNumber":188,"author":{"gitId":"keaganpzh"},"content":"                this.ratStorage.deleteItem(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":189,"author":{"gitId":"keaganpzh"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":190,"author":{"gitId":"keaganpzh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":191,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"keaganpzh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":193,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(\" \\\"delete\\\" command must be followed by a number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":195,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":196,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":197,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":198,"author":{"gitId":"keaganpzh"},"content":"     * Prints the list of commands that the user can use.","lastModifiedDate":"2023-08-21"},{"lineNumber":199,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":200,"author":{"gitId":"keaganpzh"},"content":"    public void showCommands() {","lastModifiedDate":"2023-08-20"},{"lineNumber":201,"author":{"gitId":"keaganpzh"},"content":"        String output \u003d \"Hello! I\u0027m Rat, your personal task manager.\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":202,"author":{"gitId":"keaganpzh"},"content":"                + \"Here are the commands you can use:\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":203,"author":{"gitId":"keaganpzh"},"content":"                + \"\\nhelp: show this list of commands\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":204,"author":{"gitId":"keaganpzh"},"content":"                + \"list: list all tasks\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":205,"author":{"gitId":"keaganpzh"},"content":"                + \"mark \u003cindex\u003e: mark task at \u003cindex\u003e as done\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":206,"author":{"gitId":"keaganpzh"},"content":"                + \"unmark \u003cindex\u003e: mark task at \u003cindex\u003e as not done\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":207,"author":{"gitId":"keaganpzh"},"content":"                + \"todo \u003cname\u003e: add a todo task with \u003cname\u003e\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":208,"author":{"gitId":"keaganpzh"},"content":"                + \"deadline \u003cname\u003e /by \u003cdeadline\u003e: add a deadline task with \u003cname\u003e and \u003cdeadline\u003e\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":209,"author":{"gitId":"keaganpzh"},"content":"                + \"event \u003cname\u003e /from \u003cstart\u003e /to \u003cend\u003e: add an event task with \u003cname\u003e, \u003cstart\u003e and \u003cend\u003e\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":210,"author":{"gitId":"keaganpzh"},"content":"                + \"delete \u003cindex\u003e: delete task at \u003cindex\u003e\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":211,"author":{"gitId":"keaganpzh"},"content":"                + \"delete all: delete all tasks\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":212,"author":{"gitId":"keaganpzh"},"content":"                + \"bye: exit the program\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":213,"author":{"gitId":"keaganpzh"},"content":"                + \"\\nbuilt by @keaganpzh\";","lastModifiedDate":"2023-08-20"},{"lineNumber":214,"author":{"gitId":"keaganpzh"},"content":"        printWithLines(output);","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":216,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":217,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"keaganpzh":217}},{"path":"src/main/java/rat/print/RatPrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package rat.print;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates the printing of messages by Rat.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"public class RatPrinter {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for RatPrinter.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"    public RatPrinter() { }","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    public static void printWelcome() {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"        String welcomeMsg \u003d \"                  Hello! I\u0027m Rat!\\n\"","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"                + \"              What can I do for you?\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"                + \"       type \\\"help\\\" to see a list of commands\";","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"        printWithLines(welcomeMsg);","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     * Prints the exit message to the user.","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"    public static void printExit() {","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        String exitMsg \u003d \"           Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"        printWithLines(exitMsg);","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"     * Given a message, formats the message with lines and prints it to the user.","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"     * @param msg The message to be printed.","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"    public static void printWithLines(String msg) {","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"        String output \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"                + msg + \"\\n\"","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"keaganpzh":43}},{"path":"src/main/java/rat/storage/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package rat.storage;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates a Deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":" * A Deadline task is a task with a deadline as a String.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"     * The deadline of the task, represented by a String.","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    private String deadline;","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    protected Deadline(String deadline, String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"     * Returns a String representation of a Deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"     * The String representation of a Deadline task is its name prefixed by its status and type.","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"     * @return A String representation of a Deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"        String taskType \u003d \"[D]\";","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"        return taskType + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"keaganpzh":36}},{"path":"src/main/java/rat/storage/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package rat.storage;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates an Event task.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":" * An Event task is a task with a start time and end time as Strings.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"     * The start time of the task, represented by a String.","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    private String startTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     * The end time of the task, represented by a String.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    private String endTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"     * @param startTime The start time of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     * @param endTime The end time of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    protected Event(String startTime, String endTime, String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"     * Returns a String representation of an Event task.","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"     * The String representation of an Event task is its name prefixed by its status and type.","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"     * @return A String representation of an Event task.","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"        String taskType \u003d \"[E]\";","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"        return taskType + super.toString() + \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"keaganpzh":43}},{"path":"src/main/java/rat/storage/RatStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package rat.storage;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"import static rat.print.RatPrinter.*;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates the storage of Rat, which is a list of tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":" * Includes methods to add, modify, and delete tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"public class RatStorage {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     * The list of tasks managed by RatStorage, represented by an ArrayList.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"    private final ArrayList\u003cTask\u003e storage;","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for a RatStorage object.","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"     * Initialises the storage as an empty ArrayList.","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"    public RatStorage() {","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"        storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"     * Returns the String representation of RatStorage.","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"     * The String representation is a numbered list of tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"     * @return String representation of RatStorage.","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"        for (int i \u003d 0; i \u003c this.storage.size(); i++) {","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"            str +\u003d (i + 1) + \". \" + this.storage.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"        return str;","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"     * Adds a ToDo task to the storage, given its name.","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"     * Instantiates a new ToDo object and adds it to the storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"     * @param item Name of the ToDo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"    public void addToDo(String item) {","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"        ToDo newToDo \u003d new ToDo(item);","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"        this.storage.add(newToDo);","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"        printWithLines(\"Got it. I\u0027ve added this Deadline:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"                + newToDo","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"keaganpzh"},"content":"                + \"\\nNow you have \" + this.storage.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"keaganpzh"},"content":"     * Adds a Deadline task to the storage, given its deadline and name.","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"keaganpzh"},"content":"     * Instantiates a new Deadline object and adds it to the storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"keaganpzh"},"content":"     * @param deadline Deadline of the Deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"keaganpzh"},"content":"     * @param name     Name of the Deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"keaganpzh"},"content":"    public void addDeadline(String deadline, String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"keaganpzh"},"content":"        Deadline newDeadline \u003d new Deadline(deadline, name);","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"keaganpzh"},"content":"        this.storage.add(newDeadline);","lastModifiedDate":"2023-08-19"},{"lineNumber":67,"author":{"gitId":"keaganpzh"},"content":"        String msg \u003d \"Got it. I\u0027ve added this Deadline:\\n\"","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"keaganpzh"},"content":"                + newDeadline","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"keaganpzh"},"content":"                + \"\\nNow you have \" + this.storage.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-19"},{"lineNumber":70,"author":{"gitId":"keaganpzh"},"content":"        printWithLines(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":73,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"keaganpzh"},"content":"     * Adds an Event task to the storage, given its start time, end time, and name.","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"keaganpzh"},"content":"     * Instantiates a new Event object and adds it to the storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"keaganpzh"},"content":"     * @param startTime Start time of the Event task.","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"keaganpzh"},"content":"     * @param endTime   End time of the Event task.","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"keaganpzh"},"content":"     * @param name      Name of the Event task.","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"keaganpzh"},"content":"    public void addEvent(String startTime, String endTime, String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":82,"author":{"gitId":"keaganpzh"},"content":"        Event newEvent \u003d new Event(startTime, endTime, name);","lastModifiedDate":"2023-08-19"},{"lineNumber":83,"author":{"gitId":"keaganpzh"},"content":"        this.storage.add(newEvent);","lastModifiedDate":"2023-08-19"},{"lineNumber":84,"author":{"gitId":"keaganpzh"},"content":"        String msg \u003d \"Got it. I\u0027ve added this Event:\\n\"","lastModifiedDate":"2023-08-19"},{"lineNumber":85,"author":{"gitId":"keaganpzh"},"content":"                + newEvent","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"keaganpzh"},"content":"                + \"\\nNow you have \" + this.storage.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"keaganpzh"},"content":"        printWithLines(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":89,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":90,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"keaganpzh"},"content":"     * Marks a task as done, given its 1-indexed index in the storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"keaganpzh"},"content":"     * @param index Index of the task in the storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"keaganpzh"},"content":"    public void markItemDone(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":96,"author":{"gitId":"keaganpzh"},"content":"        if (index \u003e this.storage.size() || index \u003c 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":97,"author":{"gitId":"keaganpzh"},"content":"            throw new IndexOutOfBoundsException(\"Task not found\");","lastModifiedDate":"2023-08-19"},{"lineNumber":98,"author":{"gitId":"keaganpzh"},"content":"        } else if (this.storage.get(index - 1) \u003d\u003d null) {","lastModifiedDate":"2023-08-19"},{"lineNumber":99,"author":{"gitId":"keaganpzh"},"content":"            throw new IndexOutOfBoundsException(\"Task not found\");","lastModifiedDate":"2023-08-19"},{"lineNumber":100,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":101,"author":{"gitId":"keaganpzh"},"content":"        Task item \u003d this.storage.get(index - 1);","lastModifiedDate":"2023-08-19"},{"lineNumber":102,"author":{"gitId":"keaganpzh"},"content":"        item.markDone();","lastModifiedDate":"2023-08-19"},{"lineNumber":103,"author":{"gitId":"keaganpzh"},"content":"        printWithLines(\"Nice! I\u0027ve marked this task as done: \" + storage.get(index - 1).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":105,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":106,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"keaganpzh"},"content":"     * Marks a task as not done, given its 1-indexed index in the storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"keaganpzh"},"content":"     * @param index Index of the task in the storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"keaganpzh"},"content":"    public void unmarkItemDone(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":112,"author":{"gitId":"keaganpzh"},"content":"        if (index \u003e this.storage.size() || index \u003c 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":113,"author":{"gitId":"keaganpzh"},"content":"            throw new IndexOutOfBoundsException(\"Task not found\");","lastModifiedDate":"2023-08-19"},{"lineNumber":114,"author":{"gitId":"keaganpzh"},"content":"        } else if (this.storage.get(index - 1) \u003d\u003d null) {","lastModifiedDate":"2023-08-19"},{"lineNumber":115,"author":{"gitId":"keaganpzh"},"content":"            throw new IndexOutOfBoundsException(\"Task not found\");","lastModifiedDate":"2023-08-19"},{"lineNumber":116,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":117,"author":{"gitId":"keaganpzh"},"content":"        Task item \u003d this.storage.get(index - 1);","lastModifiedDate":"2023-08-19"},{"lineNumber":118,"author":{"gitId":"keaganpzh"},"content":"        item.unmarkDone();","lastModifiedDate":"2023-08-19"},{"lineNumber":119,"author":{"gitId":"keaganpzh"},"content":"        printWithLines(\"Ok, I\u0027ve marked this task as not done yet: \" + storage.get(index - 1).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":121,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":122,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"keaganpzh"},"content":"     * Deletes a task from storage, given its 1-indexed index in the storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"keaganpzh"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"keaganpzh"},"content":"     * @param index Index of the task in the storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"keaganpzh"},"content":"    public void deleteItem(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":128,"author":{"gitId":"keaganpzh"},"content":"        if (index \u003e this.storage.size() || index \u003c 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":129,"author":{"gitId":"keaganpzh"},"content":"            throw new IndexOutOfBoundsException(\"Task not found\");","lastModifiedDate":"2023-08-19"},{"lineNumber":130,"author":{"gitId":"keaganpzh"},"content":"        } else if (this.storage.get(index - 1) \u003d\u003d null) {","lastModifiedDate":"2023-08-19"},{"lineNumber":131,"author":{"gitId":"keaganpzh"},"content":"            throw new IndexOutOfBoundsException(\"Task not found\");","lastModifiedDate":"2023-08-19"},{"lineNumber":132,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":133,"author":{"gitId":"keaganpzh"},"content":"        Task item \u003d this.storage.get(index - 1);","lastModifiedDate":"2023-08-19"},{"lineNumber":134,"author":{"gitId":"keaganpzh"},"content":"        this.storage.remove(index - 1);","lastModifiedDate":"2023-08-19"},{"lineNumber":135,"author":{"gitId":"keaganpzh"},"content":"        printWithLines(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"keaganpzh"},"content":"                + item.toString()","lastModifiedDate":"2023-08-19"},{"lineNumber":137,"author":{"gitId":"keaganpzh"},"content":"                + \"\\nNow you have \" + this.storage.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":138,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":139,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":140,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"keaganpzh"},"content":"     * Deletes all tasks from storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"keaganpzh"},"content":"    public void deleteAll() {","lastModifiedDate":"2023-08-20"},{"lineNumber":144,"author":{"gitId":"keaganpzh"},"content":"        this.storage.clear();","lastModifiedDate":"2023-08-20"},{"lineNumber":145,"author":{"gitId":"keaganpzh"},"content":"        printWithLines(\"Noted. I\u0027ve removed all tasks.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"keaganpzh"},"content":"     * Displays all tasks in storage.","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"keaganpzh"},"content":"     * Formats the storage\u0027s String representation with a message and count.","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"keaganpzh"},"content":"    public void listItems() {","lastModifiedDate":"2023-08-19"},{"lineNumber":153,"author":{"gitId":"keaganpzh"},"content":"        if (this.storage.isEmpty()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":154,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(\"You have no tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"keaganpzh"},"content":"        } else {","lastModifiedDate":"2023-08-19"},{"lineNumber":156,"author":{"gitId":"keaganpzh"},"content":"            String list \u003d \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-08-19"},{"lineNumber":157,"author":{"gitId":"keaganpzh"},"content":"                    + this + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"keaganpzh"},"content":"                    + \"You have \" + this.storage.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-19"},{"lineNumber":159,"author":{"gitId":"keaganpzh"},"content":"            printWithLines(list);","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"keaganpzh"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":161,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":162,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"keaganpzh":162}},{"path":"src/main/java/rat/storage/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package rat.storage;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"     * The name of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"    private String name;","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"     * The status of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    protected Task(String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"keaganpzh"},"content":"     * Method that changes the status of the task to done.","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"keaganpzh"},"content":"    protected void markDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"keaganpzh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"keaganpzh"},"content":"     * Method that changes the status of the task to not done.","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"keaganpzh"},"content":"    protected void unmarkDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"keaganpzh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"keaganpzh"},"content":"     * Returns a String representation of a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"keaganpzh"},"content":"     * The String representation of a task is its name prefixed by its status.","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"keaganpzh"},"content":"     * @return A String representation of a task.","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"keaganpzh"},"content":"        String status \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"keaganpzh"},"content":"        return status + \" \" + this.name;","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"keaganpzh":53}},{"path":"src/main/java/rat/storage/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"package rat.storage;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":" * This class encapsulates a ToDo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":" * @author Keagan","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"     * Constructor for a ToDo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"    protected ToDo (String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"     * Returns a String representation of a ToDo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"keaganpzh"},"content":"     * The String representation of a ToDo task is its name prefixed by its status and type.","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"keaganpzh"},"content":"     * @return A String representation of a ToDo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"keaganpzh"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"keaganpzh"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"keaganpzh"},"content":"        String taskType \u003d \"[T]\";","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"keaganpzh"},"content":"        return taskType + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"keaganpzh"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"keaganpzh"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"keaganpzh"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"keaganpzh":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"keaganpzh"},"content":"help","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"keaganpzh"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"keaganpzh"},"content":"todo CS2100 Tutorial","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"keaganpzh"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"keaganpzh"},"content":"deadline Java Quiz /by 21 Aug","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"keaganpzh"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"keaganpzh"},"content":"event class /from 10am /to 12pm","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"keaganpzh"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"keaganpzh"},"content":"mark 1","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"keaganpzh"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"keaganpzh"},"content":"nonsense","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"keaganpzh"},"content":"todo nonsense","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"keaganpzh"},"content":"deadline nonsense","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"keaganpzh"},"content":"event nonsense nonsense","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"keaganpzh"},"content":"delete nonsense","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"keaganpzh"},"content":"delete 1","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"keaganpzh"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"keaganpzh":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"keaganpzh"},"content":"java -classpath ..\\bin Rat \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"keaganpzh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"keaganpzh"},"content":"java -classpath ../bin Rat \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"keaganpzh":1,"-":37}}]
