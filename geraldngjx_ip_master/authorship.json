[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"    mainClassName(\"geraldbot/Launcher\")","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"geraldngjx":21,"-":41}},{"path":"src/main/java/geraldbot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a DialogBox with the given text and image.","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"     * @param img The image to be displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"        dialog.setMaxHeight(Double.MAX_VALUE);","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"        setMaxHeight(Double.MAX_VALUE);","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"geraldngjx"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"geraldngjx"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"geraldngjx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"geraldngjx"},"content":"    private void flip() {","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"geraldngjx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"geraldngjx"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"geraldngjx"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"geraldngjx"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"geraldngjx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"geraldngjx"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"geraldngjx"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"geraldngjx"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"geraldngjx"},"content":"        db.flip();","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"geraldngjx"},"content":"        return db;","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"geraldngjx":70}},{"path":"src/main/java/geraldbot/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.person.Person;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.util.ContactStorage;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.util.Parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.util.TaskStorage;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":" * The main class that represents the Duke chatbot application.","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":" * Duke is a task manager that can handle various commands to manage tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"public class Duke {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"    private final Parser parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a Duke object and initializes the user interface and parser.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"     * Reads task data from storage and initializes the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    public Duke() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"./data/data.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"        ContactStorage contactStorage \u003d new ContactStorage(\"./data/contacts.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskStorage.read();","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cPerson\u003e contactList \u003d contactStorage.read();","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"        this.parser \u003d new Parser(taskStorage, contactStorage, taskList, contactList);","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"     * Returns the response to the user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"            String response \u003d parser.parse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"            return response;","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"            return e.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"geraldngjx":44,"-":1}},{"path":"src/main/java/geraldbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"public class Launcher {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"     * Launches the application.","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"geraldngjx":17}},{"path":"src/main/java/geraldbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"            stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"geraldngjx":31}},{"path":"src/main/java/geraldbot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.util.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"     * Initializes the scroll pane to scroll to the bottom of the dialog container.","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"                DialogBox.getDukeDialog(ui.greet(), dukeImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"     * Sets the Duke object to be used by the GUI.","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"     * @param d The Duke object to be used by the GUI.","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"geraldngjx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"geraldngjx"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"geraldngjx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"geraldngjx"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"geraldngjx"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"geraldngjx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"geraldngjx"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"geraldngjx"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"geraldngjx"},"content":"        );","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"geraldngjx"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"geraldngjx":60}},{"path":"src/main/java/geraldbot/exception/DukeEmptyParametersException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":" * Represents an exception thrown when a user doesn\u0027t provide the date/time for a Deadline/Event.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"public class DukeEmptyParametersException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a DukeEmptyParametersException with a default error message when user does not input a date/time.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"    public DukeEmptyParametersException() {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but you did not input a specific date/time for the Deadline/Event task! :-(\");","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"geraldngjx":14}},{"path":"src/main/java/geraldbot/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":" * Represents a custom exception specific to Duke application.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"geraldngjx":16}},{"path":"src/main/java/geraldbot/exception/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":" * Represents an exception thrown when an invalid command is provided by the user.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a DukeInvalidCommandException with a valid command but with invalid usage.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"     * @param command The command that caused the exception.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"    public DukeInvalidCommandException(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"        super(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a DukeInvalidCommandException with a default error message for an unknown command.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"    public DukeInvalidCommandException() {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"geraldngjx":23}},{"path":"src/main/java/geraldbot/exception/DukeInvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":" * Represents an exception thrown when an invalid date or time is provided by the user.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"public class DukeInvalidDateException extends DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a DukeInvalidDateException with a default error message for an invalid date/time.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"    public DukeInvalidDateException() {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"        super(\"☹ OOPS!!! The selected date/time is invalid.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"geraldngjx":14}},{"path":"src/main/java/geraldbot/exception/DukeInvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":" * Represents an exception thrown when an invalid index is provided by the user for a task.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"public class DukeInvalidIndexException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a DukeInvalidIndexException with a custom error message indicating the invalid index.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"    public DukeInvalidIndexException(Integer size) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but index is invalid! There are \" + size + \" tasks in the list! :-(\");","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"geraldngjx":16}},{"path":"src/main/java/geraldbot/person/Person.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.person;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":" * Represents a person in the contact list.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"public class Person {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"    private final String name;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"    private final String phone;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"    private final String email;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a Person with the given name, phone number, and email address.","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"     * @param name  The name of the person.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"     * @param phone The phone number of the person.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"     * @param email The email address of the person.","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"    public Person(String name, String phone, String email) {","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"        assert this.name !\u003d null : \"Name cannot be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"        assert this.phone !\u003d null : \"Phone number cannot be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"        assert this.email !\u003d null : \"Email address cannot be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"     * Generates a formatted string for storing the person in the contact storage file.","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"     * @return A formatted string representing the person for storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"        return name + \" | \" + phone + \" | \" + email;","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"     * Returns the name of the person.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"     * @return The name of the person.","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"    public String toString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"        return \"\\tName: \" + this.name + \" | Phone: \" + this.phone + \" | Email: \" + this.email;","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"geraldngjx":42}},{"path":"src/main/java/geraldbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":" * Represents a task with a deadline in the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a `Deadline` task with the specified description, completion status, and deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"     * @param endTime          The deadline of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime endTime) {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"     * Returns the formatted file representation of the `Deadline` task.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"     * @return The file format representation of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"        return \"D \" + super.fileFormat() + \" | \" + this.endTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"     * Returns the string representation of the `Deadline` task.","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"        String formattedBy \u003d endTime.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy, h:mma\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedBy + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"geraldngjx":45}},{"path":"src/main/java/geraldbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":" * Represents an event task in the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"    protected String startTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"    protected String endTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"     * Constructs an `Event` task with the specified description, completion status, start time, and end time.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"     * @param startTime       The start time of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"     * @param endTime         The end time of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"    public Event(String description, boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"     * Returns the formatted file representation of the `Event` task.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"     * @return The file format representation of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"        return \"E \" + super.fileFormat() + \" | \" + this.startTime + \"-\" + this.endTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"     * Returns the string representation of the `Event` task.","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" \" + \"to: \" + endTime + \")\";","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"geraldngjx":44}},{"path":"src/main/java/geraldbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":" * Represents a task in the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a task with the specified description and completion status.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"     * Toggles the completion status of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"    public void toggleCompletion() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"        return this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"     * Returns the status icon representing the completion status of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"     * @return The status icon (\"X\" for done, \" \" for not done).","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"geraldngjx"},"content":"     * Returns the file format representation of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"geraldngjx"},"content":"     * @return The file format representation of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"geraldngjx"},"content":"        String output \u003d \"| \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"geraldngjx"},"content":"        return output;","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"geraldngjx"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"geraldngjx"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"geraldngjx"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"geraldngjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"geraldngjx"},"content":"        String output \u003d \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"geraldngjx"},"content":"        return output;","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"geraldngjx":66}},{"path":"src/main/java/geraldbot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":" * Represents a to-do task in the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a to-do task with the specified description and completion status.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"     * @param isDone      The completion status of the to-do task.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"     * Returns the file format representation of the to-do task.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"     * @return The file format representation of the to-do task.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"        return \"T \" + super.fileFormat();","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"     * Returns the string representation of the to-do task.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"     * @return The string representation of the to-do task.","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"geraldngjx":37}},{"path":"src/main/java/geraldbot/util/ContactList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.util;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.person.Person;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":" * Represents a list of people.","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"public class ContactList {","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"    private final ArrayList\u003cPerson\u003e contactList;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a ContactList with the given list of people.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"     * @param contactList The initial list of people.","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"    public ContactList(ArrayList\u003cPerson\u003e contactList) {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"        this.contactList \u003d contactList;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"        assert this.contactList !\u003d null : \"Task list cannot be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"     * Adds a person to the contact list.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"     * @param person The person to be added.","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"    public void add(Person person) {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"        assert person !\u003d null : \"Task to be added cannot be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"        this.contactList.add(person);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"     * Removes and returns the person at the specified index.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"     * @param personIdx The index of the person to be removed.","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"     * @return The removed person.","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"    public Person remove(int personIdx) {","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"        assert personIdx \u003e\u003d 0 \u0026\u0026 personIdx \u003c contactList.size() : \"Invalid task index.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"        return this.contactList.remove(personIdx);","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"     * Returns the person at the specified index.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"geraldngjx"},"content":"     * @param personIdx The index of the person to be retrieved.","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"geraldngjx"},"content":"     * @return The person at the specified index.","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"geraldngjx"},"content":"    public Person get(int personIdx) {","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"        assert personIdx \u003e\u003d 0 \u0026\u0026 personIdx \u003c contactList.size() : \"Invalid task index.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"geraldngjx"},"content":"        return this.contactList.get(personIdx);","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"geraldngjx"},"content":"     * Returns the number of people in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"geraldngjx"},"content":"     * @return The number of people in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"geraldngjx"},"content":"    public int size() {","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"geraldngjx"},"content":"        return this.contactList.size();","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"geraldngjx":63}},{"path":"src/main/java/geraldbot/util/ContactStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.util;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import java.io.File;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.person.Person;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":" * Handles reading and writing persons (contacts) to the storage file.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"public class ContactStorage {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"    private File file;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"     * Constructor for ContactStorage.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"     * @param path The path to the storage file for contacts.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    public ContactStorage(String path) {","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"            createFile();","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"     * Creates a new file for contacts if it does not exist and also creates parent directories if needed.","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"    private void createFile() {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"        File parentFolder \u003d this.file.getParentFile();","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"        if (!parentFolder.exists()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"            parentFolder.mkdirs();","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"            if (this.file.createNewFile()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"                System.out.println(\"Contact file has been created successfully: \" + this.file.getPath());","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(\"There is an error creating the contact file.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"geraldngjx"},"content":"     * Reads persons (contacts) from the storage file.","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"geraldngjx"},"content":"     * @return An ArrayList of Person objects representing contacts.","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"geraldngjx"},"content":"    public ArrayList\u003cPerson\u003e read() {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cPerson\u003e contactList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"geraldngjx"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"geraldngjx"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"geraldngjx"},"content":"                String[] line \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"geraldngjx"},"content":"                String[] contact \u003d new String[line.length];","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"geraldngjx"},"content":"                for (int i \u003d 0; i \u003c line.length; i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"geraldngjx"},"content":"                    contact[i] \u003d line[i].trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"geraldngjx"},"content":"                }","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"geraldngjx"},"content":"                if (contact.length \u003e\u003d 3) {","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"geraldngjx"},"content":"                    Person newPerson \u003d new Person(contact[0], contact[1], contact[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"geraldngjx"},"content":"                    contactList.add(newPerson);","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"geraldngjx"},"content":"                } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"geraldngjx"},"content":"                    System.out.println(\"Invalid contact format: \" + String.join(\"|\", contact));","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"geraldngjx"},"content":"                }","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"geraldngjx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"geraldngjx"},"content":"            createFile();","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"geraldngjx"},"content":"        return contactList;","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"geraldngjx"},"content":"     * Adds a person (contact) in file format to the storage file.","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"geraldngjx"},"content":"     * @param person The formatted person (contact) to add.","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"geraldngjx"},"content":"    public void addPerson(String person) {","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"geraldngjx"},"content":"            FileWriter fw \u003d new FileWriter(this.file, true);","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"geraldngjx"},"content":"            if (this.file.length() !\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"geraldngjx"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"geraldngjx"},"content":"            fw.write(person);","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"geraldngjx"},"content":"            fw.close();","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"geraldngjx"},"content":"     * Updates a person (contact) in the storage file.","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"geraldngjx"},"content":"     * @param index The index of the person (contact) to update.","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"geraldngjx"},"content":"     * @param updatedPerson The updated person (contact) in file format.","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"geraldngjx"},"content":"    public void updatePerson(int index, String updatedPerson) {","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"geraldngjx"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"geraldngjx"},"content":"            ArrayList\u003cString\u003e updatedContactList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"geraldngjx"},"content":"            int idx \u003d 0;","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"geraldngjx"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"geraldngjx"},"content":"                String currContact \u003d sc.nextLine();","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"geraldngjx"},"content":"                if (idx !\u003d index) {","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"geraldngjx"},"content":"                    updatedContactList.add(currContact);","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"geraldngjx"},"content":"                } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"geraldngjx"},"content":"                    updatedContactList.add(updatedPerson);","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"geraldngjx"},"content":"                }","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"geraldngjx"},"content":"                idx++;","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"geraldngjx"},"content":"            sc.close();","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"geraldngjx"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"geraldngjx"},"content":"            fw.write(String.join(\"\\n\", updatedContactList));","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"geraldngjx"},"content":"            fw.close();","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"geraldngjx":139}},{"path":"src/main/java/geraldbot/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.util;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.exception.DukeEmptyParametersException;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.exception.DukeInvalidCommandException;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.exception.DukeInvalidDateException;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.exception.DukeInvalidIndexException;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.person.Person;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Todo;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":" * The Parser class handles the parsing of user input and the execution of corresponding actions","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":" * based on the parsed commands. It interacts with the Storage and TaskList classes to manage tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"    private final TaskStorage taskStorage;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"    private final ContactStorage contactStorage;","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"    private final ContactList contactList;","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"    private enum Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"        LIST,","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"        BYE,","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"        FIND,","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"        MARK,","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"        UNMARK,","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"        DELETE,","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"        TODO,","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"        EVENT,","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"        CONTACT,","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"        INVALID","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"geraldngjx"},"content":"     * Initializes a new Parser instance with the provided storage and task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"geraldngjx"},"content":"     * @param taskStorage   The storage instance used for reading and writing tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"geraldngjx"},"content":"     * @param contactStorage The storage instance used for reading and writing contacts.","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"     * @param taskList  The task list containing the tasks to be processed.","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"geraldngjx"},"content":"     * @param contactList The contact list containing the contacts to be processed.","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"geraldngjx"},"content":"    public Parser(TaskStorage taskStorage, ContactStorage contactStorage,","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"geraldngjx"},"content":"                  ArrayList\u003cTask\u003e taskList, ArrayList\u003cPerson\u003e contactList) {","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"geraldngjx"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"geraldngjx"},"content":"        this.contactStorage \u003d contactStorage;","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"geraldngjx"},"content":"        this.taskList \u003d new TaskList(taskList);","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"geraldngjx"},"content":"        this.contactList \u003d new ContactList(contactList);","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"geraldngjx"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"geraldngjx"},"content":"     * Parses the user input and executes the corresponding actions for both tasks and contacts.","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"geraldngjx"},"content":"     * @param input The user input to be parsed and processed.","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"geraldngjx"},"content":"     * @return A String message containing the result of the executed action.","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"geraldngjx"},"content":"     * @throws DukeException If an error occurs during parsing or execution.","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"geraldngjx"},"content":"    public String parse(String input) throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"geraldngjx"},"content":"        Command command \u003d getCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"geraldngjx"},"content":"        switch (command) {","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"geraldngjx"},"content":"        case LIST:","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"geraldngjx"},"content":"            return this.printList();","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"geraldngjx"},"content":"        case BYE:","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"geraldngjx"},"content":"            return this.ui.bye();","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"geraldngjx"},"content":"        case FIND:","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"geraldngjx"},"content":"            return findTasks(input.substring(5).trim());","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"geraldngjx"},"content":"        case MARK:","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"geraldngjx"},"content":"            return handleMarkCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"geraldngjx"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"geraldngjx"},"content":"            return handleUnmarkCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"geraldngjx"},"content":"        case DELETE:","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"geraldngjx"},"content":"            return handleDeleteCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"geraldngjx"},"content":"        case TODO:","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"geraldngjx"},"content":"            return handleTodoCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"geraldngjx"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"geraldngjx"},"content":"            return handleDeadlineCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"geraldngjx"},"content":"        case EVENT:","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"geraldngjx"},"content":"            return handleEventCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"geraldngjx"},"content":"        case CONTACT:","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"geraldngjx"},"content":"            return handleContactCommand(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"geraldngjx"},"content":"        case INVALID:","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException();","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"geraldngjx"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException();","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"geraldngjx"},"content":"     * Determines the command type based on the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"geraldngjx"},"content":"     * @param input The user input to be analyzed.","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"geraldngjx"},"content":"     * @return The Command enum representing the detected command type.","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"geraldngjx"},"content":"    private Command getCommand(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"geraldngjx"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"geraldngjx"},"content":"            return Command.LIST;","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"geraldngjx"},"content":"            return Command.BYE;","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"geraldngjx"},"content":"            return Command.FIND;","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"geraldngjx"},"content":"            return Command.MARK;","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"geraldngjx"},"content":"            return Command.UNMARK;","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"geraldngjx"},"content":"            return Command.DELETE;","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"geraldngjx"},"content":"            return Command.TODO;","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"geraldngjx"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"geraldngjx"},"content":"            return Command.EVENT;","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.startsWith(\"contact\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"geraldngjx"},"content":"            return Command.CONTACT;","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"geraldngjx"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"geraldngjx"},"content":"            return Command.INVALID;","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"geraldngjx"},"content":"     * Handles the \"contact\" command to perform contact-related actions.","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"geraldngjx"},"content":"     * @param input The user input for the \"contact\" command.","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the result of the contact-related action.","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"geraldngjx"},"content":"     * @throws DukeException If there is an issue with the input or contact command.","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"geraldngjx"},"content":"    private String handleContactCommand(String input) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"geraldngjx"},"content":"        if (input.startsWith(\"contact add\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"geraldngjx"},"content":"            return handleAddPerson(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.startsWith(\"contact remove\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"geraldngjx"},"content":"            return handleRemovePerson(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"geraldngjx"},"content":"        } else if (input.equals(\"contact list\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"geraldngjx"},"content":"            return handleListContacts();","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"geraldngjx"},"content":"        } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException();","lastModifiedDate":"2023-09-10"},{"lineNumber":149,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":150,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":152,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":153,"author":{"gitId":"geraldngjx"},"content":"     * Parses the \"contact add\" command to add a new person to the contact list and storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"geraldngjx"},"content":"     * @param input The user input for the \"contact add\" command.","lastModifiedDate":"2023-09-10"},{"lineNumber":156,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of adding the person.","lastModifiedDate":"2023-09-10"},{"lineNumber":157,"author":{"gitId":"geraldngjx"},"content":"     * @throws DukeException If there is an issue with the input or person information.","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"geraldngjx"},"content":"    private String handleAddPerson(String input) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":160,"author":{"gitId":"geraldngjx"},"content":"        String[] parsedString \u003d input.split(\" \", 3);","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"geraldngjx"},"content":"        if (parsedString.length !\u003d 3 || !parsedString[1].equals(\"add\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(\"contact add\");","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":166,"author":{"gitId":"geraldngjx"},"content":"        String personInfo \u003d parsedString[2];","lastModifiedDate":"2023-09-10"},{"lineNumber":167,"author":{"gitId":"geraldngjx"},"content":"        String[] personData \u003d personInfo.split(\"/\");","lastModifiedDate":"2023-09-10"},{"lineNumber":168,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":169,"author":{"gitId":"geraldngjx"},"content":"        if (personData.length !\u003d 3) {","lastModifiedDate":"2023-09-10"},{"lineNumber":170,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(\"contact add\");","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":173,"author":{"gitId":"geraldngjx"},"content":"        String name \u003d personData[0].trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"geraldngjx"},"content":"        String phone \u003d personData[1].trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":175,"author":{"gitId":"geraldngjx"},"content":"        String email \u003d personData[2].trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":176,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":177,"author":{"gitId":"geraldngjx"},"content":"        if (name.isEmpty() || phone.isEmpty() || email.isEmpty()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":178,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(\"contact add\");","lastModifiedDate":"2023-09-10"},{"lineNumber":179,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":180,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":181,"author":{"gitId":"geraldngjx"},"content":"        return this.addPerson(name, phone, email);","lastModifiedDate":"2023-09-10"},{"lineNumber":182,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":183,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":184,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":185,"author":{"gitId":"geraldngjx"},"content":"     * Parses the \"contact remove\" command to remove a person from the contact list and storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":186,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":187,"author":{"gitId":"geraldngjx"},"content":"     * @param input The user input for the \"contact remove\" command.","lastModifiedDate":"2023-09-10"},{"lineNumber":188,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of removing the person.","lastModifiedDate":"2023-09-10"},{"lineNumber":189,"author":{"gitId":"geraldngjx"},"content":"     * @throws DukeException If there is an issue with the input or person index.","lastModifiedDate":"2023-09-10"},{"lineNumber":190,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":191,"author":{"gitId":"geraldngjx"},"content":"    private String handleRemovePerson(String input) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":192,"author":{"gitId":"geraldngjx"},"content":"        String[] parsedString \u003d input.split(\" \", 3);","lastModifiedDate":"2023-09-10"},{"lineNumber":193,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":194,"author":{"gitId":"geraldngjx"},"content":"        if (parsedString.length !\u003d 3 || !parsedString[1].equals(\"remove\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":195,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(\"contact remove\");","lastModifiedDate":"2023-09-10"},{"lineNumber":196,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":197,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":198,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":199,"author":{"gitId":"geraldngjx"},"content":"            int index \u003d Integer.parseInt(parsedString[2].trim());","lastModifiedDate":"2023-09-10"},{"lineNumber":200,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":201,"author":{"gitId":"geraldngjx"},"content":"            if (index \u003c\u003d 0 || index \u003e contactList.size()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":202,"author":{"gitId":"geraldngjx"},"content":"                throw new DukeInvalidIndexException(contactList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":203,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":204,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":205,"author":{"gitId":"geraldngjx"},"content":"            return this.removePerson(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":206,"author":{"gitId":"geraldngjx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":207,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidIndexException(contactList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":208,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":209,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":210,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":211,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":212,"author":{"gitId":"geraldngjx"},"content":"     * Adds a new person (contact) to the contact list and storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":213,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":214,"author":{"gitId":"geraldngjx"},"content":"     * @param name  The name of the person (contact).","lastModifiedDate":"2023-09-10"},{"lineNumber":215,"author":{"gitId":"geraldngjx"},"content":"     * @param phone The phone number of the person (contact).","lastModifiedDate":"2023-09-10"},{"lineNumber":216,"author":{"gitId":"geraldngjx"},"content":"     * @param email The email address of the person (contact).","lastModifiedDate":"2023-09-10"},{"lineNumber":217,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of adding the person.","lastModifiedDate":"2023-09-10"},{"lineNumber":218,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":219,"author":{"gitId":"geraldngjx"},"content":"    public String addPerson(String name, String phone, String email) {","lastModifiedDate":"2023-09-10"},{"lineNumber":220,"author":{"gitId":"geraldngjx"},"content":"        assert name !\u003d null \u0026\u0026 !name.trim().isEmpty() : \"Person name cannot be empty\";","lastModifiedDate":"2023-09-10"},{"lineNumber":221,"author":{"gitId":"geraldngjx"},"content":"        assert phone !\u003d null \u0026\u0026 !phone.trim().isEmpty() : \"Person phone cannot be empty\";","lastModifiedDate":"2023-09-10"},{"lineNumber":222,"author":{"gitId":"geraldngjx"},"content":"        assert email !\u003d null \u0026\u0026 !email.trim().isEmpty() : \"Person email cannot be empty\";","lastModifiedDate":"2023-09-10"},{"lineNumber":223,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":224,"author":{"gitId":"geraldngjx"},"content":"        Person newPerson \u003d new Person(name, phone, email);","lastModifiedDate":"2023-09-10"},{"lineNumber":225,"author":{"gitId":"geraldngjx"},"content":"        String newPersonString \u003d newPerson.fileFormat();","lastModifiedDate":"2023-09-10"},{"lineNumber":226,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":227,"author":{"gitId":"geraldngjx"},"content":"        String message \u003d \"Got it. I\u0027ve added this person to your contacts:\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":228,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d newPerson;","lastModifiedDate":"2023-09-10"},{"lineNumber":229,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":230,"author":{"gitId":"geraldngjx"},"content":"        contactList.add(newPerson);","lastModifiedDate":"2023-09-10"},{"lineNumber":231,"author":{"gitId":"geraldngjx"},"content":"        contactStorage.addPerson(newPersonString);","lastModifiedDate":"2023-09-10"},{"lineNumber":232,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":233,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d \"\\nNow you have \" + contactList.size() + \" contacts in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":234,"author":{"gitId":"geraldngjx"},"content":"        return message;","lastModifiedDate":"2023-09-10"},{"lineNumber":235,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":236,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":237,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":238,"author":{"gitId":"geraldngjx"},"content":"     * Removes a person (contact) from the contact list and storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":239,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":240,"author":{"gitId":"geraldngjx"},"content":"     * @param index The index of the person (contact) to be removed.","lastModifiedDate":"2023-09-10"},{"lineNumber":241,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of removing the person.","lastModifiedDate":"2023-09-10"},{"lineNumber":242,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":243,"author":{"gitId":"geraldngjx"},"content":"    public String removePerson(int index) {","lastModifiedDate":"2023-09-10"},{"lineNumber":244,"author":{"gitId":"geraldngjx"},"content":"        String message \u003d \"Noted. I\u0027ve removed this person from your contacts:\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":245,"author":{"gitId":"geraldngjx"},"content":"        Person removedPerson \u003d contactList.remove(index - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":246,"author":{"gitId":"geraldngjx"},"content":"        contactStorage.updatePerson(index - 1, null);","lastModifiedDate":"2023-09-10"},{"lineNumber":247,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":248,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d removedPerson;","lastModifiedDate":"2023-09-10"},{"lineNumber":249,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d \"\\nNow you have \" + contactList.size() + \" contacts in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":250,"author":{"gitId":"geraldngjx"},"content":"        return message;","lastModifiedDate":"2023-09-10"},{"lineNumber":251,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":252,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":253,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":254,"author":{"gitId":"geraldngjx"},"content":"     * Handles the \"contact list\" command to list all contacts in the contact list.","lastModifiedDate":"2023-09-10"},{"lineNumber":255,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":256,"author":{"gitId":"geraldngjx"},"content":"     * @return A message containing the list of contacts.","lastModifiedDate":"2023-09-10"},{"lineNumber":257,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":258,"author":{"gitId":"geraldngjx"},"content":"    private String handleListContacts() {","lastModifiedDate":"2023-09-10"},{"lineNumber":259,"author":{"gitId":"geraldngjx"},"content":"        StringBuilder listString \u003d new StringBuilder(\"Here are your contacts:\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":260,"author":{"gitId":"geraldngjx"},"content":"        for (int i \u003d 0; i \u003c contactList.size(); i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":261,"author":{"gitId":"geraldngjx"},"content":"            listString.append(i + 1).append(\". \").append(contactList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":262,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":263,"author":{"gitId":"geraldngjx"},"content":"        return listString.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":264,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":265,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":266,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":267,"author":{"gitId":"geraldngjx"},"content":"     * Parses the \"mark\" command to mark a task as done and updates the storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":268,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":269,"author":{"gitId":"geraldngjx"},"content":"     * @param input The user input for the \"mark\" command.","lastModifiedDate":"2023-09-07"},{"lineNumber":270,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of marking the task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":271,"author":{"gitId":"geraldngjx"},"content":"     * @throws DukeException If there is an issue with the input or task index.","lastModifiedDate":"2023-09-07"},{"lineNumber":272,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":273,"author":{"gitId":"geraldngjx"},"content":"    private String handleMarkCommand(String input) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":274,"author":{"gitId":"geraldngjx"},"content":"        String[] parsedString \u003d input.split(\" \");","lastModifiedDate":"2023-09-07"},{"lineNumber":275,"author":{"gitId":"geraldngjx"},"content":"        if (parsedString.length !\u003d 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":276,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(\"mark\");","lastModifiedDate":"2023-08-27"},{"lineNumber":277,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":278,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":279,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":280,"author":{"gitId":"geraldngjx"},"content":"            int num \u003d Integer.parseInt(parsedString[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":281,"author":{"gitId":"geraldngjx"},"content":"            if (num \u003e taskList.size() || num \u003c\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":282,"author":{"gitId":"geraldngjx"},"content":"                throw new DukeInvalidIndexException(taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":283,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":284,"author":{"gitId":"geraldngjx"},"content":"            Task selectedTask \u003d taskList.get(num - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":285,"author":{"gitId":"geraldngjx"},"content":"            return this.markCompletion(selectedTask, num);","lastModifiedDate":"2023-09-07"},{"lineNumber":286,"author":{"gitId":"geraldngjx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":287,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidIndexException(taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":288,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":289,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":290,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":291,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":292,"author":{"gitId":"geraldngjx"},"content":"     * Parses the \"unmark\" command to remove the completion status of a task and updates the storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":293,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":294,"author":{"gitId":"geraldngjx"},"content":"     * @param input The user input for the \"unmark\" command.","lastModifiedDate":"2023-09-07"},{"lineNumber":295,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of marking the task as not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":296,"author":{"gitId":"geraldngjx"},"content":"     * @throws DukeException If there is an issue with the input or task index.","lastModifiedDate":"2023-09-07"},{"lineNumber":297,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":298,"author":{"gitId":"geraldngjx"},"content":"    private String handleUnmarkCommand(String input) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":299,"author":{"gitId":"geraldngjx"},"content":"        String[] parsedString \u003d input.split(\" \");","lastModifiedDate":"2023-09-07"},{"lineNumber":300,"author":{"gitId":"geraldngjx"},"content":"        if (parsedString.length !\u003d 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":301,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(\"unmark\");","lastModifiedDate":"2023-08-27"},{"lineNumber":302,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":303,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":304,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":305,"author":{"gitId":"geraldngjx"},"content":"            int num \u003d Integer.parseInt(parsedString[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":306,"author":{"gitId":"geraldngjx"},"content":"            if (num \u003e taskList.size() || num \u003c\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":307,"author":{"gitId":"geraldngjx"},"content":"                throw new DukeInvalidIndexException(taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":308,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":309,"author":{"gitId":"geraldngjx"},"content":"            Task selectedTask \u003d taskList.get(num - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":310,"author":{"gitId":"geraldngjx"},"content":"            return this.unmarkCompletion(selectedTask, num);","lastModifiedDate":"2023-09-07"},{"lineNumber":311,"author":{"gitId":"geraldngjx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":312,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidIndexException(taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":313,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":314,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":315,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":316,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":317,"author":{"gitId":"geraldngjx"},"content":"     * Parses the \"delete\" command to delete a task from the task list and updates the storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":318,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":319,"author":{"gitId":"geraldngjx"},"content":"     * @param input The user input for the \"delete\" command.","lastModifiedDate":"2023-09-07"},{"lineNumber":320,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of deleting the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":321,"author":{"gitId":"geraldngjx"},"content":"     * @throws DukeException If there is an issue with the input or task index.","lastModifiedDate":"2023-09-07"},{"lineNumber":322,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":323,"author":{"gitId":"geraldngjx"},"content":"    private String handleDeleteCommand(String input) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":324,"author":{"gitId":"geraldngjx"},"content":"        String[] parsedString \u003d input.split(\" \");","lastModifiedDate":"2023-09-07"},{"lineNumber":325,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":326,"author":{"gitId":"geraldngjx"},"content":"        if (parsedString.length !\u003d 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":327,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(\"delete\");","lastModifiedDate":"2023-08-27"},{"lineNumber":328,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":329,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":330,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":331,"author":{"gitId":"geraldngjx"},"content":"            int num \u003d Integer.parseInt(parsedString[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":332,"author":{"gitId":"geraldngjx"},"content":"            if (num \u003e taskList.size() || num \u003c\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":333,"author":{"gitId":"geraldngjx"},"content":"                throw new DukeInvalidIndexException(taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":334,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":335,"author":{"gitId":"geraldngjx"},"content":"            return this.deleteTask(num);","lastModifiedDate":"2023-09-07"},{"lineNumber":336,"author":{"gitId":"geraldngjx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":337,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidIndexException(taskList.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":338,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":339,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":340,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":341,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":342,"author":{"gitId":"geraldngjx"},"content":"     * Parses the \"todo\" command to add a new todo task to the task list and storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":343,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":344,"author":{"gitId":"geraldngjx"},"content":"     * @param input   The user input for the \"todo\" command.","lastModifiedDate":"2023-09-07"},{"lineNumber":345,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of adding the todo task.","lastModifiedDate":"2023-09-07"},{"lineNumber":346,"author":{"gitId":"geraldngjx"},"content":"     * @throws DukeException If there is an issue with the input or task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":347,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":348,"author":{"gitId":"geraldngjx"},"content":"    private String handleTodoCommand(String input) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":349,"author":{"gitId":"geraldngjx"},"content":"        if (input.replaceAll(\"\\\\s\", \"\").equals(input)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":350,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(\"todo\");","lastModifiedDate":"2023-08-27"},{"lineNumber":351,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":352,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":353,"author":{"gitId":"geraldngjx"},"content":"        String command \u003d \"todo\";","lastModifiedDate":"2023-09-07"},{"lineNumber":354,"author":{"gitId":"geraldngjx"},"content":"        String description \u003d input.substring(input.indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":355,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":356,"author":{"gitId":"geraldngjx"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":357,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":358,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":359,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":360,"author":{"gitId":"geraldngjx"},"content":"        return this.addTodo(description, false);","lastModifiedDate":"2023-09-07"},{"lineNumber":361,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":362,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":363,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":364,"author":{"gitId":"geraldngjx"},"content":"     * Parses the \"deadline\" command to add a new deadline task to the task list and storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":365,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":366,"author":{"gitId":"geraldngjx"},"content":"     * @param input   The user input for the \"deadline\" command.","lastModifiedDate":"2023-09-07"},{"lineNumber":367,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of adding the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":368,"author":{"gitId":"geraldngjx"},"content":"     * @throws DukeException If there is an issue with the input, task description, or date format.","lastModifiedDate":"2023-09-07"},{"lineNumber":369,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":370,"author":{"gitId":"geraldngjx"},"content":"    private String handleDeadlineCommand(String input) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":371,"author":{"gitId":"geraldngjx"},"content":"        if (input.replaceAll(\"\\\\s\", \"\").equals(input)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":372,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(\"deadline\");","lastModifiedDate":"2023-08-27"},{"lineNumber":373,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":374,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":375,"author":{"gitId":"geraldngjx"},"content":"        String command \u003d \"deadline\";","lastModifiedDate":"2023-09-07"},{"lineNumber":376,"author":{"gitId":"geraldngjx"},"content":"        String task \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":377,"author":{"gitId":"geraldngjx"},"content":"        String[] parsedTask \u003d task.split(\"/\", 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":378,"author":{"gitId":"geraldngjx"},"content":"        String description \u003d parsedTask[0].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":379,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":380,"author":{"gitId":"geraldngjx"},"content":"        if (parsedTask.length \u003c 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":381,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeEmptyParametersException();","lastModifiedDate":"2023-08-27"},{"lineNumber":382,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":383,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":384,"author":{"gitId":"geraldngjx"},"content":"        String by \u003d parsedTask[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":385,"author":{"gitId":"geraldngjx"},"content":"        LocalDateTime deadlineDate \u003d parseDate(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":386,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":387,"author":{"gitId":"geraldngjx"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":388,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":389,"author":{"gitId":"geraldngjx"},"content":"        } else if (deadlineDate \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":390,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidDateException();","lastModifiedDate":"2023-08-27"},{"lineNumber":391,"author":{"gitId":"geraldngjx"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":392,"author":{"gitId":"geraldngjx"},"content":"            return this.addDeadline(description, false, deadlineDate);","lastModifiedDate":"2023-09-07"},{"lineNumber":393,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":394,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":395,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":396,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":397,"author":{"gitId":"geraldngjx"},"content":"     * Parses the \"event\" command to add a new event task to the task list and storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":398,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":399,"author":{"gitId":"geraldngjx"},"content":"     * @param input   The user input for the \"event\" command.","lastModifiedDate":"2023-09-07"},{"lineNumber":400,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of adding the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":401,"author":{"gitId":"geraldngjx"},"content":"     * @throws DukeException If there is an issue with the input or task parameters.","lastModifiedDate":"2023-09-07"},{"lineNumber":402,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":403,"author":{"gitId":"geraldngjx"},"content":"    private String handleEventCommand(String input) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":404,"author":{"gitId":"geraldngjx"},"content":"        if (input.replaceAll(\"\\\\s\", \"\").equals(input)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":405,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeInvalidCommandException(\"event\");","lastModifiedDate":"2023-08-27"},{"lineNumber":406,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":407,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":408,"author":{"gitId":"geraldngjx"},"content":"        String task \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":409,"author":{"gitId":"geraldngjx"},"content":"        String[] parsedTask \u003d task.split(\"/\");","lastModifiedDate":"2023-08-27"},{"lineNumber":410,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":411,"author":{"gitId":"geraldngjx"},"content":"        if (parsedTask.length \u003c 3) {","lastModifiedDate":"2023-08-27"},{"lineNumber":412,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeEmptyParametersException();","lastModifiedDate":"2023-08-27"},{"lineNumber":413,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":414,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":415,"author":{"gitId":"geraldngjx"},"content":"        String description \u003d parsedTask[0].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":416,"author":{"gitId":"geraldngjx"},"content":"        String start \u003d parsedTask[1].substring(parsedTask[1].indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":417,"author":{"gitId":"geraldngjx"},"content":"        String by \u003d parsedTask[2].substring(parsedTask[2].indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":418,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":419,"author":{"gitId":"geraldngjx"},"content":"        if (description.equals(\"\") || start.equals(\"\") || by.equals(\"\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":420,"author":{"gitId":"geraldngjx"},"content":"            throw new DukeEmptyParametersException();","lastModifiedDate":"2023-08-27"},{"lineNumber":421,"author":{"gitId":"geraldngjx"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":422,"author":{"gitId":"geraldngjx"},"content":"            return this.addEvent(description, false, start, by);","lastModifiedDate":"2023-09-07"},{"lineNumber":423,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":424,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":425,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":426,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":427,"author":{"gitId":"geraldngjx"},"content":"     * Parses a date string and returns a LocalDateTime object.","lastModifiedDate":"2023-08-28"},{"lineNumber":428,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":429,"author":{"gitId":"geraldngjx"},"content":"     * @param dateStr The date string to be parsed.","lastModifiedDate":"2023-08-28"},{"lineNumber":430,"author":{"gitId":"geraldngjx"},"content":"     * @return A LocalDateTime object representing the parsed date.","lastModifiedDate":"2023-08-28"},{"lineNumber":431,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":432,"author":{"gitId":"geraldngjx"},"content":"    private LocalDateTime parseDate(String dateStr) {","lastModifiedDate":"2023-08-27"},{"lineNumber":433,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":434,"author":{"gitId":"geraldngjx"},"content":"            String[] parts \u003d dateStr.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":435,"author":{"gitId":"geraldngjx"},"content":"            String dateString \u003d parts.length \u003e 1 ? parts[1] : parts[0]; // Use the second part if available","lastModifiedDate":"2023-08-27"},{"lineNumber":436,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":437,"author":{"gitId":"geraldngjx"},"content":"            return LocalDateTime.parse(dateString, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":438,"author":{"gitId":"geraldngjx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":439,"author":{"gitId":"geraldngjx"},"content":"            return null;","lastModifiedDate":"2023-08-27"},{"lineNumber":440,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":441,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":442,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":443,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":444,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":445,"author":{"gitId":"geraldngjx"},"content":"     * Adds a new todo task to the task list and storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":446,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":447,"author":{"gitId":"geraldngjx"},"content":"     * @param input   The description of the todo task.","lastModifiedDate":"2023-08-28"},{"lineNumber":448,"author":{"gitId":"geraldngjx"},"content":"     * @param isDone  The completion status of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":449,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of adding the todo task.","lastModifiedDate":"2023-09-10"},{"lineNumber":450,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":451,"author":{"gitId":"geraldngjx"},"content":"    public String addTodo(String input, boolean isDone) {","lastModifiedDate":"2023-09-04"},{"lineNumber":452,"author":{"gitId":"geraldngjx"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Task description cannot be empty\";","lastModifiedDate":"2023-09-10"},{"lineNumber":453,"author":{"gitId":"geraldngjx"},"content":"        Todo newTask \u003d new Todo(input, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":454,"author":{"gitId":"geraldngjx"},"content":"        String newTaskString \u003d newTask.fileFormat();","lastModifiedDate":"2023-08-27"},{"lineNumber":455,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":456,"author":{"gitId":"geraldngjx"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":457,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d \"\\t\" + newTask;","lastModifiedDate":"2023-09-04"},{"lineNumber":458,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":459,"author":{"gitId":"geraldngjx"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-09-10"},{"lineNumber":460,"author":{"gitId":"geraldngjx"},"content":"        taskStorage.addTask(newTaskString);","lastModifiedDate":"2023-09-10"},{"lineNumber":461,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":462,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":463,"author":{"gitId":"geraldngjx"},"content":"        return message;","lastModifiedDate":"2023-09-04"},{"lineNumber":464,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":465,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":466,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":467,"author":{"gitId":"geraldngjx"},"content":"     * Adds a new deadline task to the task list and storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":468,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":469,"author":{"gitId":"geraldngjx"},"content":"     * @param input   The description of the deadline task.","lastModifiedDate":"2023-08-28"},{"lineNumber":470,"author":{"gitId":"geraldngjx"},"content":"     * @param isDone  The completion status of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":471,"author":{"gitId":"geraldngjx"},"content":"     * @param endTime The deadline of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":472,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of adding the deadline task.","lastModifiedDate":"2023-09-10"},{"lineNumber":473,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":474,"author":{"gitId":"geraldngjx"},"content":"    public String addDeadline(String input, boolean isDone, LocalDateTime endTime) {","lastModifiedDate":"2023-09-10"},{"lineNumber":475,"author":{"gitId":"geraldngjx"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Task description cannot be empty\";","lastModifiedDate":"2023-09-10"},{"lineNumber":476,"author":{"gitId":"geraldngjx"},"content":"        Deadline newTask \u003d new Deadline(input, isDone, endTime);","lastModifiedDate":"2023-09-10"},{"lineNumber":477,"author":{"gitId":"geraldngjx"},"content":"        String newTaskString \u003d newTask.fileFormat();","lastModifiedDate":"2023-08-27"},{"lineNumber":478,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":479,"author":{"gitId":"geraldngjx"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":480,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d \"\\t\" + newTask;","lastModifiedDate":"2023-09-04"},{"lineNumber":481,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":482,"author":{"gitId":"geraldngjx"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-09-10"},{"lineNumber":483,"author":{"gitId":"geraldngjx"},"content":"        taskStorage.addTask(newTaskString);","lastModifiedDate":"2023-09-10"},{"lineNumber":484,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":485,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":486,"author":{"gitId":"geraldngjx"},"content":"        return message;","lastModifiedDate":"2023-09-04"},{"lineNumber":487,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":488,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":489,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":490,"author":{"gitId":"geraldngjx"},"content":"     * Adds a new event task to the task list and storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":491,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":492,"author":{"gitId":"geraldngjx"},"content":"     * @param input   The description of the event task.","lastModifiedDate":"2023-08-28"},{"lineNumber":493,"author":{"gitId":"geraldngjx"},"content":"     * @param isDone  The completion status of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":494,"author":{"gitId":"geraldngjx"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":495,"author":{"gitId":"geraldngjx"},"content":"     * @param endTime The end time of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":496,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of adding the event task.","lastModifiedDate":"2023-09-10"},{"lineNumber":497,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":498,"author":{"gitId":"geraldngjx"},"content":"    public String addEvent(String input, boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2023-09-10"},{"lineNumber":499,"author":{"gitId":"geraldngjx"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Task description cannot be empty\";","lastModifiedDate":"2023-09-10"},{"lineNumber":500,"author":{"gitId":"geraldngjx"},"content":"        Event newTask \u003d new Event(input, isDone, startTime, endTime);","lastModifiedDate":"2023-09-10"},{"lineNumber":501,"author":{"gitId":"geraldngjx"},"content":"        String newTaskString \u003d newTask.fileFormat();","lastModifiedDate":"2023-08-27"},{"lineNumber":502,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":503,"author":{"gitId":"geraldngjx"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":504,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d \"\\t\" + newTask;","lastModifiedDate":"2023-09-04"},{"lineNumber":505,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":506,"author":{"gitId":"geraldngjx"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-09-10"},{"lineNumber":507,"author":{"gitId":"geraldngjx"},"content":"        taskStorage.addTask(newTaskString);","lastModifiedDate":"2023-09-10"},{"lineNumber":508,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":509,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":510,"author":{"gitId":"geraldngjx"},"content":"        return message;","lastModifiedDate":"2023-09-04"},{"lineNumber":511,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":512,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":513,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":514,"author":{"gitId":"geraldngjx"},"content":"     * Prints the list of tasks in the task list.","lastModifiedDate":"2023-09-10"},{"lineNumber":515,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":516,"author":{"gitId":"geraldngjx"},"content":"     * @return A String containing the list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":517,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":518,"author":{"gitId":"geraldngjx"},"content":"    public String printList() {","lastModifiedDate":"2023-09-04"},{"lineNumber":519,"author":{"gitId":"geraldngjx"},"content":"        String listString \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":520,"author":{"gitId":"geraldngjx"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":521,"author":{"gitId":"geraldngjx"},"content":"            listString +\u003d (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":522,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":523,"author":{"gitId":"geraldngjx"},"content":"        return listString;","lastModifiedDate":"2023-09-10"},{"lineNumber":524,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":525,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":526,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":527,"author":{"gitId":"geraldngjx"},"content":"     * Marks a task as done and updates the storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":528,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":529,"author":{"gitId":"geraldngjx"},"content":"     * @param task The task to be marked as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":530,"author":{"gitId":"geraldngjx"},"content":"     * @param taskIdx  The index of the task in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":531,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of marking the task as done.","lastModifiedDate":"2023-09-10"},{"lineNumber":532,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":533,"author":{"gitId":"geraldngjx"},"content":"    public String markCompletion(Task task, int taskIdx) {","lastModifiedDate":"2023-09-10"},{"lineNumber":534,"author":{"gitId":"geraldngjx"},"content":"        if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":535,"author":{"gitId":"geraldngjx"},"content":"            String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":536,"author":{"gitId":"geraldngjx"},"content":"            message +\u003d \"\\t\" + task;","lastModifiedDate":"2023-09-04"},{"lineNumber":537,"author":{"gitId":"geraldngjx"},"content":"            return message;","lastModifiedDate":"2023-09-04"},{"lineNumber":538,"author":{"gitId":"geraldngjx"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":539,"author":{"gitId":"geraldngjx"},"content":"            String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":540,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":541,"author":{"gitId":"geraldngjx"},"content":"            task.toggleCompletion();","lastModifiedDate":"2023-08-27"},{"lineNumber":542,"author":{"gitId":"geraldngjx"},"content":"            String updatedTaskString \u003d task.fileFormat();","lastModifiedDate":"2023-08-27"},{"lineNumber":543,"author":{"gitId":"geraldngjx"},"content":"            this.taskStorage.updateTask(taskIdx - 1, updatedTaskString);","lastModifiedDate":"2023-09-10"},{"lineNumber":544,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":545,"author":{"gitId":"geraldngjx"},"content":"            message +\u003d \"\\t\" + task;","lastModifiedDate":"2023-09-04"},{"lineNumber":546,"author":{"gitId":"geraldngjx"},"content":"            return message;","lastModifiedDate":"2023-09-04"},{"lineNumber":547,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":548,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":549,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":550,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":551,"author":{"gitId":"geraldngjx"},"content":"     * Removes the completion status of a task and updates the storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":552,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":553,"author":{"gitId":"geraldngjx"},"content":"     * @param task The task to be marked as not done.","lastModifiedDate":"2023-08-28"},{"lineNumber":554,"author":{"gitId":"geraldngjx"},"content":"     * @param taskIdx  The index of the task in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":555,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of marking the task as not done.","lastModifiedDate":"2023-09-10"},{"lineNumber":556,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":557,"author":{"gitId":"geraldngjx"},"content":"    public String unmarkCompletion(Task task, int taskIdx) {","lastModifiedDate":"2023-09-10"},{"lineNumber":558,"author":{"gitId":"geraldngjx"},"content":"        if (task.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":559,"author":{"gitId":"geraldngjx"},"content":"            String message \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":560,"author":{"gitId":"geraldngjx"},"content":"            message +\u003d \"\\t\" + task;","lastModifiedDate":"2023-09-04"},{"lineNumber":561,"author":{"gitId":"geraldngjx"},"content":"            return message;","lastModifiedDate":"2023-09-04"},{"lineNumber":562,"author":{"gitId":"geraldngjx"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":563,"author":{"gitId":"geraldngjx"},"content":"            String message \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":564,"author":{"gitId":"geraldngjx"},"content":"            task.toggleCompletion();","lastModifiedDate":"2023-08-27"},{"lineNumber":565,"author":{"gitId":"geraldngjx"},"content":"            String updatedTaskString \u003d task.fileFormat();","lastModifiedDate":"2023-08-27"},{"lineNumber":566,"author":{"gitId":"geraldngjx"},"content":"            this.taskStorage.updateTask(taskIdx - 1, updatedTaskString);","lastModifiedDate":"2023-09-10"},{"lineNumber":567,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":568,"author":{"gitId":"geraldngjx"},"content":"            message +\u003d \"\\t\" + task;","lastModifiedDate":"2023-09-04"},{"lineNumber":569,"author":{"gitId":"geraldngjx"},"content":"            return message;","lastModifiedDate":"2023-09-04"},{"lineNumber":570,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":571,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":572,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":573,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":574,"author":{"gitId":"geraldngjx"},"content":"     * Deletes a task from the task list and updates the storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":575,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":576,"author":{"gitId":"geraldngjx"},"content":"     * @param taskIdx The index of the task in the task list to be deleted.","lastModifiedDate":"2023-09-10"},{"lineNumber":577,"author":{"gitId":"geraldngjx"},"content":"     * @return A message indicating the success of deleting the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":578,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":579,"author":{"gitId":"geraldngjx"},"content":"    public String deleteTask(Integer taskIdx) {","lastModifiedDate":"2023-09-10"},{"lineNumber":580,"author":{"gitId":"geraldngjx"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":581,"author":{"gitId":"geraldngjx"},"content":"        Task selectedTask \u003d taskList.remove(taskIdx - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":582,"author":{"gitId":"geraldngjx"},"content":"        this.taskStorage.updateTask(taskIdx - 1, null);","lastModifiedDate":"2023-09-10"},{"lineNumber":583,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":584,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d \"\\t\" + selectedTask;","lastModifiedDate":"2023-09-04"},{"lineNumber":585,"author":{"gitId":"geraldngjx"},"content":"        message +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":586,"author":{"gitId":"geraldngjx"},"content":"        return message;","lastModifiedDate":"2023-09-04"},{"lineNumber":587,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":588,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":589,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":590,"author":{"gitId":"geraldngjx"},"content":"     * Finds tasks that match a specified keyword and displays them.","lastModifiedDate":"2023-08-28"},{"lineNumber":591,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":592,"author":{"gitId":"geraldngjx"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-08-28"},{"lineNumber":593,"author":{"gitId":"geraldngjx"},"content":"     * @return A String containing the list of matching tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":594,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":595,"author":{"gitId":"geraldngjx"},"content":"    private String findTasks(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":596,"author":{"gitId":"geraldngjx"},"content":"        List\u003cTask\u003e matchingTasks \u003d taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2023-09-10"},{"lineNumber":597,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":598,"author":{"gitId":"geraldngjx"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":599,"author":{"gitId":"geraldngjx"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":600,"author":{"gitId":"geraldngjx"},"content":"            listString +\u003d (i + 1) + \". \" + matchingTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":601,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":602,"author":{"gitId":"geraldngjx"},"content":"        return listString;","lastModifiedDate":"2023-09-10"},{"lineNumber":603,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":604,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"geraldngjx":604}},{"path":"src/main/java/geraldbot/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.util;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"     * @param taskList The initial list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"        assert this.taskList !\u003d null : \"Task list cannot be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"        assert task !\u003d null : \"Task to be added cannot be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"     * Removes and returns the task at the specified index.","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"     * @param taskIdx The index of the task to be removed.","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"     * @return The removed task.","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"    public Task remove(int taskIdx) {","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"        assert taskIdx \u003e\u003d 0 \u0026\u0026 taskIdx \u003c taskList.size() : \"Invalid task index.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"        return this.taskList.remove(taskIdx);","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"geraldngjx"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"geraldngjx"},"content":"     * @param taskIdx The index of the task to be retrieved.","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"geraldngjx"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"geraldngjx"},"content":"    public Task get(int taskIdx) {","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"geraldngjx"},"content":"        assert taskIdx \u003e\u003d 0 \u0026\u0026 taskIdx \u003c taskList.size() : \"Invalid task index.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"geraldngjx"},"content":"        return this.taskList.get(taskIdx);","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"geraldngjx"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"geraldngjx"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"geraldngjx"},"content":"    public int size() {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"geraldngjx"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"geraldngjx"},"content":"     * Finds tasks in the list that match the specified keyword in their descriptions.","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"geraldngjx"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"geraldngjx"},"content":"     * @return A list of tasks matching the keyword.","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"geraldngjx"},"content":"    public List\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"geraldngjx"},"content":"        assert keyword !\u003d null : \"Keyword for task search cannot be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"geraldngjx"},"content":"        return taskList.stream()","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"geraldngjx"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"geraldngjx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"geraldngjx":78}},{"path":"src/main/java/geraldbot/util/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.util;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Todo;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":" * Handles reading and writing tasks to the task storage file.","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"public class TaskStorage {","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"    private File file;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"     * @param path The path to the task storage file.","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"    public TaskStorage(String path) {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"            createFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"     * Returns the storage file.","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"     * @return The storage file.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"    public File getFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"        return this.file;","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"     * Creates a new file if it does not exist and also creates parent directories if needed.","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"geraldngjx"},"content":"    private void createFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"geraldngjx"},"content":"        File parentFolder \u003d this.file.getParentFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"geraldngjx"},"content":"        if (!parentFolder.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"            parentFolder.mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"geraldngjx"},"content":"            if (this.file.createNewFile()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"geraldngjx"},"content":"                System.out.println(\"File has been created successfully: \" + this.file.getPath());","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(\"There is an error creating the file.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"geraldngjx"},"content":"     * Reads tasks from the storage file.","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"geraldngjx"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"geraldngjx"},"content":"    public ArrayList\u003cTask\u003e read() {","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"geraldngjx"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"geraldngjx"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"geraldngjx"},"content":"                String[] line \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"geraldngjx"},"content":"                String[] task \u003d new String[line.length];","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"geraldngjx"},"content":"                for (int i \u003d 0; i \u003c line.length; i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"geraldngjx"},"content":"                    task[i] \u003d line[i].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"geraldngjx"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"geraldngjx"},"content":"                if (task[0].equals(\"T\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"geraldngjx"},"content":"                    taskList.add(new Todo(task[2], task[1].equals(\"1\")));","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"geraldngjx"},"content":"                } else if (task[0].equals(\"D\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"geraldngjx"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(task[3]);","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"geraldngjx"},"content":"                    taskList.add(new Deadline(task[2], task[1].equals(\"1\"), deadline));","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"geraldngjx"},"content":"                } else if (task[0].equals(\"E\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"geraldngjx"},"content":"                    String[] timeframe \u003d task[3].split(\"-\");","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"geraldngjx"},"content":"                    taskList.add(new Event(task[2], task[1].equals(\"1\"), timeframe[0], timeframe[1]));","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"geraldngjx"},"content":"                } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"geraldngjx"},"content":"                    System.out.println(\"Unknown task type: \" + task[0]);","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"geraldngjx"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"geraldngjx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"geraldngjx"},"content":"            createFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"geraldngjx"},"content":"        return taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"geraldngjx"},"content":"     * Adds a task in file format to the storage file.","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"geraldngjx"},"content":"     * @param fileFormat The formatted task to add.","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"geraldngjx"},"content":"    public void addTask(String fileFormat) {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"geraldngjx"},"content":"            FileWriter fw \u003d new FileWriter(this.file, true);","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"geraldngjx"},"content":"            if (this.file.length() !\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"geraldngjx"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"geraldngjx"},"content":"            fw.write(fileFormat);","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"geraldngjx"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"geraldngjx"},"content":"     * Updates a task in the storage file.","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"geraldngjx"},"content":"     * @param index The index of the task to update.","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"geraldngjx"},"content":"     * @param updatedFile The updated task in file format.","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"geraldngjx"},"content":"    public void updateTask(int index, String updatedFile) {","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"geraldngjx"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"geraldngjx"},"content":"            ArrayList\u003cString\u003e updatedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"geraldngjx"},"content":"            int idx \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"geraldngjx"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"geraldngjx"},"content":"                String currTask \u003d sc.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"geraldngjx"},"content":"                if (idx !\u003d index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"geraldngjx"},"content":"                    updatedTaskList.add(currTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"geraldngjx"},"content":"                } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"geraldngjx"},"content":"                    if (updatedFile !\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"geraldngjx"},"content":"                        updatedTaskList.add(updatedFile);","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"geraldngjx"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"geraldngjx"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"geraldngjx"},"content":"                idx++;","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"geraldngjx"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"geraldngjx"},"content":"            sc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"geraldngjx"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"geraldngjx"},"content":"            fw.write(String.join(\"\\n\", updatedTaskList));","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"geraldngjx"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"geraldngjx":159}},{"path":"src/main/java/geraldbot/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.util;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":" * Represents the user interface for interacting with GeraldBot.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"     * Returns the next line of user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"     * @return The next line of user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"    public String greet() {","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"        return \"Hello! I\u0027m GeraldBot\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"     * Returns the next line of user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"     * @return The next line of user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"    public String bye() {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"geraldngjx":24}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"geraldngjx":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"geraldbot.MainWindow\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"geraldngjx":19}},{"path":"src/test/java/geraldbot/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.util;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.exception.DukeInvalidCommandException;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.person.Person;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Todo;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"    public void parse_todoCommand_successfullyAdded() {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"testData/testStorageData.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"        ContactStorage contactStorage \u003d new ContactStorage(\"testData/testContactStorageData.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cPerson\u003e contactList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"        Parser parser \u003d new Parser(taskStorage, contactStorage, taskList, contactList);","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"        String input \u003d \"todo Buy groceries\";","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(input));","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"        assertTrue(taskList.get(0) instanceof Todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"    public void parse_deadlineCommand_successfullyAdded() {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"testData/testStorageData.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"        ContactStorage contactStorage \u003d new ContactStorage(\"testData/testContactStorageData.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cPerson\u003e contactList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"        Parser parser \u003d new Parser(taskStorage, contactStorage, taskList, contactList);","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"        String input \u003d \"deadline Submit report /by 16/03/2020 1800\";","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(input));","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"geraldngjx"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"geraldngjx"},"content":"        assertTrue(taskList.get(0) instanceof Deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"geraldngjx"},"content":"    public void parse_eventCommand_successfullyAdded() {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"testData/testStorageData.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"geraldngjx"},"content":"        ContactStorage contactStorage \u003d new ContactStorage(\"testData/testContactStorageData.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cPerson\u003e contactList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"geraldngjx"},"content":"        Parser parser \u003d new Parser(taskStorage, contactStorage, taskList, contactList);","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"geraldngjx"},"content":"        String input \u003d \"event Team meeting /Monday 2pm/ 4pm\";","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"geraldngjx"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(input));","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"geraldngjx"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"geraldngjx"},"content":"        assertTrue(taskList.get(0) instanceof Event);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"geraldngjx"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"geraldngjx"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"testData/testStorageData.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"geraldngjx"},"content":"        ContactStorage contactStorage \u003d new ContactStorage(\"testData/testContactStorageData.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cPerson\u003e contactList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"geraldngjx"},"content":"        Parser parser \u003d new Parser(taskStorage, contactStorage, taskList, contactList);","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"geraldngjx"},"content":"        String input \u003d \"invalid_command\";","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"geraldngjx"},"content":"        assertThrows(DukeInvalidCommandException.class, () -\u003e parser.parse(input));","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"geraldngjx"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"geraldngjx"},"content":"    public void parse_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"testData/testStorageData.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"geraldngjx"},"content":"        ContactStorage contactStorage \u003d new ContactStorage(\"testData/testContactStorageData.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cPerson\u003e contactList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"geraldngjx"},"content":"        Parser parser \u003d new Parser(taskStorage, contactStorage, taskList, contactList);","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"geraldngjx"},"content":"        String input \u003d \"todo \";","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"geraldngjx"},"content":"        assertThrows(DukeInvalidCommandException.class, () -\u003e parser.parse(input));","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"geraldngjx":89}},{"path":"src/test/java/geraldbot/util/TaskStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"package geraldbot.util;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"geraldngjx"},"content":"import geraldbot.task.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"geraldngjx"},"content":"public class TaskStorageTest {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"geraldngjx"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"geraldngjx"},"content":"    public void read_emptyFile_emptyTaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage taskStorage \u003d initializeStorage();","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskStorage.read();","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"geraldngjx"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"geraldngjx"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"geraldngjx"},"content":"    public void read_existingFile_correctTaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage taskStorage \u003d initializeStorage();","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cString\u003e testData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"geraldngjx"},"content":"        testData.add(\"T | 1 | Buy groceries\");","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"geraldngjx"},"content":"        testData.add(\"D | 0 | Submit report | 2023-08-31T18:00\");","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"geraldngjx"},"content":"        testData.add(\"E | 0 | Team meeting | 2023-08-27T14:00-16:00\");","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"geraldngjx"},"content":"            TaskStorageTest.writeTestDataToFile(taskStorage, testData);","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"geraldngjx"},"content":"            fail(\"Failed to write test data to file\");","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskStorage.read();","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"geraldngjx"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"geraldngjx"},"content":"        assertTrue(taskList.get(0) instanceof Todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"geraldngjx"},"content":"        assertTrue(taskList.get(1) instanceof Deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"geraldngjx"},"content":"        assertTrue(taskList.get(2) instanceof Event);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"geraldngjx"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"geraldngjx"},"content":"    public void addTask_validTask_successfullyAdded() {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage storage \u003d initializeStorage();","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"geraldngjx"},"content":"        Task newTask \u003d new Todo(\"Read a book\", false);","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"geraldngjx"},"content":"        String fileFormat \u003d newTask.fileFormat();","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"geraldngjx"},"content":"        storage.addTask(fileFormat);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d storage.read();","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"geraldngjx"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"geraldngjx"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"geraldngjx"},"content":"    public void updateTask_validIndex_updatedSuccessfully() {","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage taskStorage \u003d initializeStorage();","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cString\u003e testData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"geraldngjx"},"content":"        testData.add(\"T | 0 | Buy groceries\");","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"geraldngjx"},"content":"            TaskStorageTest.writeTestDataToFile(taskStorage, testData);","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"geraldngjx"},"content":"            fail(\"Failed to write test data to file\");","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"geraldngjx"},"content":"        String updatedTaskFileFormat \u003d \"T | 1 | Buy groceries\";","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"geraldngjx"},"content":"        taskStorage.updateTask(0, updatedTaskFileFormat);","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"geraldngjx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskStorage.read();","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"geraldngjx"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"geraldngjx"},"content":"        assertEquals(\"X\", taskList.get(0).getStatusIcon());","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"geraldngjx"},"content":"    private TaskStorage initializeStorage() {","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"geraldngjx"},"content":"        String testFilePath \u003d \"./testData/testStorageData.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"geraldngjx"},"content":"        TaskStorage storage \u003d new TaskStorage(testFilePath);","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"geraldngjx"},"content":"        File file \u003d storage.getFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"geraldngjx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"geraldngjx"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"geraldngjx"},"content":"            fw.write(\"\");","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"geraldngjx"},"content":"            fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"geraldngjx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"geraldngjx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"geraldngjx"},"content":"        return storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"geraldngjx"},"content":"    private static void writeTestDataToFile(TaskStorage taskStorage, ArrayList\u003cString\u003e testData) throws IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"geraldngjx"},"content":"        File testFile \u003d new File(taskStorage.getFile().getPath());","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"geraldngjx"},"content":"        if (!testFile.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"geraldngjx"},"content":"            testFile.getParentFile().mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"geraldngjx"},"content":"            testFile.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"geraldngjx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"geraldngjx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"geraldngjx"},"content":"        FileWriter fw \u003d new FileWriter(testFile);","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"geraldngjx"},"content":"        fw.write(String.join(\"\\n\", testData));","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"geraldngjx"},"content":"        fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"geraldngjx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"geraldngjx"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"geraldngjx":111}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"geraldngjx"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"geraldngjx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"geraldngjx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"geraldngjx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"geraldngjx"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"geraldngjx"},"content":"blah","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"geraldngjx"},"content":"mark 99","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"geraldngjx"},"content":"deadline return book","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"geraldngjx"},"content":"delete","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"geraldngjx"},"content":"delete 0","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"geraldngjx"},"content":"delete 3","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"geraldngjx"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"geraldngjx":12}}]
