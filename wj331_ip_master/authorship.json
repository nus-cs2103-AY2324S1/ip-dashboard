[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"javafx {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"    version \u003d \"17\"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"checkstyle {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wj331":25,"-":42}},{"path":"data/TaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"[T] | 0 | read book","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"[D] | 1 | return book | sunday","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"[E] | 0 | kpop | (from: 12pm to: 6pm)","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"wj331":3}},{"path":"src/main/java/duke/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * AddTask class with a task field which we want to add","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":" * @author wj331","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"public class AddTask extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    private Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    private String notAddedProperly \u003d \"Task not added properly\";","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"     * Constructor for an AddTask command","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"     * @param task the task which we are adding","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    public AddTask(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"            int taskNumberBef \u003d tasks.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"            tasks.add(this.task);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"            int taskNumberAft \u003d tasks.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"            assert taskNumberAft \u003d\u003d taskNumberBef + 1 : this.notAddedProperly;","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"            return ui.addedMessage(this.task, tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        return this.task.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":40}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * Command class that represents what a user wants to do","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":" * @author wj331","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"     * To execute itself","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"     * @param tasks the TaskLists that stores all the tasks of the bot","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"     * @param ui the UI that does all printing messages","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"     * @param storage the storage that reads and writes info into the file","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidInputException;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"     * To determine if this task should break the while loop","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"     * @return boolean value false since it should not break","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":22}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" * Deadline class with 2 private fields, its deadline and symbol","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":" * @author wj331","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    private static final String SYMBOL \u003d \"[D]\";","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    private String deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"     * Constructor for Deadline Task","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"     * @param name Name of the deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"     * @param deadline Deadline of the deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        verifyDeadline(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    public void update(String changeDetails) throws InvalidInputException {","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        String[] details \u003d changeDetails.split(\" /by \");","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"        String newName \u003d details[0];","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        String newDeadline;","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"            newDeadline \u003d details[1];","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"            throw new InvalidInputException(\"Please update with a valid deadline\");","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        this.setName(newName);","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"        verifyDeadline(newDeadline);","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"     * Parses the deadline if it is in correct format and ignores it otherwise","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"     * @param date Input date of the deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    public void verifyDeadline(String date) {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        //Formats the pattern of our date","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(date, inputFormatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"            String formattedDate \u003d dateTime.format(outputFormatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"            this.deadline \u003d formattedDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"            //Input not in expected format","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"            this.deadline \u003d date;","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"    public String newFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"        return Deadline.SYMBOL + \" | \" + this.getInt() + \" | \" + this.getName() + \" | \" + this.deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        return Deadline.SYMBOL + this.getCheckbox() + this.getName() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"     * Gets the deadline of deadline object","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"     * @return String value of the deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"        return this.deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wj331":72}},{"path":"src/main/java/duke/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * Delete Task class with int index that represents which task in TaskList to delete","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":" * @author wj331","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"public class DeleteTask extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    private int indexToDelete;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    private String notDeletedProperly \u003d \"Task not deleted properly\";","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"     * Constructor for DeleteTask","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"     * @param indexToDelete the index of task we want to delete from TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    public DeleteTask(int indexToDelete) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        this.indexToDelete \u003d indexToDelete;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        if (indexToDelete \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"            throw new InvalidInputException(\"OOPS!!! Too few tasks\");","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        int listSizeBef \u003d tasks.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        Task tsk \u003d tasks.get(this.indexToDelete);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"        tasks.remove(this.indexToDelete);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        int listSizeAft \u003d tasks.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"        //Ensures a change in size of list","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        assert listSizeBef \u003d\u003d listSizeAft + 1 : this.notDeletedProperly;","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"            ui.printException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        return ui.deletedMessage(tsk);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        } else if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"            if (obj instanceof DeleteTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"                DeleteTask deletetask \u003d (DeleteTask) obj;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"                return this.indexToDelete \u003d\u003d deletetask.indexToDelete;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":57}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"wj331":61}},{"path":"src/main/java/duke/DoneTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * DoneTask command that contains index of Task we want to mark done","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":" * @author wj331","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"public class DoneTask extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    private int taskDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    private String notMarkedProperly \u003d \"Task is not marked completed properly\";","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"     * Constructor for DoneTask","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"     * @param taskDone the index of the task in the TaskList we want to mark done","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    public DoneTask(int taskDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        this.taskDone \u003d taskDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        if (taskDone \u003e tasks.size()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"            throw new InvalidInputException(\"OOPS!!! Too few tasks\");","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        tasks.get(this.taskDone).setCompleted();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"        assert tasks.get(this.taskDone).getCheckbox().equals(\"[X] \") : this.notMarkedProperly;","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"            ui.printException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        return ui.completedMessage(this.taskDone, tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":39}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":" * Duke bot class with a storage, TaskList and Ui","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":" * @author wj331","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/clown.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"     * Constructor of Duke class","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"     * @param filePath the path to the file we want to write to/load from","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        //Step 1 (Setting everything up)","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"        //Step 2 (Configuring the chatbot)","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"        stage.setTitle(\"CHATBOT\");","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"        //Step 3 (Adding functionality to handle user input)","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"        //Step 4 (Scroll down automatically for space)","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"        //scrolls down to end everytime dialogContainer\u0027s height changes","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"                DialogBox.getDukeDialog(dukeText, duke));","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"     * Gets the input and parses it","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"     * @param input the input of the user","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"     * @return String message that is the response of the bot","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"wj331"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"wj331"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"wj331"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"wj331"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"wj331"},"content":"     * run method to trigger while loop to get responses from user","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"wj331"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"wj331"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"wj331"},"content":"        System.out.println(ui.greet());","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"wj331"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"wj331"},"content":"                //activates scanner","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"wj331"},"content":"                String input \u003d ui.getCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"wj331"},"content":"                //handle the input from user","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"wj331"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"wj331"},"content":"                System.out.println(command.execute(tasks, ui, storage));","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"wj331"},"content":"                if (command.isExit()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"wj331"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"wj331"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"wj331"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"wj331"},"content":"                ui.printException(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"wj331"},"content":"        ui.byeGreetings();","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"wj331"},"content":"     * Main method of our Duke Chat bot","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"wj331"},"content":"     * @param args empty String array","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"wj331"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"wj331"},"content":"        new Duke(Storage.getRelativePath() + \"\\\\TaskList.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wj331":176,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":" * Event class that is a Task with fields startTime, endTime and a symbol","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"    private static final String SYMBOL \u003d \"[E]\";","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"    private String startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    private String endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"     * Constructor for Event task","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"     * @param name name of the Event task","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"     * @param startTime start time of the event","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"     * @param endTime end time of the event","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"     * To get details of start time \u0026 end time of the event","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"     * @return String that contains the start and end time in a specific format","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        return \"(from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        return Event.SYMBOL + this.getCheckbox() + this.getName() + \" \" + this.getDetails();","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    public String newFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        return Event.SYMBOL + \" | \" + this.getInt() + \" | \" + this.getName() + \" | \" + this.getDetails();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    public void update(String details) throws InvalidInputException {","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        String[] eventDetails \u003d details.split(\" /from \");","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        String[] timings;","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"            timings \u003d eventDetails[1].split(\" /to \");","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"            throw new InvalidInputException(\"Please provide valid timings\");","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        String newName;","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        String newStartTime;","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        String newEndTime;","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"            newName \u003d eventDetails[0];","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"            throw new InvalidInputException(\"Please update with a new name\");","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"            newStartTime \u003d timings[0];","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"            newEndTime \u003d timings[1];","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"            throw new InvalidInputException(\"Please provide the timings to update with\");","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"        this.setName(newName);","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"        this.startTime \u003d newStartTime;","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        this.endTime \u003d newEndTime;","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wj331":64}},{"path":"src/main/java/duke/ExitTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * ExitTask class that is a command of a user","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"public class ExitTask extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"        ui.closeScanner();","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"        return ui.exitMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        } else if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"            return obj instanceof ExitTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":29}},{"path":"src/main/java/duke/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * FindTask class with a field keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"public class FindTask extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"    private String keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"     * Constructor for FindTask object","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"     * @param keyword String which we are looking for in the task","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    public FindTask(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        TaskList found \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"        for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"            Task task \u003d lst.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"            String name \u003d task.getName();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"            String[] info \u003d name.split(\"\\\\s+\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"            for (int j \u003d 0; j \u003c info.length; j++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"                if (info[j].equalsIgnoreCase(this.keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"                    found.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        return ui.foundMessage(found);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wj331":36}},{"path":"src/main/java/duke/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * InvalidInputException class that is thrown whenever there is InvalidInput","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wj331":11}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"wj331":12}},{"path":"src/main/java/duke/ListTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * ListTask class that is a possible command from the user","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"public class ListTask extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"        return ui.listMessage(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    private Duke duke \u003d new Duke(Storage.getRelativePath() + \"\\\\TaskList.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"wj331":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/clown.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"wj331":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * Parser class that takes in input from user and parse it accordingly to a command using switch","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"     * Parse function to parse input from user","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"     * @param input String input from the user","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"     * @return Command object depending on result of the parse","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"     * @throws InvalidInputException exception whenever input given is unable to be parsed","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    public static Command parse(String input) throws InvalidInputException {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"        String[] words \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"        String command \u003d words[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"        switch(command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"            return new ExitTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"            return new ListTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"            return new DeleteTask(Integer.valueOf(words[1]) - 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"            return new DoneTask(Integer.valueOf(words[1]) - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"            return new UndoTask(Integer.valueOf(words[1]) - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"                String name \u003d words[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"                throw new InvalidInputException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"            Task task \u003d new ToDo(input.substring(5));","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"            return new AddTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"                String nameOfDeadline \u003d words[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"                throw new InvalidInputException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"            String deadlineInfo \u003d input.substring(9);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"            String[] stringInfo \u003d deadlineInfo.split(\" /by \");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"            String deadlineTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"                deadlineTime \u003d stringInfo[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"                throw new InvalidInputException(\"OOPS!!! Please provide a valid deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"            Task deadline \u003d new Deadline(stringInfo[0], deadlineTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"            return new AddTask(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"                String nameOfEvent \u003d words[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"                throw new InvalidInputException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"            String eventInfo \u003d input.substring(6);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"            String[] eventDetails \u003d eventInfo.split(\" /from \");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"            String[] timings;","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"                timings \u003d eventDetails[1].split(\" /to \");","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"                throw new InvalidInputException(\"Please provide a valid timing\");","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"            String startTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"            String endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"                startTime \u003d timings[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"                throw new InvalidInputException(\"OOPS!!! Please provide a valid start time\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"                endTime \u003d timings[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"                throw new InvalidInputException(\"OOPS!!! Please provide a valid end time\");","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"            Task event \u003d new Event(eventDetails[0], startTime, endTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"            return new AddTask(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"        case \"find\":","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"            String keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"                keyword \u003d words[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"                throw new InvalidInputException(\"OOPS!!! Please specify what you want to find\");","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"            return new FindTask(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"        case \"update\":","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"            int indexToUpdate;","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"                indexToUpdate \u003d Integer.valueOf(words[1]);","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"                throw new InvalidInputException(\"OOPS!! Please specify what you want to update with\");","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"            String updateDetails \u003d input.substring(9);","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"            return new UpdateTask(indexToUpdate, updateDetails);","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"            throw new InvalidInputException(\"OOPS! I\u0027m sorry I don\u0027t know what that means\"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"                    + \"\\nPlease insert a valid type first\");","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":103}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":" * Storage class that is used to read and write files.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    private static String relativePath \u003d \"C:\\\\Users\\\\wenji\\\\OneDrive\\\\Desktop\\\\Y2S1\\\\\"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"            + \"CS2103T\\\\CS2103T projects\\\\ip\\\\data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    private String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"     * Writes tasks from TaskList into the file","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"     * @param lst the TaskList we want to copy from","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"     * @throws InvalidInputException the exception thrown if we receive an InvalidInputException while copying","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    public void saveTasks(TaskList lst) throws InvalidInputException {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"            Path folderPath \u003d Paths.get(relativePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"            if (!Files.exists(folderPath)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"                //file does not exist","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"                System.out.println(\"Data folder does not exist, Creating one now\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"                    Files.createDirectories(folderPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"                    ui.printException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"            //folder does exist","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"            Path filePath \u003d Paths.get(relativePath , \"TaskList.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"                //file does not exist","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"                System.out.println(\"File does not exist, Creating one now\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"                    Files.createFile(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"                    ui.printException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"            //file exists","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"            File file \u003d filePath.toFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"            FileWriter writer \u003d new FileWriter(file, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"            for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"                writer.write(lst.get(i).newFormat() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"            writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"            ui.printException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"     * Loads an existing file into a new TaskList object.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"     * @return new TaskList object loaded","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"     * @throws InvalidInputException an exception thrown whenever input is invalid","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"    public List\u003cTask\u003e load() throws InvalidInputException {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"                String info \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"                String[] taskDetails \u003d info.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"                if (taskDetails[0].equals(\"[T]\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"                    Task tsk \u003d new ToDo(taskDetails[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"                    list.add(tsk);","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"                    if (taskDetails[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"                        list.get(list.size() - 1).setCompleted();","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"                } else if (taskDetails[0].equals(\"[D]\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"                    list.add(new Deadline(taskDetails[2], taskDetails[3]));","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"                    if (taskDetails[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"                        list.get(list.size() - 1).setCompleted();","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"                } else if (taskDetails[0].equals(\"[E]\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"                    list.add(new Event(taskDetails[2], taskDetails[3], taskDetails[4]));","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"                    if (taskDetails[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"                        list.get(list.size() - 1).setCompleted();","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"            sc.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"            ui.printException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"        return list;","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"     * Gets relative path","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"     * @return String instance of relative path","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"    public static String getRelativePath() {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"        return Storage.relativePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":114}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * Task class that contains field such as name, completed and done \u0026 undone checkboxes","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"public class Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"    private static final String DONECHECKBOX \u003d \"[X] \";","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    private static final String UNDONECHECKBOX \u003d \"[ ] \";","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    private static final String completedNumber \u003d \"1\";","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    private static final String unCompletedNumber \u003d \"0\";","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"    private String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    //Getters \u0026 Setters","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    public String getName() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        return this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    public void setCompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    public void setUncompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    public void update(String details) throws InvalidInputException {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"     * Returns the correct checkbox according to the task completion","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"     * @return String value of checkbox","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    public String getCheckbox() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"            return Task.DONECHECKBOX;","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        return Task.UNDONECHECKBOX;","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"    public String newFormat() {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        return \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"     * Returns string value of int based on completion","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"     * @return String value 1 if completed and 0 otherwise","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"    public String getInt() {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"            return Task.completedNumber;","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"            return Task.unCompletedNumber;","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"     * Returns confirmation message when a task is successfully added.","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"     * @param size the length of the TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"     * @return String of confirmation message","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"    public String confirmation(int size) {","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"        String s1 \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"        String s2 \u003d \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"        return s1 + this.toString() + \"\\n\" + s2;","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"     * Returns confirmation message when a task is succesfully deleted.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"     * @return String of deletion message","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"    public String removed() {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"        String s1 \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"        return (s1 + \"\\n\" + this.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"     * Executes the current task","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"     * @param lst the TaskList object we are adding this task to","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"     * @return empty String","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"        return \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wj331":91}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" * TaskList class that contains the list of Tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    private List\u003cTask\u003e lst;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"     * Constructor for TaskList object","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"        this.lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     * Overloaded constructor for TaskList Object","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"     * @param listOfTasks the List we want to import from initially","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    public TaskList(List\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        this.lst \u003d listOfTasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"        return lst.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        lst.remove(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    public int size() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        return this.lst.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        this.lst.add(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":42}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":" * To-Do class that has 2 fields, its symbol and name","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"    private static final String SYMBOL \u003d \"[T]\";","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"     * Constructor for a To-Do task","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"     * @param name name of the To-Do object","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        return ToDo.SYMBOL + this.getCheckbox() + this.getName();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    public String newFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        return ToDo.SYMBOL + \" | \" + this.getInt() + \" | \" + this.getName();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    public void update(String changeDetails) throws InvalidInputException {","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        this.setName(changeDetails);","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wj331":27}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":" * Ui class mainly used for printing.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    private String name \u003d \" ____    __        __       \\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"            + \"|  _ \\\\   | |  ____ | | __\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"            + \"| | | |  | | |     | |/ /\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"            + \"| |_| |  | | |     |   \u003c \\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"            + \"|____/   ___  ____ |_|\\\\_\\\\\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"     * To print the message of Exception objects","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"     * @param exceptionMessage the message from the Exception objects","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    public void printException(String exceptionMessage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        System.out.println(exceptionMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"     * Lists all the tasks present in the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"     * @param lst the TaskList we want to be iterating through","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"     * @return String instance of all tasks in the TaskList","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    public String listMessage(TaskList lst) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"            Task task \u003d lst.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"            output.append(\"\\n\").append(String.valueOf(i + 1)).append(\".\").append(task.toString());","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        return output.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    public String exitMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        this.sc.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"     * Prints confirmation message when something is unmarked","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"     * @param index the index of the task we want to undo","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"     * @param lst TaskList containing all the tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"     * @return String confirmation for something marked undone","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"    public String uncompletedMessage(int index, TaskList lst) {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        Task tsk \u003d lst.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        String s1 \u003d \"OK, I\u0027ve marked this task as not done yet: \\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        return s1 + tsk.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"     * Prints confirmation message when something is marked","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"     * @param index the index of the task completed","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"     * @param lst TaskList containing all the tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"     * @return String instance to confirm something marked done","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"    public String completedMessage(int index, TaskList lst) {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        Task tsk \u003d lst.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"        String s1 \u003d \"Nice! I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"        return s1 + tsk.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"     * Prints a confirmation message once a Task has been deleted","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"     * @param task Task to be removed","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"     * @return String instance to confirm Task is removed","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"    public String deletedMessage(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"        return task.removed();","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"     * Prints a confirmation message once a Task has been deleted","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"     * @param tsk The task added to the list","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"     * @param lst TaskList containing all the tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"     * @return String instance to confirm Task is added","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"    public String addedMessage(Task tsk, TaskList lst) {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"        return tsk.confirmation(lst.size());","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"    public String getCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"    public String byeGreetings() {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"    public String greet() {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"        return \"Hello from \\n \" + this.name + \"What can I do for you? \";","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"     * Prints the message for the tasks found based on keyword","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"     * @param found TaskList of all the tasks with the keyword","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"     * @return String instance of all Tasks that match keyword","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"    public String foundMessage(TaskList found) {","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"        String s1 \u003d \"Here are the matching tasks in your lists:\";","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"        for (int i \u003d 0; i \u003c found.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"            Task task \u003d found.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"            s1 \u003d s1 + \"\\n\" + String.valueOf(i + 1) + \".\" + task.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"        return s1;","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"    public String updatedMessage(TaskList list, int index) {","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"        return \"Task \" + \"\\\"\" + list.get(index).getName() + \"\\\"\" + \" has been updated successfully\";","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":113}},{"path":"src/main/java/duke/UndoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * UndoTask class that contains the index for task to undo","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"public class UndoTask extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"    private int taskToUndo;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    private String notUnmarkedProperly \u003d \"Task not marked undone properly\";","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"     * Constructor for UndoTask command","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"     * @param taskToUndo the integer in the TaskList which we want to undo","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    public UndoTask(int taskToUndo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"        this.taskToUndo \u003d taskToUndo;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        lst.get(taskToUndo).setUncompleted();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"        assert lst.get(taskToUndo).getCheckbox().equals(\"[ ] \") : this.notUnmarkedProperly;","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"            storage.saveTasks(lst);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"        return ui.uncompletedMessage(taskToUndo, lst);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wj331":33}},{"path":"src/main/java/duke/UpdateTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"public class UpdateTask extends Command{","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"    private int taskToUpdate;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"    private String changeDetails;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"    public UpdateTask(int taskToUpdate, String changeDetails) {","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"        this.taskToUpdate \u003d taskToUpdate - 1;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"        this.changeDetails \u003d changeDetails;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"            Task task \u003d tasks.get(taskToUpdate);","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"            if (this.changeDetails.isEmpty()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"                throw new InvalidInputException(\"Please provide proper details\");","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"            task.update(this.changeDetails);","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"            return ui.updatedMessage(tasks, this.taskToUpdate);","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"        } catch (InvalidInputException e){","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"        return false;","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"wj331":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"wj331":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"wj331":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    public void verifyDeadlineTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"        Deadline tsk \u003d new Deadline(\"return book\", \"2019-10-12 1800\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"        assertEquals(tsk.getDeadline(), \"Oct 12 2019\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    public void completedTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"        Deadline tsk \u003d new Deadline(\"return book\", \"by Sunday\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        tsk.setCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"        assertEquals(tsk.getCheckbox(), \"[X] \");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wj331":20}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"public class EventTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    public void verifyTimeTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"        Event tsk \u003d new Event(\"taylor swift concert\", \"12pm\", \"6pm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"        assertEquals(tsk.getDetails(), \"(from: 12pm to: 6pm)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    public void completedTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"        Event tsk \u003d new Event(\"taylor swift concert\", \"12pm\", \"6pm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        tsk.setCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"        assertEquals(tsk.getCheckbox(), \"[X] \");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wj331":20}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    public void exitTest() throws InvalidInputException {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"        Command c \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"        ExitTask tsk \u003d new ExitTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"        assertEquals(tsk, c);","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    public void deleteTest() throws InvalidInputException {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        Command c \u003d Parser.parse(\"delete 3\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"        DeleteTask tsk \u003d new DeleteTask(3);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        assertEquals(tsk, c);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wj331":21}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    public void doneTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"        ToDo tsk \u003d new ToDo(\"sleep\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"        tsk.setCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"        assertEquals(\"[X] \", tsk.getCheckbox());","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    public void executeTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        TaskList lst \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        ToDo tsk \u003d new ToDo(\"sleep\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        tsk.execute(lst, ui, storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        assertEquals(1, lst.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wj331":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"deadline finish chapters 1 - 5 /by 2359 tonight","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"event book discussion /from tmrw 10am /to 12pm","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wj331":3}}]
