[{"path":".gitmessage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"Subject line (try to keep under 50 characters)","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"{current situation} -- use present tense}","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"{why it needs to change}","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"{what is being done about it} -- use imperative mood}","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"{why it is done that way}","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"{any other relevant info}","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"note*: wrap each line at maximum 72 characters","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"zacwong2151":13}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zacwong2151":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    toolVersion \u003d \u002710.12.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"task cleanDataContents(type: Delete) {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"    description \u003d \u0027Clean the contents of duke.txt and temp.txt\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    doLast {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"        // Define the paths to the files","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"        def dukeFile \u003d file(\u0027data/duke.txt\u0027)","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"        def tempFile \u003d file(\u0027data/temp.txt\u0027)","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"        // Create empty files to clean the contents","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"        dukeFile.text \u003d \u0027\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"        tempFile.text \u003d \u0027\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"clean.dependsOn cleanDataContents // Make cleanDataContents depend on the clean task","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"    archiveVersion \u003d \"v0.2\"","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zacwong2151":36,"-":42}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":" * one of the Tasks that user\u0027s can add into their list","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"     * Constructor to initialise a Deadline object","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"     * @param description the Task description that is obtained from the Task class","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"     * @param by the deadline time component that is stored as a LocalDateTime","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    private Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + localDatetoString(by) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"        return \"D\" + super.toFileString() + \"| \" + localDatetoString(by);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"     * A method to convert the LocalDateTime to a String in \"MMM d yyyy h:mma\" format","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"     * @param dateTime the stored LocalDateTime","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"     * @return a String","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"    public static String localDatetoString(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\");","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"        String formattedDateTime \u003d dateTime.format(outputFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"        return formattedDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"     * A constructor that takes in a String time component and returns a Deadline with LocalDateTime field","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"     * @param description String description","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"     * @param timeComponent Time component of the Deadline in a form of a String","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"     * @return Deadline object","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException if invalid input for timeComponent","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"    public static Deadline newDeadline(String description, String timeComponent) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"        return new Deadline(description, convertToLocalDateTime(timeComponent));","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"     * A function that takes in the by part of a duke.Deadline duke.Task, and converts it to a LocalDateTime","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027Sunday 1700\u0027 will return the corresponding LocalDateTime","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"     * @param string the by part of the duke.Deadline duke.Task","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"     * @return the LocalDateTime corresponding to the duke.Deadline","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException if a specific time in 24hr format is not put","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"    public static LocalDateTime convertToLocalDateTime(String string) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"        if (string.indexOf(\u0027/\u0027) !\u003d -1) {","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"            // inputs of form \"Date/Month/Year hhmm\", e.g. \"20/9/2023 1840\"","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"            if (string.lastIndexOf(\u0027/\u0027) + 5 \u003e\u003d string.length()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"                // if \"hhmm\" is not present","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"                throw new DukeException(\"put in a time pls\");","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"            LocalDateTime dateTime \u003d parseDateTime(string, \"/\");","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"            return dateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"        } else if (string.indexOf(\u0027-\u0027) !\u003d -1) { //","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"            // inputs of form \"Date-Month-Year hhmm\", e.g. \"20-9-2023 1840\"","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"            if (string.lastIndexOf(\u0027-\u0027) + 3 \u003e\u003d string.length()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"                // if \"hhmm\" is not present","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"                throw new DukeException(\"put in a time pls\");","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"            LocalDateTime dateTime \u003d parseDateTime(string, \"-\");","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"            return dateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"        } else { // \"Mon 1800\"","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"            // problem 1: it goes backwards in time in certain cases","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"            LocalDateTime dateTime \u003d parseDateTime(string, \"NIL\");","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"            return dateTime;","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"     * A function that helps convert a string to a LocalDateTime","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput the by part of the duke.Deadline duke.Task, e.g. \"2/12/2019 1800\"","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"zacwong2151"},"content":"     * @param c whether the duke.Deadline is put in a \u0027-\u0027 format or \u0027/\u0027 format","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"zacwong2151"},"content":"     * @return a LocalDateTime","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException if a specific time in 24hr format is not put","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"zacwong2151"},"content":"    public static LocalDateTime parseDateTime(String userInput, String c) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"zacwong2151"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"zacwong2151"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"Put in a valid time input!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"zacwong2151"},"content":"        String datePart \u003d parts[0];","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"zacwong2151"},"content":"        String timePart \u003d parts[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"zacwong2151"},"content":"        String[] dateComponents;","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"zacwong2151"},"content":"        if (c.equals(\"NIL\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"zacwong2151"},"content":"            int year \u003d LocalDate.now().getYear();","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"zacwong2151"},"content":"            int month \u003d LocalDate.now().getMonth().getValue();","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"zacwong2151"},"content":"            int daysToAdd \u003d -LocalDateTime.now().getDayOfWeek().compareTo(getDayOfWeek(datePart.toUpperCase()));","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"zacwong2151"},"content":"            // compares today\u0027s DAY with the DAY in userInput, and returns the number of days to add","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"zacwong2151"},"content":"            int hour \u003d Integer.parseInt(timePart.substring(0, 2));","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"zacwong2151"},"content":"            int minute \u003d Integer.parseInt(timePart.substring(2, 4));","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"zacwong2151"},"content":"            LocalDate temp \u003d LocalDate.of(year, month, 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"zacwong2151"},"content":"            int maxDaysOfMonth \u003d temp.lengthOfMonth();","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"zacwong2151"},"content":"            // represents the maximum no. of days in that month","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"zacwong2151"},"content":"            int date \u003d LocalDate.now().getDayOfMonth() + daysToAdd;","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"zacwong2151"},"content":"            if (date \u003e maxDaysOfMonth) {","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"zacwong2151"},"content":"                // Date overflows, adjust LocalDateTime to the next month","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"zacwong2151"},"content":"                return LocalDateTime.of(year, month + 1, date - maxDaysOfMonth, hour, minute);","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"zacwong2151"},"content":"            } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"zacwong2151"},"content":"                return LocalDateTime.of(year, month, date, hour, minute);","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"zacwong2151"},"content":"        } else if (c.equals(\"/\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"zacwong2151"},"content":"            dateComponents \u003d datePart.split(\"/\");","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"zacwong2151"},"content":"        } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"zacwong2151"},"content":"            assert c.equals(\"-\") : \"something wrong here!\";","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"zacwong2151"},"content":"            dateComponents \u003d datePart.split(\"-\");","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"zacwong2151"},"content":"        if (dateComponents.length !\u003d 3) {","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"zacwong2151"},"content":"            throw new IllegalArgumentException(\"Invalid date format\");","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"zacwong2151"},"content":"        int date \u003d Integer.parseInt(dateComponents[0]);","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"zacwong2151"},"content":"        int month \u003d Integer.parseInt(dateComponents[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"zacwong2151"},"content":"        int year \u003d Integer.parseInt(dateComponents[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"zacwong2151"},"content":"        int hour \u003d Integer.parseInt(timePart.substring(0, 2));","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"zacwong2151"},"content":"        int minute \u003d Integer.parseInt(timePart.substring(2, 4));","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"zacwong2151"},"content":"        return LocalDateTime.of(year, month, date, hour, minute);","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"zacwong2151"},"content":"     * A function that takes in a user input that is the day of the week and returns the","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"zacwong2151"},"content":"     * corresponding DayOfWeek","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"zacwong2151"},"content":"     * @param string the user input that is a day of the week, e.g. \"sun\", \"Tuesday\", \"Mon\"","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"zacwong2151"},"content":"     * @return the DayOfWeek as an enum","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":149,"author":{"gitId":"zacwong2151"},"content":"    public static DayOfWeek getDayOfWeek(String string) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":150,"author":{"gitId":"zacwong2151"},"content":"        DayOfWeek result;","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"zacwong2151"},"content":"        String day \u003d string.substring(0, 3);","lastModifiedDate":"2023-09-10"},{"lineNumber":152,"author":{"gitId":"zacwong2151"},"content":"        switch(day) {","lastModifiedDate":"2023-09-10"},{"lineNumber":153,"author":{"gitId":"zacwong2151"},"content":"        case \"MON\":","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.MONDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":156,"author":{"gitId":"zacwong2151"},"content":"        case \"TUE\":","lastModifiedDate":"2023-09-10"},{"lineNumber":157,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.TUESDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"zacwong2151"},"content":"        case \"WED\":","lastModifiedDate":"2023-09-10"},{"lineNumber":160,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.WEDNESDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"zacwong2151"},"content":"        case \"THU\":","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.THURSDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"zacwong2151"},"content":"        case \"FRI\":","lastModifiedDate":"2023-09-10"},{"lineNumber":166,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.FRIDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":167,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":168,"author":{"gitId":"zacwong2151"},"content":"        case \"SAT\":","lastModifiedDate":"2023-09-10"},{"lineNumber":169,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.SATURDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":170,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"zacwong2151"},"content":"        case \"SUN\":","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.SUNDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":173,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"zacwong2151"},"content":"        default:","lastModifiedDate":"2023-09-10"},{"lineNumber":175,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"Only inputs such as \u0027Mon\u0027, \u0027Tuesday\u0027, \u0027sat\u0027 allowed!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":176,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":177,"author":{"gitId":"zacwong2151"},"content":"        return result;","lastModifiedDate":"2023-09-10"},{"lineNumber":178,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":179,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zacwong2151":179}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"     * ad","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"     * @param l asd","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"     * @param iv asd","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"        dialog \u003d l;","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"        // Set the background color using CSS style","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"        //this.setStyle(\"-fx-background-color: lightgray;\");","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"        displayPicture.setFitWidth(50.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"        displayPicture.setFitHeight(50.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"        // Clip the ImageView into a circle","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"        Circle clipCircle \u003d new Circle(25); // ImageView clipped to Circle of radius 50","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"        displayPicture.setClip(clipCircle);","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"        clipCircle.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"        clipCircle.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"        // Add padding between each DialogBox","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"        this.setPadding(new Insets(10));","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"        // Add padding between each ImageView and its Label","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"        Insets imageViewLabelPadding \u003d new Insets(5);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"        HBox.setMargin(displayPicture, imageViewLabelPadding);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"        HBox.setMargin(dialog, imageViewLabelPadding);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"        this.getChildren().addAll(dialog, displayPicture);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":72}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":" * class where main is run","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"public class Duke extends Application implements Serializable {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    private static final String DUKE_FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    private static Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    public Duke() {}","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"     * Constructor to initialise the Storage and TaskList objects","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"     * @param filePath The relative path to the file that acts as a temporary storage for the ArrayList(Task) object","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException | IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"            createTxtFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"        VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"        TextField userInput \u003d new TextField();","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"        stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"zacwong2151"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"zacwong2151"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"zacwong2151"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"zacwong2151"},"content":"        return tasks;","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"zacwong2151"},"content":"    public Storage getStorage() {","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"zacwong2151"},"content":"        return storage;","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"zacwong2151"},"content":"     * This function is called when duke.txt file does not exist, so it is created in this function","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"zacwong2151"},"content":"    public static void createTxtFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"zacwong2151"},"content":"            FileWriter fw \u003d new FileWriter(DUKE_FILE_PATH);","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"zacwong2151"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"zacwong2151"},"content":"            System.out.println(\"shag\");","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"zacwong2151"},"content":"    public static void main(String[] args) {}","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zacwong2151":109,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":" * custom Exception class","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"        super(error);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zacwong2151":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":" * one of the Tasks that user\u0027s can add into their list","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"    private String from;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"    private String to;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"     * constructor to initialise an Event object","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"     * @param description the Task description that is obtained from the Task class","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"     * @param from the from part of the Event time component","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"     * @param to the by part of the Event time component","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    private Event(String description, String from, String to) {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    public static Event newEvent(String description, String from, String to) {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"        return \"E\" + super.toFileString() + \"| \" + from + \"-\" + to;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zacwong2151":32}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    protected static String tempFilePath \u003d \"data/temp.txt\";","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    private Duke duke \u003d new Duke(tempFilePath);","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    private TaskList tasks \u003d duke.getTasks();","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"    private Storage storage \u003d duke.getStorage();","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTasks(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStorage(storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showWelcomeMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":36}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    private final String DUKE_FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"    public void setTasks(TaskList tasks) {","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"    public void setStorage(Storage storage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"     * Sith","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"        Label dukeText \u003d new Label();","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"            dukeText.setText(Ui.printFileContents(DUKE_FILE_PATH));","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"        if (dukeText.getText().equals(\"Hi, I am Zac!\\nHere are the tasks in your list:\\n\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"            dukeText.setText(\"Hi, I am Zac!\\nYou do not have any tasks\\nHow can I help you today?\");","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"     * the dialog container. Clears the user input after processing. Used in MainWindow.fxml file.","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"            // so that user cannot send any more inputs to application","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"        String response \u003d Parser.parse(input, tasks, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"                DialogBox.getUserDialog(new Label(input), new ImageView(userImage)),","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"                DialogBox.getDukeDialog(new Label(response), new ImageView(dukeImage))","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":87}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":" * This class deals with making sense of the user command","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"     * This function takes in the user input and carries out the next steps accordingly","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput what the user types in to the console","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"     * @param tasks the duke.TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"     * @param storage the duke.Storage","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    public static String parse(String userInput, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"        String output;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"            output \u003d tasks.displayList();","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"            output \u003d \"Thanks for coming!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"        } else if (userInput.contains(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"            try {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"                output \u003d tasks.markDescription(userInput);","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"                return e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"        } else if (userInput.contains(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"            if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"                //throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"                output \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"                try {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"                    output \u003d tasks.addTask(\"T\", userInput.substring(5));","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"                    return e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"        } else if (userInput.contains(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"            if (userInput.length() \u003c\u003d 9) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"                //throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"                output \u003d \"OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"                try {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"                    output \u003d tasks.addTask(\"D\", userInput.substring(9));","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"                    return e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"        } else if (userInput.contains(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"            if (userInput.length() \u003c\u003d 6) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"                //throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"                output \u003d \"OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"                try {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"                    output \u003d tasks.addTask(\"E\", userInput.substring(6));","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"                    return e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"        } else if (userInput.contains(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"            try {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"                output \u003d tasks.deleteTask(userInput);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"                return e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"        } else if (userInput.contains(\"find\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"            output \u003d tasks.displayMatchingList(userInput.substring(5));","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"            output \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"        storage.updateFile(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"        return output;","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"zacwong2151":73}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":" * deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    private static String dukeFilePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    private String filePath; // \"data/temp.txt\"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"     * This function reads the ArrayList(Task) object that is stored in memory and returns it","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"     * @return an ArrayList that contains Task objects","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException this part might not be needed","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"     * @throws ClassNotFoundException if inputStream.readObject() does not find anything","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"     * @throws IOException if \"data/temp.txt\" does not exist/it is empty (not sure which one or both?)","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException, ClassNotFoundException, IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"        ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(filePath));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"        /*","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"            The only object that is written to OutputStream is the ArrayList\u003cduke.Task\u003e, as shown in the","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"            updateFile method in duke.Duke.java. Thus, only an object of run type ArrayList\u003cduke.Task\u003e can be","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"            read from the InputStream, so it is safe to cast it to (ArrayList\u003cduke.Task\u003e)","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"         */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"        return loadedTasks;","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"     * Everytime there is a change in tasks, 2 things happen","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"     * 1. The duke.txt file is cleared, tasks is scanned and the entire duke.txt file is rewritten","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"     * 2. ObjectOutputStream scans tasks, serializes each duke.Task into binary format, and writes them","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"     * to \"data/temp.txt\". This allows us to save the duke.TaskList to a file and retrieve it when the program","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"     * is run again","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"     * Initially, I did a writeToFile method where everytime a duke.Task is added to taskArray, write","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"     * the new task to duke.txt. However, this may cause some problems when it comes to updating","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"     * or deleting tasks from the file, so I changed the implementation to rewriting the entire txt","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"     * file everytime there is a change to the list. This causes a longer run time but since this mod","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"     * is not about run time, it should be fine.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"    public void updateFile(TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"        try (ObjectOutputStream outputStream \u003d new ObjectOutputStream(new FileOutputStream(filePath))) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"            outputStream.writeObject(tasks.getTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"            // writes the ArrayList\u003cduke.Task\u003e object to the OutputStream","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"            FileWriter fw \u003d new FileWriter(dukeFilePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"            // ^ the above line is ABSOLUTELY NECESSARY!!! do not delete","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"            // Clears the existing content by opening in write mode and immediately closing","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"            fw \u003d new FileWriter(dukeFilePath, true);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"                fw.write(tasks.getTask(i).toFileString() + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"            fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"zacwong2151":70}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":" * can be considered an abstract class. Can be either a Todo, Deadline, or Event class","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    private boolean marked;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    private String description;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"     * Constructor to initialise a Task object","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"     * @param description the Task description that is obtained from the user input","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    public String getStatusIconWithBracket() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"        return marked ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"        return marked ? \"X\" : \"O\";","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"        this.marked \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"        return this.getStatusIconWithBracket() + \" \" + description;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"        return \" | \" + this.getStatusIcon() + \" | \" + this.getDescription();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"zacwong2151":43}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":" * The collection that contains the list of Tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    private static final String MEGA_INDENT \u003d \"    \";","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"     * Gets the number of tasks in ArrayList(Task)","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"     * @return The number of tasks in the collection","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"     * Gets the duke.Task at the specific position of the ArrayList(Task)","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"     * @param i The position of the duke.Task","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"     * @return The duke.Task","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"     * Gets the ArrayList(Task)","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"     * @return The collection","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"     * displays the list of Tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"    public String displayList() {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"        stringBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"            Task curr \u003d tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(num + \". \" + curr.toString() + \"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"     * Displays the list of Tasks that description matches the user input","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput the String that the user inputs to find similar Tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"    public String displayMatchingList(String userInput) {","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"            String taskDescription \u003d task.getDescription();","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"            if (taskDescription.contains(userInput)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"                temp.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"        if (temp.isEmpty()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(\"There are no matching tasks\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"            for (int i \u003d 0; i \u003c temp.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"                int num \u003d i + 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"                Task curr \u003d temp.get(i);","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"                stringBuilder.append(num + \".\" + curr.toString() + \"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"     * For an input such as \u0027todo borrow book\u0027, letter is \u0027T\u0027 and string is \u0027borrow book\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"     * @param letter the letter corresponding to the first letter of the duke.Task","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput the string corresponding to the chunk of text after the word todo, deadline, or event","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"zacwong2151"},"content":"    public String addTask(String letter, String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"zacwong2151"},"content":"        if (letter.equals(\"T\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"zacwong2151"},"content":"            tasks.add(ToDo.newToDo(userInput));","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"zacwong2151"},"content":"        if (letter.equals(\"D\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"zacwong2151"},"content":"            tasks.add(Deadline.newDeadline(getDescription(userInput), getBy(userInput)));","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"zacwong2151"},"content":"        if (letter.equals(\"E\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"zacwong2151"},"content":"            tasks.add(Event.newEvent(getDescription(userInput), getFrom(userInput), getTo(userInput)));","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"zacwong2151"},"content":"        int tasksSize \u003d tasks.size();","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"zacwong2151"},"content":"        string.append(MEGA_INDENT + tasks.get(tasksSize - 1).toString() + \"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"Now you have \" + tasksSize + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"zacwong2151"},"content":"        return string.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"zacwong2151"},"content":"     * This method encapsulates the functionality of marking a task as completed or not","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027mark 1\u0027 will mark the duke.Task at position 0 at the TaskArray as \u0027marked\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput the input string","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException if input is invalid","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"zacwong2151"},"content":"    public String markDescription(String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"zacwong2151"},"content":"        String digits \u003d userInput.replaceAll(\"\\\\D+\", \"\"); //remove non-digits","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"zacwong2151"},"content":"        int pos \u003d Integer.parseInt(digits) - 1;","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"zacwong2151"},"content":"        if (pos \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"You are trying to access a Task that does not exist!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"zacwong2151"},"content":"        Task curr \u003d tasks.get(pos);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"zacwong2151"},"content":"        if (userInput.contains(\"unmark\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":121,"author":{"gitId":"zacwong2151"},"content":"            curr.markAsUnDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"zacwong2151"},"content":"        } else if (userInput.contains(\"mark\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"zacwong2151"},"content":"            curr.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"zacwong2151"},"content":"        stringBuilder.append(MEGA_INDENT + curr.getStatusIconWithBracket() + \" \" + curr.getDescription() + \"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"zacwong2151"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"zacwong2151"},"content":"     * For deadline and event Tasks, obtains the description of the duke.Task (before the first slash)","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027event project meeting /from Mon 2pm /to 4pm\u0027 will return \u0027project meeting\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput of the duke.Task","lastModifiedDate":"2023-09-11"},{"lineNumber":135,"author":{"gitId":"zacwong2151"},"content":"     * @return the description of the duke.Task","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"zacwong2151"},"content":"    public static String getDescription(String userInput) {","lastModifiedDate":"2023-09-11"},{"lineNumber":138,"author":{"gitId":"zacwong2151"},"content":"        int len \u003d userInput.length();","lastModifiedDate":"2023-09-11"},{"lineNumber":139,"author":{"gitId":"zacwong2151"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"zacwong2151"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"zacwong2151"},"content":"            if (userInput.charAt(i) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":142,"author":{"gitId":"zacwong2151"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"zacwong2151"},"content":"            count++;","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"zacwong2151"},"content":"        return userInput.substring(0, count);","lastModifiedDate":"2023-09-11"},{"lineNumber":147,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"zacwong2151"},"content":"     * A method for the duke.Deadline class to obtain the by part of the duke.Task description","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027deadline return book /by Sunday\u0027 will return \u0027Sunday\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput the duke.Task description","lastModifiedDate":"2023-09-11"},{"lineNumber":153,"author":{"gitId":"zacwong2151"},"content":"     * @return the deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException if the input string is formatted wrongly","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"zacwong2151"},"content":"    public static String getBy(String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":157,"author":{"gitId":"zacwong2151"},"content":"        String slash \u003d \"/\";","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"zacwong2151"},"content":"        int first \u003d userInput.indexOf(slash);","lastModifiedDate":"2023-09-11"},{"lineNumber":159,"author":{"gitId":"zacwong2151"},"content":"        if (first \u003d\u003d -1 || !userInput.substring(first + 1, first + 3).contains(\"by\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":160,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"You need to add a by timing!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"zacwong2151"},"content":"        return userInput.substring(first + 4); // returns \"Sunday\"","lastModifiedDate":"2023-09-11"},{"lineNumber":163,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"zacwong2151"},"content":"     * A method for the duke.Event class to obtain the from part of the duke.Event description","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027event project meeting /from Mon 2pm /to 4pm\u0027 will return \u0027Mon 2pm\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput the duke.Task description","lastModifiedDate":"2023-09-11"},{"lineNumber":170,"author":{"gitId":"zacwong2151"},"content":"     * @return the from part of the event","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException throws duke.DukeException if invalid input","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"zacwong2151"},"content":"    public static String getFrom(String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":174,"author":{"gitId":"zacwong2151"},"content":"        String slash \u003d \"/\";","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"zacwong2151"},"content":"        int firstSlash \u003d userInput.indexOf(slash);","lastModifiedDate":"2023-09-11"},{"lineNumber":176,"author":{"gitId":"zacwong2151"},"content":"        int secondSlash \u003d userInput.indexOf(slash, firstSlash + 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":177,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"zacwong2151"},"content":"        if (firstSlash \u003d\u003d -1 || secondSlash \u003d\u003d -1","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"zacwong2151"},"content":"                || !userInput.substring(firstSlash, firstSlash + 5).equals(\"/from\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":180,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"You need to add a /from and /to for events\");","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"zacwong2151"},"content":"        return userInput.substring(firstSlash + 6, secondSlash - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":184,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"zacwong2151"},"content":"     * A method for the duke.Event class to obtain the to part of the duke.Event description","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027event project meeting /from Mon 2pm /to 4pm\u0027 will return \u00274pm\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput the duke.Task description","lastModifiedDate":"2023-09-11"},{"lineNumber":190,"author":{"gitId":"zacwong2151"},"content":"     * @return the to part of the event","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException throws duke.DukeException if invalid input","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"zacwong2151"},"content":"    public static String getTo(String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":194,"author":{"gitId":"zacwong2151"},"content":"        String slash \u003d \"/\";","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"zacwong2151"},"content":"        int firstSlash \u003d userInput.indexOf(slash);","lastModifiedDate":"2023-09-11"},{"lineNumber":196,"author":{"gitId":"zacwong2151"},"content":"        int secondSlash \u003d userInput.indexOf(slash, firstSlash + 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":197,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"zacwong2151"},"content":"        if (!userInput.substring(secondSlash, secondSlash + 3).equals(\"/to\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":199,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"You need to add a /to for events\");","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"zacwong2151"},"content":"        return userInput.substring(secondSlash + 4);","lastModifiedDate":"2023-09-11"},{"lineNumber":202,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"zacwong2151"},"content":"     * This method encapsulates deleting of a task from TaskArray","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027delete 3\u0027 will delete the duke.Task at position 2 of TaskArray","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput the input string","lastModifiedDate":"2023-09-11"},{"lineNumber":208,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"zacwong2151"},"content":"    public String deleteTask(String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":210,"author":{"gitId":"zacwong2151"},"content":"        String digits \u003d userInput.replaceAll(\"\\\\D+\", \"\"); //remove non-digits","lastModifiedDate":"2023-09-11"},{"lineNumber":211,"author":{"gitId":"zacwong2151"},"content":"        int pos \u003d Integer.parseInt(digits) - 1;","lastModifiedDate":"2023-09-11"},{"lineNumber":212,"author":{"gitId":"zacwong2151"},"content":"        if (pos \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"You are trying to delete a Task that does not exist\");","lastModifiedDate":"2023-09-04"},{"lineNumber":214,"author":{"gitId":"zacwong2151"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"zacwong2151"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":216,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":217,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(MEGA_INDENT + tasks.get(pos).toString() + \"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":218,"author":{"gitId":"zacwong2151"},"content":"            tasks.remove(pos);","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":220,"author":{"gitId":"zacwong2151"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":221,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"zacwong2151":224}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":" * one of the subclasses of a Task","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"    private ToDo(String description) {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    public static ToDo newToDo(String description) {","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zacwong2151":23}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":" * This class deals with interactions with the user","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    private static final String NAME \u003d \"Zac\";","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"     * Prints out all the tasks in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"     * @param filePath the file where the lists of Tasks are stored. It is hardcoded to be \"data/duke.txt\"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"     * @throws FileNotFoundException if the file at this filePath is not found (though I\u0027m not sure","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"     *     when this will happen)","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"    public static String printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"Hi, I am \" + NAME + \"!\\nHere are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"            string.append(s.nextLine() + \"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"        return string.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"zacwong2151":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets\u003d\"@styles.css\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"labelClass\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"                   preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\" stylesheets\u003d\"@styles.css\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"                   prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"                    prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":23}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    private LocalDateTime date \u003d LocalDateTime.of(2023, 9, 3, 17, 00);","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"     * Tests the localDateToString method","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    public void testLocalDateToString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"Sep 3 2023 5:00PM\", Deadline.localDatetoString(date));","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"     * Tests the toString method for a Deadline object","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    public void toString_deadline_success() throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"[D][ ] return book (by: Sep 10 2023 5:00PM)\",","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"                Deadline.newDeadline(\"return book \", \"Sun 1700\").toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"     * Tests the toFileString method for a Deadline object","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"    public void toFileString_deadline_success() throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"D | O | return book | Sep 10 2023 5:00PM\",","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"                Deadline.newDeadline(\"return book \", \"Sun 1700\").toFileString());","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"zacwong2151":37}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"    private String tempFilePath \u003d \"data/temp.txt\";","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    private Storage storage \u003d new Storage(tempFilePath);","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"     * Tests the load method in Storage. Exception should always be thrown","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    public void load_nil_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"            storage.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException | IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"zacwong2151":22}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"    private ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    private TaskList tasks \u003d new TaskList(tasklist);","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    public void addTask_todo_success() throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"T\", \"borrow book\");","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"        // Perform assertions or test other functionality here","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(1, tasks.getSize()); // Example assertion","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"    public void addTask_deadline_success() throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"D\", \"return book /by 2/12/2019 1800\");","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"        // Perform assertions or test other functionality here","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(1, tasks.getSize()); // Example assertion","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    public void addTask_deadline_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"            tasks.addTask(\"D\", \"return book /by 2/12/2019\");","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"put in a time pls\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"    public void deleteTask_delete1_success() throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"T\", \"borrow book\");","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"        tasks.deleteTask(\"delete 1\");","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(0, tasks.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"    public void deleteTask_delete2_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"            tasks.addTask(\"T\", \"borrow book\");","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"            tasks.deleteTask(\"delete 2\");","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"You are trying to delete a Task that does not exist\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"    public void markDescription_mark1_success() throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"T\", \"borrow book\");","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"        tasks.markDescription(\"mark 1\");","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"X\", tasks.getTask(0).getStatusIcon());","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"    public void markDescription_mark2_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"            tasks.addTask(\"T\", \"borrow book\");","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"            tasks.markDescription(\"mark 2\");","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"You are trying to access a Task that does not exist!\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"zacwong2151":62}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"[T][ ] borrow book\", ToDo.newToDo(\"borrow book\").toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    public void testToFileString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"T | O | borrow book\", ToDo.newToDo(\"borrow book\").toFileString());","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"zacwong2151":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"deadline return book /by Sunday 1700","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"deadline return book /y Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"deadline return book by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"event project meeting from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"event project meeting /rom Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"event project meeting /from Mon 2pm to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"event project meeting /from Mon 2pm /o 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"todo randomthing","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"mark 5","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"delete 4","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"find book","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zacwong2151":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"REM Set the working directory to the root directory (ip) before executing the script","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"CD /D ..\\","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"if not exist bin mkdir bin","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"del .\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"javac -cp src\\main\\java -Xlint:none -d bin src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"REM because now that the working directory is set to ip, ACTUAL.TXT and EXPECTED.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"REM can only be accessed with the appropriate cd","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"REM Run the program, feed commands from input.txt file, and redirect the output to ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"java -classpath bin duke.Duke \u003c .\\text-ui-test\\input.txt \u003e .\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"REM Compare the output to the expected output","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"FC .\\text-ui-test\\ACTUAL.TXT .\\text-ui-test\\EXPECTED.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zacwong2151":14,"-":14}}]
