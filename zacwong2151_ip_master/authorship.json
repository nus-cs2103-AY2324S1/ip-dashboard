[{"path":".gitmessage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"Subject line (try to keep under 50 characters)","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"{current situation} -- use present tense}","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"{why it needs to change}","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"{what is being done about it} -- use imperative mood}","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"{why it is done that way}","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"{any other relevant info}","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"note*: wrap each line at maximum 72 characters","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"zacwong2151":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"javafx {","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    version \u003d \u002717.0.2\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"    toolVersion \u003d \u002710.12.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"task cleanDataContents(type: Delete) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    description \u003d \u0027Clean the contents of duke.txt and temp.txt\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"    doLast {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"        // Define the paths to the files","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"        def dukeFile \u003d file(\u0027data/duke.txt\u0027)","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"        def tempFile \u003d file(\u0027data/temp.txt\u0027)","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"        def undoFile \u003d file(\u0027data/undo.txt\u0027)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"        // Create empty files to clean the contents","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"        dukeFile.text \u003d \u0027\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"        tempFile.text \u003d \u0027\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"        undoFile.text \u003d \u0027\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"clean.dependsOn cleanDataContents // Make cleanDataContents depend on the clean task","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"mainClassName \u003d \u0027duke.Launcher\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"    archiveVersion \u003d \"v0.2\"","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zacwong2151":42,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"# Zac\u0027s Chatbot! :singapore:","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"\u003e Life is great. I love to record my tasks - SunTze","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"Welcome to Zac\u0027s chatbot. I can help you record down your tasks, so do check me out!","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"## Setting up in Intellij","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"1. Locate the `src/main/java/duke.Launcher.java` file, and run it","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"2. Or, you can run `java -ea -jar build/libs/Duke-v0.2.jar` from the root directory to execute the JAR file","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"\u003e [!NOTE] \u003cbr\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"\u003e Do not fret if you see the warning \"Unsupported JavaFX configuration\".","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"\u003e It is perfectly fine!","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"## Features","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"- Record down your tasks as a Todo, Deadline, or Event :clipboard:","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"- Display all your tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"- Mark a task as completed/uncompleted","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"- Delete tasks when they are no longer needed :x:","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"- Find a task by its description","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"- Undo the latest command if you messed up :back:","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"- Saves your tasks for future use :infinity:","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"## How do I use Zac\u0027s Chatbot?","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"1. Type the `help` command if you are too lazy to read on :smile:","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"1. Add a **Todo** task","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"    1. `todo borrow book`","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"1. Add a **Deadline** task","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"    1. `deadline return book /by Sun 1700\"`","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"1. Add an **Event** task","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"    1. `event project meeting /from Mon 2pm /to 4pm`","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"1. Display all your tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"    1. `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"1. Mark a task as completed/uncompleted","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"    1. `mark 1` or `unmark 1` (marks/unmarks 1st task in your list)","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"1. Delete task","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"    1. `delete 1` (deletes 1st task in your list)","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"1. Find a task by description","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"    1. `find book`","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"1. Undo the latest command","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"    1. `undo`","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"1. End the chat","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"    1. `bye`","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"zacwong2151":40,"-":8}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":" * One of the Tasks that users can add to their list","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"     * Constructor to initialise a Deadline object","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"     * @param description The Task description","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"     * @param by The time component that is stored as a LocalDateTime","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"    private Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + localDatetoString(by) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"        return \"D\" + super.toFileString() + \"| \" + localDatetoString(by);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"     * Converts a LocalDateTime to a String in \"MMM d yyyy h:mma\" format","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"     * @param dateTime The LocalDateTime input","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"     * @return The formatted string","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"    public static String localDatetoString(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"        String formattedDateTime \u003d dateTime.format(outputFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"        return formattedDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"     * Public constructor that takes in a String time component and calls the private constructor","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"     * @param description String description","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"     * @param timeComponent Time component of the Deadline in a form of a string","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"     * @return Deadline Object","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException If invalid input for time component","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"    public static Deadline newDeadline(String description, String timeComponent) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"        return new Deadline(description, convertToLocalDateTime(timeComponent));","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"     * Converts \u0027by\u0027 part of Deadline Task to a LocalDateTime","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027Sunday 1700\u0027 will return the corresponding LocalDateTime","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"     * @param string The \u0027by\u0027 part of the Deadline Task","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"     * @return The LocalDateTime object","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException If time component is of invalid format","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"    public static LocalDateTime convertToLocalDateTime(String string) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"        if (string.indexOf(\u0027/\u0027) !\u003d -1) {","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"            // inputs of form \"Date/Month/Year hhmm\", e.g. \"20/9/2023 1840\"","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"            if (string.lastIndexOf(\u0027/\u0027) + 5 \u003e\u003d string.length()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"                // if \"hhmm\" is not present","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"                throw new DukeException(\"put in a time pls\");","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"            LocalDateTime dateTime \u003d parseDateTime(string, \"/\");","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"            return dateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"        } else if (string.indexOf(\u0027-\u0027) !\u003d -1) { //","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"            // inputs of form \"Date-Month-Year hhmm\", e.g. \"20-9-2023 1840\"","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"            if (string.lastIndexOf(\u0027-\u0027) + 3 \u003e\u003d string.length()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"                // if \"hhmm\" is not present","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"                throw new DukeException(\"put in a time pls\");","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"            LocalDateTime dateTime \u003d parseDateTime(string, \"-\");","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"            return dateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"        } else { // \"Mon 1800\"","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"            // problem: it goes backwards in time in certain cases","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"            LocalDateTime dateTime \u003d parseDateTime(string, \"NIL\");","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"            return dateTime;","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"     * Helper function to convert a string to a LocalDateTime","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput The \u0027by\u0027 part of a Deadline Task, e.g. \"2/12/2019 1800\"","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"     * @param c Whether the Deadline is put in a \u0027-\u0027 format or \u0027/\u0027 or neither format","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"zacwong2151"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException If time component is of invalid format","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"zacwong2151"},"content":"    public static LocalDateTime parseDateTime(String userInput, String c) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"zacwong2151"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"zacwong2151"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"Put in a valid time input!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"zacwong2151"},"content":"        String datePart \u003d parts[0];","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"zacwong2151"},"content":"        String timePart \u003d parts[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"zacwong2151"},"content":"        if (timePart.contains(\"am\") || timePart.contains(\"pm\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"time must be of 24hr format! eg. 1700\");","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"zacwong2151"},"content":"        String[] dateComponents;","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"zacwong2151"},"content":"        if (c.equals(\"NIL\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"zacwong2151"},"content":"            int year \u003d LocalDate.now().getYear();","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"zacwong2151"},"content":"            int month \u003d LocalDate.now().getMonth().getValue();","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"zacwong2151"},"content":"            int daysToAdd \u003d -LocalDateTime.now().getDayOfWeek().compareTo(getDayOfWeek(datePart.toUpperCase()));","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"zacwong2151"},"content":"            // compares today\u0027s DAY with the DAY in userInput, and returns the number of days to add","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"zacwong2151"},"content":"            int date \u003d LocalDate.now().getDayOfMonth() + daysToAdd;","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"zacwong2151"},"content":"            int hour \u003d Integer.parseInt(timePart.substring(0, 2));","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"zacwong2151"},"content":"            int minute \u003d Integer.parseInt(timePart.substring(2, 4));","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"zacwong2151"},"content":"            LocalDate temp \u003d LocalDate.of(year, month, 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"zacwong2151"},"content":"            int maxDaysOfMonth \u003d temp.lengthOfMonth();","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"zacwong2151"},"content":"            // represents the maximum no. of days in that month","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"zacwong2151"},"content":"            if (date \u003e maxDaysOfMonth) {","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"zacwong2151"},"content":"                // Date overflows, adjust LocalDateTime to the next month","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"zacwong2151"},"content":"                return LocalDateTime.of(year, month + 1, date - maxDaysOfMonth, hour, minute);","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"zacwong2151"},"content":"            } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"zacwong2151"},"content":"                return LocalDateTime.of(year, month, date, hour, minute);","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"zacwong2151"},"content":"        } else if (c.equals(\"/\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"zacwong2151"},"content":"            dateComponents \u003d datePart.split(\"/\");","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"zacwong2151"},"content":"        } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"zacwong2151"},"content":"            assert c.equals(\"-\") : \"something wrong here!\";","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"zacwong2151"},"content":"            dateComponents \u003d datePart.split(\"-\");","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"zacwong2151"},"content":"        if (dateComponents.length !\u003d 3) {","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"zacwong2151"},"content":"            throw new IllegalArgumentException(\"Invalid date format\");","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"zacwong2151"},"content":"        int date \u003d Integer.parseInt(dateComponents[0]);","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"zacwong2151"},"content":"        int month \u003d Integer.parseInt(dateComponents[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"zacwong2151"},"content":"        int year \u003d Integer.parseInt(dateComponents[2]);","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"zacwong2151"},"content":"        int hour \u003d Integer.parseInt(timePart.substring(0, 2));","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"zacwong2151"},"content":"        int minute \u003d Integer.parseInt(timePart.substring(2, 4));","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"zacwong2151"},"content":"        return LocalDateTime.of(year, month, date, hour, minute);","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"zacwong2151"},"content":"     * Takes in a user input and returns the corresponding DayOfWeek","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"zacwong2151"},"content":"     * @param string The user input that is a day of the week, e.g. \"sun\", \"Tuesday\", \"Mon\"","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"zacwong2151"},"content":"     * @return The DayOfWeek object","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":149,"author":{"gitId":"zacwong2151"},"content":"    public static DayOfWeek getDayOfWeek(String string) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":150,"author":{"gitId":"zacwong2151"},"content":"        DayOfWeek result;","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"zacwong2151"},"content":"        if (string.length() \u003c 3) {","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"Only inputs such as \u0027Mon\u0027, \u0027Tuesday\u0027, \u0027sat\u0027 allowed!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"zacwong2151"},"content":"        String day \u003d string.substring(0, 3);","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"zacwong2151"},"content":"        switch(day) {","lastModifiedDate":"2023-09-10"},{"lineNumber":156,"author":{"gitId":"zacwong2151"},"content":"        case \"MON\":","lastModifiedDate":"2023-09-10"},{"lineNumber":157,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.MONDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"zacwong2151"},"content":"        case \"TUE\":","lastModifiedDate":"2023-09-10"},{"lineNumber":160,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.TUESDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"zacwong2151"},"content":"        case \"WED\":","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.WEDNESDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"zacwong2151"},"content":"        case \"THU\":","lastModifiedDate":"2023-09-10"},{"lineNumber":166,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.THURSDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":167,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":168,"author":{"gitId":"zacwong2151"},"content":"        case \"FRI\":","lastModifiedDate":"2023-09-10"},{"lineNumber":169,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.FRIDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":170,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"zacwong2151"},"content":"        case \"SAT\":","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.SATURDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":173,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"zacwong2151"},"content":"        case \"SUN\":","lastModifiedDate":"2023-09-10"},{"lineNumber":175,"author":{"gitId":"zacwong2151"},"content":"            result \u003d DayOfWeek.SUNDAY;","lastModifiedDate":"2023-09-10"},{"lineNumber":176,"author":{"gitId":"zacwong2151"},"content":"            break;","lastModifiedDate":"2023-09-10"},{"lineNumber":177,"author":{"gitId":"zacwong2151"},"content":"        default:","lastModifiedDate":"2023-09-10"},{"lineNumber":178,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"Only inputs such as \u0027Mon\u0027, \u0027Tuesday\u0027, \u0027sat\u0027 allowed!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":179,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":180,"author":{"gitId":"zacwong2151"},"content":"        return result;","lastModifiedDate":"2023-09-10"},{"lineNumber":181,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":182,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zacwong2151":182}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"     * DialogBox constructor","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"     * @param l Label","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"     * @param iv ImageView","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"        dialog \u003d l;","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"        displayPicture.setFitWidth(50.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"        displayPicture.setFitHeight(50.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"        // Clip the ImageView into a circle","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"        Circle clipCircle \u003d new Circle(25); // ImageView clipped to Circle of radius 25","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"        displayPicture.setClip(clipCircle);","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"        clipCircle.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"        clipCircle.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"        // Add padding between each DialogBox","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"        this.setPadding(new Insets(10));","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"        // Add padding between each ImageView and its Label","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"        Insets imageViewLabelPadding \u003d new Insets(5);","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"        HBox.setMargin(displayPicture, imageViewLabelPadding);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"        HBox.setMargin(dialog, imageViewLabelPadding);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"        this.getChildren().addAll(dialog, displayPicture);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":69}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.File;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":" * How do I describe this class? Perhaps the bridge between JavaFX and the rest of the code","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"public class Duke extends Application implements Serializable {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    protected static final Path DUKE_FILE_PATH \u003d Paths.get(\"./data/duke.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"         Text file that contains the *current state* of the TaskList in a human-readable format","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"         This file is read in the printFileContents method in Ui.java","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    protected static final Path CURRENT_TASKLIST_FILE_PATH \u003d Paths.get(\"./data/temp.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"         Text file that contains the *current state* of the TaskList in binary format","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"         This file is used to store TaskList contents that will persist with consecutive runs of the application","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"    protected static final Path OLD_TASKLIST_FILE_PATH \u003d Paths.get(\"./data/undo.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"         Text file that contains the *old state* of the OLD TaskList in binary format","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"         Contents of this file is read when \u0027undo\u0027 command is called, so as to to obtain the \u0027old\u0027 TaskList","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"    */","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"    private static Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"     * Creates the relevant database text files","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"    public Duke() {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"            createTxtFile(DUKE_FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"            createTxtFile(CURRENT_TASKLIST_FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"            createTxtFile(OLD_TASKLIST_FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"        VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"        TextField userInput \u003d new TextField();","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"        stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"zacwong2151"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"zacwong2151"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"zacwong2151"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"zacwong2151"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"zacwong2151"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"zacwong2151"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"zacwong2151"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"zacwong2151"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"zacwong2151"},"content":"        return tasks;","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"zacwong2151"},"content":"    public Storage getStorage() {","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"zacwong2151"},"content":"        return storage;","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"zacwong2151"},"content":"    private static void createTxtFile(Path filePath) {","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"zacwong2151"},"content":"            File txtFile \u003d new File(filePath.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"zacwong2151"},"content":"            File parentDirectory \u003d txtFile.getParentFile();","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"zacwong2151"},"content":"            if (!parentDirectory.exists()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"zacwong2151"},"content":"                parentDirectory.mkdirs(); // Create parent directories if they don\u0027t exist","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"zacwong2151"},"content":"            txtFile.createNewFile();","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"zacwong2151"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zacwong2151":123,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":" * Custom Exception class","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"        super(error);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zacwong2151":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":" * One of the Tasks that users can add to their list","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"    private String from;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"    private String to;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"     * Constructor to initialise an Event object","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"     * @param description The Task description","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"     * @param from The \u0027from\u0027 time component","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"     * @param to The \u0027by\u0027 time component","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    private Event(String description, String from, String to) {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    public static Event newEvent(String description, String from, String to) {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"        return \"E\" + super.toFileString() + \"| \" + from + \"-\" + to;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zacwong2151":32}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"        Main.main(args);","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":10}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":" * A GUI for Duke using FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    private TaskList tasks \u003d duke.getTasks();","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    private Storage storage \u003d duke.getStorage();","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTasks(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStorage(storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showWelcomeMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"        launch(args);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":38}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"    public void setTasks(TaskList tasks) {","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"    public void setStorage(Storage storage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"     * Displays welcome message","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"        Label dukeText \u003d new Label();","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"            dukeText.setText(Ui.printFileContents(Duke.DUKE_FILE_PATH));","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"        if (onlyContainsIntroMessage(dukeText.getText())) {","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"            dukeText.setText(\"Hi, I am Zac!\\nYou do not have any tasks\\nHow can I help you today?\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"                    + \"Type \u0027help\u0027 to see the list of things you can do\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"    private static boolean onlyContainsIntroMessage(String text) {","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"        String[] lines \u003d text.split(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"        return lines.length \u003c\u003d 3;","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"     * the dialog container. Clears the user input after processing. Used in MainWindow.fxml file.","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"            // so that user cannot send any more inputs to application","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"        String response \u003d Parser.parse(input, tasks, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"                DialogBox.getUserDialog(new Label(input), new ImageView(userImage)),","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"                DialogBox.getDukeDialog(new Label(response), new ImageView(dukeImage))","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"zacwong2151"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":90}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":" * This class deals with making sense of the user command.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"     * Processes the user input and carries out the next steps accordingly.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"     * The shouldUpdateUndoTxtFile boolean ensures that the \u0027undo\u0027 command ignores commands that are not","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"     * worth \u0027undoing\u0027, e.g. \u0027list\u0027 command","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput User input","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"     * @param storage Storage","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"    public static String parse(String userInput, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"        String output;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"        boolean shouldUpdateUndoTxtFile \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"                output \u003d tasks.displayList();","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"            } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"                output \u003d Ui.handleExitUi();","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"            } else if (userInput.contains(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"                output \u003d tasks.markTask(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"                shouldUpdateUndoTxtFile \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"            } else if (userInput.contains(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"                output \u003d tasks.addTask(\"T\", userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"                shouldUpdateUndoTxtFile \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"            } else if (userInput.contains(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"                output \u003d tasks.addTask(\"D\", userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"                shouldUpdateUndoTxtFile \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"            } else if (userInput.contains(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"                output \u003d tasks.addTask(\"E\", userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"                shouldUpdateUndoTxtFile \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"            } else if (userInput.contains(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"                output \u003d tasks.deleteTask(userInput);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"                shouldUpdateUndoTxtFile \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"            } else if (userInput.contains(\"find\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"                output \u003d tasks.findMatchingTasks(userInput.substring(5));","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"            } else if (userInput.contains(\"undo\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"                tasks.undo(storage);","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"                output \u003d Ui.handleUndoUi() + tasks.displayList();","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"            } else if (userInput.equals(\"help\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"                output \u003d tasks.displayUserGuide();","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"                output \u003d Ui.handleInvalidCommandUi();","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException | IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"        storage.updateFile(tasks, shouldUpdateUndoTxtFile);","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"        return output;","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"zacwong2151":57}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import java.io.OutputStream;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"     * This function reads the ArrayList(Task) object that is stored in temp.txt and returns it","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"     * @return An ArrayList that contains Task objects","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"     * @throws ClassNotFoundException If InputStream.readObject() does not find anything","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"     * @throws IOException            If unable to find temp.txt file","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    public ArrayList\u003cTask\u003e load() throws ClassNotFoundException, IOException {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"        ObjectInputStream inputStream \u003d new ObjectInputStream(Files.newInputStream(Duke.CURRENT_TASKLIST_FILE_PATH));","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"        /*","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"            The only object that is written to OutputStream is the ArrayList\u003cduke.Task\u003e, as shown in the","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"            updateFile method in duke.Duke.java. Thus, only an object of run type ArrayList\u003cduke.Task\u003e can be","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"            read from the InputStream, so it is safe to cast it to (ArrayList\u003cduke.Task\u003e)","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"         */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"        return loadedTasks;","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"     * Updates duke.txt and temp.txt whenever the user inputs a command","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"    public void updateFile(TaskList tasks, boolean shouldUpdate) {","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"            if (shouldUpdate) {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"                copyTempToUndo();","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"                // saves the contents of temp.txt into undo.txt BEFORE temp.txt is updated to reflect new TaskList","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"            try (ObjectOutputStream outputStream \u003d","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"                         new ObjectOutputStream(Files.newOutputStream(Duke.CURRENT_TASKLIST_FILE_PATH))) {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"                outputStream.writeObject(tasks.getTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"                // writes the ArrayList(Task) object to the OutputStream","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"                BufferedWriter writer \u003d Files.newBufferedWriter(Duke.DUKE_FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"                for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"                    writer.write(tasks.getTaskByIndex(i).toFileString() + \"\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"                    // does not append text to duke.txt, but simply overwrites","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"                writer.close();","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"     * Saves the contents of temp.txt into undo.txt BEFORE temp.txt is updated to reflect new TaskList","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"     * @throws IOException If unable to locate source/destination files","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"    private void copyTempToUndo() throws IOException {","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"        InputStream is \u003d Files.newInputStream(Duke.CURRENT_TASKLIST_FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"        OutputStream os \u003d Files.newOutputStream(Duke.OLD_TASKLIST_FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"        byte[] buffer \u003d new byte[1024];","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"        int length;","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"        while ((length \u003d is.read(buffer)) \u003e 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"            os.write(buffer, 0, length);","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"        is.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"        os.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"     * Copies contents of undo.txt into temp.txt. This updates temp.txt to contain the old TaskList","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"     * @throws IOException If source or destination files cannot be found","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"    public void copyUndoToTemp() throws IOException {","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"        InputStream is \u003d Files.newInputStream(Duke.OLD_TASKLIST_FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"        OutputStream os \u003d Files.newOutputStream(Duke.CURRENT_TASKLIST_FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"        byte[] buffer \u003d new byte[1024];","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"        int length;","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"        while ((length \u003d is.read(buffer)) \u003e 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"            os.write(buffer, 0, length);","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"zacwong2151"},"content":"        is.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"zacwong2151"},"content":"        os.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"zacwong2151":92}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":" * Can be either a Todo, Deadline, or Event object","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    private String description;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"     * Constructor to initialise a Task object","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"     * @param description the Task description that is obtained from the user input","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    public String getStatusIconWithBracket() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"        return isMarked ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"        return isMarked ? \"X\" : \"O\";","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"        return this.getStatusIconWithBracket() + \" \" + description;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"        return \" | \" + this.getStatusIcon() + \" | \" + this.getDescription();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"zacwong2151":43}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":" * The collection that contains the list of Tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"     * Gets the number of tasks in ArrayList(Task)","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"     * @return The number of tasks in the collection","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"     * Gets the duke.Task at the specific position of the ArrayList(Task)","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"     * @param i The position of the duke.Task","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"     * @return The duke.Task","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"    public Task getTaskByIndex(int i) {","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"     * Gets the ArrayList(Task)","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"     * @return The collection","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"     * Displays the list of Tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"    public String displayList() {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"        return Ui.displayList(tasks);","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"     * Handles the \u0027find\u0027 command, displays the list of Tasks whose description matches the user input","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput The String that the user inputs to find similar Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"    public String findMatchingTasks(String userInput) {","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"        ArrayList\u003cTask\u003e matchingTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"            String taskDescription \u003d task.getDescription();","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"            if (taskDescription.contains(userInput)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"                matchingTaskList.add(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"        return Ui.displayMatchingList(matchingTaskList);","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"     * Adds a Task to TaskList","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"     * @param letter The first letter of the Task","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput The chunk of text after the word todo, deadline, or event","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"    public String addTask(String letter, String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"        if (letter.equals(\"T\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"            if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"            assert userInput.length() \u003e 5 : \"todo description is too short\";","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"            String userInputWithoutPrefix \u003d userInput.substring(5);","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"            tasks.add(ToDo.newToDo(userInputWithoutPrefix));","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"        if (letter.equals(\"D\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"            if (userInput.length() \u003c\u003d 9) {","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"            assert userInput.length() \u003e 9 : \"deadline description is too short\";","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"            String userInputWithoutPrefix \u003d userInput.substring(9);","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"            tasks.add(Deadline.newDeadline(getDescription(userInputWithoutPrefix),","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"                    getBy(userInputWithoutPrefix)));","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"        if (letter.equals(\"E\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"zacwong2151"},"content":"            if (userInput.length() \u003c\u003d 6) {","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"zacwong2151"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"zacwong2151"},"content":"            assert userInput.length() \u003e 6 : \"event description is too short\";","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"zacwong2151"},"content":"            String userInputWithoutPrefix \u003d userInput.substring(6);","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"zacwong2151"},"content":"            tasks.add(Event.newEvent(getDescription(userInputWithoutPrefix),","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"zacwong2151"},"content":"                    getFrom(userInputWithoutPrefix), getTo(userInputWithoutPrefix)));","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"zacwong2151"},"content":"        int tasksSize \u003d tasks.size();","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"zacwong2151"},"content":"        Task newlyAddedTask \u003d tasks.get(tasksSize - 1);","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"zacwong2151"},"content":"        return Ui.handleAddTaskUi(tasksSize, newlyAddedTask);","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"zacwong2151"},"content":"     * Marks a task as either completed or uncompleted","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027mark 1\u0027 will mark the Task at position 0 at the TaskArray as \u0027marked\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput User input","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException If input is invalid","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"zacwong2151"},"content":"    public String markTask(String userInput) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"zacwong2151"},"content":"        String digits \u003d userInput.replaceAll(\"\\\\D+\", \"\"); //remove non-digits","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"zacwong2151"},"content":"        int pos \u003d Integer.parseInt(digits) - 1;","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"zacwong2151"},"content":"        if (pos \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"You are trying to access a Task that does not exist!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"zacwong2151"},"content":"        assert pos \u003c tasks.size() : \"pos should be less than the length of TaskList\";","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"zacwong2151"},"content":"        Task curr \u003d tasks.get(pos);","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"zacwong2151"},"content":"        if (userInput.contains(\"unmark\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"zacwong2151"},"content":"            curr.markAsUnDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"zacwong2151"},"content":"        } else if (userInput.contains(\"mark\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"zacwong2151"},"content":"            curr.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"zacwong2151"},"content":"        return Ui.handleMarkTaskUi(userInput, curr);","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"zacwong2151"},"content":"     * For Deadline and Event Tasks, obtains the Task description (before the first slash)","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027event project meeting /from Mon 2pm /to 4pm\u0027 will return \u0027project meeting\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput User input","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"zacwong2151"},"content":"     * @return The Task description","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"zacwong2151"},"content":"    public static String getDescription(String userInput) {","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"zacwong2151"},"content":"        int len \u003d userInput.length();","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"zacwong2151"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"zacwong2151"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"zacwong2151"},"content":"            if (userInput.charAt(i) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"zacwong2151"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"zacwong2151"},"content":"            count++;","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"zacwong2151"},"content":"        return userInput.substring(0, count);","lastModifiedDate":"2023-09-11"},{"lineNumber":138,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"zacwong2151"},"content":"     * Obtains the \u0027by\u0027 time component of a Deadline Task","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027deadline return book /by Sunday\u0027 will return \u0027Sunday\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput The Task description, including the time component","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"zacwong2151"},"content":"     * @return The time component","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException If user input is invalid","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"zacwong2151"},"content":"    public static String getBy(String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":148,"author":{"gitId":"zacwong2151"},"content":"        String slash \u003d \"/\";","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"zacwong2151"},"content":"        int first \u003d userInput.indexOf(slash);","lastModifiedDate":"2023-09-11"},{"lineNumber":150,"author":{"gitId":"zacwong2151"},"content":"        if (first \u003d\u003d -1 || !userInput.substring(first + 1, first + 3).contains(\"by\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":151,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"You need to add a by timing!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"zacwong2151"},"content":"        return userInput.substring(first + 4); // returns \"Sunday\"","lastModifiedDate":"2023-09-11"},{"lineNumber":154,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"zacwong2151"},"content":"     * Obtains the \u0027from\u0027 time component of an Event Task","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027event project meeting /from Mon 2pm /to 4pm\u0027 will return \u0027Mon 2pm\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput The Task description, including the time component","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"zacwong2151"},"content":"     * @return The \u0027from\u0027 time component","lastModifiedDate":"2023-09-12"},{"lineNumber":162,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException If user input is invalid","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"zacwong2151"},"content":"    public static String getFrom(String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":165,"author":{"gitId":"zacwong2151"},"content":"        String slash \u003d \"/\";","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"zacwong2151"},"content":"        int firstSlash \u003d userInput.indexOf(slash);","lastModifiedDate":"2023-09-11"},{"lineNumber":167,"author":{"gitId":"zacwong2151"},"content":"        int secondSlash \u003d userInput.indexOf(slash, firstSlash + 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":168,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"zacwong2151"},"content":"        if (firstSlash \u003d\u003d -1 || secondSlash \u003d\u003d -1","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"zacwong2151"},"content":"                || !userInput.substring(firstSlash, firstSlash + 5).equals(\"/from\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":171,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"You need to add a /from and /to for events\");","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"zacwong2151"},"content":"        return userInput.substring(firstSlash + 6, secondSlash - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":175,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"zacwong2151"},"content":"     * Obtains the \u0027to\u0027 part of an Event Task","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"zacwong2151"},"content":"     * For example, the input \u0027event project meeting /from Mon 2pm /to 4pm\u0027 will return \u00274pm\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"zacwong2151"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput The Task description, including the time component","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"zacwong2151"},"content":"     * @return The \u0027to\u0027 time component","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"zacwong2151"},"content":"     * @throws DukeException If user input is invalid","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"zacwong2151"},"content":"    public static String getTo(String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":185,"author":{"gitId":"zacwong2151"},"content":"        String slash \u003d \"/\";","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"zacwong2151"},"content":"        int firstSlash \u003d userInput.indexOf(slash);","lastModifiedDate":"2023-09-11"},{"lineNumber":187,"author":{"gitId":"zacwong2151"},"content":"        int secondSlash \u003d userInput.indexOf(slash, firstSlash + 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":188,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"zacwong2151"},"content":"        if (!userInput.substring(secondSlash, secondSlash + 3).equals(\"/to\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":190,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"You need to add a /to for events\");","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"zacwong2151"},"content":"        return userInput.substring(secondSlash + 4);","lastModifiedDate":"2023-09-11"},{"lineNumber":193,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"zacwong2151"},"content":"     * Deletes a Task from TaskList","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput The user input","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"zacwong2151"},"content":"    public String deleteTask(String userInput) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":199,"author":{"gitId":"zacwong2151"},"content":"        String digits \u003d userInput.replaceAll(\"\\\\D+\", \"\"); //remove non-digits","lastModifiedDate":"2023-09-11"},{"lineNumber":200,"author":{"gitId":"zacwong2151"},"content":"        int pos \u003d Integer.parseInt(digits) - 1;","lastModifiedDate":"2023-09-11"},{"lineNumber":201,"author":{"gitId":"zacwong2151"},"content":"        if (pos \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"zacwong2151"},"content":"            throw new DukeException(\"You are trying to delete a Task that does not exist\");","lastModifiedDate":"2023-09-04"},{"lineNumber":203,"author":{"gitId":"zacwong2151"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"zacwong2151"},"content":"            assert pos \u003c tasks.size() : \"pos should be less than the length of TaskList\";","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"zacwong2151"},"content":"            Task deletedTask \u003d tasks.get(pos);","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"zacwong2151"},"content":"            tasks.remove(pos);","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"zacwong2151"},"content":"            int tasksSize \u003d tasks.size();","lastModifiedDate":"2023-09-19"},{"lineNumber":208,"author":{"gitId":"zacwong2151"},"content":"            return Ui.handleDeleteTaskUi(deletedTask, tasksSize);","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"zacwong2151"},"content":"     * Displays user guide","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"zacwong2151"},"content":"     * @return Output","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"zacwong2151"},"content":"    public String displayUserGuide() {","lastModifiedDate":"2023-09-12"},{"lineNumber":216,"author":{"gitId":"zacwong2151"},"content":"        return Ui.showUserGuide();","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"zacwong2151"},"content":"     * Undo the most recent user command","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"zacwong2151"},"content":"     * @throws IOException If undo.txt is an empty file","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"zacwong2151"},"content":"    public void undo(Storage storage) throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"zacwong2151"},"content":"            Path absolutePath \u003d Duke.OLD_TASKLIST_FILE_PATH.toAbsolutePath();","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"zacwong2151"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(Files.newInputStream(absolutePath));","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"zacwong2151"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-09-12"},{"lineNumber":227,"author":{"gitId":"zacwong2151"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"zacwong2151"},"content":"            tasks.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"zacwong2151"},"content":"            tasks.addAll(loadedTasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"zacwong2151"},"content":"            storage.copyUndoToTemp();","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":232,"author":{"gitId":"zacwong2151"},"content":"            tasks.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"zacwong2151":235}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":" * one of the subclasses of a Task","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"    private ToDo(String description) {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    public static ToDo newToDo(String description) {","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zacwong2151":23}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":" * This class deals with interactions with the user","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    private static final String NAME \u003d \"Zac\";","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    private static final String MEGA_INDENT \u003d \"    \";","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"     * Prints out all the tasks in TaskList, which are stored in duke.txt","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"     * @param filePath The file where the list of Tasks is stored","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"     * @throws FileNotFoundException If the file at this file path is not found","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"    public static String printFileContents(Path filePath) throws FileNotFoundException {","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"            Scanner s \u003d new Scanner(Files.newBufferedReader(filePath)); // reads the contents of the duke.txt file","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"            string.append(\"Hi, I am \" + NAME + \"!\\nHere are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"                string.append(s.nextLine() + \"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"            string.append(\"Type \u0027help\u0027 to see the list of things you can do\");","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"            return string.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"            System.err.println(e + \" error printing file contents\");","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"        return string.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"     * Displays user guide","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"     * @return String","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"    public static String showUserGuide() {","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"Here are examples of things you can do\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"1. todo \u003cyour task\u003e\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"   eg. todo borrow book\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"2. deadline \u003cyour task\u003e /by \u003ctime\u003e\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"   eg. deadline return book /by sun 1700\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"3. event \u003cyour task\u003e /from \u003ctime\u003e /to \u003ctime\u003e\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"   eg. event project meeting /from Mon 2pm /to 4pm\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"4. list (displays all your tasks)\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"   eg. list\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"5. mark \u003ctask number\u003e (marks task 1 as completed)\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"   eg. mark 1\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"6. unmark \u003ctask number\u003e\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"   eg. unmark 1 (marks task 2 as uncompleted)\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"7. delete \u003ctask number\u003e\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"   eg. delete 1 (deletes task 1)\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"8. find \u003ckeyword\u003e\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"   eg. find book (finds all task with description \u0027book\u0027)\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"9. undo (undo the latest command)\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"10. bye (ends the chat)\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"        return string.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"     * Prints out all the tasks in the TaskList","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"     * @return Output","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"    public static String displayList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"        stringBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"            Task curr \u003d tasks.get(i);","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(num + \". \" + curr.toString() + \"\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"     * Prints out the tasks that matches the user input in the find command","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"     * @param tasks TaskList that contains only tasks that match the user input","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"     * @return Output","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"    public static String displayMatchingList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"zacwong2151"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(\"There are no matching tasks\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"zacwong2151"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"zacwong2151"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"zacwong2151"},"content":"                int num \u003d i + 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"zacwong2151"},"content":"                Task curr \u003d tasks.get(i);","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"zacwong2151"},"content":"                stringBuilder.append(num + \". \" + curr.toString() + \"\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"zacwong2151"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"zacwong2151"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"zacwong2151"},"content":"     * Handles Ui for addTask method","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"zacwong2151"},"content":"     * @param tasksSize Size of TaskList","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"zacwong2151"},"content":"     * @param newlyAddedTask Most recently added Task","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"zacwong2151"},"content":"     * @return Output","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"zacwong2151"},"content":"    public static String handleAddTaskUi(int tasksSize, Task newlyAddedTask) {","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"zacwong2151"},"content":"        string.append(MEGA_INDENT + newlyAddedTask.toString() + \"\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"zacwong2151"},"content":"        string.append(\"Now you have \" + tasksSize + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"zacwong2151"},"content":"        return string.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"zacwong2151"},"content":"     * Handles Ui for markTask method","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"zacwong2151"},"content":"     * @param userInput mark or unmark","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"zacwong2151"},"content":"     * @param curr The Task that is marked/unmarked","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"zacwong2151"},"content":"     * @return Output","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"zacwong2151"},"content":"    public static String handleMarkTaskUi(String userInput, Task curr) {","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"zacwong2151"},"content":"        if (userInput.contains(\"unmark\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"zacwong2151"},"content":"        } else if (userInput.contains(\"mark\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"zacwong2151"},"content":"            stringBuilder.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"zacwong2151"},"content":"        stringBuilder.append(MEGA_INDENT + curr.getStatusIconWithBracket() + \" \" + curr.getDescription() + \"\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"zacwong2151"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"zacwong2151"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"zacwong2151"},"content":"     * Handles Ui for deleteTask method","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"zacwong2151"},"content":"     * @param deletedTask Deleted Task","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"zacwong2151"},"content":"     * @param tasksSize Size of TaskList","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"zacwong2151"},"content":"     * @return Output","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"zacwong2151"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"zacwong2151"},"content":"    public static String handleDeleteTaskUi(Task deletedTask, int tasksSize) {","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"zacwong2151"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"zacwong2151"},"content":"        stringBuilder.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"zacwong2151"},"content":"        stringBuilder.append(MEGA_INDENT + deletedTask.toString() + \"\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"zacwong2151"},"content":"        stringBuilder.append(\"Now you have \" + tasksSize + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"zacwong2151"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"zacwong2151"},"content":"    public static String handleUndoUi() {","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"zacwong2151"},"content":"        return \"Most recent move undone :)\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"zacwong2151"},"content":"    public static String handleExitUi() {","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"zacwong2151"},"content":"        return \"Thanks for coming!\";","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"zacwong2151"},"content":"    public static String handleInvalidCommandUi() {","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"zacwong2151"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"zacwong2151":154}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets\u003d\"@styles.css\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"                   preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\" stylesheets\u003d\"@styles.css\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"                   prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"                    prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"zacwong2151":25}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    private LocalDateTime date \u003d LocalDateTime.of(2023, 9, 3, 17, 00);","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"    public void testLocalDateToString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"Sep 3 2023 5:00PM\", Deadline.localDatetoString(date));","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    public void toString_validTimeInput_success() throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"[D][ ] return book (by: Sep 24 2023 5:00PM)\",","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"                Deadline.newDeadline(\"return book \", \"Sun 1700\").toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"    public void toString_invalidTimeInput_exceptionThrown() {","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"            Deadline.newDeadline(\"return book \", \"Su 1700\");","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"Only inputs such as \u0027Mon\u0027, \u0027Tuesday\u0027, \u0027sat\u0027 allowed!\", e.getMessage());","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"    public void toFileString_validTimeInput_success() throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"D | O | return book | Sep 24 2023 5:00PM\",","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"                Deadline.newDeadline(\"return book \", \"Sun 1700\").toFileString());","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"    public void convertToLocalDateTime_validTimeInput_success() throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"        LocalDateTime temp \u003d Deadline.convertToLocalDateTime(\"3/9/2023 1700\");","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(date, temp);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"    public void convertToLocalDateTime_invalidTimeInput_exceptionThrown() {","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"            Deadline.convertToLocalDateTime(\"3/9/2023\");","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"put in a time pls\", e.getMessage());","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"    public void parseDateTime_invalidTimeInput_exceptionThrown() {","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"            Deadline.newDeadline(\"return book \", \"Sun\");","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"Put in a valid time input!\", e.getMessage());","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"zacwong2151":54}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    public void load_nil_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"            storage.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"zacwong2151":17}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    private ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    private TaskList tasks \u003d new TaskList(tasklist);","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"    public void addTask_todo_success() throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"T\", \"todo borrow book\");","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"        // Perform assertions or test other functionality here","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(1, tasks.getSize()); // Example assertion","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"    public void addTask_todo_exceptionThrown() throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"            tasks.addTask(\"T\", \"todo\");","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"zacwong2151"},"content":"    public void addTask_deadline_success() throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"D\", \"deadline return book /by 2/12/2019 1800\");","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"zacwong2151"},"content":"        // Perform assertions or test other functionality here","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(1, tasks.getSize()); // Example assertion","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"zacwong2151"},"content":"    public void addTask_deadline_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"zacwong2151"},"content":"            tasks.addTask(\"D\", \"deadline return book /by 2/12/2019\");","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"put in a time pls\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"zacwong2151"},"content":"    public void addTask_event_success() throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"E\", \"event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"zacwong2151"},"content":"        // Perform assertions or test other functionality here","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(1, tasks.getSize()); // Example assertion","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"zacwong2151"},"content":"    public void addTask_event_exceptionThrown() {","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"zacwong2151"},"content":"            tasks.addTask(\"E\", \"event project meeting /rom Mon 2pm /to 4pm\");","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"You need to add a /from and /to for events\", e.getMessage());","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"zacwong2151"},"content":"    public void deleteTask_delete1_success() throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"T\", \"todo borrow book\");","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"zacwong2151"},"content":"        tasks.deleteTask(\"delete 1\");","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(0, tasks.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"zacwong2151"},"content":"    public void deleteTask_delete2_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"zacwong2151"},"content":"            tasks.addTask(\"T\", \"todo borrow book\");","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"zacwong2151"},"content":"            tasks.deleteTask(\"delete 2\");","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"You are trying to delete a Task that does not exist\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"zacwong2151"},"content":"    public void markDescription_mark1_success() throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"T\", \"todo borrow book\");","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"zacwong2151"},"content":"        tasks.markTask(\"mark 1\");","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"X\", tasks.getTaskByIndex(0).getStatusIcon());","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"zacwong2151"},"content":"    public void markDescription_mark2_exceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"zacwong2151"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"zacwong2151"},"content":"            tasks.addTask(\"T\", \"todo borrow book\");","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"zacwong2151"},"content":"            tasks.markTask(\"mark 2\");","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"zacwong2151"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"zacwong2151"},"content":"            assertEquals(\"You are trying to access a Task that does not exist!\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"zacwong2151"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"zacwong2151"},"content":"    public void displayList_todo_success() throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"T\", \"todo borrow book\");","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"zacwong2151"},"content":"        // Perform assertions or test other functionality here","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"Here are the tasks in your list:\\n1. [T][ ] borrow book\\n\", tasks.displayList());","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"zacwong2151"},"content":"    public void testUndo() throws DukeException, IOException, ClassNotFoundException {","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"zacwong2151"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"zacwong2151"},"content":"        tasks.addTask(\"T\", \"todo borrow book\");","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"zacwong2151"},"content":"        tasks.undo(duke.getStorage());","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"zacwong2151"},"content":"        // Perform assertions or test other functionality here","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"Here are the tasks in your list:\\n\", tasks.displayList());","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"zacwong2151":102}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"[T][ ] borrow book\", ToDo.newToDo(\"borrow book\").toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"    public void testToFileString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"        assertEquals(\"T | O | borrow book\", ToDo.newToDo(\"borrow book\").toFileString());","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"zacwong2151":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zacwong2151"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zacwong2151"},"content":"deadline return book /by Sunday 1700","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"zacwong2151"},"content":"deadline return book /y Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"deadline return book by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zacwong2151"},"content":"event project meeting from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"zacwong2151"},"content":"event project meeting /rom Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"event project meeting /from Mon 2pm to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"zacwong2151"},"content":"event project meeting /from Mon 2pm /o 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"zacwong2151"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"zacwong2151"},"content":"todo randomthing","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zacwong2151"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zacwong2151"},"content":"mark 5","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zacwong2151"},"content":"delete 4","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zacwong2151"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"zacwong2151"},"content":"find book","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zacwong2151":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"zacwong2151"},"content":"REM Set the working directory to the root directory (ip) before executing the script","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zacwong2151"},"content":"CD /D ..\\","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"zacwong2151"},"content":"if not exist bin mkdir bin","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"zacwong2151"},"content":"del .\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"zacwong2151"},"content":"javac -cp src\\main\\java -Xlint:none -d bin src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"zacwong2151"},"content":"REM because now that the working directory is set to ip, ACTUAL.TXT and EXPECTED.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"zacwong2151"},"content":"REM can only be accessed with the appropriate cd","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"zacwong2151"},"content":"REM Run the program, feed commands from input.txt file, and redirect the output to ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zacwong2151"},"content":"java -classpath bin duke.Duke \u003c .\\text-ui-test\\input.txt \u003e .\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"zacwong2151"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zacwong2151"},"content":"REM Compare the output to the expected output","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"zacwong2151"},"content":"FC .\\text-ui-test\\ACTUAL.TXT .\\text-ui-test\\EXPECTED.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zacwong2151":14,"-":14}}]
