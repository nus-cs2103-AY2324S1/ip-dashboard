[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"    mainClass.set(\"EchoBot\")","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"    archiveFileName \u003d \u0027EchoBot.jar\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Daphne789":2,"-":38}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"T | 0 | buy bread","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"E | 0 | meeting | 2023-09-04 1200 | 2023-09-04 1500","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"T | 0 | do homework","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"D | 1 | buy book | 2023-09-21","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"D | 0 | buy food | 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"T | 0 | watch movie","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"D | 1 | return book | 2023-10-02","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Daphne789":8}},{"path":"src/main/java/EchoBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":" * The main class that represents the EchoBot application.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"public class EchoBot {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"     * The entry point of the EchoBot application.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"        String filePath \u003d \"./data/duke.txt\"; // Default path","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"An error occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        while(true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"            // Read the user input","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"            String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"                Ui.showByeMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"                Ui.showTasks(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"                String taskDescription \u003d Command.extractTaskDesc(userInput, \"todo\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"                Command addCommand \u003d new AddCommand(Command.TaskType.TODO, taskDescription,","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"                        null, null);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"                addCommand.doCommand(tasks, ui, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"                String taskDescription \u003d Command.extractTaskDesc(userInput, \"deadline\");","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"                int indexOfBy \u003d taskDescription.indexOf(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"                String deadlineDescription \u003d taskDescription.substring(0, indexOfBy).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"                String by \u003d taskDescription.substring(indexOfBy + 3).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"                Command addCommand \u003d new AddCommand(Command.TaskType.DEADLINE, deadlineDescription,","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"                        by, null);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"                addCommand.doCommand(tasks, ui, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"                String taskDescription \u003d Command.extractTaskDesc(userInput, \"event\");","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"                int indexOfFrom \u003d taskDescription.indexOf(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"                int indexOfTo \u003d taskDescription.indexOf(\"/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"                String eventDescription \u003d taskDescription.substring(0, indexOfFrom).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"                String from \u003d taskDescription.substring(indexOfFrom + 5, indexOfTo).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"                String to \u003d taskDescription.substring(indexOfTo + 3).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"                Command addCommand \u003d new AddCommand(Command.TaskType.EVENT, eventDescription, from, to);","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"                addCommand.doCommand(tasks, ui, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"                int taskNum \u003d Command.extractTaskNum(userInput, \"mark\");","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Daphne789"},"content":"                Command markCommand \u003d new MarkCommand(taskNum);","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Daphne789"},"content":"                markCommand.doCommand(tasks, ui, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Daphne789"},"content":"                int taskNum \u003d Command.extractTaskNum(userInput, \"unmark\");","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"                Command unmarkCommand \u003d new UnmarkCommand(taskNum);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"                unmarkCommand.doCommand(tasks, ui, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"                int taskNum \u003d Command.extractTaskNum(userInput, \"delete\");","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"                Command deleteCommand \u003d new DeleteCommand(taskNum);","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"                deleteCommand.doCommand(tasks, ui, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"                Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"                System.out.println(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"                Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Daphne789":86}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":" * Represents a command to add a new task.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"    private final Command.TaskType taskType;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"    private final String additionalInfo1;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    private final String additionalInfo2;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"     * Constructs an AddCommand instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"     * @param taskType        The type of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"     * @param additionalInfo1 Additional information required for specific task types.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"     * @param additionalInfo2 Additional information required for specific task types.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"    public AddCommand(Command.TaskType taskType, String taskDescription, String additionalInfo1, String additionalInfo2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"        this.additionalInfo1 \u003d additionalInfo1;","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        this.additionalInfo2 \u003d additionalInfo2;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"     * Executes the AddCommand, adding a new task to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"     * @param storage The data storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"    public void doCommand(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"            if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"                Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"                throw new DukeException(\"    Unable to add new task. Task description cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"            Task newTask;","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"                case TODO:","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"                    newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"                    LocalDate byDate \u003d Parser.parseDate(additionalInfo1);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"                    newTask \u003d new Deadline(taskDescription, byDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"                case EVENT:","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"                    LocalDateTime fromDate \u003d Parser.parseDateTime(additionalInfo1);","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"                    LocalDateTime toDate \u003d Parser.parseDateTime(additionalInfo2);","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Daphne789"},"content":"                    newTask \u003d new Event(taskDescription, fromDate, toDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Daphne789"},"content":"                default:","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Daphne789"},"content":"                    throw new DukeException(\"Unsupported task type.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"            Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\\n\" + \"     \" + newTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"            Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Daphne789":83}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":" * Provides a base structure for command implementations.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"     * Enumeration representing different types of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"     * Executes the command operation.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"     * @param storage The data storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"    public abstract void doCommand(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"     * Extracts the task number from the user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"     * @param command   The command keyword.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"     * @return The extracted task number.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"    public static int extractTaskNum(String userInput, String command) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        String taskNumberStr \u003d userInput.substring(command.length()).trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"        return Integer.parseInt(taskNumberStr);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"     * Extracts the task description from the user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"     * @param command   The command keyword.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"     * @return The extracted task description.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"    public static String extractTaskDesc(String userInput, String command) {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"        return userInput.substring(command.length()).trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Daphne789":50}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":" * Represents a command to delete a task from the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    private int taskNum;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"     * Constructs a DeleteCommand instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"     * @param taskNum The task number to be deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"     * Executes the DeleteCommand, removing a task from the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"     * @param storage The data storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"    public void doCommand(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"        if (taskNum \u003e\u003d 1 \u0026\u0026 taskNum \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"            Task deletedTask \u003d tasks.remove(taskNum - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"            Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"    Noted. I\u0027ve removed this task:\\n\" + \"     \" + deletedTask.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"            Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"            storage.saveTasks(tasks); // Save after deleting","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Daphne789":42}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    private int taskNum;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"     * Constructs a MarkCommand instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"     * @param taskNum The task number to be marked as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"     * Executes the MarkCommand, marking a task as done and updating the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"     * @param storage The data storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"    public void doCommand(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        if (taskNum \u003e\u003d 1 \u0026\u0026 taskNum \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"            Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"            task.mark();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"            Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"            System.out.print(\"      [\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"            // Additional information","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"                LocalDateTime from \u003d ((Event) task).getFrom();","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"                LocalDateTime to \u003d ((Event) task).getTo();","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"                System.out.print(\" (from: \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"                LocalDate by \u003d ((Deadline) task).getBy();","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"                System.out.print(\" (by: \" + by + \")\");","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"            System.out.print(\"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"            Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"            storage.saveTasks(tasks); // Save after marking","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Daphne789":58}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":" * Represents a command to unmark a task as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    private int taskNum;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"     * Constructs an UnmarkCommand instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"     * @param taskNum The task number to be unmarked.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"     * Executes the UnmarkCommand, unmarking a task as not done and updating the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"     * @param storage The data storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"    public void doCommand(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"        if (taskNum \u003e\u003d 1 \u0026\u0026 taskNum \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"            Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"            task.unmark();","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"            Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"            System.out.print(\"      [\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"                LocalDateTime from \u003d ((Event) task).getFrom();","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"                LocalDateTime to \u003d ((Event) task).getTo();","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"                System.out.print(\" (from: \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"                LocalDate by \u003d ((Deadline) task).getBy();","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"                System.out.print(\" (by: \" + by + \")\");","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"            System.out.print(\"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"            Ui.showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"            storage.saveTasks(tasks); // Save after unmarking","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Daphne789":58}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":" * Represents an exception.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":" * This exception is thrown when there\u0027s an error.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"     * Constructs a DukeException with the given error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"     * @param errorMsg Error message associated with the exception.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":" * Provides methods for parsing date and date-time strings","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":" * into Java LocalDateTime and LocalDate objects.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"     * Parses a date-time string into a LocalDateTime object.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"     * @param dateTime The date-time string.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"     * @return A LocalDateTime object.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"    public static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"        return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"     * @param date The date string.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"     * @return A LocalDate object.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Daphne789":31}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":" * Handles loading and saving tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    private String filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"     * Loads tasks from the file and returns them as a list.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"        // Load tasks from the file and return them","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"        File folder \u003d file.getParentFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"        // Create the parent folder if it doesn\u0027t exist","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"        if (!folder.exists() \u0026\u0026 !folder.mkdirs()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"            System.err.println(\"Unable to create directory: \" + folder.getAbsolutePath());","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"            return tasks; // Return an empty list","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"            if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"                System.err.println(\"Unable to create file: \" + filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"                return tasks; // Return an empty list","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"                String formattedTask \u003d scanner.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"                if (formattedTask.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"                    continue; // Skip empty lines","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"                try {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"                    Task task \u003d Task.fromFileString(formattedTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"                    // Handle corrupted data - logging the issue","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"                    Logger logger \u003d Logger.getLogger(Storage.class.getName());","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"                    logger.log(Level.SEVERE, \"Corrupted data: \" + formattedTask, e);","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(\"Invalid data: \" + formattedTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Daphne789"},"content":"            scanner.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Daphne789"},"content":"            System.err.println(\"An error occurred while handling file operations: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"            Logger logger \u003d Logger.getLogger(Storage.class.getName());","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"            logger.log(Level.SEVERE, \"An error occurred while loading tasks\", e);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"        return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"     * Saves the list of tasks to the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Daphne789"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Daphne789"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Daphne789"},"content":"        // Save tasks to the file","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Daphne789"},"content":"        try (PrintWriter writer \u003d new PrintWriter(filePath)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Daphne789"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"                writer.println(task.toFileString());","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"Daphne789"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Daphne789":97}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"     * Constructs a deadline task with description and due date.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"     * @param by Due date of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"     * Gets the due date of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"     * @return Due date.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"        return by;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"     * Converts the deadline task into a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":" * Represents an event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"     * Constructs an event task with description and date-time range.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"     * @param from Starting date and time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"     * @param to Ending date and time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"     * Gets the starting date and time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"     * @return Starting date and time.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"        return from;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"     * Gets the ending date and time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"     * @return Ending date and time.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"        return to;","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"     * Converts the event task into a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\"))","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":" * Represents a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"public class Task  {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"     * Converts the task to a string for saving purpose.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"        String type \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"        String dateTime \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"            type \u003d \"T\";","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"            type \u003d \"D\";","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"            dateTime \u003d \" | \" + ((Deadline) this).getBy().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"            type \u003d \"E\";","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"            dateTime \u003d \" | \" + ((Event) this).getFrom().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" | \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"                    ((Event) this).getTo().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"        return type + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + dateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"     * Converts a file string into task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"     * @param fileString File string representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"     * @return Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"    public static Task fromFileString(String fileString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"        String[] parts \u003d fileString.split(\"\\\\s*\\\\|\\\\s*\"); // Adjusted delimiter","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"        Task task;","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"        switch (type) {","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"            case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"            case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"                String by \u003d parts[3];","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Daphne789"},"content":"                // Use parseDate method to convert to LocalDate","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"                task \u003d new Deadline(description, parseDate(by));","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Daphne789"},"content":"            case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Daphne789"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"                // Use parseDateTime method to convert to LocalDateTime","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"                task \u003d new Event(description, parseDateTime(from), parseDateTime(to));","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"            default:","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"                throw new IllegalArgumentException(\"Invalid task type: \" + type);","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"            task.mark();","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"Daphne789"},"content":"        return task;","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Daphne789"},"content":"     * Parse date and time string into a LocalDateTime object.","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"     * @param dateTime Date and time string.","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Daphne789"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Daphne789"},"content":"    private static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"Daphne789"},"content":"        return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Daphne789"},"content":"     * Parses date string into a LocalDate object.","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Daphne789"},"content":"     * @param date Date string.","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Daphne789"},"content":"     * @return LocalDate object.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Daphne789"},"content":"    private static LocalDate parseDate(String date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"Daphne789"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Daphne789"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Daphne789"},"content":"     * @return Status icon (\"X\" for complete, \" \" for incomplete).","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Daphne789"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"Daphne789"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Daphne789"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Daphne789"},"content":"    public void mark() {","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"Daphne789"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Daphne789"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Daphne789"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"Daphne789"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Daphne789"},"content":"     * Gets the task\u0027s description.","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Daphne789"},"content":"     * @return Task\u0027s description.","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Daphne789"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"Daphne789"},"content":"        return description;","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Daphne789"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Daphne789"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Daphne789"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"Daphne789"},"content":"        return isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"Daphne789"},"content":"     * Converts the task into a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"Daphne789"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"Daphne789"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"Daphne789"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":157}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"     * Converts the Todo task in string representation.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":25}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":" * Provides methods related to user interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"     * Displays the EchoBot logo.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    public static void showLogo() {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"        System.out.println(\"     ____        _        \\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"                + \"    |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"                + \"    | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"                + \"    | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"     * Displays a horizontal line separator.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"    public static void showHorizontalLine() {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"     * Displays the welcome message.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"        showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"        System.out.println(\"    Hello! I\u0027m EchoBot\");","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"        showLogo();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        System.out.println(\"    What can I do for you?\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"    public static void showTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"        showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"    \" + (i + 1) + \".\" + task.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"        showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"    public static void showByeMessage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"        showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"        showHorizontalLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Daphne789":64}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"    public void testAddTodoTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"        Storage storage \u003d new Storage(\"./data/dummy.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"        AddCommand addCommand \u003d new AddCommand(Command.TaskType.TODO, \"Attend lecture\",","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"                null, null);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"        addCommand.doCommand(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        assertEquals(1, tasks.size()); // Check if the task was added to the tasks list","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"        assertTrue(tasks.get(0) instanceof Todo); // Check if the added task is a Todo","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"        assertEquals(\"[T][ ] Attend lecture\", tasks.get(0).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"    public void testAddDeadlineTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"        Storage storage \u003d new Storage(\"./data/dummy.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"        AddCommand addCommand \u003d new AddCommand(Command.TaskType.DEADLINE, \"Return book\",","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"                \"2023-09-01\", null);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"        addCommand.doCommand(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"        assertTrue(tasks.get(0) instanceof Deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"        assertEquals(\"[D][ ] Return book (by: Sep 01 2023)\", tasks.get(0).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Daphne789":43}},{"path":"src/test/java/duke/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"    public void testMarkCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"        Task task1 \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"        LocalDate by \u003d LocalDate.now();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"        Task task2 \u003d new Deadline(\"Finish homework\", by);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"        LocalDateTime from \u003d LocalDateTime.now();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        LocalDateTime to \u003d LocalDateTime.now().plusHours(10);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"        Task task3 \u003d new Event(\"Meeting\", from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"        tasks.add(task1);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"        tasks.add(task2);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"        tasks.add(task3);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"        MarkCommand markCommand \u003d new MarkCommand(2);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"        markCommand.doCommand(tasks, new Ui(), new Storage(\"./data/dummy.txt\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"        assertTrue(task2.isTaskDone());","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"    public void anotherTestMarkCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"        Task task1 \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"        LocalDate by \u003d LocalDate.now();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"        Task task2 \u003d new Deadline(\"Finish homework\", by);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"        LocalDateTime from \u003d LocalDateTime.now();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"        LocalDateTime to \u003d LocalDateTime.now().plusHours(10);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"        Task task3 \u003d new Event(\"Meeting\", from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"        tasks.add(task1);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"        tasks.add(task2);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"        tasks.add(task3);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"        MarkCommand markCommand \u003d new MarkCommand(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"        markCommand.doCommand(tasks, new Ui(), new Storage(\"./data/dummy.txt\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"        assertFalse(task3.isTaskDone());","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Daphne789":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"todo Borrow a book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"deadline Return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"event Project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"bye","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Daphne789":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"java -classpath ..\\bin EchoBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Daphne789":1,"-":20}}]
