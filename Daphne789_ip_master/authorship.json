[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"T | 0 | buy bread","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"        return by;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":20}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":5}},{"path":"src/main/java/EchoBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"import java.io.*;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import java.util.logging.*;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"public class EchoBot {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"    public static int extractTaskNum(String userInput, String command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"        String taskNumberStr \u003d userInput.substring(command.length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"        return Integer.parseInt(taskNumberStr);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    public static String extractTaskDesc(String userInput, String command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"        return userInput.substring(command.length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"    private static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"        return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    private static LocalDate parseDate(String date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"    // Load tasks from the file","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"    public static ArrayList\u003cTask\u003e loadTasks(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"        File folder \u003d file.getParentFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"        // Create the parent folder if it doesn\u0027t exist","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"        if (!folder.exists() \u0026\u0026 !folder.mkdirs()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"            System.err.println(\"Unable to create directory: \" + folder.getAbsolutePath());","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"            return tasks; // Return an empty list","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"            if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"                System.err.println(\"Unable to create file: \" + filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"                return tasks; // Return an empty list","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"                String formattedTask \u003d scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"                if (formattedTask.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"                    continue; // Skip empty lines","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"                try {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"                    Task task \u003d Task.fromFileString(formattedTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"                    // Handle corrupted data - logging the issue","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"                    Logger logger \u003d Logger.getLogger(EchoBot.class.getName());","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"                    logger.log(Level.SEVERE, \"Corrupted data: \" + formattedTask, e);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(\"Invalid data: \" + formattedTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"            scanner.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Daphne789"},"content":"            System.err.println(\"An error occurred while handling file operations: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Daphne789"},"content":"            Logger logger \u003d Logger.getLogger(EchoBot.class.getName());","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Daphne789"},"content":"            logger.log(Level.SEVERE, \"An error occurred while loading tasks\", e);","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"        return tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"    // Save tasks to the file","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks, String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"        try (PrintWriter writer \u003d new PrintWriter(filePath)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"                writer.println(task.toFileString());","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"Daphne789"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"Daphne789"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"Daphne789"},"content":"        String logo \u003d \"     ____        _        \\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"                + \"    |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"Daphne789"},"content":"                + \"    | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"Daphne789"},"content":"                + \"    | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"Daphne789"},"content":"                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"Daphne789"},"content":"        String horizontalLine \u003d \"   _____________________________________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"Daphne789"},"content":"        String filePath \u003d \"./data/duke.txt\"; // Default path","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"Daphne789"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"Daphne789"},"content":"        System.out.println(horizontalLine + \"    Hello! I\u0027m EchoBot\\n\" + logo);","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"Daphne789"},"content":"        System.out.println(\"    What can I do for you?\\n\" + horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"Daphne789"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"Daphne789"},"content":"            tasks \u003d loadTasks(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"Daphne789"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"Daphne789"},"content":"            System.out.println(\"An error occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"Daphne789"},"content":"        while(true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"Daphne789"},"content":"            // Read the user input","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"Daphne789"},"content":"            String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"Daphne789"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"Daphne789"},"content":"                System.out.println(horizontalLine + \"    Bye. Hope to see you again soon!\\n\" + horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"Daphne789"},"content":"                System.out.println(horizontalLine + \"    Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"Daphne789"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"Daphne789"},"content":"                    Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(\"    \" + (i + 1) + \".\" + task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"Daphne789"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"Daphne789"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"Daphne789"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"Daphne789"},"content":"                    String taskDescription \u003d extractTaskDesc(userInput, \"todo\");","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"Daphne789"},"content":"                    if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"Daphne789"},"content":"                        throw new DukeException(horizontalLine + \"    ☹ OOPS!!! The description of a todo cannot be empty.\"","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"Daphne789"},"content":"                                + \"\\n\"+ horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"Daphne789"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"Daphne789"},"content":"                    Task newTodo \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"Daphne789"},"content":"                    tasks.add(newTodo);","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(horizontalLine + \"    Got it. I\u0027ve added this task:\\n\" + \"     \" + newTodo);","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"Daphne789"},"content":"                    saveTasks(tasks, filePath); // Save after adding","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"Daphne789"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"Daphne789"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"Daphne789"},"content":"                String taskDescription \u003d extractTaskDesc(userInput, \"deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"Daphne789"},"content":"                int indexOfBy \u003d taskDescription.indexOf(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"Daphne789"},"content":"                String deadlineDescription \u003d taskDescription.substring(0, indexOfBy).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"Daphne789"},"content":"                String by \u003d taskDescription.substring(indexOfBy + 3).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"Daphne789"},"content":"                Task newDeadline \u003d new Deadline(deadlineDescription, parseDate(by));","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"Daphne789"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"Daphne789"},"content":"                System.out.println(horizontalLine + \"    Got it. I\u0027ve added this task:\\n\" + \"     \" + newDeadline);","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"Daphne789"},"content":"                System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"Daphne789"},"content":"                saveTasks(tasks, filePath); // Save after adding","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"Daphne789"},"content":"                String taskDescription \u003d extractTaskDesc(userInput, \"event\");","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"Daphne789"},"content":"                int indexOfFrom \u003d taskDescription.indexOf(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"Daphne789"},"content":"                int indexOfTo \u003d taskDescription.indexOf(\"/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"Daphne789"},"content":"                String eventDescription \u003d taskDescription.substring(0, indexOfFrom).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"Daphne789"},"content":"                String from \u003d taskDescription.substring(indexOfFrom + 5, indexOfTo).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"Daphne789"},"content":"                String to \u003d taskDescription.substring(indexOfTo + 3).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"Daphne789"},"content":"                Task newEvent \u003d new Event(eventDescription, parseDateTime(from), parseDateTime(to));","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"Daphne789"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"Daphne789"},"content":"                System.out.println(horizontalLine + \"    Got it. I\u0027ve added this task:\\n\" + \"     \" + newEvent);","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"Daphne789"},"content":"                System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"Daphne789"},"content":"                saveTasks(tasks, filePath); // Save after adding","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"Daphne789"},"content":"                int taskNum \u003d extractTaskNum(userInput, \"mark\");","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"Daphne789"},"content":"                if (taskNum \u003e\u003d 1 \u0026\u0026 taskNum \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"Daphne789"},"content":"                    Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"Daphne789"},"content":"                    task.mark();","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(horizontalLine + \"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"Daphne789"},"content":"                    System.out.print(\"      [\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"Daphne789"},"content":"                    // Additional information","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"Daphne789"},"content":"                    if (task instanceof Event) {","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"Daphne789"},"content":"                        System.out.print(\" (from: \" + ((Event) task).from + \" to: \" + ((Event) task).to + \")\");","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"Daphne789"},"content":"                    } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"Daphne789"},"content":"                        System.out.print(\" (by: \" + ((Deadline) task).by + \")\");","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"Daphne789"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(\"\\n\" + horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"Daphne789"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"Daphne789"},"content":"                saveTasks(tasks, filePath); // Save after marking","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"Daphne789"},"content":"                int taskNum \u003d extractTaskNum(userInput, \"unmark\");","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"Daphne789"},"content":"                if (taskNum \u003e\u003d 1 \u0026\u0026 taskNum \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"Daphne789"},"content":"                    Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"Daphne789"},"content":"                    task.unmark();","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(horizontalLine + \"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"Daphne789"},"content":"                    System.out.print(\"      [\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"Daphne789"},"content":"                    // Additional information","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"Daphne789"},"content":"                    if (task instanceof Event) {","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"Daphne789"},"content":"                        System.out.print(\" (from: \" + ((Event) task).from + \" to: \" + ((Event) task).to + \")\");","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"Daphne789"},"content":"                    } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"Daphne789"},"content":"                        System.out.print(\" (by: \" + ((Deadline) task).by + \")\");","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"Daphne789"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(\"\\n\" + horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"Daphne789"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"Daphne789"},"content":"                saveTasks(tasks, filePath); // Save after unmarking","lastModifiedDate":"2023-08-27"},{"lineNumber":204,"author":{"gitId":"Daphne789"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"Daphne789"},"content":"                int taskNum \u003d extractTaskNum(userInput, \"delete\");","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"Daphne789"},"content":"                if (taskNum \u003e\u003d 1 \u0026\u0026 taskNum \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"Daphne789"},"content":"                    Task deletedTask \u003d tasks.remove(taskNum - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(horizontalLine + \"    Noted. I\u0027ve removed this task:\\n\" + \"     \" + deletedTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"Daphne789"},"content":"                    System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"Daphne789"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"Daphne789"},"content":"                saveTasks(tasks, filePath); // Save after deleting","lastModifiedDate":"2023-08-27"},{"lineNumber":214,"author":{"gitId":"Daphne789"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"Daphne789"},"content":"                System.out.println(horizontalLine + \"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"Daphne789"},"content":"                System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":218,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Daphne789":220}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"        return from;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"        return to;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\"))","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"public class Task  {","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"        String type \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"        String dateTime \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"            type \u003d \"T\";","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"            type \u003d \"D\";","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"            dateTime \u003d \" | \" + ((Deadline) this).getBy().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"            type \u003d \"E\";","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"            dateTime \u003d \" | \" + ((Event) this).getFrom().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" | \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"                    ((Event) this).getTo().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"        return type + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + dateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"    public static Task fromFileString(String fileString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"        String[] parts \u003d fileString.split(\"\\\\s*\\\\|\\\\s*\"); // Adjusted delimiter","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"        Task task;","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"            String by \u003d parts[3];","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"            // Use parseDate method to convert to LocalDate","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"            task \u003d new Deadline(description, parseDate(by));","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"            // Use parseDateTime method to convert to LocalDateTime","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"            task \u003d new Event(description, parseDateTime(from), parseDateTime(to));","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"            throw new IllegalArgumentException(\"Invalid task type: \" + type);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"            task.mark();","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"        return task;","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"    private static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"        return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Daphne789"},"content":"    private static LocalDate parseDate(String date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Daphne789"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"    public void mark() {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"Daphne789"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"Daphne789"},"content":"        return description;","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"Daphne789"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"Daphne789"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":92}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Daphne789":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"todo Borrow a book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"deadline Return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"event Project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"bye","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Daphne789":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"java -classpath ..\\bin EchoBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Daphne789":1,"-":20}}]
