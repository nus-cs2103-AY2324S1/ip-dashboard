[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brein62"},"content":"T | 1 | do something","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"brein62"},"content":"D | 0 | something | 2023-09-12T06:30","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brein62"},"content":"E | 1 | do something | 2023-09-12T12:06:53 | 2023-09-13T13:30","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"brein62"},"content":"D | 1 | more | 2023-09-12T12:50","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"brein62":4}},{"path":"data/duke1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brein62"},"content":"T | 0 | b","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"brein62"},"content":"T | 0 | c","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"brein62"},"content":"D | 0 | d | 12pm","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"brein62":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brein62"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brein62"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"brein62"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"brein62"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"brein62"},"content":"    Deadline(String message, LocalDateTime deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"brein62"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"brein62"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"brein62"},"content":"    public String toSaveFormatString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"brein62"},"content":"        return \"D | \" + this.getStatusNumber() + \" | \" + this.message + \" | \" + deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"brein62"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"brein62"},"content":"        return \"[D]\" + this.getStatusIcon() + \" \" + this.message","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"brein62"},"content":"                + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:MM:SS\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"brein62"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"brein62":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brein62"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brein62"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"brein62"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"brein62"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"brein62"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brein62"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"brein62"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"brein62"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"brein62"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"brein62"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"brein62"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"brein62"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"brein62"},"content":"    public static final String DIVIDER \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"brein62"},"content":"    public static void processLine(String line) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"brein62"},"content":"        Task newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"brein62"},"content":"        String[] lineSeq \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"brein62"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"brein62"},"content":"            if (line.startsWith(\"T\") \u0026\u0026 lineSeq.length \u003d\u003d 3","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"brein62"},"content":"                    \u0026\u0026 (Objects.equals(lineSeq[1], \"1\") || Objects.equals(lineSeq[1], \"0\"))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"brein62"},"content":"                newTask \u003d new Todo(lineSeq[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"brein62"},"content":"                if (Objects.equals(lineSeq[1], \"1\")) newTask.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"brein62"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"brein62"},"content":"            } else if (line.startsWith(\"D\") \u0026\u0026 lineSeq.length \u003d\u003d 4","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"brein62"},"content":"                    \u0026\u0026 (Objects.equals(lineSeq[1], \"1\") || Objects.equals(lineSeq[1], \"0\"))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"brein62"},"content":"                newTask \u003d new Deadline(lineSeq[2], LocalDateTime.parse(lineSeq[3]));","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"brein62"},"content":"                if (Objects.equals(lineSeq[1], \"1\")) newTask.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"brein62"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"brein62"},"content":"            } else if (line.startsWith(\"E\") \u0026\u0026 lineSeq.length \u003d\u003d 5","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"brein62"},"content":"                    \u0026\u0026 (Objects.equals(lineSeq[1], \"1\") || Objects.equals(lineSeq[1], \"0\"))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"brein62"},"content":"                newTask \u003d new Event(lineSeq[2], LocalDateTime.parse(lineSeq[3]), LocalDateTime.parse(lineSeq[4]));","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"brein62"},"content":"                if (Objects.equals(lineSeq[1], \"1\")) newTask.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"brein62"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"brein62"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"brein62"},"content":"                // else do nothing, specifying that the task is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"brein62"},"content":"                System.out.println(\"The task \" + line + \" is invalid and is ignored!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"brein62"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"brein62"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"brein62"},"content":"            // do nothing, specifying that the task is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"brein62"},"content":"            System.out.println(\"The task \" + line + \" is invalid and is ignored!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"brein62"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"brein62"},"content":"    public static void readInitialTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"brein62"},"content":"        Path initialTasksPath \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"brein62"},"content":"        boolean fileExists \u003d Files.exists(initialTasksPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"brein62"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"brein62"},"content":"            if (!fileExists) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"brein62"},"content":"                Files.createFile(initialTasksPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"brein62"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"brein62"},"content":"                List\u003cString\u003e contents \u003d Files.readAllLines(initialTasksPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"brein62"},"content":"                for (String line : contents) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"brein62"},"content":"                    processLine(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"brein62"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"brein62"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"brein62"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"brein62"},"content":"            System.err.println(\"Cannot read initial tasks from file!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"brein62"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"brein62"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"brein62"},"content":"    public static void saveTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"brein62"},"content":"        Path tasksPath \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"brein62"},"content":"        boolean fileExists \u003d Files.exists(tasksPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"brein62"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"brein62"},"content":"            if (!fileExists) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"brein62"},"content":"                Files.createFile(tasksPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"brein62"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"brein62"},"content":"                ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"brein62"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"brein62"},"content":"                    lines.add(task.toSaveFormatString());","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"brein62"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"brein62"},"content":"                Files.write(tasksPath, lines);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"brein62"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"brein62"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"brein62"},"content":"            System.err.println(\"Cannot write tasks to file!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"brein62"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"brein62"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"brein62"},"content":"    public static void addTodo(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"brein62"},"content":"        Task newTask \u003d new Todo(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"brein62"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"brein62"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"brein62"},"content":"        System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"brein62"},"content":"        System.out.println(\"\\t   \" + newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"brein62"},"content":"        System.out.println(\"\\t Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"brein62"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"brein62"},"content":"        saveTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"brein62"},"content":"    public static void addDeadline(String message, String deadline) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"brein62"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"brein62"},"content":"            Task newTask \u003d new Deadline(message, LocalDateTime.parse(deadline));","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"brein62"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"brein62"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t   \" + newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"brein62"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"brein62"},"content":"            saveTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"brein62"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"brein62"},"content":"            throw new DukeException(\"Dates should be formatted yyyy-mm-ddThh:mm:ss,\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"brein62"},"content":"                    \"\\t e.g. 2023-09-12T12:06:53\");","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"brein62"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"brein62"},"content":"    public static void addEvent(String message, String from, String to) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"brein62"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"brein62"},"content":"            Task newTask \u003d new Event(message, LocalDateTime.parse(from), LocalDateTime.parse(to));","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"brein62"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"brein62"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t   \" + newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"brein62"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"brein62"},"content":"            saveTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"brein62"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"brein62"},"content":"            throw new DukeException(\"Dates should be formatted yyyy-mm-ddThh:mm:ss,\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"brein62"},"content":"                    \"\\t e.g. 2023-09-12T12:06:53\");","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"brein62"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"brein62"},"content":"    public static void deleteTask(int i) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"brein62"},"content":"        if (i \u003e\u003d 1 \u0026\u0026 i \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"brein62"},"content":"            Task deletedTask \u003d tasks.remove(i - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"brein62"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t   \" + deletedTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"brein62"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"brein62"},"content":"            saveTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"brein62"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"brein62"},"content":"            throw new DukeException(\"Cannot delete a task that is out of range!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"brein62"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"brein62"},"content":"    public static void printList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"brein62"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"brein62"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"brein62"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t \" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"brein62"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"brein62"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"brein62"},"content":"    public static void markAsDone(int i) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"brein62"},"content":"        if (i \u003e\u003d 1 \u0026\u0026 i \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"brein62"},"content":"            tasks.get(i - 1).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"brein62"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t   \" + tasks.get(i - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"brein62"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"brein62"},"content":"            saveTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"brein62"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"brein62"},"content":"            throw new DukeException(\"Cannot mark a task that is out of range!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"brein62"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"brein62"},"content":"    public static void unmarkAsDone(int i) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"brein62"},"content":"        if (i \u003e\u003d 1 \u0026\u0026 i \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"brein62"},"content":"            tasks.get(i - 1).unmarkAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"brein62"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"brein62"},"content":"            System.out.println(\"\\t   \" + tasks.get(i - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"brein62"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"brein62"},"content":"            saveTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"brein62"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"brein62"},"content":"            throw new DukeException(\"Cannot unmark a task that is out of range!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"brein62"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"brein62"},"content":"        readInitialTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"brein62"},"content":"        String intro_message \u003d \"\\t____________________________________________________________\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"brein62"},"content":"                + \"\\t Hello! I\u0027m Bob the Chatbot!\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"brein62"},"content":"                + \"\\t What can I do for you?\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"brein62"},"content":"                + \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"brein62"},"content":"        String bye_message \u003d \"\\t____________________________________________________________\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"brein62"},"content":"                + \"\\t Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"brein62"},"content":"                + DIVIDER;","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"brein62"},"content":"        System.out.println(intro_message);","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"brein62"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"brein62"},"content":"        String message \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":197,"author":{"gitId":"brein62"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"brein62"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"brein62"},"content":"                message \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"brein62"},"content":"                if (message.equals(\"bye\")) break;","lastModifiedDate":"2023-08-23"},{"lineNumber":201,"author":{"gitId":"brein62"},"content":"                if (message.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"brein62"},"content":"                    printList();","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"brein62"},"content":"                } else if (message.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"brein62"},"content":"                    if (message.length() \u003c\u003d 5)","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"You need to specify the index of the task to mark.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"brein62"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"brein62"},"content":"                        markAsDone(Integer.parseInt(message.substring(5)));","lastModifiedDate":"2023-08-23"},{"lineNumber":208,"author":{"gitId":"brein62"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"The index of the task to mark is not a valid integer.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"brein62"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"brein62"},"content":"                } else if (message.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":212,"author":{"gitId":"brein62"},"content":"                    if (message.length() \u003c\u003d 7)","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"You need to specify the index of the task to unmark.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"brein62"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"brein62"},"content":"                        unmarkAsDone(Integer.parseInt(message.substring(7)));","lastModifiedDate":"2023-08-23"},{"lineNumber":216,"author":{"gitId":"brein62"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"The index of the task to unmark is not a valid integer.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"brein62"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":219,"author":{"gitId":"brein62"},"content":"                } else if (message.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":220,"author":{"gitId":"brein62"},"content":"                    if (message.length() \u003c\u003d 7)","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"You need to specify the index of the task to delete.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"brein62"},"content":"                    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"brein62"},"content":"                        deleteTask(Integer.parseInt(message.substring(7)));","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"brein62"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"The index of the task to delete is not a valid integer.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":226,"author":{"gitId":"brein62"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"brein62"},"content":"                } else if (message.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":228,"author":{"gitId":"brein62"},"content":"                    if (message.length() \u003c\u003d 5)","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"brein62"},"content":"                    addTodo(message.substring(5));","lastModifiedDate":"2023-08-23"},{"lineNumber":231,"author":{"gitId":"brein62"},"content":"                } else if (message.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":232,"author":{"gitId":"brein62"},"content":"                    if (message.length() \u003c\u003d 9)","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"brein62"},"content":"                    String[] deadline \u003d message.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-23"},{"lineNumber":235,"author":{"gitId":"brein62"},"content":"                    if (deadline.length !\u003d 2)","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"A deadline requires exactly 1 due date.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"brein62"},"content":"                    addDeadline(deadline[0], deadline[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":238,"author":{"gitId":"brein62"},"content":"                } else if (message.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":239,"author":{"gitId":"brein62"},"content":"                    if (message.length() \u003c\u003d 6)","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"brein62"},"content":"                    String[] event \u003d message.substring(6).split(\" /to | /from \");","lastModifiedDate":"2023-08-23"},{"lineNumber":242,"author":{"gitId":"brein62"},"content":"                    if (event.length !\u003d 3)","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"brein62"},"content":"                        throw new DukeException(\"An event requires exactly 2 from/to dates.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":244,"author":{"gitId":"brein62"},"content":"                    addEvent(event[0], event[1], event[2]);","lastModifiedDate":"2023-08-23"},{"lineNumber":245,"author":{"gitId":"brein62"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":246,"author":{"gitId":"brein62"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":247,"author":{"gitId":"brein62"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":248,"author":{"gitId":"brein62"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"brein62"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"brein62"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":251,"author":{"gitId":"brein62"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":252,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":253,"author":{"gitId":"brein62"},"content":"        System.out.println(bye_message);","lastModifiedDate":"2023-08-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"brein62":251,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brein62"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"brein62"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"brein62"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"brein62"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"brein62"},"content":"        return \"\\t____________________________________________________________\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"brein62"},"content":"                + \"\\t ☹ OOPS!!! \" + this.getMessage() + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"brein62"},"content":"                + \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"brein62"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"brein62":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brein62"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brein62"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"brein62"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"brein62"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"brein62"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"brein62"},"content":"    Event(String message, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"brein62"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"brein62"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"brein62"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"brein62"},"content":"    public String toSaveFormatString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"brein62"},"content":"        return \"E | \" + this.getStatusNumber() + \" | \" + this.message + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"brein62"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"brein62"},"content":"        return \"[E]\" + this.getStatusIcon() + \" \" + this.message","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"brein62"},"content":"                + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:MM:SS\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"brein62"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:MM:SS\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"brein62"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"brein62":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brein62"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"brein62"},"content":"    protected String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"brein62"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"brein62"},"content":"    Task(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"brein62"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"brein62"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"brein62"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"brein62"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"brein62"},"content":"    public String getStatusNumber() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"brein62"},"content":"        return isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"brein62"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"brein62"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"brein62"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"brein62"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"brein62"},"content":"    public abstract String toSaveFormatString();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"brein62"},"content":"    public abstract String toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"brein62"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"brein62":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brein62"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"brein62"},"content":"    Todo(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"brein62"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"brein62"},"content":"    public String toSaveFormatString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"brein62"},"content":"        return \"T | \" + this.getStatusNumber() + \" | \" + this.message;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"brein62"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"brein62"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"brein62"},"content":"        return \"[T]\" + this.getStatusIcon() + \" \" + this.message;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"brein62"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"brein62"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"brein62":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brein62"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"brein62"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"brein62"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"brein62"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"brein62"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"brein62"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"brein62"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"brein62"},"content":"todo borrow book","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brein62"},"content":"event some event /from 2023-09-11T08:00:00 /to 2023-09-11T16:00:00","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"brein62"},"content":"deadline return book /by 2023-09-01T09:30:00","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"brein62"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"brein62"},"content":"deadline return book /by 12 dec 2023","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"brein62"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"brein62"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"brein62"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"brein62"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"brein62"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"brein62"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"brein62"},"content":"delete 149","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"brein62"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"brein62":20}}]
