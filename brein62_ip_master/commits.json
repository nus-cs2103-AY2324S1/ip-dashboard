{"authorDailyContributionsMap":{"brein62":[{"date":"2023-08-23","commitResults":[{"hash":"786f20edc99613ae08f46ac0362177338273fd6e","isMergeCommit":false,"messageTitle":"Add skeleton for Level 0","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"81fc52365fd1a4533512df35f9b2a424d4c05e59","isMergeCommit":false,"messageTitle":"Add echo function for Level 1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":7}}},{"hash":"558b8d0cac3fae088bc045d919385b9414427ca8","isMergeCommit":false,"messageTitle":"Add list functionality for Level 2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":5}}},{"hash":"d1fd0301c641f25ee2f4df04336a6e9db1366933","isMergeCommit":false,"messageTitle":"Add Task class and add functionality to mark tasks as done for Level 3","messageBody":"","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":14}}},{"hash":"486471ceab795b2f5dae501c2f7e06a417cc5bcc","isMergeCommit":false,"messageTitle":"Add different task types for Level 4","messageBody":"","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":32}}}]},{"date":"2023-08-24","commitResults":[{"hash":"4d510d603d1cce97d12cc9cf136feb412fe8dfd5","isMergeCommit":false,"messageTitle":"Perform automated text UI testing for Level 4","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":0},"sh":{"insertions":0,"deletions":0}}},{"hash":"cef042a07cdd6c91e85e529b19acb5cdfe69b738","isMergeCommit":false,"messageTitle":"Add DukeException and add most error cases such that they throw DukeException for Level 5","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":44,"deletions":18}}},{"hash":"e2d9420e2e83e8dcc7ce715d40a672055acea999","isMergeCommit":false,"messageTitle":"Add delete functionality and handle exceptions for mark, unmark for Level 6","messageBody":"","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":36,"deletions":4}}}]},{"date":"2023-08-29","commitResults":[{"hash":"921bb4d30f0ff29071472596f1a3d3055a6d55b8","isMergeCommit":false,"messageTitle":"Separate long strings into separate lines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":7}}},{"hash":"b89d57ad3fc3316d98b687ef804d2e485ebc0fd9","isMergeCommit":false,"messageTitle":"Add save functionality for Level 7","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0}}},{"hash":"f241b381f5d13ed398224fed08389b65f1a88421","isMergeCommit":false,"messageTitle":"Add save functionality for Level 7 (code files)","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":96,"deletions":4}}}]},{"date":"2023-08-30","commitResults":[{"hash":"b61fa227c0035a25e8c06cc3ad4b0028d944117c","isMergeCommit":false,"messageTitle":"Add dates functionality using LocalDateTime for Level 8","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":6},"java":{"insertions":84,"deletions":54}}},{"hash":"2b1b257d317e4f6ad17b678baeb3c518ddbc6d5c","isMergeCommit":false,"messageTitle":"Add more classes to improve OOP in app","messageBody":"","tags":["A-MoreOOP","A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1},"java":{"insertions":403,"deletions":236}}},{"hash":"187e2da9582ffdeb17279d1bc40037877ec94497","isMergeCommit":false,"messageTitle":"Refactor and add classes to packages","messageBody":"Add files (except for main Duke class) into the duke.* package,\nincluding two subpackages: duke.command and duke.task for command and\ntask-related classes respectively.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":7}}},{"hash":"c7ac49e521ce6b235fca27acbe1298731dad42e6","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027 of https://github.com/nus-cs2103-AY2324S1/ip","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"aec8f7ec25249893a581ba1d5c28ba6b2dd224b4","isMergeCommit":false,"messageTitle":"Add Gradle functionality","messageBody":"Change the main class to Duke and add a sample dummy test function for JUnit testing\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"txt":{"insertions":1,"deletions":0},"java":{"insertions":12,"deletions":0}}},{"hash":"de415dd3316dcf7c4aaa49c305d28859b3abb83f","isMergeCommit":false,"messageTitle":"Add JUnit test cases and fix date formatting bug","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":581,"deletions":9}}},{"hash":"f3dcd3cd87d67161f31504fc96986e06b1fbb356","isMergeCommit":false,"messageTitle":"Add JavaDoc for all Command classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":1}}},{"hash":"840359d0f9f8712500fdec456d5736c551349882","isMergeCommit":false,"messageTitle":"Move Duke class into duke package","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":2,"deletions":4}}},{"hash":"a5687e4efe889d4712bf78feb0a37a814a262ad2","isMergeCommit":false,"messageTitle":"Fix style for Command classes and change to ui.print()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":34}}},{"hash":"30cb8d30981e88ba6593f0d187a1b1efd3b8f075","isMergeCommit":false,"messageTitle":"Fix style for duke and duke.task classes","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}}]},{"date":"2023-08-31","commitResults":[{"hash":"617032483085e79aa632e71954086f7218255b2d","isMergeCommit":false,"messageTitle":"Add JavaDoc for duke and duke.task classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":191,"deletions":8}}},{"hash":"a4c540ad696ba44cf3bee20508f6fd7b24572eed","isMergeCommit":false,"messageTitle":"Add find functionality for Level 9","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"89ec2c1fb1d986869eb21f1982b9f4290d5ca4eb","isMergeCommit":false,"messageTitle":"Add find functionality and test cases for Level 9","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":73,"deletions":9}}},{"hash":"9f6d098271c51844e1ceb8a68eb6628fd90322ac","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/duke/task/Deadline.java\n#\tsrc/main/java/duke/task/Event.java\n","fileTypesAndContributionMap":{}},{"hash":"dcd4616e5a3d6d984f7955ffcd6d216197b9ed2d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"a6724401f92609bf4db03c4ae30d04bab15cda0b","isMergeCommit":false,"messageTitle":"Consolidate changes from A-JavaDoc and Level-9","messageBody":"","tags":["Level-9","A-JavaDoc"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":50,"deletions":1},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2023-09-05","commitResults":[{"hash":"479db4d278fd14fc5aca6c3f2d109b21923b962c","isMergeCommit":false,"messageTitle":"Add Checkstyle XML files","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"953b1a182ec28fa424df3102029ea804d62b295d","isMergeCommit":false,"messageTitle":"Modify files to adhere to checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":11}}},{"hash":"077facaeab4f34086c45cc69b744aa6a5c76f0a7","isMergeCommit":false,"messageTitle":"Modify files to adhere to checkstyle","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"java":{"insertions":176,"deletions":78}}}]},{"date":"2023-09-06","commitResults":[{"hash":"9d841fb08ee91dc91ac5e3d7d842a57402eb7f8f","isMergeCommit":false,"messageTitle":"Implement JavaFX GUI","messageBody":"Add a simple JavaFX GUI inspired by the Duke tutorial\u0027s chatbot layout.\nRemoved most text UI related elements from project and re-did logic to\nuse the new GUI instead of the text UI (commands executed now return a\nString instead of directly getting the UI to print them).\n","fileTypesAndContributionMap":{"gradle":{"insertions":11,"deletions":0},"txt":{"insertions":4,"deletions":0},"fxml":{"insertions":66,"deletions":0},"java":{"insertions":282,"deletions":143}}},{"hash":"11314c3d05e13a2c5c6823edd127d98ed6b9477e","isMergeCommit":false,"messageTitle":"Edit JavaDoc to remove text UI references and refactor MainWindow","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":40,"deletions":22}}}]},{"date":"2023-09-11","commitResults":[{"hash":"06108868a30d2a51f391c4cd3fe9f5bf87a9a2bb","isMergeCommit":false,"messageTitle":"Change Parser to adhere to code quality guideline","messageBody":"The Parser.java file contains a parse() method that parses the commands\ninput by the user into the chatbot. However, it is a very long method\nand could be split up.\n\nThe if-else syntax is replaced by a switch-case syntax with minor\nmodifications to the logic to accommodate this syntax (should not be\nnoticed by users with normal use). This improves code readability.\n\nAdditionally, most multi-statement code is replaced by more private\nstatic methods within the Parser class to ease readability of the\nparse() method even more.\n\nThis fix in code quality was inspired and spearheaded by the comments\nin this PR: https://github.com/nus-cs2103-AY2324S1/ip/pull/288\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":155,"deletions":58}}},{"hash":"84c2c3ddc584c37dda02208408eca9f33147ba7a","isMergeCommit":false,"messageTitle":"Refactor LocalDateTime formatting","messageBody":"Formatting for LocalDateTime is expected to be consistent for the entire\nprogram when displayed to the user in the GUI.\n\nBy introducing a new Formatter utility class with a single static method\nformatDateTime, it reduces the amount of clutter within the methods\nin which they are used. This also ensures consistency in the formatting\nof LocalDateTime as String objects within the GUI.\n\nIn addition, removed unnecessary this.* references from methods when\nreferring to instance fields.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":43,"deletions":14}}},{"hash":"09de4646aacea118587f41015c2ebe444b29867f","isMergeCommit":false,"messageTitle":"Add JUnit test cases for duke.util.Formatter","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}},{"hash":"dcc2c0904c28c1dcb2d9f9e16d1c282d7b1fe566","isMergeCommit":false,"messageTitle":"Add assertions to Parser and MainWindow","messageBody":"To ensure that certain private methods will only be run in certain\nscenarios, assertions are used to enforce a precondition at the start\nof\n\nParser class: Ensure that the different commands parsed, as handled by\ndifferent private methods within the Parser class only happen when the\nmessage starts with the corresponding command message. For example,\nonly inputs starting with \u0027mark\u0027 can trigger the parseMarkCommand()\nprivate static method in Parser and return a MarkCommand object.\n\nMainWindow class: Ensure that the handleExit() method is only run if the\nuser specifies and types \"bye\". Checks if the input message starts with\n\"bye\".\n\nGradle is also configured to handle assertions in this commit.\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"txt":{"insertions":2,"deletions":1},"java":{"insertions":9,"deletions":8}}},{"hash":"66a9204f5d322e40ea5a115f2a4b47a1c606f206","isMergeCommit":false,"messageTitle":"Add stream functionality to TaskList","messageBody":"To improve performance to the TaskList, the pure ArrayList\nimplementation of TaskList has been changed to a more generic java.util.\nList implementation, which also allows for more functional code through\nStreams.\n\nWithin the TaskList, the getSavedStrings() and find() methods have been\nmodified to use stream implementation. Additionally, a new constructor\nfor TaskList based on Stream\u003cTask\u003e has been created.\n\nOther changes:\n- Change test files and other classes to fit the new implementation of\n  TaskList that doesn\u0027t solely rely on ArrayList anymore\n- Change other files to adhere to Checkstyle\n","tags":["A-Streams"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":3},"java":{"insertions":33,"deletions":30}}}]}]},"authorFileTypeContributionMap":{"brein62":{"java":1982,"md":0,"fxml":66,"sh":1,"bat":0,"gradle":16,"txt":41}},"authorContributionVariance":{"brein62":121248.45},"authorDisplayNameMap":{"brein62":"CS2103T-T14-4 KOH ..NDAN"}}
