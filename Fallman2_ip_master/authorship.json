[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Fallman2"},"content":"import java.util.*;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Fallman2"},"content":"    public static String separator \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Fallman2"},"content":"    public static String errorMessage \u003d \"Unfortunately, the circumstances preceding this has necessitated that I issue and apology for the input that I have received is unrecognised.\";","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Fallman2"},"content":"    public static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Fallman2"},"content":"                + \"| |_| | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Fallman2"},"content":"                + \"| ___/| |_| |    | __/\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Fallman2"},"content":"                + \"| |    \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Fallman2"},"content":"                + \"|_|\";","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Fallman2"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Fallman2"},"content":"        System.out.println(\"Salutations! I hereby would like to inform you that my identity is that of\\n\" + logo +","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Fallman2"},"content":"                \"\\nAn exceedingly verbose conversation simulation program.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Fallman2"},"content":"        System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Fallman2"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Fallman2"},"content":"            String command \u003d sc.next();","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Fallman2"},"content":"            System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Fallman2"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Fallman2"},"content":"                if (!sc.nextLine().isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Fallman2"},"content":"                    continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Fallman2"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Fallman2"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Fallman2"},"content":"                if (!sc.nextLine().isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Fallman2"},"content":"                    continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Fallman2"},"content":"                System.out.println(\"Here is the collection of items, previously designated to be known as Tasks, that you have inputted over a previous unspecified period of time\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Fallman2"},"content":"                        \"that may or may not require urgent attention, but will nevertheless necessitate some level of action within an either\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Fallman2"},"content":"                        \"indicated or not indicated time period.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Fallman2"},"content":"                int i \u003d 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Fallman2"},"content":"                for (Task s : list) {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(String.format(\"%d. %s\", i, s.toString()));","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Fallman2"},"content":"                    i++;","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Fallman2"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Fallman2"},"content":"            } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Fallman2"},"content":"                int index \u003d sc.nextInt();","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Fallman2"},"content":"                if (!sc.nextLine().isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Fallman2"},"content":"                    continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Fallman2"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Fallman2"},"content":"                    list.get(index - 1).mark();","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Fallman2"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Fallman2"},"content":"                    continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Fallman2"},"content":"                System.out.println(\"I have been made aware of your desire to indicate that the task numbered \" + index +","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Fallman2"},"content":"                        \" has been since been achieved as of the time at which you hve stipulated as so.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Fallman2"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Fallman2"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"Fallman2"},"content":"                int index \u003d sc.nextInt();","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Fallman2"},"content":"                if (!sc.nextLine().isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Fallman2"},"content":"                    continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"Fallman2"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"Fallman2"},"content":"                    list.get(index - 1).unmark();","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Fallman2"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"Fallman2"},"content":"                    continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"Fallman2"},"content":"                System.out.println(\"Very well. I have acknowledged your request to unmark the task of specified index as having been completed and\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Fallman2"},"content":"                        \"will now proceed to set said task of specified index to be considered as having not yet been completed.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"Fallman2"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"Fallman2"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"Fallman2"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"Fallman2"},"content":"                    list.add(new ToDo(sc.nextLine()));","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"Fallman2"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"Fallman2"},"content":"                    continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"Fallman2"},"content":"                System.out.println(\"Understood. I have hereby created a task known to require doing at a future time but with no such time being specified and inserted it into \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"Fallman2"},"content":"                        \"the overall collection of said tasks that require action.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"Fallman2"},"content":"                        \"Here is a display of the added deadline task: \" + list.get(list.size() - 1) + \"\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"Fallman2"},"content":"                        \"You now, in total, have \" + list.size() + \" of these tasks recorded within said collection.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"Fallman2"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"Fallman2"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"Fallman2"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"Fallman2"},"content":"                    list.add(new Deadline(sc.nextLine().split(\"/\")));","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"Fallman2"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"Fallman2"},"content":"                    continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"Fallman2"},"content":"                System.out.println(\"Understood. I have hereby created a task known to require doing at a future time alongside the stipulated time that you have indicated and inserted it into \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"Fallman2"},"content":"                        \"the overall collection of these tasks that require action.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"Fallman2"},"content":"                        \"Here is a display of the added deadline task: \" + list.get(list.size() - 1) + \"\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"Fallman2"},"content":"                        \"You now, in total, have \" + list.size() + \" of these tasks recorded within said collection.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"Fallman2"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"Fallman2"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"Fallman2"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"Fallman2"},"content":"                    list.add(new Event(sc.nextLine().split(\"/\")));","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"Fallman2"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"Fallman2"},"content":"                    continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"Fallman2"},"content":"                System.out.println(\"Understood. I have hereby created a task known to require doing for a set period of time alongside this stipulated duration that you have indicated and inserted it into \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"Fallman2"},"content":"                        \"the overall collection of these tasks that require action.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"Fallman2"},"content":"                        \"Here is a display of the added deadline task: \" + list.get(list.size() - 1) + \"\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"Fallman2"},"content":"                        \"You now, in total, have \" + list.size() + \" of these tasks recorded within said collection.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"Fallman2"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"Fallman2"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"Fallman2"},"content":"                Task hold;","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"Fallman2"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"Fallman2"},"content":"                    int index \u003d sc.nextInt();","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"Fallman2"},"content":"                    hold \u003d list.get(index - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"Fallman2"},"content":"                    if (!sc.nextLine().isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"Fallman2"},"content":"                        System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"Fallman2"},"content":"                        System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"Fallman2"},"content":"                        continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"Fallman2"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"Fallman2"},"content":"                    list.remove(index - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"Fallman2"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"Fallman2"},"content":"                    System.out.println(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"Fallman2"},"content":"                    continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"Fallman2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"Fallman2"},"content":"                System.out.println(\"I have acknowledged your request to have the task allocated to the specific index at which you have mentioned removed from the collection of all\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"Fallman2"},"content":"                        \"such tasks, colloquially known as your To Do list.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"Fallman2"},"content":"                        \"The task in question that has been deleted is: \" + hold + \"\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"Fallman2"},"content":"                        \"As of this current moment, there are a total of \" + list.size() + \" occurrences of tasks in your list.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"Fallman2"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"Fallman2"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"Fallman2"},"content":"                System.out.println(\"Unfortunately, the circumstances preceding this has necessitated that I issue and apology for the input that I have received is unrecognised.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"Fallman2"},"content":"                System.out.println(separator);","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"Fallman2"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"Fallman2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"Fallman2"},"content":"        System.out.println(\"It appears that the user has decided to close the program as indicated by the command of which this is the function being issued and therefore,\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"Fallman2"},"content":"                \"I shall bid thee farewell and wish thee great fortune in your future endeavors.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"Fallman2"},"content":"class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"Fallman2"},"content":"    protected String tag;","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"Fallman2"},"content":"    protected boolean done;","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"Fallman2"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"Fallman2"},"content":"    protected Task(String tag, String description) throws PukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"Fallman2"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"Fallman2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"Fallman2"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"Fallman2"},"content":"        if (tag.isEmpty() || description.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"Fallman2"},"content":"            throw new PukeException();","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"Fallman2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"Fallman2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"Fallman2"},"content":"    public void mark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"Fallman2"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":157,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"Fallman2"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"Fallman2"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"Fallman2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"Fallman2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"Fallman2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"Fallman2"},"content":"        String status \u003d \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"Fallman2"},"content":"        if (done) {","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"Fallman2"},"content":"            status \u003d \"[X]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"Fallman2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"Fallman2"},"content":"        return String.format(\"%s%s %s\", this.tag, status, this.description);","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"Fallman2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"Fallman2"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"Fallman2"},"content":"class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"Fallman2"},"content":"    private final static String tag \u003d \"[T]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"Fallman2"},"content":"    public ToDo(String desc) throws PukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"Fallman2"},"content":"        super(tag, desc);","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"Fallman2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"Fallman2"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"Fallman2"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"Fallman2"},"content":"    private final static String tag \u003d \"[D]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"Fallman2"},"content":"    private String date;","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"Fallman2"},"content":"    public Deadline(String[] all) throws PukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"Fallman2"},"content":"        super(tag, all[0]);","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"Fallman2"},"content":"        this.date \u003d all[1].split(\"by \")[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"Fallman2"},"content":"        if (this.date.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"Fallman2"},"content":"            throw new PukeException();","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"Fallman2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"Fallman2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":191,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":192,"author":{"gitId":"Fallman2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"Fallman2"},"content":"        return super.toString() + \"(by: \" + this.date + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":194,"author":{"gitId":"Fallman2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"Fallman2"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"Fallman2"},"content":"class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"Fallman2"},"content":"    private static final String tag \u003d \"[E]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"Fallman2"},"content":"    private String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":200,"author":{"gitId":"Fallman2"},"content":"    private String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"Fallman2"},"content":"    public Event(String[] all) throws PukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":203,"author":{"gitId":"Fallman2"},"content":"        super(tag, all[0]);","lastModifiedDate":"2023-08-22"},{"lineNumber":204,"author":{"gitId":"Fallman2"},"content":"        this.from \u003d all[1].split(\"from \")[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"Fallman2"},"content":"        this.to \u003d all[2].split(\"to \")[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":206,"author":{"gitId":"Fallman2"},"content":"        if (this.from.equals(\"\") || this.to.equals(\"\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":207,"author":{"gitId":"Fallman2"},"content":"            throw new PukeException();","lastModifiedDate":"2023-08-22"},{"lineNumber":208,"author":{"gitId":"Fallman2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":209,"author":{"gitId":"Fallman2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":211,"author":{"gitId":"Fallman2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"Fallman2"},"content":"        return super.toString() + \"(from: \" + this.from + \" \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"Fallman2"},"content":"                \"to: \" + this.to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"Fallman2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"Fallman2"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":217,"author":{"gitId":"Fallman2"},"content":"class PukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":218,"author":{"gitId":"Fallman2"},"content":"    public PukeException() {","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"Fallman2"},"content":"        super(\"Unfortunately, the circumstances preceding this has necessitated that I issue and apology for the input that I have received is unrecognised.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":220,"author":{"gitId":"Fallman2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":221,"author":{"gitId":"Fallman2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Fallman2":214,"-":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Fallman2"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Fallman2"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Fallman2"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Fallman2"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Fallman2"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Fallman2"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Fallman2"},"content":"unmark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Fallman2"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Fallman2"},"content":"Inv","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Fallman2"},"content":"list 2","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Fallman2"},"content":"mark 24","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Fallman2"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Fallman2"},"content":"deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Fallman2"},"content":"event","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Fallman2"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Fallman2"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Fallman2"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Fallman2"},"content":"bye","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Fallman2"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Fallman2":19}}]
