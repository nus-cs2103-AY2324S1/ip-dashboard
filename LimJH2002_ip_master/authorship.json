[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJH2002"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LimJH2002"},"content":"    private final String endDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LimJH2002"},"content":"    public Deadline(String taskName, String endDate) {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LimJH2002"},"content":"        super(taskName);","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"LimJH2002"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LimJH2002"},"content":"    public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LimJH2002"},"content":"        return \" [D]\" + (super.isDone ? \"[X] \" : \"[ ] \") +  super.toString() + \" (by: \" + endDate + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LimJH2002"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LimJH2002":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJH2002"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LimJH2002"},"content":"    private String startDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LimJH2002"},"content":"    private String endDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"LimJH2002"},"content":"    public Event(String taskName, String startDate, String endDate) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"LimJH2002"},"content":"        super(taskName);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LimJH2002"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LimJH2002"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LimJH2002"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"LimJH2002"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LimJH2002"},"content":"        return \" [E]\" + (super.isDone ? \"[X] \" : \"[ ] \") +  super.toString() + \" (from: \" + startDate + \" to: \" + endDate + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LimJH2002"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LimJH2002":15}},{"path":"src/main/java/Simon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJH2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"LimJH2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LimJH2002"},"content":"public class Simon {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"LimJH2002"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LimJH2002"},"content":"    private static final String SPACE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LimJH2002"},"content":"    private static final String NSPACE \u003d \"\\n____________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LimJH2002"},"content":"    private static final String SPACEN \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LimJH2002"},"content":"    enum Command {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"LimJH2002"},"content":"        TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE, BYE, UNKNOWN","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LimJH2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"LimJH2002"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"LimJH2002"},"content":"        // Start Program","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"LimJH2002"},"content":"        System.out.println(SPACEN + SimonAscii.toStr());","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"LimJH2002"},"content":"        System.out.println(\"Hello! I\u0027m Simon\\nWhat can I do for you?\\n\" + SPACE);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"LimJH2002"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"LimJH2002"},"content":"            String inData \u003d scan.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"LimJH2002"},"content":"            Command command \u003d parseCommand(inData.split(\" \")[0]);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"LimJH2002"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"LimJH2002"},"content":"                switch (command) {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"LimJH2002"},"content":"                    case LIST:","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"LimJH2002"},"content":"                        listTasks();","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"LimJH2002"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"LimJH2002"},"content":"                    case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"LimJH2002"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"LimJH2002"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"LimJH2002"},"content":"                        addTask(inData, command);","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"LimJH2002"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"LimJH2002"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"LimJH2002"},"content":"                        markTask(inData, false);","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"LimJH2002"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"LimJH2002"},"content":"                    case MARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"LimJH2002"},"content":"                        markTask(inData, true);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"LimJH2002"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"LimJH2002"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"LimJH2002"},"content":"                        deleteTask(inData);","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"LimJH2002"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"LimJH2002"},"content":"                    case BYE:","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"LimJH2002"},"content":"                        System.out.println(\"Bye. Hope to see you again soon!\" + NSPACE);","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"LimJH2002"},"content":"                        return;","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"LimJH2002"},"content":"                    case UNKNOWN:","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"LimJH2002"},"content":"                    default:","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"LimJH2002"},"content":"                        throw new SimonException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"LimJH2002"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"LimJH2002"},"content":"            } catch (SimonException se) {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"LimJH2002"},"content":"                System.out.println(se.getMessage() + NSPACE);","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"LimJH2002"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"LimJH2002"},"content":"    private static Command parseCommand(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"LimJH2002"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"LimJH2002"},"content":"            return Command.valueOf(input.toUpperCase());","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"LimJH2002"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"LimJH2002"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"LimJH2002"},"content":"    private static void listTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"LimJH2002"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"LimJH2002"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"LimJH2002"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"LimJH2002"},"content":"    private static void addTask(String inData, Command commandType) throws SimonException {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"LimJH2002"},"content":"        Task task;","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"LimJH2002"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"LimJH2002"},"content":"            case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"LimJH2002"},"content":"                String description \u003d inData.split(\"todo \").length \u003e 1 ? inData.split(\"todo \")[1] : \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"LimJH2002"},"content":"                if (description.trim().isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"LimJH2002"},"content":"                    throw new SimonException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"LimJH2002"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"LimJH2002"},"content":"                task \u003d new ToDo(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"LimJH2002"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"LimJH2002"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"LimJH2002"},"content":"                String[] deadlineParts \u003d inData.split(\"deadline \");","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"LimJH2002"},"content":"                if (deadlineParts.length \u003c\u003d 1 || !inData.contains(\" /by \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"LimJH2002"},"content":"                    throw new SimonException(\"☹ OOPS!!! The format for deadline is incorrect. Expected format: \u0027deadline [task description] /by [deadline]\u0027.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"LimJH2002"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"LimJH2002"},"content":"                String nameDeadline \u003d deadlineParts.length \u003e 1 ? deadlineParts[1].split(\"/by \")[0] : \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"LimJH2002"},"content":"                if (nameDeadline.trim().isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"LimJH2002"},"content":"                    throw new SimonException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"LimJH2002"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"LimJH2002"},"content":"                String endDate \u003d deadlineParts[1].split(\" /by \").length \u003e 1 ? deadlineParts[1].split(\" /by \")[1] : \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"LimJH2002"},"content":"                if (endDate.trim().isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"LimJH2002"},"content":"                    throw new SimonException(\"☹ OOPS!!! The deadline date cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"LimJH2002"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"LimJH2002"},"content":"                task \u003d new Deadline(nameDeadline, endDate);","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"LimJH2002"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"LimJH2002"},"content":"            case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"LimJH2002"},"content":"                String[] eventParts \u003d inData.split(\"event \");","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"LimJH2002"},"content":"                if (eventParts.length \u003c\u003d 1 || !inData.contains(\"/from \") || !inData.contains(\"/to \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"LimJH2002"},"content":"                    throw new SimonException(\"☹ OOPS!!! The format for event is incorrect. Expected format: \u0027event [event description] /from [start date] /to [end date]\u0027.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"LimJH2002"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"LimJH2002"},"content":"                String[] fromToParts \u003d eventParts[1].split(\"/from \");","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"LimJH2002"},"content":"                if (fromToParts.length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"LimJH2002"},"content":"                    throw new SimonException(\"☹ OOPS!!! The format for event is missing \u0027from\u0027 information.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"LimJH2002"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"LimJH2002"},"content":"                String eventName \u003d fromToParts[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"LimJH2002"},"content":"                if (eventName.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"LimJH2002"},"content":"                    throw new SimonException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"LimJH2002"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"LimJH2002"},"content":"                String[] toParts \u003d fromToParts[1].split(\"er/to \");","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"LimJH2002"},"content":"                if (toParts.length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"LimJH2002"},"content":"                    throw new SimonException(\"☹ OOPS!!! The format for event is missing \u0027to\u0027 information.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"LimJH2002"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"LimJH2002"},"content":"                String startDate \u003d toParts[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"LimJH2002"},"content":"                String endDateEvent \u003d toParts[1].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"LimJH2002"},"content":"                task \u003d new Event(eventName, startDate, endDateEvent);","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"LimJH2002"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"LimJH2002"},"content":"            default:","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"LimJH2002"},"content":"                throw new SimonException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"LimJH2002"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"LimJH2002"},"content":"        System.out.println(SPACEN + \"Got it. I\u0027ve added this task:\\n\" + \" \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"LimJH2002"},"content":"                task + String.format(\"\\nNow you have %d %s in the list.\",","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"LimJH2002"},"content":"                tasks.size(), tasks.size() \u003e 1 ? \"tasks\" : \"task\") + NSPACE);","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"LimJH2002"},"content":"    private static void markTask(String inData, boolean markAsDone) throws SimonException {","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"LimJH2002"},"content":"        String[] split \u003d inData.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"LimJH2002"},"content":"        int index;","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"LimJH2002"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"LimJH2002"},"content":"            index \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"LimJH2002"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"LimJH2002"},"content":"            throw new SimonException(\"Please provide a valid task number.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"LimJH2002"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"LimJH2002"},"content":"            throw new SimonException(\"Please provide a task number.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"LimJH2002"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"LimJH2002"},"content":"            throw new SimonException(\"There are no tasks to mark.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"LimJH2002"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"LimJH2002"},"content":"            throw new SimonException(\"Invalid task number. Choose a number between 1 and \" + tasks.size() + \".\");","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"LimJH2002"},"content":"        if (markAsDone) {","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"LimJH2002"},"content":"            tasks.get(index).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"LimJH2002"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n[X] \" + tasks.get(index) + NSPACE);","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"LimJH2002"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"LimJH2002"},"content":"            tasks.get(index).markAsUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"LimJH2002"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n[ ] \" + tasks.get(index) + NSPACE);","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"LimJH2002"},"content":"    private static void deleteTask(String inData) throws SimonException {","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"LimJH2002"},"content":"        String[] split \u003d inData.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"LimJH2002"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"LimJH2002"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"LimJH2002"},"content":"            index \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"LimJH2002"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"LimJH2002"},"content":"            throw new SimonException(\"Please provide a valid task number.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"LimJH2002"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"LimJH2002"},"content":"            throw new SimonException(\"Please provide a task number.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"LimJH2002"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"LimJH2002"},"content":"            throw new SimonException(\"There are no tasks to delete.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"LimJH2002"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"LimJH2002"},"content":"            throw new SimonException(\"Invalid task number. Choose a number between 1 and \" + tasks.size() + \".\");","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"LimJH2002"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"LimJH2002"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"LimJH2002"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"LimJH2002"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task + String.format(\"\\nNow you have %d %s in the list.\",","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"LimJH2002"},"content":"                tasks.size(), tasks.size() - 1 \u003e 1 ? \"tasks\" : \"task\") + NSPACE);","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"LimJH2002"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LimJH2002":192}},{"path":"src/main/java/SimonAscii.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJH2002"},"content":"public class SimonAscii {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LimJH2002"},"content":"    private static final String name \u003d","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LimJH2002"},"content":"            \"     _______. __  .___  ___.   ______   .__   __. \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LimJH2002"},"content":"                    \"    /       ||  | |   \\\\/   |  /  __  \\\\  |  \\\\ |  | \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"LimJH2002"},"content":"                    \"   |   (----`|  | |  \\\\  /  | |  |  |  | |   \\\\|  | \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"LimJH2002"},"content":"                    \"    \\\\   \\\\    |  | |  |\\\\/|  | |  |  |  | |  . `  | \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LimJH2002"},"content":"                    \".----)   |   |  | |  |  |  | |  `--\u0027  | |  |\\\\   | \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LimJH2002"},"content":"                    \"|_______/    |__| |__|  |__|  \\\\______/  |__| \\\\__| \\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LimJH2002"},"content":"    public static String toStr() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LimJH2002"},"content":"        return name;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LimJH2002"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LimJH2002":13}},{"path":"src/main/java/SimonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJH2002"},"content":"class SimonException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LimJH2002"},"content":"    public SimonException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LimJH2002"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"LimJH2002"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LimJH2002":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJH2002"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"LimJH2002"},"content":"    public String taskName;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"LimJH2002"},"content":"    public boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"LimJH2002"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"LimJH2002"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"LimJH2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"LimJH2002"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"LimJH2002"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"LimJH2002"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"LimJH2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"LimJH2002"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"LimJH2002"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"LimJH2002"},"content":"        return this.taskName;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"LimJH2002"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LimJH2002":22}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJH2002"},"content":"public class ToDo extends  Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LimJH2002"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LimJH2002"},"content":"        super(taskName);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"LimJH2002"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"LimJH2002"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LimJH2002"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LimJH2002"},"content":"        return \" [T]\" + (super.isDone ? \"[X] \" : \"[ ] \") +  super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LimJH2002"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LimJH2002"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LimJH2002":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LimJH2002"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LimJH2002"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LimJH2002"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LimJH2002"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"LimJH2002"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"LimJH2002"},"content":"unknowncommand","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LimJH2002"},"content":"mark 5","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LimJH2002"},"content":"unmark 5","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LimJH2002"},"content":"delete 1","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LimJH2002"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LimJH2002"},"content":"delete 5","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"LimJH2002"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LimJH2002"},"content":"deadline submit report","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LimJH2002"},"content":"event team lunch /from Tue 12pm","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LimJH2002"},"content":"delete abc","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"LimJH2002"},"content":"todo This is a very long description just to test Simon\u0027s ability to handle long inputs without breaking or malfunctioning in any way","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"LimJH2002"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"LimJH2002"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"LimJH2002"},"content":"deadline /by next Monday","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"LimJH2002"},"content":"event team dinner /from Wed 8pm","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"LimJH2002"},"content":"mark xyz","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"LimJH2002"},"content":"unmark abc","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"LimJH2002"},"content":"unmark 10","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"LimJH2002"},"content":"mark 10","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"LimJH2002"},"content":"deadline /by","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"LimJH2002"},"content":"event /from Thu 9am /to 11am","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"LimJH2002"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"LimJH2002"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LimJH2002":28}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"LimJH2002"},"content":"java -classpath ../bin Simon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LimJH2002":1,"-":37}}]
