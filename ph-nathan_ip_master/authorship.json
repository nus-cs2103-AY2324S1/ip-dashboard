[{"path":"data/Pippi.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"E | 1 | project meeting | Mon 2pm to 4pm","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"T | 0 | borrow book","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"D | 1 | return book | Sunday","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ph-nathan":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"    private String due;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"    public Deadline(String desc, String due) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"        this.due \u003d due;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.due + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    // D | 0 | return book | June 6th","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"    public String toMemory() { return \"D \" + super.getStatus() + super.getDescription() + \" | \" + due; }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":16}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"    private String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"    private String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"    public Event(String desc, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \"to: \" + this.end + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    public String toMemory() { return \"E \" + super.getStatus() + super.getDescription() + \" | \" + start + \"to \" + end; }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":17}},{"path":"src/main/java/Pippi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"public class Pippi {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    private String pippi \u003d  \"⣿⡿⠷⣶⣤⣄⡀⠀⠀⠀⢀⣤⣶⣿⣿⣿⣿⣶⣤⡀⠀⠀⠀⢀⣠⣤⣶⠾⢿⣿\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"            \"⣿⡇⠀⠀⣨⣿⣿⣷⠀⢠⣿⣿⠿⠋⢉⡉⠙⠿⣿⣿⣄⣤⣾⣿⣿⣅⠀⠀⢸⣿\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"            \"⢸⣧⠀⣰⣿⣿⣿⡏⢀⣿⣿⡏⢠⣾⣿⣿⣷⡄⢹⣿⣿⣿⣿⣿⣿⣿⣆⠀⣼⡇\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"            \"⠈⣿⣴⣿⣿⣿⣿⡇⠈⣿⣿⣧⣾⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣦⣿⠁\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"            \"⠀⢹⣿⣿⣿⣿⣿⣿⣄⠙⢿⣿⣿⣿⣿⣿⠏⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"            \"⠀⠀⢻⣿⣿⣿⣿⣿⣿⣶⣄⣈⠉⠉⣉⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"            \"⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⡏⢹⣿⣿⣿⣿⡏⢹⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"            \"⣴⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣧⣼⣿⣿⣿⣿⣧⣼⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣦\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"            \"⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⡉⠛⠛⢉⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"            \"⠈⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠁\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"            \"⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"            \"⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"            \"⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"            \"⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⠿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀\";","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    private boolean inPokeball \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    private static final String filePath \u003d \"./data/Pippi.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    public void wrapText(String content) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"        String line \u003d \"_____________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"        System.out.println(line + content + \"\\n\" + line);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    public ArrayList\u003cTask\u003e read() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        FileReader fr \u003d new FileReader(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"        BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"        while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"            String[] parts \u003dline.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"            if (parts.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"                continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"            String status \u003d parts[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"            switch (type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"                    ToDo t \u003d new ToDo(parts[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"                    // System.out.println(status);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"                        // System.out.println(\"called\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"                        t.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"                    tasks.add(t);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"                    Deadline d \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"                        d.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"                    tasks.add(d);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"                    String start \u003d parts[3].split(\"to \")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"                    String end \u003d parts[3].split(\"to \")[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"                    Event e \u003d new Event(parts[2], start, end);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"                        e.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"                    tasks.add(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"        // FileReader will open that file from that","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"        // directory, if there is no file found it will","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"        // throw an IOException","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"            System.out.println(\"No file found exception\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ph-nathan"},"content":"    public void update(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ph-nathan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ph-nathan"},"content":"            // Creating a FileWriter object","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":"            String all \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"                Task curr \u003d tasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"                all \u003d all + curr.toMemory() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"            fw.write(all);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"            System.out.println(\"File input/output not found exception\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"    public void reply(String userMessage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":"            String[] input \u003d userMessage.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":"            String command \u003d input[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"            switch (command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"                case \"bye\":","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"                    wrapText(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"                    this.inPokeball \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"                    if ((input.length \u003c 2) || input[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"ph-nathan"},"content":"                        wrapText(\"Moonblast!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"ph-nathan"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"ph-nathan"},"content":"                    ToDo td \u003d new ToDo(input[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"ph-nathan"},"content":"                    tasks.add(td);","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"ph-nathan"},"content":"                    update(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"ph-nathan"},"content":"                    wrapText(\"Got it. I\u0027ve added this task:\\n\" + td.toString() +","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"ph-nathan"},"content":"                            \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"ph-nathan"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"ph-nathan"},"content":"                    if (input.length \u003c 2 || input[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"ph-nathan"},"content":"                        throw new PippiException(\"Metronome!!! The description and due time of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"ph-nathan"},"content":"                    if (input[1].split(\"/by\").length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"ph-nathan"},"content":"                        throw new PippiException(\"Metronome!!! Due time or description is missing\");","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"ph-nathan"},"content":"                    String title \u003d input[1].split(\"/by \")[0].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"ph-nathan"},"content":"                    String due \u003d input[1].split(\"/by \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"ph-nathan"},"content":"                    Deadline dl \u003d new Deadline(title, due);","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"ph-nathan"},"content":"                    tasks.add(dl);","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"ph-nathan"},"content":"                    update(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"ph-nathan"},"content":"                    wrapText(\"Got it. I\u0027ve added this task:\\n\" + dl.toString() +","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"ph-nathan"},"content":"                            \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"ph-nathan"},"content":"                case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"ph-nathan"},"content":"                    if (input.length \u003c 2 || input[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"ph-nathan"},"content":"                        throw new PippiException(\"Pound!!! The description and start, end time of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"ph-nathan"},"content":"                    if (input[1].split(\"/from\").length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"ph-nathan"},"content":"                        throw new PippiException(\"Pound!!! Event title or duration is missing\");","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"ph-nathan"},"content":"                    String evTitle \u003d input[1].split(\"/from \")[0].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"ph-nathan"},"content":"                    String duration \u003d input[1].split(\"/from \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"ph-nathan"},"content":"                    if (duration.split(\"/to \").length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"ph-nathan"},"content":"                        throw new PippiException(\"Pound!!! Start or end time is missing\");","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"ph-nathan"},"content":"                    String start \u003d duration.split(\"/to \")[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"ph-nathan"},"content":"                    String end \u003d duration.split(\"/to \")[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"ph-nathan"},"content":"                    Event event \u003d new Event(evTitle, start, end);","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"ph-nathan"},"content":"                    tasks.add(event);","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"ph-nathan"},"content":"                    update(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"ph-nathan"},"content":"                    wrapText(\"Got it. I\u0027ve added this task:\\n\" + event.toString() +","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"ph-nathan"},"content":"                            \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"ph-nathan"},"content":"                case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"ph-nathan"},"content":"                    String all \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"ph-nathan"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"ph-nathan"},"content":"                        Task curr \u003d tasks.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"ph-nathan"},"content":"                        all \u003d all + String.valueOf(i + 1) + \".\" + curr.toString() + \"\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"ph-nathan"},"content":"                    wrapText(\"Here are the tasks in your list:\\n\" + all);","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"ph-nathan"},"content":"                case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"ph-nathan"},"content":"                    int idx \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"ph-nathan"},"content":"                    tasks.get(idx).mark();","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"ph-nathan"},"content":"                    wrapText(\"Nice I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"ph-nathan"},"content":"                            tasks.get(idx).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"ph-nathan"},"content":"                    update(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"ph-nathan"},"content":"                case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"ph-nathan"},"content":"                    int id \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"ph-nathan"},"content":"                    tasks.get(id).unmark();","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"ph-nathan"},"content":"                    wrapText(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"ph-nathan"},"content":"                            tasks.get(id).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"ph-nathan"},"content":"                    update(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"ph-nathan"},"content":"                case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"ph-nathan"},"content":"                    int i \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"ph-nathan"},"content":"                    wrapText(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"ph-nathan"},"content":"                            tasks.get(i).toString() +","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"ph-nathan"},"content":"                            \"\\nNow you have \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"ph-nathan"},"content":"                    tasks.remove(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"ph-nathan"},"content":"                    update(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"ph-nathan"},"content":"                default:","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"ph-nathan"},"content":"                    wrapText(\"Amnesia!!! I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"        } catch (PippiException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"ph-nathan"},"content":"            wrapText(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"ph-nathan"},"content":"    public void start() {","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"ph-nathan"},"content":"        wrapText(\"Hello trainer, I\u0027m Pippi!\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"ph-nathan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d read();","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"ph-nathan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"ph-nathan"},"content":"        while (!this.inPokeball) {","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"ph-nathan"},"content":"            String userMessage \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"ph-nathan"},"content":"            String[] input \u003d userMessage.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"ph-nathan"},"content":"            reply(userMessage, tasks);","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"ph-nathan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"ph-nathan"},"content":"        Pippi pippi \u003d new Pippi();","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"ph-nathan"},"content":"        pippi.start();","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ph-nathan":207}},{"path":"src/main/java/PippiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"public class PippiException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"    public PippiException(String err) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"        super(err);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"        return (this.isDone ? \"| 1 | \" : \"| 0 | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"        return this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    public String toMemory() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        return this.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"    };","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        return this.getStatusIcon() + this.getDescription();","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":36}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    public String toMemory() { return \"T \" + super.getStatus() + super.getDescription(); }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"java -classpath ..\\bin Pippi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ph-nathan":1,"-":20}}]
