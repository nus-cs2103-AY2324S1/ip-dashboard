[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"    mainClass.set(\"pippi.Launcher\")","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"    archiveBaseName \u003d \"pippi\"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"javafx {","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"    version \u003d \"17\"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"checkstyle {","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ph-nathan":27,"-":39}},{"path":"data/Pippi.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"D | 1 | return book | 2019-10-15","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"E | 0 | project meeting | Mon 2pm to 4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"T | 0 | borrow water","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"T | 0 | a","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"ph-nathan":4}},{"path":"src/main/java/pippi/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"    public static DialogBox getPippiDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ph-nathan":61}},{"path":"src/main/java/pippi/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ph-nathan":13}},{"path":"src/main/java/pippi/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":" * A GUI for Pippi using FXML.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    private Pippi pippi \u003d new Pippi();","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"            stage.setTitle(\"Pippi\");","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPippi(pippi);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ph-nathan":32}},{"path":"src/main/java/pippi/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import pippi.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    private Pippi pippi;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser-removebg.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    private Image pippiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaPippi-removebg.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        dialogContainer.getChildren().add(DialogBox.getPippiDialog(Ui.helloMessage(), pippiImage));","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    public void setPippi(Pippi p) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        pippi \u003d p;","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        String response \u003d pippi.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        assert input !\u003d null : \"User input should not be null\";","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"        assert userImage !\u003d null : \"User image should not be null\";","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"                DialogBox.getPippiDialog(response, pippiImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ph-nathan":53}},{"path":"src/main/java/pippi/Pippi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import pippi.parser.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import pippi.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import pippi.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":" * The Pippi class represents the main controller of the Pippi chatbot application.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":" *","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":" * @author Nathan","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"public class Pippi {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"     * Constructs a Pippi instance and loading tasks from storage as","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"     * it is instantiated","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    public Pippi() {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        tasks \u003d Storage.readTask();","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"        return Parser.reply(userInput, tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ph-nathan":28}},{"path":"src/main/java/pippi/PippiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":" * The PippiException class represents an exception thrown by the Pippi chatbot application.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":" *","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":" * @author Nathan","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"public class PippiException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    public PippiException(String err) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"        super(err);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":12}},{"path":"src/main/java/pippi/parser/DateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":" * The DateFormatter class is responsible for all tasks related to date format conversion and validity check.","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":" *","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":" * @author Nathan","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"public class DateFormatter {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    public static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"     * Returns a LocalDate representation of the input String","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"     * @param date String of date in yyyy-MM-dd format","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"     * @return LocalDate","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    public static LocalDate convertStringToLocalDate(String date) {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"        return LocalDate.parse(date, FORMAT);","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"     * Returns a String representation of the input LocalDate","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"     * @param date LocalDate","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"     * @return String in MMM dd yyyy format","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"    public static String convertDateToString(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"     * Returns true if date string is in valid format of yyyy-MM-dd","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"     * @param date String of input date","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"     * @return boolean value of whether string is in correct format","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"    public static boolean isValidFormat(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"            LocalDate.parse(date, FORMAT);","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ph-nathan":47}},{"path":"src/main/java/pippi/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import pippi.PippiException;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import pippi.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import pippi.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import pippi.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import pippi.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import pippi.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import pippi.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":" * The Parser class is responsible for parsing user input and generating the reply.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":" *","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":" * @author Nathan","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"     * Parses the input to generate reply","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"     * @param userInput The input provided by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"     * @return A String of the reply message.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    public static String reply(String userInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"        String output;","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"        String[] input \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"        String command \u003d input[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        switch (command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"            output \u003d Ui.wrapText(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"            if ((input.length \u003c 2) || input[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"                output \u003d Ui.wrapText(\"Moonblast!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"            ToDo td \u003d new ToDo(input[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"            tasks.add(td);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"            Storage.updateTask(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"            output \u003d Ui.wrapText(\"Got it. I\u0027ve added this task:\\n\" + td.toString()","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"                        + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"            if (input.length \u003c 2 || input[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"                output \u003d \"Metronome!!! The description and due time of a deadline cannot be empty.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"            if (input[1].split(\"/by\").length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"                output \u003d \"Metronome!!! Due time or description is missing\";","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"            String title \u003d input[1].split(\"/by \")[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"            String due \u003d input[1].split(\"/by \")[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"            if (!DateFormatter.isValidFormat(due)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"                output \u003d \"Please enter due in format yyyy-mm-dd\";","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"            Deadline dl \u003d new Deadline(title, DateFormatter.convertStringToLocalDate(due));","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"            tasks.add(dl);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"            Storage.updateTask(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"            output \u003d Ui.wrapText(\"Got it. I\u0027ve added this task:\\n\" + dl.toString()","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"                        + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"            if (input.length \u003c 2 || input[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"                output \u003d \"Pound!!! The description and start, end time of an event cannot be empty.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"            if (input[1].split(\"/from\").length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"                output \u003d \"Pound!!! pippi.task.Event title or duration is missing\";","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"            String evTitle \u003d input[1].split(\"/from \")[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"            String duration \u003d input[1].split(\"/from \")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"            if (duration.split(\"/to \").length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"                output \u003d \"Pound!!! Start or end time is missing\";","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"ph-nathan"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ph-nathan"},"content":"            String start \u003d duration.split(\"/to \")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ph-nathan"},"content":"            String end \u003d duration.split(\"/to \")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"            Event event \u003d new Event(evTitle, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":"            tasks.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"            Storage.updateTask(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"            output \u003d Ui.wrapText(\"Got it. I\u0027ve added this task:\\n\" + event.toString()","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"                        + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"            String all \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"                Task curr \u003d tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"                all \u003d all + String.valueOf(i + 1) + \".\" + curr.toString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"            output \u003d Ui.wrapText(\"Here are the tasks in your list:\\n\" + all);","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"            int idx \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":"            assert tasks.get(idx) !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":"            tasks.get(idx).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"            output \u003d Ui.wrapText(\"Nice I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"                        + tasks.get(idx).toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"            Storage.updateTask(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"            int id \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"            assert tasks.get(id) !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"ph-nathan"},"content":"            tasks.get(id).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"ph-nathan"},"content":"            output \u003d Ui.wrapText(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"ph-nathan"},"content":"                        + tasks.get(id).toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"ph-nathan"},"content":"            Storage.updateTask(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"ph-nathan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"ph-nathan"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"ph-nathan"},"content":"            String keyword \u003d input[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"ph-nathan"},"content":"            String found \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"ph-nathan"},"content":"            int count \u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"ph-nathan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"ph-nathan"},"content":"                Task curr \u003d tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"ph-nathan"},"content":"                if (curr.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"ph-nathan"},"content":"                    found \u003d found + String.valueOf(count) + \".\" + curr.toString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"ph-nathan"},"content":"                    count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"ph-nathan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"ph-nathan"},"content":"            output \u003d Ui.wrapText(\"Here are the matching tasks in your list:\\n\" + found);","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"ph-nathan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"ph-nathan"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"ph-nathan"},"content":"            int i \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"ph-nathan"},"content":"            output \u003d Ui.wrapText(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"ph-nathan"},"content":"                        + tasks.get(i).toString()","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"ph-nathan"},"content":"                        + \"\\nNow you have \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"ph-nathan"},"content":"            tasks.remove(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"ph-nathan"},"content":"            Storage.updateTask(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"ph-nathan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"ph-nathan"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"ph-nathan"},"content":"            output \u003d Ui.wrapText(\"Amnesia!!! I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"ph-nathan"},"content":"        return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ph-nathan":140}},{"path":"src/main/java/pippi/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import pippi.parser.DateFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import pippi.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import pippi.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"import pippi.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import pippi.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":" * The Storage class supports methods for reading tasks from storage","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":" * and storing tasks into storage.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":" *","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":" * @author Nathan","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    private static final String FILE_PATH \u003d \"./data/Pippi.txt\";","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"     * Returns an array list of tasks stored in the Pippi.txt file","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"     * (array is empty if file is empty or not found)","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"     * @return Array List of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"    public static ArrayList\u003cTask\u003e readTask() {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"            // FileReader will open that file from that","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"            // directory, if there is no file found it will","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"            // throw an IOException","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"            FileReader fr \u003d new FileReader(FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"                String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"                if (parts.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"                    continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"                String status \u003d parts[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"                switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"                case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"                    ToDo t \u003d new ToDo(parts[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"                        t.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"                    tasks.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"                case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"                    Deadline d \u003d new Deadline(parts[2],","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"                            DateFormatter.convertStringToLocalDate(parts[3].trim()));","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"                        d.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"                    tasks.add(d);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"                case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"                    String start \u003d parts[3].split(\"to \")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"                    String end \u003d parts[3].split(\"to \")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"                    Event e \u003d new Event(parts[2], start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"                        e.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"                    tasks.add(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"                default:","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"                    System.out.println(\"Data read is in wrong format\");","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"            System.out.println(\"No file found exception\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"ph-nathan"},"content":"     * Updates the memory when a task is modified or added","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"ph-nathan"},"content":"     * @param tasks (an array list of tasks after updated)","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"    public static void updateTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"            String all \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"            for (Task curr : tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"                all \u003d all + curr.toMemory() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"            fw.write(all);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"            System.out.println(\"File input/output not found exception\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ph-nathan":98}},{"path":"src/main/java/pippi/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import pippi.parser.DateFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":" * The Deadline class represents a specific type of task","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":" * that aside from description also includes specified","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":" * due time","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":" *","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":" * @author Nathan","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    private LocalDate due;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"     * Constructs a Deadline instance with a description and due period.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"     * @param desc The description of the Deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"     * @param due The due of the Deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    public Deadline(String desc, LocalDate due) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"        this.due \u003d due;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"     * Returns the String representation of a deadline task to the UI","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"     * @return Deadline string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateFormatter.convertDateToString(due) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"     * Returns the String representation of a deadline task written to the memory","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"     * @return Deadline string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    public String toMemory() {","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        return \"D \" + super.getStatus()","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"            + super.getDescription() + \" | \" + due.format(DateFormatter.FORMAT);","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":45}},{"path":"src/main/java/pippi/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":" * The Event class represents a specific type of task","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":" * that aside from description also includes specified","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":" * start and end time","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":" *","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":" * @author Nathan","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"    private String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    private String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"     * Constructs an Event instance with a description, start and end period.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"     * @param desc The description of the Event","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"     * @param start the start of the Event","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"     * @param end the end of the Event","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    public Event(String desc, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"     * Returns the String representation of an event task to the UI","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"     * @return Event string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \"to: \" + this.end + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"     * Returns the String representation of an event task written to the memory","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"     * @return Event string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    public String toMemory() {","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        return \"E \" + super.getStatus() + super.getDescription() + \" | \" + start + \"to \" + end;","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":44}},{"path":"src/main/java/pippi/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":" * The Task class represents the overarching task representation","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":" *","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":" * @author Nathan","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    private String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"     * Constructs a Task instance with the specified task description.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"     * Returns the completion status of a task presented to the UI","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"     * @return completion status string of a task","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"     * Returns the completion status of a task written to memory","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"     * @return completion status string of a task","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        return (this.isDone ? \"| 1 | \" : \"| 0 | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"     * Returns the description of a task","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"     * @return description string of a task","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        return this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"     * Marks the status of a task as done","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"     * Marks the status of a task as not done","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"    public String toMemory() {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"        return this.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"     * Returns the common representation of a task to the UI","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"     * @return Task string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"        return this.getStatusIcon() + this.getDescription();","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":72}},{"path":"src/main/java/pippi/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":" * The ToDo class represents a specific type of task","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":" * that doesn\u0027t include anything aside from task description","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":" *","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":" * @author Nathan","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"     * Constructs a ToDo instance with the specified ToDo description.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"     * Returns the String representation of a ToDo task to the UI","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"     * @return ToDo string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"     * Returns the String representation of a ToDo task written to the memory","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"     * @return ToDo string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    public String toMemory() {","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        return \"T \" + super.getStatus() + super.getDescription();","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":36}},{"path":"src/main/java/pippi/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"     * Wraps responses in upper and lower lines","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"    public static String wrapText(String content) {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"        String line \u003d \"\";","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"        String output \u003d line + content + \"\\n\" + line;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"        return output;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    public static String helloMessage() {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"        return \"Hello trainer, I\u0027m Pippi!\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ph-nathan":18}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ph-nathan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"pippi.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ph-nathan":19}},{"path":"src/test/java/pippi/PippiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"public class PippiTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ph-nathan":18}},{"path":"src/test/java/pippi/parser/DateFormatterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"public class DateFormatterTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    public void testConvertToLocalDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"        String inputDate \u003d \"2023-08-31\";","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2023, 8, 31);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"        LocalDate result \u003d DateFormatter.convertStringToLocalDate(inputDate);","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedDate, result);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    public void testConvertDateToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"        LocalDate inputDate \u003d LocalDate.of(2023, 8, 31);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"        String expectedString \u003d \"Aug 31 2023\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"        String result \u003d DateFormatter.convertDateToString(inputDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedString, result);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    public void testIsValidFormatValidDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        String validDate \u003d \"2023-08-31\";","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        boolean isValid \u003d DateFormatter.isValidFormat(validDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(isValid);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"    public void testIsValidFormatInvalidDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        String invalidDate \u003d \"2023-13-31\"; // Invalid month (13)","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        boolean isValid \u003d DateFormatter.isValidFormat(invalidDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(isValid);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ph-nathan":49}},{"path":"src/test/java/pippi/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package pippi.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    public void setUp() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"        task \u003d new Task(\"Sample task\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    public void testConstructor() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"Sample task\", task.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"[ ] \", task.getStatusIcon());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"        task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"[X] \", task.getStatusIcon());","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"    public void testUnmark() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"        task.unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"[ ] \", task.getStatusIcon());","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"[ ] \", task.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"        task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"[X] \", task.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"    public void testGetStatus() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"| 0 | \", task.getStatus());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"| 1 | \", task.getStatus());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"[ ] Sample task\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"[X] Sample task\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    public void testToMemory() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(\"[ ] Sample task\", task.toMemory());","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ph-nathan":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ph-nathan":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"java -classpath ..\\bin Pippi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ph-nathan":1,"-":20}}]
