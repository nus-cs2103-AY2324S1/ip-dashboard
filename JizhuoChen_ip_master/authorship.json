[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"    applicationDefaultJvmArgs \u003d [\u0027-ea\u0027]","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"mainClassName \u003d \u0027Launcher\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"    archiveBaseName \u003d \"duke2.0\"","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"    archiveFileName \u003d \u0027duke2.0.jar\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"    jvmArgs \u0027-ea\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JizhuoChen":26,"-":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"import duke.DialogBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"import duke.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import duke.TaskMaster;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"     * Initializes the primary stage and sets up the user interface components for the chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"     * This method constructs the main chat window layout and binds actions to user input fields","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"     * and buttons. It also sets up the initial properties for the main window and UI components.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"        assertImage();","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"        TaskMaster.initialStorage(\"Data\");","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"        stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"        // set the scrollPane to always be at the bottom","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"JizhuoChen"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"            scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"JizhuoChen"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"JizhuoChen"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"JizhuoChen"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"JizhuoChen"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"        addDukeMessage(this.ui.sayhi());","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"JizhuoChen"},"content":"        //p3.0","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"JizhuoChen"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"JizhuoChen"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"JizhuoChen"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"JizhuoChen"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"JizhuoChen"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"JizhuoChen"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"JizhuoChen"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"JizhuoChen"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"        //p3.1","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"JizhuoChen"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"JizhuoChen"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"JizhuoChen"},"content":"    private void assertImage() {","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"JizhuoChen"},"content":"        // Use assert to check for failing of loading images","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"JizhuoChen"},"content":"        assert user !\u003d null : \"User image is not loaded properly.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"JizhuoChen"},"content":"        assert duke !\u003d null : \"Duke image is not loaded properly.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"JizhuoChen"},"content":"     * Creates a label with the given text and enables word wrap.","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"JizhuoChen"},"content":"     * This label is typically used for displaying messages in the chat interface.","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"JizhuoChen"},"content":"     * @param text The message text to be displayed in the label.","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"JizhuoChen"},"content":"     * @return A new label containing the specified text with word wrap enabled.","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"JizhuoChen"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"JizhuoChen"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"JizhuoChen"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"JizhuoChen"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"JizhuoChen"},"content":"     * Handles user input by echoing it and displaying Duke\u0027s response.","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"JizhuoChen"},"content":"     * After a user sends a message, this method processes the input, displays the user\u0027s message","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"JizhuoChen"},"content":"     * and Duke\u0027s reply in the chat interface. If the user\u0027s command is \"bye\", it will also initiate","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"JizhuoChen"},"content":"     * an exit sequence after a short delay.","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"JizhuoChen"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"JizhuoChen"},"content":"        // Check for null user input","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"JizhuoChen"},"content":"        assert userInput.getText() !\u003d null : \"User input field is not initialized.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"JizhuoChen"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"JizhuoChen"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"JizhuoChen"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(userText, new ImageView(user));","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"JizhuoChen"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(dukeText, new ImageView(duke));","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"JizhuoChen"},"content":"        //set the padding between each dialogBox","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"JizhuoChen"},"content":"        VBox.setMargin(userDialog, new Insets(15));","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"JizhuoChen"},"content":"        VBox.setMargin(dukeDialog, new Insets(15));","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"JizhuoChen"},"content":"        dialogContainer.getChildren().addAll(userDialog, dukeDialog);","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"JizhuoChen"},"content":"        if (userInput.getText().equals(\"bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"JizhuoChen"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"JizhuoChen"},"content":"            delay.setOnFinished(event -\u003e Platform.exit()); // Close the app after the delay","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"JizhuoChen"},"content":"            delay.play();","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"JizhuoChen"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"JizhuoChen"},"content":"     * Generates a response based on user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"JizhuoChen"},"content":"     * This method checks for specific commands such as \"bye\" and returns a respective response from Duke.","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"JizhuoChen"},"content":"     * For other inputs, it processes the command using the TaskMaster and Parser classes and returns the","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"JizhuoChen"},"content":"     * corresponding response.","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"JizhuoChen"},"content":"     * @param input The command inputted by the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"JizhuoChen"},"content":"     * @return A string response based on the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"JizhuoChen"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"JizhuoChen"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Input command is null or empty.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"JizhuoChen"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"JizhuoChen"},"content":"            return this.ui.saybye();","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":174,"author":{"gitId":"JizhuoChen"},"content":"        TaskMaster.masterTasks(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":175,"author":{"gitId":"JizhuoChen"},"content":"        return Parser.getResponse();","lastModifiedDate":"2023-09-07"},{"lineNumber":176,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":179,"author":{"gitId":"JizhuoChen"},"content":"     * Adds a message from Duke to the chat interface.","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"JizhuoChen"},"content":"     * This method creates a dialog box containing Duke\u0027s message and displays it in the dialog container.","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"JizhuoChen"},"content":"     * @param text The message from Duke to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"JizhuoChen"},"content":"    private void addDukeMessage(String text) {","lastModifiedDate":"2023-09-07"},{"lineNumber":185,"author":{"gitId":"JizhuoChen"},"content":"        Label dukeText \u003d new Label(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"JizhuoChen"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(dukeText, new ImageView(duke));","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"JizhuoChen"},"content":"        dialogContainer.getChildren().add(dukeDialog);","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JizhuoChen":187,"-":2}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"JizhuoChen":10}},{"path":"src/main/java/duke/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":" * Represents a custom date-time utility to handle and format date and time values.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"public class DateTime {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"    /** Formatter for the date representation. */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    private DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"    /** Formatter for the time representation. */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"    private DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    /** The local date object. */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    private LocalDate ld;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    /** The local time object. */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    private LocalTime lt;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"     * Initializes a DateTime object based on the given string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"     * @param dt The string representation of date-time to parse.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"     * @throws DateTimeParseException If the input string cannot be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"    public DateTime(String dt) throws DateTimeParseException {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"        String[] splt \u003d dt.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        // Assert that the splitting results in at most 2 parts (date and time).","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"        assert splt.length \u003e\u003d 1 \u0026\u0026 splt.length \u003c\u003d 2 : \"Invalid date-time format\";","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"        if (splt.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"            this.ld \u003d LocalDate.parse(splt[0], dateFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"        } else if (splt.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"            this.ld \u003d LocalDate.parse(splt[0], dateFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"            this.lt \u003d LocalTime.parse(splt[1], timeFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"            throw new DateTimeParseException(","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"                    \"Sorry I cannot recognise your date and time!\"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"                            + \" Please follow the format: yyyy/M/d HHmm\", dt, 0);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"     * Returns the formatted date string.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"     * @return The formatted date string.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"        // Assert that ld is not null before formatting.","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"        assert this.ld !\u003d null : \"Trying to format a null date\";","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"        return this.ld.format(DateTimeFormatter.ofPattern(\"MM-d-yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"     * Returns the formatted time string or null if there\u0027s no time component.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"     * @return The formatted time string or null.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"    public String getFormattedTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"        if (this.lt !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"            return this.lt.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"        return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"     * Returns the string representation of the date-time object.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"     * @return The formatted string of date-time.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"        // Assert that ld is not null before converting to string.","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"        assert this.ld !\u003d null : \"Trying to convert a null date to string\";","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"JizhuoChen"},"content":"        return getFormattedDate()","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"JizhuoChen"},"content":"                + ((this.lt \u003d\u003d null) ? \"\" : \" \" + getFormattedTime());","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"JizhuoChen":84}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":" * Represents a deadline task with a specified due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"    /** The raw date string representing the deadline. */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"    protected String date;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"    /** The parsed DateTime object representation of the deadline date. */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"    protected DateTime dt;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"     * Initializes a Deadlines task with the given description and due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"     * @param date The due date of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    public Deadlines(String description, String date) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description should not be null or empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"        assert date !\u003d null \u0026\u0026 !date.trim().isEmpty() : \"Date should not be null or empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"        this.dt \u003d new DateTime(date);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"     * Returns the formatted string used for saving this deadline task to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"     * @return The formatted string representation for saving.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"    public String getSavingFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"        // Assert that all necessary data members are not null before formatting.","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"        assert date !\u003d null \u0026\u0026 !date.trim().isEmpty() : \"Date should not be null or empty when saving\";","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"        return \"[D] | [\" + getStatusIcon() + \"] | \"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"                + description + \" | \" + date;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"     * Returns the string representation of this deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"     * @return The formatted string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        return \"[D][\" + getStatusIcon()","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"                + \"] \" + description + \" (by: \" + dt + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JizhuoChen":53}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    private Label text;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"        //clip the image to a circle","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"        Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"        //set the padding for imageView and label","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"        HBox.setMargin(displayPicture, new Insets(0, 0, 0, 15));","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"        // Add a default background color for dialogBox (can be adjusted later for different dialog types)","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"        setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"        //set the padding for imageView and label","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"        HBox.setMargin(displayPicture, new Insets(0, 15, 0, 0));","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"        DialogBox db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, new CornerRadii(5), Insets.EMPTY)));","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"        DialogBox db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTGREEN, new CornerRadii(5), Insets.EMPTY)));","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"JizhuoChen":69}},{"path":"src/main/java/duke/Echoplex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"public class Echoplex {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"    public void echo() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"        Scanner sn \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"        String input \u003d sn.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"            System.out.println(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"            input \u003d sn.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JizhuoChen":16}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":" * Represents an event task with a specified start and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"    /** The raw string representing the starting time of the event. */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"    protected String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"    /** The raw string representing the ending time of the event. */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"    protected String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    /** The parsed DateTime object representation of the event\u0027s start time. */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    protected DateTime dtStart;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"    /** The parsed DateTime object representation of the event\u0027s end time. */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    protected DateTime dtEnd;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"     * Initializes an Events task with the given description, start time, and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"     * @param start The starting time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"     * @param end The ending time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    public Events(String description, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description should not be null or empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"        assert start !\u003d null \u0026\u0026 !start.trim().isEmpty() : \"Start time should not be null or empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"        assert end !\u003d null \u0026\u0026 !end.trim().isEmpty() : \"End time should not be null or empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"        this.dtStart \u003d new DateTime(start);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"        this.dtEnd \u003d new DateTime(end);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"     * Returns the formatted string used for saving this event task to storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"     * @return The formatted string representation for saving.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"    public String getSavingFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"        // Assert that all necessary data members are not null before formatting.","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"        assert start !\u003d null \u0026\u0026 !start.trim().isEmpty() : \"Start time should not be null or empty when saving\";","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"        assert end !\u003d null \u0026\u0026 !end.trim().isEmpty() : \"End time should not be null or empty when saving\";","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        return \"[E] | [\" + getStatusIcon() + \"] | \"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"                + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"     * Returns the string representation of this event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"     * @return The formatted string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + description","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"                + \" (from: \" + dtStart + \", to: \" + dtEnd + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JizhuoChen":64}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":" * Provides functionality for parsing user inputs and executing corresponding commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"public abstract class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"    private static String response;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"     * Parses the user input and dispatches corresponding commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"     * @param split The split of user input as an array of strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"     * @param keyword The keyword/command from the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    public static void parseInput(String[] split, String keyword)","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"        switch (keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"            Parser.response \u003d TaskMaster.list();","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"            Parser.response \u003d TaskMaster.removeTask(Integer.parseInt(split[1]));","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"            Parser.response \u003d TaskMaster.mark(Integer.parseInt(split[1]));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"            Parser.response \u003d TaskMaster.unmark(Integer.parseInt(split[1]));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"        case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"                String key \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"                for (int i \u003d 1; i \u003c split.length; ++i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"                    key \u003d key + split[i] + \" \";","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"                if (key.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"                    throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"                            \"☹ OOPS!!! You must enter a keyword to search for tasks.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"                key \u003d key.substring(0, key.length() - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"                Parser.response \u003d TaskMaster.findTask(key);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"                Parser.response \u003d e.getMessage() + \"\\nTry again: \";","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"                break;","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"                switch (keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"                case \"todo\": {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"                    String description \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"                    for (int i \u003d 1; i \u003c split.length; ++i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"                        description \u003d description + split[i] + \" \";","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"                        throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"                                \"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"                    description \u003d description.substring(0, description.length() - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"                    Parser.response \u003d TaskMaster.addTask(new Todos(description));","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"                case \"deadline\": {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"                    int i \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"                    if (i \u003d\u003d split.length) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"                        throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"                                \"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"JizhuoChen"},"content":"                    String temp \u003d split[i];","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"                    String description \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"                    while (!temp.equals(\"/by\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"                        description \u003d description + temp + \" \";","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"                        i +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"JizhuoChen"},"content":"                        temp \u003d split[i];","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"                    i +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"                        throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"JizhuoChen"},"content":"                                \"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"JizhuoChen"},"content":"                    description \u003d description.substring(0, description.length() - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"                    String time \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"JizhuoChen"},"content":"                    while (i \u003c split.length) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"                        time \u003d time + split[i] + \" \";","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"                        i +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"JizhuoChen"},"content":"                    if (time.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"JizhuoChen"},"content":"                        throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"JizhuoChen"},"content":"                                \"☹ OOPS!!! The time/date of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"JizhuoChen"},"content":"                    time \u003d time.substring(0, time.length() - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"JizhuoChen"},"content":"                    Parser.response \u003d TaskMaster.addTask(new Deadlines(description, time));","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"JizhuoChen"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"JizhuoChen"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"JizhuoChen"},"content":"                case \"event\": {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"JizhuoChen"},"content":"                    int i \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"                    if (i \u003d\u003d split.length) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"                        throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"                                \"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"                    String temp \u003d split[i];","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"JizhuoChen"},"content":"                    String description \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"                    while (!temp.equals(\"/from\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"JizhuoChen"},"content":"                        description \u003d description + temp + \" \";","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"JizhuoChen"},"content":"                        i +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"JizhuoChen"},"content":"                        temp \u003d split[i];","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"JizhuoChen"},"content":"                    i +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"JizhuoChen"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"JizhuoChen"},"content":"                        throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"JizhuoChen"},"content":"                                \"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"JizhuoChen"},"content":"                    description \u003d description.substring(0, description.length() - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"JizhuoChen"},"content":"                    String start \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"JizhuoChen"},"content":"                    if (i \u003d\u003d split.length) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"JizhuoChen"},"content":"                        throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"JizhuoChen"},"content":"                                \"☹ OOPS!!! The starting time of an event cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"JizhuoChen"},"content":"                    temp \u003d split[i];","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"JizhuoChen"},"content":"                    while (!temp.equals(\"/to\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"JizhuoChen"},"content":"                        start \u003d start + temp + \" \";","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"JizhuoChen"},"content":"                        i +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"JizhuoChen"},"content":"                        temp \u003d split[i];","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"JizhuoChen"},"content":"                    i +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"JizhuoChen"},"content":"                    if (start.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"JizhuoChen"},"content":"                        throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"JizhuoChen"},"content":"                                \"☹ OOPS!!! The starting time of an event cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"JizhuoChen"},"content":"                    start \u003d start.substring(0, start.length() - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"JizhuoChen"},"content":"                    String end \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"JizhuoChen"},"content":"                    while (i \u003c split.length) {","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"JizhuoChen"},"content":"                        end \u003d end + split[i] + \" \";","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"JizhuoChen"},"content":"                        i +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"JizhuoChen"},"content":"                    if (end.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"JizhuoChen"},"content":"                        throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"JizhuoChen"},"content":"                                \"☹ OOPS!!! The ending time of an event cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"JizhuoChen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"JizhuoChen"},"content":"                    end \u003d end.substring(0, end.length() - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"JizhuoChen"},"content":"                    Parser.response \u003d TaskMaster.addTask(new Events(description, start, end));","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"JizhuoChen"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"JizhuoChen"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"JizhuoChen"},"content":"                default:","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"JizhuoChen"},"content":"                    throw new IllegalArgumentException(","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"JizhuoChen"},"content":"                            \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"JizhuoChen"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"JizhuoChen"},"content":"            } catch (IllegalArgumentException | DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"JizhuoChen"},"content":"                Parser.response \u003d e.getMessage() + \"\\nTry again: \";","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"JizhuoChen"},"content":"    public static String getResponse() {","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"JizhuoChen"},"content":"        return response;","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"JizhuoChen":159}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import java.io.File;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":" * Represents a storage handler for managing reading from and writing to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":" * This class handles IO operations with the file to store and retrieve user data.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"    /** The file name of the user data file. */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    protected String fileName \u003d \"userData.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    /** The instance of the user data file. */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"    protected File file;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"     * Initializes a new Storage with a specified file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"     * If the directory does not exist, it will be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"     * @param filePath The directory path where the user data file is to be stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"File path should not be null or empty!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"        this.file \u003d new File(filePath, fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"        //Making a new dir if the specified one does not exit","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"     * Writes the given inputs to the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"     * If an exception occurs, the stack trace will be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"     * @param inputs The string to be written to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"    public String write(String inputs) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"        assert inputs !\u003d null : \"Input to write should not be null!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"            writer.write(inputs);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"            return \"write successful !!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"     * Reads a line from the storage file that contains the specified key.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"     * Returns a string representation of the line, or an error message if the key is not found.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"     * @param key The keyword to search for within the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"     * @return The line from the file containing the key, or an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"    public ArrayList\u003cString\u003e read(String key) {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"        assert key !\u003d null \u0026\u0026 !key.trim().isEmpty() : \"Search key should not be null or empty!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"            ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"            String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"                if (line.contains(key)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"                    lines.add(line);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"JizhuoChen"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"            if (lines.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"                System.out.println(\"Keyword not found, please try again!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"                return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"            return convertToDisplayFormat(lines);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"    private ArrayList\u003cString\u003e convertToDisplayFormat(ArrayList\u003cString\u003e lines) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"JizhuoChen"},"content":"        assert lines !\u003d null \u0026\u0026 !lines.isEmpty() : \"Lines to convert should not be null or empty!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"        ArrayList\u003cString\u003e ans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"JizhuoChen"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"JizhuoChen"},"content":"            String[] split \u003d line.split(\"|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"JizhuoChen"},"content":"            assert split.length \u003e\u003d 4 : \"Each line should have at least 4 parts separated by \u0027|\u0027\";","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"JizhuoChen"},"content":"            if (split[0].equals(\"[T]\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"JizhuoChen"},"content":"                ans.add(\"[T]\" + split[2] + \" \" + split[4]);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"JizhuoChen"},"content":"            } else if (split[0].equals(\"[D]\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"JizhuoChen"},"content":"                assert split.length \u003e\u003d 7 : \"Deadline lines should have at least 7 parts separated by \u0027|\u0027\";","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"JizhuoChen"},"content":"                ans.add(\"[D]\" + split[2] + \" \" + split[4]","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"JizhuoChen"},"content":"                        + \" (by: \" + split[6] + \")\");","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"JizhuoChen"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"                assert split.length \u003e\u003d 9 : \"Event lines should have at least 9 parts separated by \u0027|\u0027\";","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"                ans.add(\"[D]\" + split[2] + \" \" + split[4]","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"                        + \" (from: \" + split[6] + \", to: \" + split[8] + \")\");","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"JizhuoChen"},"content":"        return ans;","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"JizhuoChen":106}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"        return \"[ ]\";","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"        return getTaskType() + \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    public String getSavingFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        return getTaskType() + \" [\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JizhuoChen":35}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":" * Represents a list of tasks. Supports operations to add, remove, mark, unmark, list, save, and read tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"    /** An ArrayList storing all the Task instances */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"    /** Parameter keeping track of the number of Task instances in the Arraylist */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"    protected int counter \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"     * Marks a task as done based on its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"     * @param i The index (1-based) of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    public String mark(int i) {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"        assert i \u003e 0 \u0026\u0026 i \u003c\u003d tasks.size() : \"Task index out of bounds!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"        tasks.get(i - 1).setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"                + tasks.get(i - 1).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"     * Marks a task as not done based on its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"     * @param i The index (1-based) of the task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"    public String unmark(int i) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"        assert i \u003e 0 \u0026\u0026 i \u003c\u003d tasks.size() : \"Task index out of bounds!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        tasks.get(i - 1).setNotDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"                + tasks.get(i - 1).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"     * Lists all the tasks currently in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    public String list() {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"        assert counter \u003d\u003d tasks.size() : \"Mismatch between counter and task list size!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"JizhuoChen"},"content":"            return \"There is no task in your list yet.\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"JizhuoChen"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"JizhuoChen"},"content":"            String ans \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"JizhuoChen"},"content":"            for (int i \u003d 1; i \u003c\u003d counter; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"JizhuoChen"},"content":"                ans +\u003d (i + \".\" + tasks.get(i - 1).toString() + \u0027\\n\u0027);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"JizhuoChen"},"content":"            return ans;","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"JizhuoChen"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"JizhuoChen"},"content":"     * @param t The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"JizhuoChen"},"content":"    public String addTask(Task t) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"JizhuoChen"},"content":"        assert t !\u003d null : \"Task should not be null!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"JizhuoChen"},"content":"        tasks.add(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"JizhuoChen"},"content":"        counter +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"JizhuoChen"},"content":"        saveTask(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"JizhuoChen"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"JizhuoChen"},"content":"                + t + \"\\nNow you have \" + counter + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"JizhuoChen"},"content":"     * Removes a task from the TaskList based on its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"JizhuoChen"},"content":"     * @param index The index (1-based) of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"JizhuoChen"},"content":"    public String removeTask(int index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"JizhuoChen"},"content":"        assert index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size() : \"Task index out of bounds!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"JizhuoChen"},"content":"        String temp \u003d tasks.get(index - 1).toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"JizhuoChen"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"JizhuoChen"},"content":"        counter -\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"JizhuoChen"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"JizhuoChen"},"content":"                + temp + \"\\nNow you have \" + counter + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"JizhuoChen"},"content":"     * Saves a task to the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"JizhuoChen"},"content":"     * @param t The task to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"JizhuoChen"},"content":"    public String saveTask(Task t) {","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"JizhuoChen"},"content":"        assert t !\u003d null : \"Task should not be null!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"JizhuoChen"},"content":"        return TaskMaster.storage.write(t.getSavingFormat());","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"JizhuoChen"},"content":"     * Finds a task from the ArrayList based on a key.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"JizhuoChen"},"content":"     * @param key The keyword to search for within the ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"JizhuoChen"},"content":"    public String findTask(String key) {","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"JizhuoChen"},"content":"        assert key !\u003d null \u0026\u0026 !key.trim().isEmpty() : \"Search key should not be null or empty!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"JizhuoChen"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"JizhuoChen"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"JizhuoChen"},"content":"            if (task.toString().contains(key)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"JizhuoChen"},"content":"                lines.add(task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"JizhuoChen"},"content":"        if (lines.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"JizhuoChen"},"content":"            return \"There is no matching task in your list!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"JizhuoChen"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"JizhuoChen"},"content":"            String ans \u003d \"This are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"JizhuoChen"},"content":"            for (int i \u003d 1; i \u003c\u003d lines.size(); ++i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"JizhuoChen"},"content":"                ans +\u003d (i + \".\" + lines.get(i - 1) + \u0027\\n\u0027);","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"JizhuoChen"},"content":"            return ans;","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"JizhuoChen"},"content":"     * Reads a task from the storage based on a key.","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"JizhuoChen"},"content":"     * @param key The keyword to search for within the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"JizhuoChen"},"content":"    public String readTask(String key) {","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"JizhuoChen"},"content":"        assert key !\u003d null \u0026\u0026 !key.trim().isEmpty() : \"Search key should not be null or empty!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"JizhuoChen"},"content":"        if (TaskMaster.storage \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"JizhuoChen"},"content":"            return \"There is no previously saved task!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"JizhuoChen"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"JizhuoChen"},"content":"            ArrayList\u003cString\u003e lines \u003d TaskMaster.storage.read(key);","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"JizhuoChen"},"content":"            if (!lines.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"JizhuoChen"},"content":"                String ans \u003d \"This are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"JizhuoChen"},"content":"                for (int i \u003d 1; i \u003c\u003d lines.size(); ++i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"JizhuoChen"},"content":"                    ans +\u003d (i + \".\" + lines.get(i - 1) + \u0027\\n\u0027);","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"JizhuoChen"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"JizhuoChen"},"content":"                return ans;","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"JizhuoChen"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"JizhuoChen"},"content":"            return \"There is no previously saved task!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"JizhuoChen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"JizhuoChen":138}},{"path":"src/main/java/duke/TaskMaster.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"public abstract class TaskMaster {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"    protected static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"    protected static Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"    public static void masterTasks(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"        String[] splt \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"        String keyword \u003d splt[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"        Parser.parseInput(splt, keyword);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"    public static void initialStorage(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    public static String mark(int i) {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"        return tasks.mark(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    public static String unmark(int i) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"        return tasks.unmark(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"    public static String list() {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"        return tasks.list();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    public static String addTask(Task t) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"        return tasks.addTask(t);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"    public static String removeTask(int index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"        return tasks.removeTask(index);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"    public static String readTask(String key) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"        return tasks.readTask(key);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    public static String findTask(String key) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"        return tasks.findTask(key);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JizhuoChen":44}},{"path":"src/main/java/duke/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":" * Represents a Todo task, a subclass of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"public class Todos extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"     * Creates a new instance of a ToDo task with the provided description.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"     * Creates a new instance of a ToDo task with the provided description.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"    public Todos(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"        // Assert that the description is not null or empty.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty()","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"                : \"Description should not be null or empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"     * Returns the saving format of the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"     * @return The string representation of the ToDo task suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    public String getSavingFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"        // Assert that the description is not null or empty before saving.","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty()","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"                : \"Description should not be null or empty when saving\";","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"        return \"[T] | [\" + getStatusIcon() + \"] | \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"     * @return The string representation of the ToDo task in the format: [T][status icon] description.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"JizhuoChen":43}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":" * Represents the User Interface (UI) of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":" * Contains methods for user interactions.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"     * Prints the greeting message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"    public String sayhi() {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"        return \"Hello! I\u0027m LimBay.\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"     * Prints the goodbye message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    public String saybye() {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"JizhuoChen":22}},{"path":"src/test/java/duke/DateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"public class DateTimeTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"    public void testConstructor_WithOnlyDate() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"        DateTime dateTime \u003d new DateTime(\"2023/09/01\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(\"09-1-2023\", dateTime.getFormattedDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(null, dateTime.getFormattedTime());","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    public void testConstructor_WithDateAndTime() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"        DateTime dateTime \u003d new DateTime(\"2023/09/01 1630\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(\"09-1-2023\", dateTime.getFormattedDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(\"16:30\", dateTime.getFormattedTime());","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    public void testConstructor_WithInvalidFormat_ShouldThrowException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new DateTime(\"2023.09.01\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new DateTime(\"01/09/2023\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new DateTime(\"2023/09/01 2500\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new DateTime(\"2023/09/01 1630 1830\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    public void testToString_WithOnlyDate() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        DateTime dateTime \u003d new DateTime(\"2023/09/01\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(\"09-1-2023\", dateTime.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"JizhuoChen"},"content":"    public void testToString_WithDateAndTime() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"JizhuoChen"},"content":"        DateTime dateTime \u003d new DateTime(\"2023/09/01 1630\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(\"09-1-2023 16:30\", dateTime.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"JizhuoChen":42}},{"path":"src/test/java/duke/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"public class DeadlinesTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"    private Deadlines deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"        deadline \u003d new Deadlines(\"Finish homework\", \"2023/09/01 1600\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"    public void testGetSavingFormat_NotCompleted() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"        String expected \u003d \"[D] | [ ] | Finish homework | 2023/09/01 1600\";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(expected, deadline.getSavingFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    public void testToString_NotCompleted() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"        // Assuming DateTime\u0027s toString outputs the string in the format: \"2023-09-01 16:00\"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"        String expected \u003d \"[D][ ] Finish homework (by: 09-1-2023 16:00)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"JizhuoChen":26}},{"path":"src/test/java/duke/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"public class EventsTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"    private Events event;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"        event \u003d new Events(\"Meeting\", \"2023/09/01 1400\", \"2023/09/01 1500\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"    public void testEventCreation() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(\"[E][ ] Meeting (from: 09-1-2023 14:00, to: 09-1-2023 15:00)\", event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"    public void testGetSavingFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"        assertEquals(\"[E] | [ ] | Meeting | 2023/09/01 1400 | 2023/09/01 1500\", event.getSavingFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"    public void testEventCreationWithInvalidStartDate() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new Events(\"Meeting\", \"2023-09-01\", \"2023/09/01 1500\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"JizhuoChen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"JizhuoChen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"JizhuoChen"},"content":"    public void testEventCreationWithInvalidEndDate() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"JizhuoChen"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new Events(\"Meeting\", \"2023/09/01 1400\", \"2023-09-01\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"JizhuoChen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"JizhuoChen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"JizhuoChen":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JizhuoChen"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"JizhuoChen"},"content":"todo play games","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"JizhuoChen"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"JizhuoChen"},"content":"deadline watch Tv /by","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"JizhuoChen"},"content":"deadline /by 2222/11/11 2100","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"JizhuoChen"},"content":"deadline watch TV /by 2222/11/11 2100","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"JizhuoChen"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"JizhuoChen"},"content":"event sleep /from /to 2222/11/11 2100","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"JizhuoChen"},"content":"event sleep /from 2222/11/11 2100 /to","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"JizhuoChen"},"content":"event /from 2222/11/11 2100 /to 2222/11/11 2100","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"JizhuoChen"},"content":"event sleep /from 2222/11/11 2100 /to 2222/11/11 2100","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"JizhuoChen"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"JizhuoChen"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"JizhuoChen"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"JizhuoChen"},"content":"unmark 2","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"JizhuoChen"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"JizhuoChen"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"JizhuoChen"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"JizhuoChen"},"content":"delete 1","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"JizhuoChen"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"JizhuoChen"},"content":"w","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"JizhuoChen"},"content":"deadline play /by 2222/11/11","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"JizhuoChen"},"content":"deadline play /by 1111/1/11","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"JizhuoChen"},"content":"deadline play /by 1111/11/11 1111","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"JizhuoChen"},"content":"event die /from 9999/09/11 /to 99999/09/11","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"JizhuoChen"},"content":"event die /from 9999/09/11 /to 9999/09/11 1100","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"JizhuoChen"},"content":"list","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"JizhuoChen"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"JizhuoChen":28}}]
