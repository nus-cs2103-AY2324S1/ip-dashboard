[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"D | 1 | b | 2019-10-15","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"E | 0 | c | 2020-10-15 - 2020-11-16","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"T | 1 | e | ","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"D | 0 | p | 2023-10-10","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"E | 1 | aga | 2023-11-11 - 2023-10-10","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":5}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"    private Task taskToAdd;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"    public AddCommand(Task taskToAdd) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"        tasks.addTask(taskToAdd);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"        ui.showAdded(taskToAdd, tasks.listSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":17}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":" * A Deadline class to represent deadline tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"     * Constructs deadline with the given description","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"     * @param description the given description of the deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"     * @param isDone      whether the deadline is done","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"     * @param by          the date by which the deadline is","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"        super(description, isDone, TaskType.DEADLINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"        this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"     * Returns the do by date","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"     * @return String representing do by date","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"     * Returns String representing the deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"     * @return String representing deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":40}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"    private int taskIndexToDelete;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"    public DeleteCommand(int taskIndexToDelete) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"        this.taskIndexToDelete \u003d taskIndexToDelete;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"        Task deletedTask \u003d tasks.getTask(taskIndexToDelete);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"        tasks.deleteTask(taskIndexToDelete);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"        ui.showDeleted(deletedTask, tasks.listSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":18}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":" * Class DukeException to represent exceptions specific to Duke.","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":8}},{"path":"src/main/java/Eva.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":" * CS2103T iP Week 3","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":" * AY23/24 Semester 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":" * A product named Eva (Originally Duke), a Personal Assistant Chatbot that helps a person","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":" * to keep track of various things.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":" * @author bhnuka, Bhanuka Bandara Ekanayake (AXXX7875J), G01","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":" * @version 2.0 CS2103T AY 23/24 Sem 1","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":" * All the sourcecode behind the chatbot, Eva","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"public class Eva {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"    public Eva(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"            } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"        new Eva(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"bhnuka":52}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":" * An Event class to represent event tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"     * Constructs deadline with the given description","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"     * @param description the given description of the deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"     * @param isDone      whether the event is done","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"     * @param from        the time at which the event starts","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"     * @param to          the time at which the event ends","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"        super(description, isDone, TaskType.EVENT);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"        this.from \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"        this.to \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"     * Returns the do by date","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"     * @return String representing start from date","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"    public String getFrom() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"     * Returns the do by date","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"     * @return String representing end at date","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"    public String getTo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"     * Returns String representing the event","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"     * @return String representing event","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":52}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"        ui.showExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":10}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"        ui.showList(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":9}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"    private int taskIndexToMark;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"    public MarkCommand(int taskIndexToMark) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"        this.taskIndexToMark \u003d taskIndexToMark;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"        tasks.markTaskAsDone(taskIndexToMark);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"        ui.showMarked(tasks.getTask(taskIndexToMark));","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":17}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"        String commandType \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"            case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"                int taskIndex2 \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"                return new MarkCommand(taskIndex2);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"                int taskIndex3 \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"                return new UnmarkCommand(taskIndex3);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"                if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"                    throw new DukeException(\"\\t ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"                return new AddCommand(new Todo(input.substring(5), false));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"                // Parse deadline command and create DeadlineTask object","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"                int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"                if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"                    throw new DukeException(\"\\t ☹ OOPS!!! The deadline description must include a /by date.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"                String description \u003d input.substring(9, byIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"                    throw new DukeException(\"☹ OOPS!!! The deadline description cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"                String by \u003d input.substring(byIndex + 3).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"                return new AddCommand(new Deadline(description, false, by));","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"            case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"                int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"                int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"                if (fromIndex \u003d\u003d -1 \u0026\u0026 toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"                    throw new DukeException(\"\\t ☹ OOPS!!! The event description must include both /from and /to dates.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"                String description2 \u003d input.substring(6, fromIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"                if (description2.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"                    throw new DukeException(\"☹ OOPS!!! The event description cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"                String from \u003d input.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"                String to \u003d input.substring(toIndex + 3).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"                // Parse event command and create EventTask object","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"                return new AddCommand(new Event(description2, false, from, to));","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"                int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"                return new DeleteCommand(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":56}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"            FileReader fileReader \u003d new FileReader(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"            Scanner scanner \u003d new Scanner(fileReader);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"                String taskType \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"                switch (taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"                        tasks.add(new Todo(description, isDone));","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"                        tasks.add(new Deadline(description, isDone, by));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"                        String[] parts2 \u003d parts[3].split(\" - \");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"                        String from \u003d parts2[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"                        String to \u003d parts2[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"                        tasks.add(new Event(description, isDone, from, to));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"                    default:","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"                        throw new DukeException(\"☹ OOPS!!! Couldn\u0027t load file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"            fileReader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"            throw new DukeException(\"File not found: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"            throw new DukeException(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"            throw new DukeException(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"bhnuka"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"./data/tasks.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"            for (int i \u003d 0 ; i \u003c tasks.listSize() ; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"                String taskType \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"                String dateInfo \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"                if (tasks.getTask(i) instanceof Todo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"bhnuka"},"content":"                    taskType \u003d \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"bhnuka"},"content":"                } else if (tasks.getTask(i) instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"                    taskType \u003d \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"                    dateInfo \u003d ((Deadline) tasks.getTask(i)).getBy();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"bhnuka"},"content":"                } else if (tasks.getTask(i) instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"bhnuka"},"content":"                    taskType \u003d \"E\";","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"bhnuka"},"content":"                    dateInfo \u003d ((Event) tasks.getTask(i)).getFrom() + \" - \" + ((Event) tasks.getTask(i)).getTo();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"bhnuka"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"bhnuka"},"content":"                    throw new DukeException(\"Invalid tasks in list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"bhnuka"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"                fileWriter.write(taskType + \" | \" + (tasks.getTask(i).getDone() ? \"1\" : \"0\") + \" | \" + tasks.getTask(i).getDescription() + \" | \" + dateInfo + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"bhnuka"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"bhnuka"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"bhnuka"},"content":"            throw new DukeException(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"bhnuka"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"bhnuka"},"content":"            throw new DukeException(\"Invalid tasks in list: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":85}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":" * A Task class to represent tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"public class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"    private final String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"    private final TaskType type;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"     * Constructs task with the given description and type","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"     * @param description the given description of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"     * @param type        the given type of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"    public Task(String description, boolean isDone, TaskType type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"     * Method that marks tasks as done","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"     * Method that changes back the task status to not done","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"     * Returns whether task is done","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"    public boolean getDone() { return this.isDone; }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"     * Returns description of task","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"    public String getDescription() { return this.description; }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"     * Returns String representing the task","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"     * @return String representing task","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + type + \": \" + description;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":54}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"public class TaskList extends ArrayList\u003cTask\u003e{","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"    public void listTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"            System.out.println(\"\\t No tasks added yet.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"            System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"                System.out.println(\"\\t \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"    public int listSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"        // Add task to the list","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"            return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! Task not found.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"                tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"            System.out.println(\"\\t ☹ OOPS!!! Please enter a valid task index to delete.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"    public void markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"        // Mark task as done","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"                tasks.get(index).markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"bhnuka"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"                throw new DukeException(\"☹ OOPS!!! Task not found.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"            e.getMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"bhnuka"},"content":"    public void markTaskAsUndone(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"        // Mark task as undone","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"bhnuka"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"bhnuka"},"content":"                tasks.get(index).markUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"bhnuka"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"bhnuka"},"content":"                throw new DukeException(\"☹ OOPS!!! Task not found.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"bhnuka"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"bhnuka"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"bhnuka"},"content":"            e.getMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":78}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":" * Enums to represent the different types of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":6}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":" * A Todo class to represent todo tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"     * Constructs todo with the given description","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"     * @param description the given description of the todo","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"     * @param isDone whether the todo is done","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"        super(description, isDone, TaskType.TODO);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"     * Returns String representing the todo","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"     * @return String representing todo","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":26}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"    public static void showWelcome() {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"        String logo \u003d \"  ______          \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"                + \" |  ____|         \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"                + \" | |____   ____ _ \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"                + \" |  __\\\\ \\\\ / / _` |\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"                + \" | |___\\\\ V / (_| |\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"                + \" |______\\\\_/ \\\\__,_|\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t Hello! I\u0027m Eva.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"    public static void showExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"    public static void showLoadingError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"No saved tasks found.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"    public static void showError(String errorMessage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"    public static void showLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"    public static void showAdded(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t\\t\" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t Now you have \" + size + \" task(s) in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"    public static void showDeleted(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t   \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"    public static void showMarked(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t   \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"    public static void showUnmarked(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"        System.out.println(\"\\t   \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"    public static void showList(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"bhnuka"},"content":"        tasks.listTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"        while (true) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"bhnuka"},"content":"            return input;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":68}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"    private int taskIndexToUnmark;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"    public UnmarkCommand(int taskIndexToMark) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"        this.taskIndexToUnmark \u003d taskIndexToMark;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"        tasks.markTaskAsUndone(taskIndexToUnmark);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"        ui.showUnmarked(tasks.getTask(taskIndexToUnmark));","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bhnuka":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"deadline return book/by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"bhnuka":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"java -classpath ..\\bin Eva \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bhnuka":1,"-":20}}]
