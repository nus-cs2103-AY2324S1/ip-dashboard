[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"plugins {","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"repositories {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"dependencies {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    testImplementation project(path: \u0027:\u0027)","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion,    classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"test {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    testLogging {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"        showExceptions true","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"        showCauses true","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"application {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"shadowJar {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"run{","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Jweewee":62}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"[T] | [X] | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"[T] | [X] | join sports club","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"[T] | [ ] | dleklre","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"[T] | [ ] | kejr","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"[T] | [ ] | e43","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"[T] | [ ] | ef","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"[T] | [ ] | 34","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"Jweewee":7}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Jweewee":4}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":" * Represents a dialog box in the Duke application\u0027s user interface.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":" * A dialog box consists of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new DialogBox with the specified text and image.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"     * @param text The text content to display in the dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"     * @param img The image to display in the dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"     * This is used to distinguish between user and Duke\u0027s messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"    private void flip() {","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"     * Creates a DialogBox representing a user\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"     * @param text The text content of the user\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"     * @param img The image to display for the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"     * @return A DialogBox instance representing the user\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"     * Creates a DialogBox representing Duke\u0027s response.","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"     * @param text The text content of Duke\u0027s response.","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"     * @param img The image to display for Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"     * @return A DialogBox instance representing Duke\u0027s response.","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"        db.flip();","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"        return db;","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"Jweewee":81}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":" * The Duke class represents a simple chatbot application that helps manage tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new Duke chatbot instance with a specified file path for data storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    public Duke() {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"        storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"            // Initialize the tasks by loading data from storage.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"            Ui.showLoadingError(e);","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"            // If there\u0027s an error loading tasks, create a new empty task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"            List\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"            tasks \u003d new TaskList(newTaskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"     * Gets the storage instance.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"     * @return The storage instance.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    public Storage getStorage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"        return this.storage;","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"     * Gets the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"     * @return The task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"     * Generates a response to user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"     * @return A response generated based on the user\u0027s input.","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"            // Parse the user\u0027s input and update the result and storage accordingly.","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"            result +\u003d Parser.parseCommand(input, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"            storage.writeLine(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"            Ui.showLoadingError(e);","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"    public void run() {","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"            Ui.showLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"            String result \u003d Parser.parseCommand(command, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"            Ui.showMessage(result);","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"                storage.writeLine(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"                Ui.showError(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"            Ui.showLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"        Ui.showByeMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"        scanner.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"     * The main method to start the Duke chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"     * @param args Command-line arguments (unused).","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"Jweewee":95}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":" * Custom exception class for the Duke chatbot.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":" * This exception is thrown when issues or errors occur in the Duke chatbot.","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representation of the DukeException, which is the error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"     * @return The error message associated with the exception.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        return super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":26}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":" * A launcher class to workaround classpath issues when starting the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"public class Launcher {","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"     * Main method to launch the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"     * @param args Command-line arguments (unused).","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"Jweewee":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":" * The main class for the Duke application\u0027s GUI using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" * This class extends JavaFX\u0027s Application class and serves as the entry point for launching the Duke GUI application.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"     * The entry point for launching the Duke GUI application.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"            stage.show();","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"Jweewee":37}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":" * Controller for the MainWindow. Provides the layout and functionality for the Duke chatbot\u0027s user interface.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"     * Initializes the MainWindow by binding the scroll pane to the dialog container\u0027s height property.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"                DialogBox.getDukeDialog(Ui.showWelcomeMessage(), dukeImage));","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     * Sets the Duke instance for the MainWindow.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"     * @param d The Duke instance to associate with the MainWindow.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"     * Handles user input by processing it with Duke and displaying the conversation in dialog boxes.","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"Jweewee":59}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":" * Creates a new instance of the Parser class.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":" *","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":" * The Parser class is responsible for parsing user commands and performing","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" * tasks accordingly.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"public class Parser {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"     * Checks if the given input string represents an exit command.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"     * @param input The input string to check.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"     * @return True if the input string is \"bye\" (case-insensitive), indicating an exit command; otherwise, false.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    public static boolean isExitCommand(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        return input.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     * Parses and handles the user\u0027s command to perform various tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"     * @param command  The user\u0027s command to be processed.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"     * @param taskList The user\u0027s tasklist to be ammended.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If the command is not recognised, or error.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    public static String parseCommand(String command, TaskList taskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"            String[] separateCommand \u003d command.split(\" \");","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"            System.out.println(\"--------------------------\");","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"            if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"                result +\u003d parseList(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"            } else if (command.startsWith(\"mark\") || command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"                result +\u003d parseEditTask(command, separateCommand, taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"            } else if (command.startsWith(\"bye\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"                Ui.showByeMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"                result +\u003d parseTasksCommand(command, separateCommand, taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"            result +\u003d e.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"            return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"     * Executes the \u0027list\u0027 command to display all tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"     * @param taskList The TaskList object containing tasks to list.","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"     * @return A string containing the list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"    public static String parseList(TaskList taskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"        result +\u003d \" Task List:\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"        return result + taskList.printTaskListString();","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"     * Executes the \u0027mark\u0027 or \u0027unmark\u0027 command to mark or unmark a task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"     * @param command         The user command to execute (\u0027mark\u0027 or \u0027unmark\u0027).","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"     * @param taskList        The TaskList object containing tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"     * @param separateCommand An array containing command and task number.","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"     * @return A string containing the result of marking or unmarking a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If there is an issue or error encountered during command execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"    public static String parseEditTask(String command,","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"                                       String[] separateCommand, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"            if (separateCommand.length \u003e 2 || Integer.parseInt(separateCommand[1]) \u003e taskList.getSize()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"            String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"            int taskNumber \u003d Integer.parseInt(separateCommand[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"            Task task \u003d taskList.getTaskItem(taskNumber - 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"            if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"                taskList.getTaskItem(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"                result +\u003d \" Marked as done: \";","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"                taskList.getTaskItem(taskNumber - 1).markAsUndone();","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"                result +\u003d \" Marked as not done yet: \";","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"            result +\u003d \"   \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"            Ui.showMessage(result);","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"            return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"Jweewee"},"content":"     * Parses the user\u0027s command to perform various tasks based on the command type.","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"Jweewee"},"content":"     * @param command      The user\u0027s command to be processed.","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"Jweewee"},"content":"     * @param separateCommand An array containing command and task details.","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"Jweewee"},"content":"     * @param taskList     The TaskList object containing tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"Jweewee"},"content":"     * @return A string containing the result of the parsed command.","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If there is an issue or error encountered during command execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"    public static String parseTasksCommand(String command, String[] separateCommand,","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"                                           TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"        if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"Jweewee"},"content":"            return parseFindTask(separateCommand, taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"Jweewee"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"Jweewee"},"content":"            return parseToDoCommand(command, taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"Jweewee"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"Jweewee"},"content":"            return parseDeadlineCommand(command, taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"Jweewee"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"Jweewee"},"content":"            return parseEventCommand(command, taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"Jweewee"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"Jweewee"},"content":"            return parseDeleteCommand(command, separateCommand, taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"Jweewee"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"Jweewee"},"content":"     * Parses the \u0027find\u0027 command to search for tasks matching a keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"Jweewee"},"content":"     * @param separateCommand An array containing command and keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"Jweewee"},"content":"     * @param taskList     The TaskList object containing tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"Jweewee"},"content":"     * @return A string containing the matching tasks or a message if no matches are found.","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"Jweewee"},"content":"    public static String parseFindTask(String[] separateCommand, TaskList taskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"Jweewee"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"Jweewee"},"content":"        String keyword \u003d separateCommand[1];","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"Jweewee"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"Jweewee"},"content":"        result +\u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"Jweewee"},"content":"        for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":138,"author":{"gitId":"Jweewee"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"Jweewee"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-09-08"},{"lineNumber":140,"author":{"gitId":"Jweewee"},"content":"                result +\u003d count + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"Jweewee"},"content":"        Ui.showMessage(result);","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"Jweewee"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"Jweewee"},"content":"     * Parses the \u0027todo\u0027 command to add a new task to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"Jweewee"},"content":"     * @param command  The user command containing task details.","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"Jweewee"},"content":"     * @param taskList The TaskList object to which the task will be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"Jweewee"},"content":"     * @return A string containing a confirmation message after adding the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If there is an issue with the task description.","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"Jweewee"},"content":"    public static String parseToDoCommand(String command, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"Jweewee"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"Jweewee"},"content":"            String description \u003d command.substring(5);","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"Jweewee"},"content":"            if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"Jweewee"},"content":"            Task currTask \u003d new ToDo(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"Jweewee"},"content":"            taskList.addTask(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"Jweewee"},"content":"            result +\u003d \" I\u0027ve added this task:\" + \"\\n\" + \"   \" + currTask","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"Jweewee"},"content":"                    + \"\\n\" + \" Now you have \" + taskList.getSize() + \" tasks in the list.\" + \"\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"Jweewee"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"Jweewee"},"content":"        Ui.showMessage(result);","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"Jweewee"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"Jweewee"},"content":"     * Parses a user command to add a deadline task to the task list and returns a response message.","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"Jweewee"},"content":"     * @param command   The user input command containing deadline details.","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"Jweewee"},"content":"     * @param taskList  The task list where the deadline task will be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"Jweewee"},"content":"     * @return A response message indicating the result of the operation.","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If the command is invalid, the description is empty, or the date/time format is incorrect.","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"Jweewee"},"content":"    public static String parseDeadlineCommand(String command, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"Jweewee"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"Jweewee"},"content":"            String[] parts \u003d command.split(\"/by\"); //   2/12/2019 1800","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"Jweewee"},"content":"            String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"Jweewee"},"content":"            if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":185,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"Jweewee"},"content":"            if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! There must be a date and time.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"Jweewee"},"content":"            String byID \u003d parts[1].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"Jweewee"},"content":"            Task currTask \u003d new Deadline(description, byID);","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"Jweewee"},"content":"            if (currTask.toString() !\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":193,"author":{"gitId":"Jweewee"},"content":"                taskList.addTask(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"Jweewee"},"content":"                result +\u003d \" I\u0027ve added this task:\" + \"\\n\" + \"   \" + currTask","lastModifiedDate":"2023-09-21"},{"lineNumber":195,"author":{"gitId":"Jweewee"},"content":"                        + \"\\n\" + \" Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":196,"author":{"gitId":"Jweewee"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! Invalid Date/Time format, use DD/MM/YYYY HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"Jweewee"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":202,"author":{"gitId":"Jweewee"},"content":"        Ui.showMessage(result);","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"Jweewee"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":205,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":206,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":207,"author":{"gitId":"Jweewee"},"content":"     * Parses a user command to add an event task to the task list and returns a response message.","lastModifiedDate":"2023-09-21"},{"lineNumber":208,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"Jweewee"},"content":"     * @param command   The user input command containing event details.","lastModifiedDate":"2023-09-21"},{"lineNumber":210,"author":{"gitId":"Jweewee"},"content":"     * @param taskList  The task list where the event task will be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":211,"author":{"gitId":"Jweewee"},"content":"     * @return A response message indicating the result of the operation.","lastModifiedDate":"2023-09-21"},{"lineNumber":212,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If the command is invalid or the description of the event is empty.","lastModifiedDate":"2023-09-21"},{"lineNumber":213,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":214,"author":{"gitId":"Jweewee"},"content":"    public static String parseEventCommand(String command, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":215,"author":{"gitId":"Jweewee"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":216,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":217,"author":{"gitId":"Jweewee"},"content":"            String[] parts \u003d command.split(\"/from\");","lastModifiedDate":"2023-09-07"},{"lineNumber":218,"author":{"gitId":"Jweewee"},"content":"            String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":219,"author":{"gitId":"Jweewee"},"content":"            if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":220,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":221,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":222,"author":{"gitId":"Jweewee"},"content":"            String[] timeParts \u003d parts[1].split(\"/to\");","lastModifiedDate":"2023-09-07"},{"lineNumber":223,"author":{"gitId":"Jweewee"},"content":"            String start \u003d timeParts[0].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":224,"author":{"gitId":"Jweewee"},"content":"            String end \u003d timeParts[1].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":225,"author":{"gitId":"Jweewee"},"content":"            Task currTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-09-07"},{"lineNumber":226,"author":{"gitId":"Jweewee"},"content":"            taskList.addTask(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":227,"author":{"gitId":"Jweewee"},"content":"            result +\u003d \" I\u0027ve added this task:\" + \"\\n\" + \"   \" + currTask","lastModifiedDate":"2023-09-21"},{"lineNumber":228,"author":{"gitId":"Jweewee"},"content":"                    + \"\\n\" + \" Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":229,"author":{"gitId":"Jweewee"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":230,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":231,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":232,"author":{"gitId":"Jweewee"},"content":"        Ui.showMessage(result);","lastModifiedDate":"2023-09-21"},{"lineNumber":233,"author":{"gitId":"Jweewee"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":234,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":235,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":236,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":237,"author":{"gitId":"Jweewee"},"content":"     * Parses the \u0027delete\u0027 command to remove a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":238,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":239,"author":{"gitId":"Jweewee"},"content":"     * @param command The user command to execute (\u0027delete\u0027).","lastModifiedDate":"2023-09-21"},{"lineNumber":240,"author":{"gitId":"Jweewee"},"content":"     * @param separateCommand The command that has been split.","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"Jweewee"},"content":"     * @param taskList   The TaskList object containing tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":242,"author":{"gitId":"Jweewee"},"content":"     * @return A string containing the result of deleting a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":243,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If there is an issue or error encountered during command execution.","lastModifiedDate":"2023-09-21"},{"lineNumber":244,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":245,"author":{"gitId":"Jweewee"},"content":"    public static String parseDeleteCommand(String command, String[] separateCommand,","lastModifiedDate":"2023-09-21"},{"lineNumber":246,"author":{"gitId":"Jweewee"},"content":"                                            TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":247,"author":{"gitId":"Jweewee"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":248,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":249,"author":{"gitId":"Jweewee"},"content":"            if (separateCommand.length \u003e 2 || Integer.parseInt(separateCommand[1]) \u003e taskList.getSize()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":250,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-07"},{"lineNumber":251,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":252,"author":{"gitId":"Jweewee"},"content":"            int taskNumber \u003d Integer.parseInt(separateCommand[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":253,"author":{"gitId":"Jweewee"},"content":"            Task task \u003d taskList.getTaskItem(taskNumber - 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":254,"author":{"gitId":"Jweewee"},"content":"            if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":255,"author":{"gitId":"Jweewee"},"content":"                result +\u003d \" Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":256,"author":{"gitId":"Jweewee"},"content":"                result +\u003d task.toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":257,"author":{"gitId":"Jweewee"},"content":"                taskList.deleteTask(taskNumber - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":258,"author":{"gitId":"Jweewee"},"content":"                result +\u003d \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":259,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":260,"author":{"gitId":"Jweewee"},"content":"            Ui.showMessage(result);","lastModifiedDate":"2023-09-21"},{"lineNumber":261,"author":{"gitId":"Jweewee"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":262,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-07"},{"lineNumber":263,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":264,"author":{"gitId":"Jweewee"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":265,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":266,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":266}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"import java.io.File;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":" * The Storage class handles the loading and saving of tasks to a specified file.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"public class Storage {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    private String filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    private String folderPath;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new Storage instance with the file path for data storage.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"     * @param filePath The file path to load and save task data.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"        this.folderPath \u003d file.getAbsoluteFile().getParent();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     * Loads and retrieves a list of tasks from the specified file.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     * @return A List containing the tasks loaded from the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If an error occurs while loading tasks or creating the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"            File resourceFile \u003d new File(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"            Scanner fileReader \u003d new Scanner(resourceFile);","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"            int count \u003d -1;","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"                String data \u003d fileReader.nextLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"                String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"                String taskType \u003d parts[0].substring(1, 2);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"                String date \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new ToDo(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"                    if (parts[1].charAt(1) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"                        tasks.get(count).markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"                    String start \u003d date.split(\"-\")[0] + \"pm\";","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"                    String end \u003d date.split(\"-\")[1].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"                    if (parts[1].charAt(1) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"                        tasks.get(count).markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new Deadline(description, date);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"                    if (parts[1].charAt(1) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"                        tasks.get(count).markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"            fileReader.close();","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"            return tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"            createDataFolderIfNeeded(folderPath);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"            createDataFileIfNeeded(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"Unable to load file. Created an empty file!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"     * Creates a data folder if it doesn\u0027t exist at the specified folder path.","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"     * @param folderPath The folder path where the data folder should be created.","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"    private static void createDataFolderIfNeeded(String folderPath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"        File dataFolder \u003d new File(folderPath);","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"            dataFolder.mkdir();","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"     * Creates a data file if it doesn\u0027t exist at the specified file path.","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"Jweewee"},"content":"     * @param filePath The file path where the data file should be created.","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"Jweewee"},"content":"    private static void createDataFileIfNeeded(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"Jweewee"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"Jweewee"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"Jweewee"},"content":"            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"Jweewee"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"Jweewee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"Jweewee"},"content":"     * Writes the contents of a TaskList to a file specified by the current instance\u0027s file path.","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"Jweewee"},"content":"     * Each task is written as a separate line in the file.","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"Jweewee"},"content":"     * @param taskList The TaskList containing tasks to be written to the file.","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If an IOException occurs while writing to the file.","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"Jweewee"},"content":"    public void writeLine(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"Jweewee"},"content":"        File resourceFile \u003d new File(this.filePath);","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"Jweewee"},"content":"            FileWriter writer \u003d new FileWriter(resourceFile);","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"Jweewee"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"Jweewee"},"content":"                writer.write(task.toTxtString() + \"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"Jweewee"},"content":"            writer.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"Jweewee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":131}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"import java.util.List;","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":" * The duke.TaskList class represents a collection of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":" * It provides methods for adding, deleting, and accessing tasks within the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"public class TaskList {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new duke.TaskList with a given list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"     * Adds a duke.task to the duke.TaskList.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"     * @param task The duke.task to be added.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"     * Deletes a duke.task from the duke.TaskList based on its index.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     * @param taskIndex The index of the duke.task to be deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"     * Retrieves the list of tasks stored in the duke.TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"     * @return A List containing the tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"        return tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"     * Retrieves a specific duke.task from the duke.TaskList based on its index.","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"     * @param taskIndex The index of the duke.task to retrieve.","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"     * @return The duke.task at the specified index.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"    public Task getTaskItem(int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"     * Prints the list of tasks to the console, displaying their indices and descriptions.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"            System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"     * Generates a formatted string representation of the tasks in the TaskList.","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"     * Each task is numbered and presented in a list format.","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"     * @return A formatted string containing a numbered list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"    public String printTaskListString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"            result +\u003d \" \" + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"     * Gets the number of tasks in the duke.TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"     * @return The number of tasks in the duke.TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":92}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":" * The Ui class handles user interactions and displays messages to the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"public class Ui {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"    private static String logo \u003d \"Wiz\";","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"        showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"        return \"Hello from \" + logo","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"                + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"     * Displays a line separator.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    public static void showLine() {","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"     * Displays a loading error message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    public static String showLoadingError(DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        System.out.println(e);","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"        return e.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    public static void showByeMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"        showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"Bye!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    public static void showMessage(String result) {","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"        System.out.println(result);","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"    public static void showError(String errorMessage) {","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":51}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":" * Custom exception class for Duke chatbot.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":" * This exception throws when issue or error.","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"        super(message);","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"Jweewee":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":" * The task.Deadline class represents a task with a specific deadline.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    private static DateTimeFormatter formatterToTxtString \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new Deadline ask with a description and deadline date/time.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"     * @param description The description of the duke.task.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"     * @param by          The deadline date/time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If the provided date/time format is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"            this.dateTime \u003d getDateTime(by);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid Date/Time format, use DD/MM/YYYY HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     * Parses the provided date/time string into a LocalDateTime object.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"     * @param dateTime The date/time string in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"     * @return A LocalDateTime object representing the parsed date/time.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If the provided date/time format is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    public static LocalDateTime getDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"            return LocalDateTime.parse(dateTime, formatterToTxtString);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid Date/Time format, use DD/MM/YYYY HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"     * Returns a formatted string representation of the Deadline task for saving to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"     * @return A string in the format \"[D] | [X] | Description | duke.task.Deadline\".","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        return \"[D] | [\" + (this.isDone ? \"X\" : \" \") + \"] | \" + this.description + \" | \"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"                + this.dateTime.format(formatterToTxtString);","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representation of the Deadline task for displaying to the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"     * @return A string in the format \"[D] [Status] Description (by: Deadline)\".","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"        DateTimeFormatter formatterToString \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dateTime.format(formatterToString) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":73}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":" * The Event class represents a task of type \"duke.task.Event\" inherited from Task class.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":" * It contains a description and a time interval during which the event occurs.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    protected String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    protected String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new Event task with the provided description and time interval.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     * @param description The description of the Event duke.task.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     * @param start       The start time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"     * @param end         The end time of event","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"        String newStart \u003d this.start.split(\"pm\")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"//        return \"E | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \" + newStart + \"-\" + end;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        return \"[E] | [\" + (this.isDone ? \"X\": \" \") + \"] | \" + this.description + \" | \" + newStart + \"-\" + end;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    //event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    //","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representation of the Event task","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"     * @return A formatted string indicated the task type, completion status and time interval","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":" * The duke.task.Task class represents a generic task with a description and a completion status.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":" * It serves as the base class for specific task types.","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"public class Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    protected String description;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new Task instance with a given description.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     * Marks the task as not completed (undone).","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"     * Gets the status icon of the task, indicating completion.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     * @return \"X\" if the task is done, \" \" (space) if the task is not done.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"     * @return String representation of description of task","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"        return this.description;","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"     * @return An empty string; specific task types override this method.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        return \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representation of the task for displaying to the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"     * @return A string in the format \"[Status] Description\".","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":70}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"        return \"[T] | [\" + (this.isDone ? \"X\" : \" \") + \"] | \" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"Jweewee":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"Jweewee":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":" * The TaskListTest class contains unit tests for the TaskList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    private TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"     * Test the addTask method of the TaskList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"        int orgCount \u003d tasks.getTasks().size();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"        Task newTask \u003d new Task(\"Test task\");","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"        assertEquals(orgCount + 1, tasks.getTasks().size());","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"     * Test the removeTask method of the TaskList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"        Task newTask \u003d new Task(\"Test task\");","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"        int orgCount \u003d tasks.getTasks().size();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"        tasks.deleteTask(0);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"        assertEquals(orgCount - 1, tasks.getTasks().size());","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Jweewee":39}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":" * The TaskListTest class contains unit tests for the TaskList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     * Test the toString method of the ToDo class.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"        ToDo testTask \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"        assertEquals(\"[T][ ] Test ToDo\", testTask.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"     * Test the markAsDone method of the ToDo class.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"        ToDo task1 \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        task1.markAsDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"        assertEquals(\"[T][X] Test ToDo\", task1.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Jweewee":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"todo buy bread","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"deadline return books /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":10}}]
