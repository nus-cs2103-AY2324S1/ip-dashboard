[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"[T] | [X] | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"[D] | [X] | return book | June 6th","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"[E] | [X] | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"[T] | [X] | join sports club","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"[E] | [X] | project meeting | Mon 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"[E] | [X] | project meeting | Mon 2-4pm","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Jweewee":6}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Jweewee":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"//        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + by;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"        return \"[D] | [\" + (this.isDone ? \"X\": \" \") + \"] | \" + this.description + \" | \" + by;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":" * The Duke class represents a simple chatbot application that helps manage tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"     * The main method to start the Duke chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     * @param args Command-line arguments (unused).","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"        Duke wizzer \u003d new Duke();","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"        String logo \u003d \"Wiz\";","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"        String folderPath \u003d \"./data/\";","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"        //        wizzer.readFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"//        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"            tasks \u003d readFile(filePath, folderPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"Hello from \" + logo +","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"                \"\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"            System.out.println(\"--------------------------\");","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"                wizzer.executeCommand(command, filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"            System.out.println(\"--------------------------\");","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"        scanner.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"    private static void createDataFolderIfNeeded(String folderPath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"        File dataFolder \u003d new File(folderPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"            dataFolder.mkdir();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"    private static void createDataFileIfNeeded(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"    public static void writeLine(String filePath) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"        File resourceFile \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"            FileWriter writer \u003d new FileWriter(resourceFile);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"                writer.write(task.toTxtString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"    public static List\u003cTask\u003e readFile(String filePath, String folderPath) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"            File resourceFile \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"            Scanner myReader \u003d new Scanner(resourceFile);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"            int count \u003d -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"//                String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"//                String taskType \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"//                int isDone \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"//                String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"//                String date \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"//                String[] parts \u003d data.split(\"]\\\\[\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"//                String isDone \u003d parts[1].substring(0, 1); //\"X\" or \" \"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"                //[E] | [0] | project meeting | Mon 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"                String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"                String taskType \u003d parts[0].substring(1,2);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Jweewee"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Jweewee"},"content":"                String date \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Jweewee"},"content":"//                String descripNtime[] \u003d parts[1].substring(3).split(\"\\\\(\");  //description to time","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Jweewee"},"content":"//                String description1 \u003d descripNtime[0].trim();  // \"project meeting\"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Jweewee"},"content":"//                String[] dates \u003d descripNtime[1].split(\" to: \");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Jweewee"},"content":"//                String start1 \u003d dates[0].substring(6); // \"Mon 2pm\"","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Jweewee"},"content":"//                String end1 \u003d dates[1].substring(0, dates[1].length() - 1); //\"4pm\"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Jweewee"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new ToDo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"                    if (parts[1].charAt(1) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"                        tasks.get(count).markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Jweewee"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Jweewee"},"content":"                    String start \u003d date.split(\"-\")[0] + \"pm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Jweewee"},"content":"                    String end \u003d date.split(\"-\")[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Jweewee"},"content":"                    if (parts[1].charAt(1) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Jweewee"},"content":"                        tasks.get(count).markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Jweewee"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new Deadline(description, date);","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Jweewee"},"content":"                    if (parts[1].charAt(1) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Jweewee"},"content":"                        tasks.get(count).markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"Jweewee"},"content":"            myReader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Jweewee"},"content":"            return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"Jweewee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"Jweewee"},"content":"            createDataFolderIfNeeded(folderPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Jweewee"},"content":"            createDataFileIfNeeded(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"Jweewee"},"content":"            writeLine(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"Unable to find file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"Jweewee"},"content":"     * Parses and handles the user\u0027s command to perform various tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"Jweewee"},"content":"     * @param command The user\u0027s command to be processed.","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If the command is not recognised, or error","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"Jweewee"},"content":"    public void executeCommand(String command, String filePath) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"Jweewee"},"content":"        String[] separateCommand \u003d command.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"Jweewee"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"Jweewee"},"content":"            System.out.println(\"Task List:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"Jweewee"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"Jweewee"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"Jweewee"},"content":"        } else if (command.startsWith(\"mark\") || command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"Jweewee"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"Jweewee"},"content":"                if (separateCommand.length \u003e 2 || Integer.parseInt(separateCommand[1]) \u003e tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"Jweewee"},"content":"                    throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"Jweewee"},"content":"                int taskNumber \u003d Integer.parseInt(separateCommand[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"Jweewee"},"content":"                if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"Jweewee"},"content":"                    tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"Jweewee"},"content":"                    System.out.println(\" Marked as done: \");","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"Jweewee"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"Jweewee"},"content":"                    tasks.get(taskNumber - 1).markAsUndone();","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"Jweewee"},"content":"                    System.out.println(\" Marked as not done yet: \");","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"Jweewee"},"content":"                writeLine(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"Jweewee"},"content":"                System.out.println(\"   \" + tasks.get(taskNumber - 1).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"Jweewee"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"Jweewee"},"content":"        } else if (command.startsWith(\"todo\") || command.startsWith(\"deadline\") || command.startsWith(\"event\")","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"Jweewee"},"content":"                || command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"Jweewee"},"content":"            if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"Jweewee"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"Jweewee"},"content":"                    String description \u003d command.substring(5);","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"Jweewee"},"content":"                    if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"Jweewee"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new ToDo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"Jweewee"},"content":"                    writeLine(currTask.toTxtString());","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"Jweewee"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"Jweewee"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"Jweewee"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"Jweewee"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"Jweewee"},"content":"                    String[] parts \u003d command.split(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"Jweewee"},"content":"                    String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"Jweewee"},"content":"                    if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"Jweewee"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"Jweewee"},"content":"                    String byID \u003d parts[1].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new Deadline(description, byID);","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"Jweewee"},"content":"//                    writeLine(currTask.toTxtString());","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"Jweewee"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"Jweewee"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"Jweewee"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"Jweewee"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"Jweewee"},"content":"                    String[] parts \u003d command.split(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"Jweewee"},"content":"                    String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"Jweewee"},"content":"                    if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"Jweewee"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"Jweewee"},"content":"                    String[] timeParts \u003d parts[1].split(\"/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"Jweewee"},"content":"                    String start \u003d timeParts[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"Jweewee"},"content":"                    String end \u003d timeParts[1].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"Jweewee"},"content":"//                    writeLine(currTask.toTxtString());","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"Jweewee"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"Jweewee"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"Jweewee"},"content":"            } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"Jweewee"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":219,"author":{"gitId":"Jweewee"},"content":"                    if (separateCommand.length \u003e 2 || Integer.parseInt(separateCommand[1]) \u003e tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":220,"author":{"gitId":"Jweewee"},"content":"                        throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"Jweewee"},"content":"                    int taskNumber \u003d Integer.parseInt(separateCommand[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"Jweewee"},"content":"                    if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"Jweewee"},"content":"                        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"Jweewee"},"content":"                        System.out.println(\"   \" + tasks.get(taskNumber - 1).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":226,"author":{"gitId":"Jweewee"},"content":"                        tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":228,"author":{"gitId":"Jweewee"},"content":"                } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"Jweewee"},"content":"                    throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"Jweewee"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"Jweewee"},"content":"            if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"Jweewee"},"content":"                System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"Jweewee"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"Jweewee"},"content":"                System.out.println(\" I\u0027ve added this task:\" + \"\\n\" + \"   \" + tasks.get(tasks.size() - 1).toString()","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"Jweewee"},"content":"                        + \"\\n\" + \" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"Jweewee"},"content":"            writeLine(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"Jweewee"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":5,"Jweewee":240}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":" * Custom exception class for Duke chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":" * This exception throws when issue or error.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"        return super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":" * The Event class represents a task of type \"Event\" inherited from the Task class.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":" * It contains a description and a time interval during which the event occurs.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"    protected String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"    protected String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new Event task with the provided description and time interval.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     * @param start       The start time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     * @param end         The end time of event","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"        String newStart \u003d this.start.split(\"pm\")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"//        return \"E | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \" + newStart + \"-\" + end;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"        return \"[E] | [\" + (this.isDone ? \"X\": \" \") + \"] | \" + this.description + \" | \" + newStart + \"-\" + end;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    //event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    //","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representation of the Event task","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"     * @return A formatted string indicated the task type, completion status and time interval","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":38}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"        return \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" +  this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":24}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"        return \"[T] | [\" + (this.isDone ? \"X\" : \" \") + \"] | \" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"todo buy bread","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"deadline return books /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":10}}]
