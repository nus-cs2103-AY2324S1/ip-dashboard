[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"plugins {","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"repositories {","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"dependencies {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"test {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    testLogging {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"        showExceptions true","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        showCauses true","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"application {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"shadowJar {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"run{","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Jweewee":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"[T] | [X] | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"[D] | [X] | return book | 02/12/2019 1800","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"[E] | [X] | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"[T] | [X] | join sports club","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"[E] | [X] | project meeting | Mon 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"[E] | [X] | project meeting | Mon 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"[D] | [ ] | return book | 02/12/2019 1800","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"[D] | [ ] | return book | 02/12/2019 1800","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"[D] | [ ] | return book | 02/12/2019 1800","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"[D] | [ ] | return book | 02/12/2019 1800","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"[D] | [ ] | return book | 02/12/2019 1800","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":11}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Jweewee":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":" * The Duke class represents a simple chatbot application that helps manage tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    private String filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new Duke chatbot instance with a specified file path for data storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"     * @param filePath The file path to load and save duke.task data.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"            List\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"            tasks \u003d new TaskList(newTaskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"    public void run() {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"        String command \u003d ui.readCommand();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"        while (!Parser.isExitCommand(command)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"                Parser.parseCommand(command, filePath, tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"            } finally {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"            command \u003d ui.readCommand();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"        ui.showByeMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"        ui.closeScanner();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"     * The main method to start the Duke chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"     * @param args Command-line arguments (unused).","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"Jweewee":61}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":" * Custom exception class for Duke chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":" * This exception throws when issue or error.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"        return super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import java.io.File;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" * Creates a new instance of the duke.Parser class.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":" *","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":" * The duke.Parser class is responsible for parsing user commands and performing","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":" * tasks accordingly.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"public class Parser {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new duke.Parser instance.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"     * The duke.Parser class is responsible for parsing user commands and performing","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"     * tasks based on those commands.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    public Parser() {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     * Checks if the given input string represents an exit command.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"     * @param input The input string to check.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"     * @return True if the input string is \"bye\" (case-insensitive), indicating an exit command; otherwise, false.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    public static boolean isExitCommand(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"        return input.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     * Parses and handles the user\u0027s command to perform various tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"     * @param command The user\u0027s command to be processed.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"     * @param filePath The user\u0027s filepath to be written to.","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"     * @param taskList The user\u0027s taskList to ammend.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If the command is not recognised, or error.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"    public static void parseCommand(String command, String filePath, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"        String[] separateCommand \u003d command.split(\" \");","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"            System.out.println(\"Task List:\");","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"            taskList.printTaskList();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"        } else if (command.startsWith(\"mark\") || command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"                if (separateCommand.length \u003e 2 || Integer.parseInt(separateCommand[1]) \u003e taskList.getSize()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"                    throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"                int taskNumber \u003d Integer.parseInt(separateCommand[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"                if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"                    taskList.getTaskItem(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"                    System.out.println(\" Marked as done: \");","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"                    taskList.getTaskItem(taskNumber - 1).markAsUndone();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"                    System.out.println(\" Marked as not done yet: \");","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"                writeLine(filePath, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"                System.out.println(\"   \" + taskList.getTaskItem(taskNumber - 1).toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"        } else if (command.startsWith(\"todo\") || command.startsWith(\"deadline\") || command.startsWith(\"event\")","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"                || command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"            if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"                try {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"                    String description \u003d command.substring(5);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"                    if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new ToDo(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"                    taskList.addTask(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"                try {","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"                    String[] parts \u003d command.split(\"/by\"); //   2/12/2019 1800","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"                    String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"                    if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"                        throw new DukeException(\"☹ OOPS!!! There must be a date and time.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"                    String byID \u003d parts[1].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new Deadline(description, byID);","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"                    if (currTask.toString() !\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"                        taskList.addTask(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"                    } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"                        throw new DukeException(\"☹ OOPS!!! Invalid Date/Time format, use DD/MM/YYYY HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"Jweewee"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"Jweewee"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"Jweewee"},"content":"                try {","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"Jweewee"},"content":"                    String[] parts \u003d command.split(\"/from\");","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"Jweewee"},"content":"                    String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"Jweewee"},"content":"                    if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"Jweewee"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"                    String[] timeParts \u003d parts[1].split(\"/to\");","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"                    String start \u003d timeParts[0].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"                    String end \u003d timeParts[1].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"Jweewee"},"content":"                    taskList.addTask(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"Jweewee"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"Jweewee"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"Jweewee"},"content":"            } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"Jweewee"},"content":"                try {","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"Jweewee"},"content":"                    if (separateCommand.length \u003e 2 || Integer.parseInt(separateCommand[1]) \u003e taskList.getSize()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"Jweewee"},"content":"                        throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"Jweewee"},"content":"                    int taskNumber \u003d Integer.parseInt(separateCommand[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"Jweewee"},"content":"                    if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"Jweewee"},"content":"                        System.out.println(\" Noted. I\u0027ve removed this duke.task:\");","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"Jweewee"},"content":"                        System.out.println(\"   \" + taskList.getTaskItem(taskNumber - 1).toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"Jweewee"},"content":"                        taskList.deleteTask(taskNumber - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"Jweewee"},"content":"                } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"Jweewee"},"content":"                    throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"Jweewee"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"Jweewee"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"Jweewee"},"content":"            if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"Jweewee"},"content":"                System.out.println(\" Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"Jweewee"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"Jweewee"},"content":"                System.out.println(\" I\u0027ve added this duke.task:\" + \"\\n\" + \"   \" + taskList.getTaskItem(taskList.getSize() - 1).toString()","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"Jweewee"},"content":"                        + \"\\n\" + \" Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"Jweewee"},"content":"            writeLine(filePath, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"Jweewee"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"Jweewee"},"content":"     * Writes the contents of a duke.TaskList to a specified file path.","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"Jweewee"},"content":"     * @param filePath  The file path to write the duke.TaskList contents to.","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"Jweewee"},"content":"     * @param taskList  The duke.TaskList containing tasks to be written to the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If an error occurs while writing to the file, or if the description of a duke.task is empty.","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"Jweewee"},"content":"    public static void writeLine(String filePath, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"Jweewee"},"content":"        File resourceFile \u003d new File(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"Jweewee"},"content":"            FileWriter writer \u003d new FileWriter(resourceFile);","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"Jweewee"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"Jweewee"},"content":"                writer.write(task.toTxtString() + \"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"Jweewee"},"content":"            writer.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"Jweewee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":166}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import java.io.File;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":" * The duke.Storage class handles the loading and saving of tasks to a specified file.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"public class Storage {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    private String filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    private String folderPath;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new duke.Storage instance with the file path for data storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"     * @param filePath The file path to load and save duke.task data.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        this.folderPath \u003d file.getAbsoluteFile().getParent();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"     * Loads and retrieves a list of tasks from the specified file.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     * @return A List containing the tasks loaded from the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If an error occurs while loading tasks or creating the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"            File resourceFile \u003d new File(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"            Scanner myReader \u003d new Scanner(resourceFile);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"            int count \u003d -1;","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"                String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"                String taskType \u003d parts[0].substring(1, 2);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"                String date \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new ToDo(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"                    if (parts[1].charAt(1) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"                        tasks.get(count).markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"                    String start \u003d date.split(\"-\")[0] + \"pm\";","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"                    String end \u003d date.split(\"-\")[1].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"                    if (parts[1].charAt(1) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"                        tasks.get(count).markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"                    Task currTask \u003d new Deadline(description, date);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"                    tasks.add(currTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"                    if (parts[1].charAt(1) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"                        tasks.get(count).markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"            myReader.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"            return tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"            createDataFolderIfNeeded(folderPath);","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"            createDataFileIfNeeded(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"Unable to load file. Created an empty file!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"     * Creates a data folder if it doesn\u0027t exist at the specified folder path.","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"     * @param folderPath The folder path where the data folder should be created.","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"    private static void createDataFolderIfNeeded(String folderPath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"        File dataFolder \u003d new File(folderPath);","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"            dataFolder.mkdir();","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"     * Creates a data file if it doesn\u0027t exist at the specified file path.","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"     * @param filePath The file path where the data file should be created.","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"Jweewee"},"content":"    private static void createDataFileIfNeeded(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"Jweewee"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"Jweewee"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"Jweewee"},"content":"            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"Jweewee"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"Jweewee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"Jweewee"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":111}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":" * The duke.TaskList class represents a collection of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":" * It provides methods for adding, deleting, and accessing tasks within the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"public class TaskList {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new duke.TaskList with a given list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"     * Adds a duke.task to the duke.TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"     * @param task The duke.task to be added.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"     * Deletes a duke.task from the duke.TaskList based on its index.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     * @param taskIndex The index of the duke.task to be deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"     * Retrieves the list of tasks stored in the duke.TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"     * @return A List containing the tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"        return tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"     * Retrieves a specific duke.task from the duke.TaskList based on its index.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"     * @param taskIndex The index of the duke.task to retrieve.","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"     * @return The duke.task at the specified index.","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"    public Task getTaskItem(int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"     * Prints the list of tasks to the console, displaying their indices and descriptions.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"            System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"     * Gets the number of tasks in the duke.TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"     * @return The number of tasks in the duke.TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":78}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":" * The duke.Ui class handles user interactions and displays messages to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"public class Ui {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"    private String logo \u003d \"Wiz\";","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new duke.Ui instance and initializes the scanner for user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    public Ui() {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"        showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"Hello from \" + logo +","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"                \"\\nWhat can I do for you?\");","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"        showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"     * @return The user\u0027s input command as a string.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"     * Displays a line separator.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"     * Displays a loading error message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"\\nContinue with new inputs please.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"    public void showByeMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"Bye!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"        System.out.println(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"     * Closes the scanner to release system resources.","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"        scanner.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":75}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":" * The duke.task.Deadline class represents a duke.task with a specific deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":" * It is a subclass of the duke.task.Task class.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    static DateTimeFormatter formatterToTxtString \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new duke.task.Deadline duke.task with a description and deadline date/time.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"     * @param description The description of the duke.task.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"     * @param by          The deadline date/time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If the provided date/time format is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"            this.dateTime \u003d getDateTime(by);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid Date/Time format, use DD/MM/YYYY HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     * Parses the provided date/time string into a LocalDateTime object.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     * @param dateTime The date/time string in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"     * @return A LocalDateTime object representing the parsed date/time.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"     * @throws DukeException If the provided date/time format is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    public static LocalDateTime getDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"            return LocalDateTime.parse(dateTime, formatterToTxtString);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid Date/Time format, use DD/MM/YYYY HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"     * Returns a formatted string representation of the duke.task.Deadline duke.task for saving to a file.","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"     * @return A string in the format \"[D] | [X] | Description | duke.task.Deadline\".","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"        return \"[D] | [\" + (this.isDone ? \"X\": \" \") + \"] | \" + this.description + \" | \"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"                + this.dateTime.format(formatterToTxtString);","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representation of the duke.task.Deadline duke.task for displaying to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"     * @return A string in the format \"[D] [Status] Description (by: duke.task.Deadline)\".","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"        DateTimeFormatter formatterToString \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dateTime.format(formatterToString) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":72}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":" * The duke.task.Event class represents a duke.task of type \"duke.task.Event\" inherited from the duke.task.Task class.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":" * It contains a description and a time interval during which the event occurs.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    protected String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    protected String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new duke.task.Event duke.task with the provided description and time interval.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     * @param description The description of the duke.task.Event duke.task.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     * @param start       The start time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"     * @param end         The end time of event","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"        String newStart \u003d this.start.split(\"pm\")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"//        return \"E | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \" + newStart + \"-\" + end;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        return \"[E] | [\" + (this.isDone ? \"X\": \" \") + \"] | \" + this.description + \" | \" + newStart + \"-\" + end;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    //event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    //","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representation of the duke.task.Event duke.task","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"     * @return A formatted string indicated the duke.task type, completion status and time interval","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":" * The duke.task.Task class represents a generic duke.task with a description and a completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":" * It serves as the base class for specific duke.task types.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"public class Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    protected String description;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"     * Constructs a new duke.task.Task instance with a given description.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     * @param description The description of the duke.task.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"     * Marks the duke.task as completed.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     * Marks the duke.task as not completed (undone).","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"     * Gets the status icon of the duke.task, indicating completion.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     * @return \"X\" if the duke.task is done, \" \" (space) if the duke.task is not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representation of the duke.task for saving to a file.","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"     * @return An empty string; specific duke.task types override this method.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"        return \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representation of the duke.task for displaying to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"     * @return A string in the format \"[Status] Description\".","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Jweewee":61}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"    public String toTxtString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"        return \"[T] | [\" + (this.isDone ? \"X\" : \" \") + \"] | \" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":17}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":" * The TaskListTest class contains unit tests for the TaskList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    private TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"     * Test the addTask method of the TaskList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"        int orgCount \u003d tasks.getTasks().size();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"        Task newTask \u003d new Task(\"Test task\");","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"        assertEquals(orgCount + 1, tasks.getTasks().size());","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"     * Test the removeTask method of the TaskList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"        Task newTask \u003d new Task(\"Test task\");","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"        int orgCount \u003d tasks.getTasks().size();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"        tasks.deleteTask(0);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"        assertEquals(orgCount - 1, tasks.getTasks().size());","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Jweewee":39}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package duke.task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":" * The TaskListTest class contains unit tests for the TaskList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     * Test the toString method of the ToDo class.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"        ToDo testTask \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"        assertEquals(\"[T][ ] Test ToDo\", testTask.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"     * Test the markAsDone method of the ToDo class.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"        ToDo task1 \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        task1.markAsDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"        assertEquals(\"[T][X] Test ToDo\", task1.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Jweewee":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"todo buy bread","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"deadline return books /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Jweewee":10}}]
