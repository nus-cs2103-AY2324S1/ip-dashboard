[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sunzihan23":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"sunzihan23"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"sunzihan23"},"content":"    //dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"sunzihan23"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sunzihan23":18,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"# Bot User Guide","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"## Getting Started","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"1. Check that you are using Java 11","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"2. Download the latest JAR file","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"3. Navigate to the directory containing the JAR file downloaded","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"4. Run java -jar duke.jar to start the application","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"### Creating a new task: `todo`, `deadline`, `event`","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"Add a new task to your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"**Format:**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"1. `todo [TASK]`","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"2. `deadline [TASK] /by [DD/MM/YYYY HHmm]`","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"3. `event [TASK] /from [DD/MM/YYYY HHmm] /to [DD/MM/YYYY HHmm]`","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"**Examples:**","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"- `todo buy lunch`","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"- `deadline submit report /by 30/09/2023 2359`","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"- `event attend workshop /from 28/09/2023 1000 /to 28/09/2023 1800`","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"**Expected Bot output:**","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"[T][] buy lunch","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"Now you have 1 tasks in the list","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"Delete an existing task from your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"**Format:** `delete [TASK_NUMBER]`","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"**Example:** `delete 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"sunzihan23"},"content":"**Expected Bot output:**","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"sunzihan23"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"sunzihan23"},"content":"[T][] buy lunch","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"sunzihan23"},"content":"Now you have 0 tasks in the list","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"sunzihan23"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"sunzihan23"},"content":"List all the tasks you have added to your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"sunzihan23"},"content":"**Format:** `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"sunzihan23"},"content":"**Expected Bot output:**","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"sunzihan23"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"sunzihan23"},"content":"1. [T][] buy lunch","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"sunzihan23"},"content":"2. [D][] submit report (by: Sep 30 2023 23:59)","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"sunzihan23"},"content":"3. [E][] attend workshop (from: Sep 28 2023 10:00, to: Sep 28 2023 18:00)","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"sunzihan23"},"content":"### Marking a task: `mark`","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"sunzihan23"},"content":"Mark an existing task from your task list as done as indicated by X.","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"sunzihan23"},"content":"**Format:** `mark [TASK_NUMBER]`","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"sunzihan23"},"content":"**Example:** `mark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"sunzihan23"},"content":"**Expected Bot output:**","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"sunzihan23"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"sunzihan23"},"content":"[T][X] buy lunch","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"sunzihan23"},"content":"### Finding a task: `find`","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"sunzihan23"},"content":"Find a specified task from the tasklist containing the keyword entered.","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"sunzihan23"},"content":"**Format:** `find [KEYWORD]`","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"sunzihan23"},"content":"**Example:** `find report`","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"sunzihan23"},"content":"**Expected Bot output:**","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"sunzihan23"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"sunzihan23"},"content":"1. [D][] submit report (by: Sep 30 2023 23:59)","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"sunzihan23"},"content":"### Getting help: `help`","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"sunzihan23"},"content":"List all commands Bot understands.","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"sunzihan23"},"content":"**Format:** `help`","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"sunzihan23"},"content":"**Expected Bot output:**","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":96,"author":{"gitId":"sunzihan23"},"content":"Here are the commands I understand:","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"sunzihan23"},"content":"1. list","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"sunzihan23"},"content":"2. todo [TASK]","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"sunzihan23"},"content":"3. deadline [TASK] /by [DD/MM/YYYY HHmm]","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"sunzihan23"},"content":"4. event [TASK] /from [DD/MM/YYYY HHmm] /to [DD/MM/YYYY HHmm]","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"sunzihan23"},"content":"5. mark [TASK_NUMBER]","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"sunzihan23"},"content":"6. delete [TASK_NUMBER]","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"sunzihan23"},"content":"7. find [KEYWORD]","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"sunzihan23"},"content":"8. bye","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"sunzihan23"},"content":"9. help","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":107,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"sunzihan23"},"content":"### Exiting the application: `bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"sunzihan23"},"content":"Exit the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"sunzihan23"},"content":"**Format:** `bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"sunzihan23"},"content":"**Expected Bot output:**","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"sunzihan23"},"content":"Bye! Hope to see you again soon!","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"sunzihan23"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"sunzihan23"},"content":"## Command Summary","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"sunzihan23"},"content":"Command | Format","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"sunzihan23"},"content":"--------|------------------","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"sunzihan23"},"content":"**Todo** | `todo [TASK]`","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"sunzihan23"},"content":"**Deadline** | `deadline [TASK] /by [DD/MM/YYYY HHmm]` ","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"sunzihan23"},"content":"**Event** | `event [TASK] /from [DD/MM/YYYY HHmm] /to [DD/MM/YYYY HHmm]`","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"sunzihan23"},"content":"**Delete** | `delete [TASK_NUMBER]`","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"sunzihan23"},"content":"**List** | `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"sunzihan23"},"content":"**Mark** | `mark [TASK_NUMBER]` ","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"sunzihan23"},"content":"**Find** | `find [KEYWORD]` ","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"sunzihan23"},"content":"**Help** | `help` ","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"sunzihan23"},"content":"**Exit** | `bye`","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"sunzihan23":111,"-":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":" * The Duke class represents a simple task management application.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":" * It initializes necessary components and controls the main application flow.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"     * Constructs a Duke object with the specified file path for task storage.*","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    public Duke() {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"        this.tasks \u003d new TaskList(\"./data/duke.txt\");","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"     * Outputs a response after executing a command based on user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"     * @param input The user input to process.","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"     * @return A response message based on the input command.","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"            return command.execute(this.tasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"     * The main method to start the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"sunzihan23"},"content":"     * @param args Command-line arguments passed into Launcher.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"sunzihan23"},"content":"        Launcher.main(args);","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sunzihan23":40,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":" * The DukeException class represents an exception specific to the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":" * It extends the RuntimeException class to handle custom exceptions for Duke.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"     * Constructs a DukeException object with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"     * Returns a string representation of the DukeException.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"     * @return A formatted error message followed by the exception message.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"        return \"OOPS! \" + super.getMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"sunzihan23":26}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"            stage.setTitle(\"Bot\");","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":34}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":" * The Parser class is responsible for parsing user input and executing corresponding actions.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":" * It interacts with the TaskList and Ui classes to manage tasks and user interface interactions.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"     * Parses user input and executes corresponding actions.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"     * @param input The user input to be parsed and acted upon.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"     * @throws DukeException If there is an issue with parsing or executing the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"        String action \u003d parts[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"        String details \u003d parts.length \u003d\u003d 1 ? \"\" : parts[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"        switch (action) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"        case \"b\":","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"        case \"list\":","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"        case \"l\":","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"        case \"m\":","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"                return new MarkCommand(Integer.parseInt(details));","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"                throw new DukeException(\"Enter an integer as the task number!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"sunzihan23"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"sunzihan23"},"content":"        case \"f\":","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"sunzihan23"},"content":"            return new FindCommand(details);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"sunzihan23"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"sunzihan23"},"content":"        case \"t\":","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"sunzihan23"},"content":"            if (details.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"sunzihan23"},"content":"                throw new DukeException(\"So what exactly do you want to do?\");","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"sunzihan23"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"sunzihan23"},"content":"            return new AddCommand(details);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"sunzihan23"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"sunzihan23"},"content":"        case \"d\":","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"sunzihan23"},"content":"            if (details.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"sunzihan23"},"content":"                throw new DukeException(\"So what exactly is the task?\");","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"sunzihan23"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"sunzihan23"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"sunzihan23"},"content":"                String[] subParts \u003d details.split(\" /by \", 2);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"sunzihan23"},"content":"                LocalDateTime dateTime \u003d formatDateTime(subParts[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"sunzihan23"},"content":"                return new AddCommand(subParts[0], dateTime);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"sunzihan23"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"sunzihan23"},"content":"                throw new DukeException(\"OOPS! The time format should be DD/MM/YYYY HHmm\");","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"sunzihan23"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"sunzihan23"},"content":"        case \"event\":","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"sunzihan23"},"content":"        case \"e\":","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"sunzihan23"},"content":"            if (details.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"sunzihan23"},"content":"                throw new DukeException(\"So what exactly is the task?\");","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"sunzihan23"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"sunzihan23"},"content":"            try {","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"sunzihan23"},"content":"                String[] taskPart \u003d details.split(\" /from \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"sunzihan23"},"content":"                String[] timePart \u003d taskPart[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"sunzihan23"},"content":"                LocalDateTime from \u003d formatDateTime(timePart[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"sunzihan23"},"content":"                LocalDateTime to \u003d formatDateTime(timePart[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"sunzihan23"},"content":"                return new AddCommand(taskPart[0], from, to);","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"sunzihan23"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"sunzihan23"},"content":"                throw new DukeException(\"OOPS! The time format should be DD/MM/YYYY HHmm\");","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"sunzihan23"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"sunzihan23"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"sunzihan23"},"content":"        case \"del\":","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"sunzihan23"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"sunzihan23"},"content":"                return new DeleteCommand(Integer.parseInt(details));","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"sunzihan23"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"sunzihan23"},"content":"                throw new DukeException(\"Enter an integer as the task number!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"sunzihan23"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"sunzihan23"},"content":"        case \"help\":","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"sunzihan23"},"content":"        case \"h\":","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"sunzihan23"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"sunzihan23"},"content":"        default:","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"sunzihan23"},"content":"            throw new DukeException(\"I have no idea what that means...\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"sunzihan23"},"content":"                    + \"Try entering \u0027help\u0027 to see what I can do!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"sunzihan23"},"content":"     * Parses a string into a LocalDateTime object using a specific format.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"sunzihan23"},"content":"     * @param input The input string representing a date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"sunzihan23"},"content":"     * @return A LocalDateTime object parsed from the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"sunzihan23"},"content":"     * @throws DateTimeParseException If the input cannot be parsed into a valid LocalDateTime.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"sunzihan23"},"content":"    private static LocalDateTime formatDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"sunzihan23"},"content":"        return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"sunzihan23"},"content":" }","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"sunzihan23":100}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import java.io.EOFException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":" * Storage class handles loading tasks from file and saving tasks in the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"    private String filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"            return;","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"            System.out.println(\"Error while creating file: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"sunzihan23"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"sunzihan23"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"sunzihan23"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"sunzihan23"},"content":"     * @throws ClassNotFoundException If the class of a serialized object cannot be found.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"sunzihan23"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"sunzihan23"},"content":"        assert !this.filePath.equals(\"\") : \"File path should exist\";","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"sunzihan23"},"content":"        ObjectInputStream objectInputStream \u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"sunzihan23"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"sunzihan23"},"content":"            FileInputStream fileInputStream \u003d new FileInputStream(filePath);","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"sunzihan23"},"content":"            objectInputStream \u003d new ObjectInputStream(fileInputStream);","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"sunzihan23"},"content":"            // Suppress warning as deserialised object is of ArrayList\u003cduke.task.Task\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"sunzihan23"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"sunzihan23"},"content":"            ArrayList\u003cTask\u003e list \u003d (ArrayList\u003cTask\u003e) objectInputStream.readObject();","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"sunzihan23"},"content":"            return list;","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"sunzihan23"},"content":"        } catch (EOFException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"sunzihan23"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"sunzihan23"},"content":"        } finally {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"sunzihan23"},"content":"            if (objectInputStream !\u003d null) {","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"sunzihan23"},"content":"                objectInputStream.close();","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"sunzihan23"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"sunzihan23"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"sunzihan23"},"content":"     * @param list The ArrayList of Task objects to be saved to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"sunzihan23"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"sunzihan23"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e list) throws IOException{","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"sunzihan23"},"content":"        assert !this.filePath.equals(\"\") : \"File path should exist before saving tasks to file\";","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"sunzihan23"},"content":"        ObjectOutputStream objectOutputStream \u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"sunzihan23"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"sunzihan23"},"content":"            FileOutputStream fileOutputStream \u003d new FileOutputStream(filePath);","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"sunzihan23"},"content":"            objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"sunzihan23"},"content":"            objectOutputStream.writeObject(list);","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"sunzihan23"},"content":"        } finally {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"sunzihan23"},"content":"            if (objectOutputStream !\u003d null) {","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"sunzihan23"},"content":"                objectOutputStream.close();","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"sunzihan23"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"sunzihan23":91}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"    private String type;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    private String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"        this.type \u003d \"todo\";","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"    public AddCommand(String description, LocalDateTime end) {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"        this.type \u003d \"deadline\";","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"    public AddCommand(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"        this.type \u003d \"event\";","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"sunzihan23"},"content":"     * Executes the AddCommand, adding the specified task to the task list.","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"sunzihan23"},"content":"     * @param tasks The task list to which the task will be added.","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"sunzihan23"},"content":"     * @return A message indicating that the task has been added, along with the updated task count.","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"sunzihan23"},"content":"     * @throws DukeException If an invalid command is encountered.","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"sunzihan23"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"sunzihan23"},"content":"        Task task;","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"sunzihan23"},"content":"        switch (this.type) {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"sunzihan23"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"sunzihan23"},"content":"            task \u003d new ToDo(this.description);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"sunzihan23"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"sunzihan23"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"sunzihan23"},"content":"            task \u003d new Deadline(this.description, this.end);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"sunzihan23"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"sunzihan23"},"content":"        case \"event\":","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"sunzihan23"},"content":"            task \u003d new Event(this.description, this.start, this.end);","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"sunzihan23"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"sunzihan23"},"content":"        default:","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"sunzihan23"},"content":"            throw new DukeException(\"I have no idea what that means...\");","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"sunzihan23"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"sunzihan23"},"content":"        String addMessage \u003d Ui.addTask(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"sunzihan23"},"content":"        return addMessage + \"\\n\" + Ui.countTasks(tasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":69}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"    public abstract String execute(TaskList tasks) throws DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":8}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"    private final int taskNum;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"            Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"            tasks.deleteTask(this.taskNum - 1);","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"            String deleteMessage \u003d Ui.deleteTask(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"            return deleteMessage + \"\\n\" + Ui.countTasks(tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"            throw new DukeException(\"Invalid task number...\");","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":27}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"        return Ui.exit();","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":12}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"    private final String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"        if (this.description.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"            throw new DukeException(\"So what exactly do you want to find?\");","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"        ArrayList\u003cTask\u003e list \u003d tasks.findTasks(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"        return Ui.findTasks(list);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":29}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"        return Ui.showHelpList();","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"sunzihan23":12}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"        return Ui.listTasks(tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":12}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"    private final int taskNum;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"            Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"            tasks.markAsDone(this.taskNum - 1);","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"            return Ui.markAsDone(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"            throw new DukeException(\"Invalid task number...\");","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":26}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.task;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":" * The Deadline class represents a task with a specific deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":" * It extends the Task class and adds functionality for handling deadlines.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"     * Constructs a Deadline object with the specified task description and deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"     * @param description The description of the task to be added.","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"     * @param date The deadline of the task as a LocalDateTime object.","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"        super(description);","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"     * @return A string containing task type, completion status, task description and deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"        return String.format(\"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\");","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"sunzihan23":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.task;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":" * The Event class represents a task that occurs within a specified time range.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":" * It extends the Task class and includes details about the start and end times of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"     * Constructs an Event object with the specified task description, start time, and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"     * @param start The start time of the event as a LocalDateTime object.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"     * @param end The end time of the event as a LocalDateTime object.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"        super(description);","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"     * @return A string containing event type, completion status, task description, start and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"        return String.format(\"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"                + start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \", to: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"                + end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"sunzihan23":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.task;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":" * The Task class represents a generic task with a description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":" * It serves as the base class for different types of tasks in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"    private String description;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"    private String icon \u003d \"[ ]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"     * Constructs a Task object with the specified task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"        assert description !\u003d null \u0026\u0026 !description.equals(\"\") : \"Task details should not be empty\";","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"     * Marks the task as done and updates the completion status icon.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"        this.icon \u003d \"[X]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"     * @return True if the task is marked as done, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"sunzihan23"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"sunzihan23"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"sunzihan23"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"sunzihan23"},"content":"     * @return The task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"sunzihan23"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"sunzihan23"},"content":"        return this.description;","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"sunzihan23"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"sunzihan23"},"content":"     * @return A string containing the completion status icon and the task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"sunzihan23"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"sunzihan23"},"content":"        return this.icon + \" \" + this.description;","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"sunzihan23":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.task;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":" * The TaskList class represents a list of tasks in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":" * It manages tasks, their operations, and interactions with storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"     * Constructs a TaskList object with the specified file path for task storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"    public TaskList(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"        fetchList();","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"     * Fetches the list of tasks from storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"    public void fetchList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"            this.list \u003d this.storage.load();","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"            System.out.println(\"Error when fetching todo list: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"sunzihan23"},"content":"     * Saves the current list of tasks to storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"sunzihan23"},"content":"    public void saveToFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"sunzihan23"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"sunzihan23"},"content":"            storage.saveToFile(this.list);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"sunzihan23"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"sunzihan23"},"content":"            System.out.println(\"Error while saving to-do list: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"sunzihan23"},"content":"     * Adds a task to the list and saves the list to storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"sunzihan23"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"sunzihan23"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"sunzihan23"},"content":"        this.list.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"sunzihan23"},"content":"        saveToFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"sunzihan23"},"content":"     * Marks a task as done and saves the list to storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"sunzihan23"},"content":"     * @param taskNum The index of the task to be marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"sunzihan23"},"content":"    public void markAsDone(int taskNum) {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"sunzihan23"},"content":"        Task task \u003d this.list.get(taskNum);","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"sunzihan23"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"sunzihan23"},"content":"        saveToFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"sunzihan23"},"content":"     * Deletes a task from the list and saves the list to storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"sunzihan23"},"content":"     * @param taskNum The index of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"sunzihan23"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"sunzihan23"},"content":"        this.list.remove(taskNum);","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"sunzihan23"},"content":"        saveToFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"sunzihan23"},"content":"     * Searches for tasks that match a given input and returns a list of matches.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"sunzihan23"},"content":"     * @param input The search query to match against task descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"sunzihan23"},"content":"    public ArrayList\u003cTask\u003e findTasks(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"sunzihan23"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"sunzihan23"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"sunzihan23"},"content":"            if (task.getTaskDescription().contains(input)) {","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"sunzihan23"},"content":"                matches.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"sunzihan23"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"sunzihan23"},"content":"        return matches;","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"sunzihan23"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"sunzihan23"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"sunzihan23"},"content":"    public int size() {","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"sunzihan23"},"content":"        return this.list.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"sunzihan23"},"content":"     * Retrieves a task from the list at a specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"sunzihan23"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"sunzihan23"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"sunzihan23"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"sunzihan23"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"sunzihan23":120}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.task;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":" * The ToDo class represents a task with no specific deadline or timing.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":" * It extends the Task class and adds functionality for managing to-do tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"     * Constructs a ToDo object with the specified task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"        super(description);","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"     * Returns a string representation of the ToDo object.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"     * @return A string containing task type, completion status and task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"sunzihan23":26}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"sunzihan23"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"sunzihan23"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"sunzihan23"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"sunzihan23"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"sunzihan23"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"sunzihan23"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"sunzihan23"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"sunzihan23"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"sunzihan23"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"sunzihan23"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"sunzihan23"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"sunzihan23"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"sunzihan23"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"sunzihan23"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"sunzihan23"},"content":"     * Creates and returns a user dialog box with the specified text and image.","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"sunzihan23"},"content":"     * @param text The text content to display in the user\u0027s dialog box.","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"sunzihan23"},"content":"     * @param img The image to display for the user.","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"sunzihan23"},"content":"     * @return A DialogBox representing the user\u0027s dialog.","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"sunzihan23"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"sunzihan23"},"content":"        var dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"sunzihan23"},"content":"        dialogBox.setBackground(new Background(","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"sunzihan23"},"content":"                new BackgroundFill(Color.WHITE,","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"sunzihan23"},"content":"                new CornerRadii(15),","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"sunzihan23"},"content":"                new Insets(5, 5, 15, 40))));","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"sunzihan23"},"content":"        return dialogBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"sunzihan23"},"content":"     * Creates and returns a Duke dialog box with the specified text and image.","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"sunzihan23"},"content":"     * Flips the dialog box to align the text to the left.","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"sunzihan23"},"content":"     * @param text The text content to display in Duke\u0027s dialog box.","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"sunzihan23"},"content":"     * @param img The image to display for Duke.","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"sunzihan23"},"content":"     * @return A DialogBox representing Duke\u0027s dialog.","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"sunzihan23"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"sunzihan23"},"content":"        var dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"sunzihan23"},"content":"        dialogBox.setBackground(new Background(","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"sunzihan23"},"content":"                new BackgroundFill(Color.WHITE,","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"sunzihan23"},"content":"                new CornerRadii(15),","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"sunzihan23"},"content":"                new Insets(5, 40, 15, 5))));","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"sunzihan23"},"content":"        dialogBox.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"sunzihan23"},"content":"        return dialogBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":96}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bot.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"sunzihan23"},"content":"    public void greetUser() {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"sunzihan23"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.greet(), dukeImage));","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"sunzihan23"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"sunzihan23"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"sunzihan23"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"sunzihan23"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"sunzihan23"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"sunzihan23"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"sunzihan23"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"sunzihan23"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"sunzihan23"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"sunzihan23"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"sunzihan23"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // @@author phiphi-tan-reused","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // with slight modifications","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            PauseTransition pauseTransition \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            pauseTransition.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            pauseTransition.play();","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":60,"-":11}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke.ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":" * The Ui class handles interactions with the user through the console.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":" * It provides methods for reading user input, greeting the user, and displaying information.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"    public static String greet() {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"        return \"Hello! I\u0027m Bot!\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"    public static String showHelpList() {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"        return \"Here are the commands I understand:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"                + \"1. list \\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"                + \"2. todo {task}\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"                + \"3. deadline {task} /by {DD/MM/YYYY HHmm}\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"                + \"4. event {task} /from {DD/MM/YYYY HHmm} \\n     /to {DD/MM/YYYY HHmm} \\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"                + \"5. mark {task number}\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"                + \"6. delete {task number}\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"                + \"7. find {keywords}\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"                + \"8. bye\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"                + \"9. help\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"     * Displays an exit message to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"    public static String exit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"sunzihan23"},"content":"        return \"Bye! Hope to see you again soon!\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"sunzihan23"},"content":"                +\"Bot is leaving in 3 seconds...\";","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"sunzihan23"},"content":"     * Displays a list of tasks to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"sunzihan23"},"content":"     * @param list The TaskList containing the tasks to be listed.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"sunzihan23"},"content":"    public static String listTasks(TaskList list) {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"sunzihan23"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"sunzihan23"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"sunzihan23"},"content":"            String str \u003d i + 1 + \". \" + list.get(i) + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"sunzihan23"},"content":"            output.append(str);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"sunzihan23"},"content":"        return output.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"sunzihan23"},"content":"     * Displays the details of an added task to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"sunzihan23"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"sunzihan23"},"content":"    public static String addTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"sunzihan23"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" +  task.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"sunzihan23"},"content":"     * Displays the count of tasks in the list to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"sunzihan23"},"content":"     * @param list The list of tasks to be counted.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"sunzihan23"},"content":"    public static String countTasks(TaskList list) {","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"sunzihan23"},"content":"        return \"Now you have \" + list.size() + \" tasks in the list\";","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"sunzihan23"},"content":"     * Displays the details of a marked task to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"sunzihan23"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"sunzihan23"},"content":"    public static String markAsDone(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"sunzihan23"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"sunzihan23"},"content":"     * Displays the details of a deleted task to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"sunzihan23"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"sunzihan23"},"content":"    public static String deleteTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"sunzihan23"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task;","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"sunzihan23"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"sunzihan23"},"content":"     * Displays a list of matching tasks to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"sunzihan23"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"sunzihan23"},"content":"     * @param list The list of matching tasks to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"sunzihan23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"sunzihan23"},"content":"    public static String findTasks(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"sunzihan23"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"sunzihan23"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"sunzihan23"},"content":"            String str \u003d i + 1 + \". \" + list.get(i) + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"sunzihan23"},"content":"            output.append(str);","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"sunzihan23"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"sunzihan23"},"content":"        return output.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"sunzihan23":104}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"658.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"652.0\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"sunzihan23":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"        Deadline newDeadline \u003d new Deadline(\"submit report\", formatDateTime(\"21/9/2023 1000\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"        assertEquals(\"[D][ ] submit report (by: Sep 21 2023 10:00)\", newDeadline.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"        Deadline done \u003d new Deadline(\"finish lab\", formatDateTime(\"11/9/2023 2200\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"        done.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"        assertEquals(\"[D][X] finish lab (by: Sep 11 2023 22:00)\", done.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"    public void testAsMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"        Deadline deadline \u003d new Deadline(\"buy lunch\", formatDateTime(\"3/9/2023 1300\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"        assertFalse(deadline.isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"        assertTrue(deadline.isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"    private static LocalDateTime formatDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"        return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"sunzihan23":36}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"public class EventTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"        Event newEvent \u003d new Event(\"group meeting\", formatDateTime(\"2/9/2023 1000\"), formatDateTime(\"2/9/2023 1130\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"        assertEquals(\"[E][ ] group meeting (from: Sep 02 2023 10:00, to: Sep 02 2023 11:30)\", newEvent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"        Event done \u003d new Event(\"attend tutorial\", formatDateTime(\"1/9/2023 1000\"), formatDateTime(\"1/9/2023 1130\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"        done.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"        assertEquals(\"[E][X] attend tutorial (from: Sep 01 2023 10:00, to: Sep 01 2023 11:30)\", done.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"    public void testAsMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"        Event event \u003d new Event(\"discussion\", formatDateTime(\"10/9/2023 1000\"), formatDateTime(\"10/9/2023 1130\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"sunzihan23"},"content":"        assertFalse(event.isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"sunzihan23"},"content":"        event.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"sunzihan23"},"content":"        assertTrue(event.isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"sunzihan23"},"content":"    private static LocalDateTime formatDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"sunzihan23"},"content":"        return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"sunzihan23":35}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"        ToDo newTodo \u003d new ToDo(\"borrow books\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"        assertEquals(\"[T][ ] borrow books\", newTodo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"sunzihan23"},"content":"        ToDo done \u003d new ToDo(\"return books\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"sunzihan23"},"content":"        done.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"sunzihan23"},"content":"        assertEquals(\"[T][X] return books\", done.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"sunzihan23"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"sunzihan23"},"content":"    public void testAsMark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"sunzihan23"},"content":"        ToDo todo \u003d new ToDo(\"buy lunch\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"sunzihan23"},"content":"        assertFalse(todo.isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"sunzihan23"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"sunzihan23"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"sunzihan23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"sunzihan23"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"sunzihan23":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sunzihan23"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"sunzihan23"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"sunzihan23"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"sunzihan23"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"sunzihan23"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"sunzihan23"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"sunzihan23"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"sunzihan23"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"sunzihan23"},"content":"hi","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"sunzihan23"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"sunzihan23"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"sunzihan23"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"sunzihan23":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sunzihan23"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sunzihan23":1,"-":20}}]
