[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RB9823":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"checkstyle {","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"RB9823"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RB9823":21,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"T | 1 | what","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"T | 0 | iP commits","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"D | 0 | iP | 2023-09-23T23:59","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"D | 0 | oP | 2023-09-23T23:59","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"E | 0 | grind | 2023-09-21T23:59 - 2023-09-23T23:59","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"D | 0 | everything | 2023-09-22T23:59","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"E | 0 | hell | 2023-09-22T00:00 - 2023-09-22T23:59","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"T | 0 | help","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":8}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":" * Represents the command to terminate the chatbot","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"     * Executes the ByeCommand by outputting a exit message.","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"        ui.lineSandwich(\" Finally, I can rest.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"     * Ensures program exit.","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     * @return true to indicate program termination.","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"        return true;","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":31}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":" * Represents a general command input.","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"     * Executes command-specific logic based on the subclass implementation.","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException To handle errors during the command execution.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"    public abstract void executeCommand(UI ui, Actions actionList) throws DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"     * Specifies if the command leads to program exit.","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"     * @return false by default, unless overridden by subclass.","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"        return false;","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":29}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":" * Represents the command to add a deadline task.","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"    private final String input;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     * Initializes a DeadlineCommand with the given input string and parser.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"     * @param input The input string.","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"     * @param parser The parser used to parse the input.","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"    public DeadlineCommand(String input, Parser parser) {","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * Executes the DeadlineCommand by adding a deadline task to the task list.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException To handle incorrect input format.","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"        if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"            throw new DukeException(\" Deadline format incorrect. \"","lastModifiedDate":"2023-09-23"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"                    + \"\\n Format: deadline task /by d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"        String[] deadlineParts \u003d parser.splitByKeyword(input, \"/by\");","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"        String description \u003d deadlineParts[0].trim();","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"        Deadline deadline \u003d new Deadline(description, deadlineParts[1].trim());","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"        actionList.add(deadline);","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"        ui.lineSandwich(\" Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"                + deadline + \"\\n Now you have \" + actionList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":47}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":" * Represents the command which deletes the specified task.","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"    private int deleteTaskNumber;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"     * Initializes a DeleteCommand with the task number of the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     * @param deleteTaskNumber The task number of the task to be deleted.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"    public DeleteCommand(int deleteTaskNumber) {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"        this.deleteTaskNumber \u003d deleteTaskNumber;","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"     * Executes the DeleteCommand by deleting the specified task from the action list.","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     * If successful, it will confirm the deletion to the user through the UI.","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"     * Otherwise, it will throw an exception.","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If the specified task does not exist in the task list.","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"        Task deletedTask \u003d actionList.delete(deleteTaskNumber);","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"        if (deletedTask !\u003d null) {","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"            ui.lineSandwich(\" Noted. I\u0027ve removed this task:\\n  \" + deletedTask + \"\\n Now you have \"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"                    + actionList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"            throw new DukeException(\" Deletion failed; specified task does not exist.\");","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":42}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":" * Represents the command to add an event task.","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"    private final String input;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     * Initializes an EventCommand with the given input string and parser.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"     * @param input The input string.","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"     * @param parser The parser used to parse the input.","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"    public EventCommand(String input, Parser parser) {","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * Executes the EventCommand by adding an event task to the task list.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException To handle incorrect input format.","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"            throw new DukeException(\" Event format incorrect. \"","lastModifiedDate":"2023-09-23"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"                    + \"\\n Format: event task /from d/M/yyyy HHmm /to d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"        String[] commandParts \u003d parser.splitByKeyword(input, \"/from\");","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"        String[] eventParts \u003d parser.splitByKeyword(commandParts[1], \"/to\");","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"        Event event \u003d new Event(commandParts[0].trim(), eventParts[0].trim(), eventParts[1].trim());","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"        actionList.add(event);","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"        ui.lineSandwich(\" Got it. I\u0027ve added this task:\\n  \" + event + \"\\n Now you have \"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"                + actionList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":47}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":" * Represents the command to search for all tasks matching the keyword.","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"     * Initializes an FindCommand with the given keyword to search for.","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     * @param keyword The keyword to be matched with task description","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"     * Executes the FindCommand by searching through the task list for tasks","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     * that match the given keyword. Matches are accumulated and then displayed.","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks to search through.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If any issues arise during the search process.","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"        StringBuilder matchedTasks \u003d new StringBuilder();","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"        for (int i \u003d 0; i \u003c actionList.size(); i++) {","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"            Task task \u003d actionList.getAction(i);","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"                ++counter;","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"                matchedTasks.append(\" \").append(counter).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"            ui.lineSandwich(\" No Matches -\u003e \" + keyword);","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"            ui.lineSandwich(\" Check out the matches:\\n\" + matchedTasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":48}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":" * Represents the command to list all tasks in the task list.","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"     * Executes the ListCommand by displaying all tasks in the task list to the user.","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If any issues arise during the display process.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"        ui.lineSandwich(actionList.stringList());","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":23}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":" * Represents the command to mark a specific task as done.","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"     * Initializes a MarkCommand with the task number of the task to be marked as done.","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     * @param taskNumber The integer representing the position of the task in the list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"     * Executes the MarkCommand by marking the specified task as done. If the task is","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     * successfully marked, a confirmation message is shown. If the task number does not exist,","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"     * an error message is displayed.","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If any issues arise during the marking process.","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"        Task resultingTask \u003d actionList.mark(taskNumber);","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"        if (resultingTask !\u003d null) {","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"            ui.lineSandwich(\" Fine. Marked this task as done, better not change your mind:\\n \" + resultingTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"            ui.lineSandwich(\" Marking failed; specified task does not exist.\");","lastModifiedDate":"2023-09-23"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":41}},{"path":"src/main/java/commands/ScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import java.util.List;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":" * Represents the command to display tasks scheduled on a specific date.","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"    private final String dateInput;","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     * Initializes a ScheduleCommand with the date for which the scheduled tasks should be shown.","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"     * @param dateInput The date string provided by the user.","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"    public ScheduleCommand(String dateInput) {","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"        this.dateInput \u003d dateInput;","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"     * Executes the ScheduleCommand by retrieving and displaying tasks scheduled on the specified date.","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * If no tasks are found for the date, a notification is shown to the user. Otherwise, a list","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     * of tasks for the date is displayed.","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If there are issues with parsing or handling the date.","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"        Task dateUtility \u003d new Task(\"\");","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"        LocalDateTime dateToShow \u003d dateUtility.stringToDate(dateInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"        List\u003cTask\u003e tasksOnDate \u003d actionList.tasksOnDate(dateToShow);","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"        if (tasksOnDate.isEmpty()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"            ui.lineSandwich(\" No tasks found on \" + dateUtility.dateToString(dateToShow) + \":(\");","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"            StringBuilder tasksMessage \u003d new StringBuilder();","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"            for (int i \u003d 0; i \u003c tasksOnDate.size(); i++) {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"                tasksMessage.append(\" \").append(i + 1).append(\". \").append(tasksOnDate.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"            ui.lineSandwich(\" Tasks on \" + dateUtility.dateToString(dateToShow) + \":\\n\" + tasksMessage);","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":50}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import tasks.Todo;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":" * Represents the \"todo\" command to add a todo task.","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":" *","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"    private final String description;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"     * Initializes a TodoCommand with the given input string.","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     * @param description The input string provided by the user.","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     * Executes the TodoCommand by adding a \"todo\" task to the task list.","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"     * If the description is empty, it will throw an exception to prompt for a valid description.","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException To handle incorrect input format.","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"            throw new DukeException(\" Provide the description. \"","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"                    + \"\\n Format: todo task\");","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"        Todo task \u003d new Todo(description);","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"        actionList.add(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"        ui.lineSandwich(\" Got it. I\u0027ve added this task:\\n  \" + task + \"\\n Now you have \"","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"                + actionList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":43}},{"path":"src/main/java/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":" * Represents a command that is unrecognized or unsupported by the system.","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"    private final String input;","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"     * Constructs an UnknownCommand with the provided user input.","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"     * @param input The user input that was not recognized by the system.","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"    public UnknownCommand(String input) {","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"     * Executes the command by displaying an error message to inform the user","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"     * that the entered command is unsupported.","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance through which the error message is displayed.","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks. Not used in this context,","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"     *                   included to maintain a consistent method signature.","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"        ui.lineSandwich(\" Well, looks like \" + input + \" is unsupported.\");","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":33}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":" * Represents the command to unmark a specific task.","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"     * Initializes a UnmarkCommand with the task number of the task to be unmarked.","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     * @param taskNumber The integer representing the position of the task in the list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"     * Executes the UnmarkCommand by marking the specified task as done. If the task is","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     * successfully unmarked, a confirmation message is shown. If the task number does not exist,","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"     * an error message is displayed.","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * @param ui The UI instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     * @param actionList The list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If any issues arise during the unmarking process.","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"    public void executeCommand(UI ui, Actions actionList) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"        Task resultingTask \u003d actionList.unmark(taskNumber);","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"        if (resultingTask !\u003d null) {","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"            ui.lineSandwich(\" Well, you changed your mind :(. Just this once:\\n \" + resultingTask);","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"            ui.lineSandwich(\" Unmarking failed; specified task does not exist.\");","lastModifiedDate":"2023-09-23"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":41}},{"path":"src/main/java/data/Actions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package data;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":" * Represents a collection of tasks and provides various utility methods","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":" * for task management and interaction.","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"public class Actions {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"    private final ArrayList\u003cTask\u003e actions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"     * Adds a single task to the list.","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"     * @param input The task to be added.","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"    public void add(Task input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"        actions.add(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     * Adds a list of tasks to the collection.","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"     * @param tasks List of tasks to be added.","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"    public void add(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"        actions.addAll(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"     * @return Returns the list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"    public ArrayList\u003cTask\u003e list() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"        return actions;","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"     * @return Returns the string representation of the list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"RB9823"},"content":"    public String stringList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"RB9823"},"content":"        return stringList(this.actions);","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":53,"author":{"gitId":"RB9823"},"content":"     * Converts a list of tasks into a string representation.","lastModifiedDate":"2023-09-23"},{"lineNumber":54,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"RB9823"},"content":"     * @param actions List of tasks to be formatted.","lastModifiedDate":"2023-09-23"},{"lineNumber":56,"author":{"gitId":"RB9823"},"content":"     * @return String representation of the list of tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":57,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":58,"author":{"gitId":"RB9823"},"content":"    public String stringList(ArrayList\u003cTask\u003e actions) {","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"RB9823"},"content":"        List\u003cString\u003e formattedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"RB9823"},"content":"        for (int i \u003d 0; i \u003c actions.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"RB9823"},"content":"            String formattedIndex \u003d String.format(\"%2d\", i + 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"RB9823"},"content":"            formattedTasks.add(formattedIndex + \". \" + actions.get(i));","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":64,"author":{"gitId":"RB9823"},"content":"        return String.join(\"\\n\", formattedTasks);","lastModifiedDate":"2023-09-23"},{"lineNumber":65,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":68,"author":{"gitId":"RB9823"},"content":"     * Retrieves a task at a specific index.","lastModifiedDate":"2023-09-23"},{"lineNumber":69,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":70,"author":{"gitId":"RB9823"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":71,"author":{"gitId":"RB9823"},"content":"     * @return Task at the specified index.","lastModifiedDate":"2023-09-23"},{"lineNumber":72,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2023-09-23"},{"lineNumber":73,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":74,"author":{"gitId":"RB9823"},"content":"    public Task getAction(int idx) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"RB9823"},"content":"        if (idx \u003c actions.size() \u0026\u0026 idx \u003e -1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"RB9823"},"content":"            return actions.get(idx);","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"RB9823"},"content":"        throw new DukeException(\" Task number invalid; ensure task number is \u003e 0.\");","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":82,"author":{"gitId":"RB9823"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2023-09-23"},{"lineNumber":83,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":84,"author":{"gitId":"RB9823"},"content":"     * @param idx Index of the task to be marked.","lastModifiedDate":"2023-09-23"},{"lineNumber":85,"author":{"gitId":"RB9823"},"content":"     * @return The task that has been marked as done.","lastModifiedDate":"2023-09-23"},{"lineNumber":86,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2023-09-23"},{"lineNumber":87,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":88,"author":{"gitId":"RB9823"},"content":"    public Task mark(int idx) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"RB9823"},"content":"        Task toMark \u003d getAction(idx);","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"RB9823"},"content":"        toMark.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"RB9823"},"content":"        return toMark;","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":95,"author":{"gitId":"RB9823"},"content":"     * Unmarks the task at the specified index.","lastModifiedDate":"2023-09-23"},{"lineNumber":96,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":97,"author":{"gitId":"RB9823"},"content":"     * @param idx Index of the task to be unmarked.","lastModifiedDate":"2023-09-23"},{"lineNumber":98,"author":{"gitId":"RB9823"},"content":"     * @return The task that has been unmarked.","lastModifiedDate":"2023-09-23"},{"lineNumber":99,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2023-09-23"},{"lineNumber":100,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":101,"author":{"gitId":"RB9823"},"content":"    public Task unmark(int idx) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"RB9823"},"content":"        Task toUnmark \u003d getAction(idx);","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"RB9823"},"content":"        toUnmark.unMark();","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"RB9823"},"content":"        return toUnmark;","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":108,"author":{"gitId":"RB9823"},"content":"     * @return The total number of tasks in the list.","lastModifiedDate":"2023-09-23"},{"lineNumber":109,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":110,"author":{"gitId":"RB9823"},"content":"    public int size() {","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"RB9823"},"content":"        return actions.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":115,"author":{"gitId":"RB9823"},"content":"     * Deletes and returns the task at the specified index.","lastModifiedDate":"2023-09-23"},{"lineNumber":116,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":117,"author":{"gitId":"RB9823"},"content":"     * @param idx Index of the task to be deleted.","lastModifiedDate":"2023-09-23"},{"lineNumber":118,"author":{"gitId":"RB9823"},"content":"     * @return The task that has been deleted.","lastModifiedDate":"2023-09-23"},{"lineNumber":119,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2023-09-23"},{"lineNumber":120,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":121,"author":{"gitId":"RB9823"},"content":"    public Task delete(int idx) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"RB9823"},"content":"        getAction(idx);","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"RB9823"},"content":"        return actions.remove(idx);","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":127,"author":{"gitId":"RB9823"},"content":"     * Retrieves all tasks scheduled on a specific date.","lastModifiedDate":"2023-09-23"},{"lineNumber":128,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":129,"author":{"gitId":"RB9823"},"content":"     * @param date The date to filter tasks by.","lastModifiedDate":"2023-09-23"},{"lineNumber":130,"author":{"gitId":"RB9823"},"content":"     * @return List of tasks scheduled on the specified date.","lastModifiedDate":"2023-09-23"},{"lineNumber":131,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":132,"author":{"gitId":"RB9823"},"content":"    public List\u003cTask\u003e tasksOnDate(LocalDateTime date) {","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"RB9823"},"content":"        return actions.stream()","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"RB9823"},"content":"                .filter(task -\u003e task instanceof Deadline","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"RB9823"},"content":"                        \u0026\u0026 ((Deadline) task).getBy().toLocalDate().equals(date.toLocalDate())","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"RB9823"},"content":"                        || task instanceof Event \u0026\u0026 (((Event) task).getFrom().toLocalDate().equals(date.toLocalDate())","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"RB9823"},"content":"                        || ((Event) task).getTo().toLocalDate().equals(date.toLocalDate())))","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"RB9823"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"RB9823":140}},{"path":"src/main/java/data/Save.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package data;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import java.io.File;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"import tasks.Todo;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":" * Manages the saving and loading of tasks to/from duke.txt.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"public class Save {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    private static final String FILE_PATH \u003d DIRECTORY_PATH + \"/duke.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"     * Saves the list of tasks to a file.","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"            File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"                    writer.write(task.format());","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"                    writer.newLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"            throw new DukeException(\"Well, the bad news is that the Tasks could not be saved: \" + e.getMessage());","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"     * Loads tasks from the file and returns them as a list.","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"     * If no saved tasks are found, an empty list is returned.","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"RB9823"},"content":"     * @return List of loaded tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"RB9823"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"RB9823"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"RB9823"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"RB9823"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"RB9823"},"content":"            return tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"RB9823"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"RB9823"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"RB9823"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"RB9823"},"content":"                try {","lastModifiedDate":"2023-09-23"},{"lineNumber":61,"author":{"gitId":"RB9823"},"content":"                    Task task \u003d parseLineToTask(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"RB9823"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"RB9823"},"content":"                        tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"RB9823"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"RB9823"},"content":"                } catch (DukeException ohno) {","lastModifiedDate":"2023-09-23"},{"lineNumber":66,"author":{"gitId":"RB9823"},"content":"                    System.out.println(\"Ok, so I cannot parse this: \" + ohno.getMessage());","lastModifiedDate":"2023-09-23"},{"lineNumber":67,"author":{"gitId":"RB9823"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"RB9823"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"RB9823"},"content":"            System.out.println(\"Hey, I cannot read this: \" + e.getMessage());","lastModifiedDate":"2023-09-23"},{"lineNumber":71,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"RB9823"},"content":"        return tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":76,"author":{"gitId":"RB9823"},"content":"     * Parses a single line from the file to recreate the respective Task object.","lastModifiedDate":"2023-09-23"},{"lineNumber":77,"author":{"gitId":"RB9823"},"content":"     * Recognizes the format of Todos, Deadlines, and Events.","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"RB9823"},"content":"     * @param line The line from the file.","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"RB9823"},"content":"     * @return The parsed Task object or null if the line format is unrecognized.","lastModifiedDate":"2023-09-23"},{"lineNumber":81,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":82,"author":{"gitId":"RB9823"},"content":"    private static Task parseLineToTask(String line) throws DukeException {","lastModifiedDate":"2023-09-23"},{"lineNumber":83,"author":{"gitId":"RB9823"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"RB9823"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"RB9823"},"content":"        case \"T\":","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"RB9823"},"content":"            Todo todo \u003d new Todo(parts[2]);","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"RB9823"},"content":"            if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"RB9823"},"content":"                todo.markAsDone();","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"RB9823"},"content":"            return todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"RB9823"},"content":"        case \"D\":","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"RB9823"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2023-09-23"},{"lineNumber":93,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\"Looks like this Deadline is corrupted: \" + line);","lastModifiedDate":"2023-09-23"},{"lineNumber":94,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-23"},{"lineNumber":95,"author":{"gitId":"RB9823"},"content":"            Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"RB9823"},"content":"            if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"RB9823"},"content":"                deadline.markAsDone();","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"RB9823"},"content":"            return deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"RB9823"},"content":"        case \"E\":","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"RB9823"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2023-09-23"},{"lineNumber":102,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\"Looks like this Event is corrupted: \" + line);","lastModifiedDate":"2023-09-23"},{"lineNumber":103,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-23"},{"lineNumber":104,"author":{"gitId":"RB9823"},"content":"            String[] timeParts \u003d parts[3].split(\" - \");","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"RB9823"},"content":"            if (timeParts.length \u003c 2) {","lastModifiedDate":"2023-09-23"},{"lineNumber":106,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\"Looks like this Event\u0027s timing is corrupted: \" + line);","lastModifiedDate":"2023-09-23"},{"lineNumber":107,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-23"},{"lineNumber":108,"author":{"gitId":"RB9823"},"content":"            Event event \u003d new Event(parts[2], timeParts[0].trim(), timeParts[1].trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"RB9823"},"content":"            if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"RB9823"},"content":"                event.markAsDone();","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"RB9823"},"content":"            return event;","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"RB9823"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"RB9823"},"content":"            throw new DukeException(\"Yea mate no clue what task this is: \" + line);","lastModifiedDate":"2023-09-23"},{"lineNumber":115,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"RB9823":117}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import commands.Command;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"import data.Save;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":" * Represents the main chatbot. Manages the user interface, task list, command parsing,","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":" * and saving/loading tasks to/from duke.txt.","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"    private final UI ui \u003d new UI();","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"    private final Actions actionList \u003d new Actions();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"    private final Save savior \u003d new Save();","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"     * Constructs a Duke chatbot instance.","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"     * On instantiation loads tasks from duke.txt (if it exists).","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"    public Duke() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d savior.loadTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"        actionList.add(loadedTasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"     * Initiates the chatbot interaction.","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"     * Reads and executes commands continuously until the user requests to exit (ByeCommand).","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"     * After exiting, all tasks are saved to duke.txt.","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If any command-related errors occur.","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"    public void initiateChatbot() throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"        ui.openingMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"        boolean isRunning \u003d true; // to control the while loop","lastModifiedDate":"2023-09-23"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"        while (isRunning) {","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"            try {","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"                String input \u003d ui.readInput();","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"                Command command \u003d parser.issueCommand(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"                if (command.isExit()) {","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"                } else {","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"RB9823"},"content":"                    command.executeCommand(ui, actionList);","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"RB9823"},"content":"                }","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"RB9823"},"content":"            } catch (DukeException ohno) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"RB9823"},"content":"                ui.lineSandwich(ohno.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"RB9823"},"content":"        savior.saveTasks(actionList.list());","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":57,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":58,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":59,"author":{"gitId":"RB9823"},"content":"     * The entry point for the chatbot.","lastModifiedDate":"2023-09-23"},{"lineNumber":60,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"RB9823"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"RB9823"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"RB9823"},"content":"            duke.initiateChatbot();","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"RB9823"},"content":"        } catch (DukeException duked) {","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"RB9823"},"content":"            System.out.println(\"An error occurred: \" + duked.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"RB9823":65,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package duke;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":" * Represents a custom exception related to the Duke chatbot.","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":" * Used to handle specific errors that may arise during the operation","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":" * of the chatbot.","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"     * @param exception The detail message associated with the exception.","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"    public DukeException(String exception) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"        super(exception);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RB9823":18}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import commands.ByeCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import commands.Command;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"import commands.EventCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"import commands.FindCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"import commands.ListCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"import commands.MarkCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"import commands.ScheduleCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"import commands.TodoCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"import commands.UnknownCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":" * Represents a parser that interprets user inputs into commands for the Duke chatbot.","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":" * Provides methods for splitting and interpreting the input string to determine the","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":" * appropriate command to execute.","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"public class Parser {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"     * Converts the user input into a corresponding Command object based on the given input string.","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"     * @param input The input string.","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * @return The Command object based on the interpreted input.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     * @throws DukeException If the input command format is incorrect or unrecognized.","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"    public Command issueCommand(String input) throws DukeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"        String[] inputParts \u003d splitInput(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"        String command \u003d inputParts[0].toLowerCase();","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"        switch (command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"        case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"            if (inputParts.length \u003c 2) {","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\" Provide the task number.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"            int markTaskNumber;","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"            try {","lastModifiedDate":"2023-09-23"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"                markTaskNumber \u003d Integer.parseInt(splitInput(inputParts[1])[0]) - 1;","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"            } catch (NumberFormatException invalidInt) {","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\" Hmmm, your input format for marking tasks is incorrect;\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"RB9823"},"content":"                        + \" Format: mark [int task number \u003e 0]\");","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"RB9823"},"content":"            return new MarkCommand(markTaskNumber);","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"RB9823"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"RB9823"},"content":"            if (inputParts.length \u003c 2) {","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\" Provide the task number.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"RB9823"},"content":"            int unmarkTaskNumber;","lastModifiedDate":"2023-09-23"},{"lineNumber":56,"author":{"gitId":"RB9823"},"content":"            try {","lastModifiedDate":"2023-09-23"},{"lineNumber":57,"author":{"gitId":"RB9823"},"content":"                unmarkTaskNumber \u003d Integer.parseInt(splitInput(inputParts[1])[0]) - 1;","lastModifiedDate":"2023-09-23"},{"lineNumber":58,"author":{"gitId":"RB9823"},"content":"            } catch (NumberFormatException invalidInt) {","lastModifiedDate":"2023-09-23"},{"lineNumber":59,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\" Hmmm, your input format for unmarking tasks is incorrect;\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":60,"author":{"gitId":"RB9823"},"content":"                        + \" Format: unmark [int task number \u003e 0]\");","lastModifiedDate":"2023-09-23"},{"lineNumber":61,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-23"},{"lineNumber":62,"author":{"gitId":"RB9823"},"content":"            return new UnmarkCommand(unmarkTaskNumber);","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"RB9823"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"RB9823"},"content":"            return new TodoCommand(inputParts.length \u003e 1 ? inputParts[1] : \"\");","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"RB9823"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"RB9823"},"content":"            return new DeadlineCommand(inputParts.length \u003e 1 ? inputParts[1] : \"\", this);","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"RB9823"},"content":"        case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"RB9823"},"content":"            return new EventCommand(inputParts.length \u003e 1 ? inputParts[1] : \"\", this);","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"RB9823"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"RB9823"},"content":"            if (inputParts.length \u003c 2) {","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\" Provide a task number. \"","lastModifiedDate":"2023-09-23"},{"lineNumber":72,"author":{"gitId":"RB9823"},"content":"                        + \"Format: delete [int task number \u003e 0]\");","lastModifiedDate":"2023-09-23"},{"lineNumber":73,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"RB9823"},"content":"            int deleteTaskNumber;","lastModifiedDate":"2023-09-23"},{"lineNumber":75,"author":{"gitId":"RB9823"},"content":"            try {","lastModifiedDate":"2023-09-23"},{"lineNumber":76,"author":{"gitId":"RB9823"},"content":"                deleteTaskNumber \u003d Integer.parseInt(splitInput(inputParts[1])[0]) - 1;","lastModifiedDate":"2023-09-23"},{"lineNumber":77,"author":{"gitId":"RB9823"},"content":"            } catch (NumberFormatException invalidInt) {","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\" Hmmm, your input format for deleting tasks is incorrect;\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"RB9823"},"content":"                        + \" Format: delete [int task number \u003e 0]\");","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-23"},{"lineNumber":81,"author":{"gitId":"RB9823"},"content":"            return new DeleteCommand(deleteTaskNumber);","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"RB9823"},"content":"        case \"schedule\":","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"RB9823"},"content":"            if (inputParts.length \u003c 2 || !inputParts[1].contains(\"/on\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\" Provide the date in the format:\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":85,"author":{"gitId":"RB9823"},"content":"                        + \" schedule /on dd/MM/yyyy\");","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"RB9823"},"content":"            String dateInput \u003d splitByKeyword(inputParts[1], \"/on\")[1].trim() + \" 0000\";","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"RB9823"},"content":"            return new ScheduleCommand(dateInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"RB9823"},"content":"        case \"find\":","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"RB9823"},"content":"            if (inputParts.length \u003c 2) {","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"RB9823"},"content":"                throw new DukeException(\" Keyword. I NEED A KEYWORD!!! \");","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"RB9823"},"content":"            return new FindCommand(inputParts[1]);","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"RB9823"},"content":"        default:","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"RB9823"},"content":"            return new UnknownCommand(input);","lastModifiedDate":"2023-09-23"},{"lineNumber":96,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":100,"author":{"gitId":"RB9823"},"content":"     * Splits the input string into two parts based on the first space encountered.","lastModifiedDate":"2023-09-23"},{"lineNumber":101,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":102,"author":{"gitId":"RB9823"},"content":"     * @param input The input string.","lastModifiedDate":"2023-09-23"},{"lineNumber":103,"author":{"gitId":"RB9823"},"content":"     * @return An array with two strings: the command type and the command details.","lastModifiedDate":"2023-09-23"},{"lineNumber":104,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":105,"author":{"gitId":"RB9823"},"content":"    public String[] splitInput(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"RB9823"},"content":"        return input.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":110,"author":{"gitId":"RB9823"},"content":"     * Splits the input string by the specified keyword.","lastModifiedDate":"2023-09-23"},{"lineNumber":111,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":112,"author":{"gitId":"RB9823"},"content":"     * @param input The input string.","lastModifiedDate":"2023-09-23"},{"lineNumber":113,"author":{"gitId":"RB9823"},"content":"     * @param keyword The keyword used to split the input.","lastModifiedDate":"2023-09-23"},{"lineNumber":114,"author":{"gitId":"RB9823"},"content":"     * @return An array containing the portions of the input separated by the keyword.","lastModifiedDate":"2023-09-23"},{"lineNumber":115,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":116,"author":{"gitId":"RB9823"},"content":"    public String[] splitByKeyword(String input, String keyword) {","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"RB9823"},"content":"        return input.split(keyword, 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RB9823":119}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":" * Represents a deadline task, which extends the Task class.","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":" * A Deadline task is characterized by a description and a deadline date/time.","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"     * Creates a new Deadline task with the specified description and deadline.","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     * @param description The description or title of the deadline task.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     * @param by The deadline date/time given in string format.","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"        this.by \u003d stringToDate(by);","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"     * Retrieves the deadline date/time of this task.","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * @return The LocalDateTime representing the deadline date/time.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"        return by;","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"     * Returns the string representation of this Deadline task, which includes the task type identifier \"[D]\",","lastModifiedDate":"2023-09-23"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"     * marking status, task description, and the deadline date/time.","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"     * @return The string representation of this Deadline task.","lastModifiedDate":"2023-09-23"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateToString(by) + \")\";","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RB9823":44}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":" * Represents an event task, which extends the Task class.","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":" * An Event task is characterized by a description and a specified duration,","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":" * marked by its start (from) and end (to) date/times.","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"     * Creates a new Event task with the specified description, start and end times.","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"     * @param description The description or title of the event.","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"     * @param from The starting date/time of the event given in string format.","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"     * @param to The ending date/time of the event given in string format.","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"        this.from \u003d stringToDate(from);","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"        this.to \u003d stringToDate(to);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     * Retrieves the starting date/time of this event.","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"     * @return The LocalDateTime representing the starting date/time.","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"        return this.from;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"     * Retrieves the ending date/time of this event.","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"     * @return The LocalDateTime representing the ending date/time.","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"        return this.to;","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"RB9823"},"content":"     * Returns the string representation of this Event task, which includes the task type identifier \"[E]\",","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"RB9823"},"content":"     * marking status icon, task description, and the duration of the event.","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"RB9823"},"content":"     * @return The string representation of this Event task.","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":53,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"RB9823"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"RB9823"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + dateToString(from) + \" to: \" + dateToString(to) + \")\";","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RB9823":57}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":" * This is the base class for the tasks.","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"     * Constructs a Task object with a given description.","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"     * @param description The description or title of the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"     * Converts a date and time string into a LocalDateTime object.","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"     * @param dateTimeString The date and time string to be parsed.","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     * @return The LocalDateTime object representing the date and time.","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"    public LocalDateTime stringToDate(String dateTimeString) throws DukeException {","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"        dateTimeString \u003d dateTimeString.trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"        try {","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"            if (dateTimeString.contains(\"T\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"                formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"            return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"        } catch (DateTimeParseException timeParseError) {","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"            throw new DukeException(\" Hmmm seems like the date/time format is incorrect; \"","lastModifiedDate":"2023-09-23"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"                    + \"take a look at the valid format: d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"RB9823"},"content":"     * Converts a LocalDateTime object into a formatted string.","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"RB9823"},"content":"     * @param dateTime The LocalDateTime object to be formatted.","lastModifiedDate":"2023-09-23"},{"lineNumber":53,"author":{"gitId":"RB9823"},"content":"     * @return The formatted date and time string.","lastModifiedDate":"2023-09-23"},{"lineNumber":54,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"RB9823"},"content":"    public String dateToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"RB9823"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":60,"author":{"gitId":"RB9823"},"content":"     * Retrieves the status icon of the task, where \"X\" indicates the task is completed.","lastModifiedDate":"2023-09-23"},{"lineNumber":61,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":62,"author":{"gitId":"RB9823"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":63,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":64,"author":{"gitId":"RB9823"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"RB9823"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":69,"author":{"gitId":"RB9823"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":70,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":71,"author":{"gitId":"RB9823"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":72,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":73,"author":{"gitId":"RB9823"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"RB9823"},"content":"        return description;","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"RB9823"},"content":"     * Marks the task as done/completed.","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"RB9823"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"RB9823"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":85,"author":{"gitId":"RB9823"},"content":"     * Marks the task as !(done/completed).","lastModifiedDate":"2023-09-23"},{"lineNumber":86,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":87,"author":{"gitId":"RB9823"},"content":"    public void unMark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"RB9823"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":92,"author":{"gitId":"RB9823"},"content":"     * Returns a formatted string representing the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":93,"author":{"gitId":"RB9823"},"content":"     * The format depends on the specific type of task.","lastModifiedDate":"2023-09-23"},{"lineNumber":94,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":95,"author":{"gitId":"RB9823"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":96,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":97,"author":{"gitId":"RB9823"},"content":"    public String format() {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"RB9823"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"RB9823"},"content":"            return String.format(\"T | %s | %s\", isDone ? \"1\" : \"0\", getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"RB9823"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"RB9823"},"content":"            Deadline deadline \u003d (Deadline) this;","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"RB9823"},"content":"            return String.format(\"D | %s | %s | %s\", isDone ? \"1\" : \"0\", getDescription(), deadline.getBy());","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"RB9823"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"RB9823"},"content":"            Event event \u003d (Event) this;","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"RB9823"},"content":"            return String.format(\"E | %s | %s | %s - %s\", isDone ? \"1\" : \"0\",","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"RB9823"},"content":"                    getDescription(), event.getFrom(), event.getTo());","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"RB9823"},"content":"        return \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":112,"author":{"gitId":"RB9823"},"content":"     * Returns a string representation of the task, which includes the task status icon","lastModifiedDate":"2023-09-23"},{"lineNumber":113,"author":{"gitId":"RB9823"},"content":"     * and its description.","lastModifiedDate":"2023-09-23"},{"lineNumber":114,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":115,"author":{"gitId":"RB9823"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-09-23"},{"lineNumber":116,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":117,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"RB9823"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"RB9823"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"RB9823":121}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":" * Represents a Todo task, which extends the Task class.","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":" * A Todo task is characterized by its description.","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"     * Constructs a Todo object with a given description.","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"     * @param description The description.","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"     * Returns a string representation of the Todo task,","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"     * which includes the task type identifier \"[T]\" and its description.","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RB9823":28}},{"path":"src/main/java/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"/**","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":" * Represents the User Interface (UI) of the application.","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":" * This class handles input from and output to the user.","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":" */","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"public class UI {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"     * Prints horizontal lines for formatting purposes.","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"    public void horizontalLines() {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"        System.out.println(\"__________________________________________________________________\");","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"     * Prints a message enclosed between two horizontal lines.","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"     * @param message The message to be displayed between horizontal lines.","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"    public void lineSandwich(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"        horizontalLines();","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"        display(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"        horizontalLines();","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"     * @return The line of input as a string.","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"    public String readInput() {","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"RB9823"},"content":"     * Displays a message to the user.","lastModifiedDate":"2023-09-23"},{"lineNumber":41,"author":{"gitId":"RB9823"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"RB9823"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"RB9823"},"content":"    public void display(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"RB9823"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"RB9823"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"RB9823"},"content":"     * Displays the opening message to greet the user when the application starts.","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"RB9823"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"RB9823"},"content":"    public void openingMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"RB9823"},"content":"        lineSandwich(\" Hello there. I\u0027m Whelmed.\\n What do you want?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"RB9823":54}},{"path":"src/test/java/commands/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"    public void missingKeyword() {","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"        Parser parse \u003d new Parser();","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"        Actions actions \u003d new Actions();","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"        DeadlineCommand deadline \u003d new DeadlineCommand(\"deadline task\", parse);","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"        assertThrows(DukeException.class, () -\u003e deadline.executeCommand(ui, actions));","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"    public void taskAdded() {","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"        Parser parse \u003d new Parser();","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"        Actions actions \u003d new Actions();","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"        String description \u003d \"Deadline Test Task\";","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"        String time \u003d \"22/09/2023 2359\";","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"        DeadlineCommand deadline \u003d new DeadlineCommand(description + \" /by \" + time, parse);","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"            deadline.executeCommand(ui, actions);","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"        } catch (DukeException thrown) {","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"            throw new AssertionError(\"DukeException was thrown with a valid input.\", thrown);","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":37}},{"path":"src/test/java/commands/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"    public void missingKeyword() {","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"        Parser parse \u003d new Parser();","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"        Actions actions \u003d new Actions();","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"        EventCommand event \u003d new EventCommand(\"event task\", parse);","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"        assertThrows(DukeException.class, () -\u003e event.executeCommand(ui, actions));","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"    public void taskAdded() {","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"        Parser parse \u003d new Parser();","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"        Actions actions \u003d new Actions();","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"        String description \u003d \"Event Test Task\";","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"        String from \u003d \"22/09/2023 0000\";","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"        String to \u003d \"22/09/2023 2359\";","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"        EventCommand event \u003d new EventCommand(description + \" /from \" + from + \" /to \" + to, parse);","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"RB9823"},"content":"            event.executeCommand(ui, actions);","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"RB9823"},"content":"        } catch (DukeException thrown) {","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"RB9823"},"content":"            throw new AssertionError(\"DukeException was thrown with a valid input.\", thrown);","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":38}},{"path":"src/test/java/commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"package commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"import data.Actions;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"RB9823"},"content":"import ui.UI;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"RB9823"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"RB9823"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"RB9823"},"content":"    public void emptyDescription() {","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"RB9823"},"content":"        TodoCommand todo \u003d new TodoCommand(\"\");","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"RB9823"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"RB9823"},"content":"        Actions actions \u003d new Actions();","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"RB9823"},"content":"        assertThrows(DukeException.class, () -\u003e todo.executeCommand(ui, actions));","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"RB9823"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"RB9823"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"RB9823"},"content":"    public void taskAdded() {","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"RB9823"},"content":"        String description \u003d \"Todo Test Task\";","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"RB9823"},"content":"        TodoCommand todo \u003d new TodoCommand(description);","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"RB9823"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"RB9823"},"content":"        Actions actions \u003d new Actions();","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"RB9823"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"RB9823"},"content":"            todo.executeCommand(ui, actions);","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"RB9823"},"content":"        } catch (DukeException thrown) {","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"RB9823"},"content":"            throw new AssertionError(\"DukeException was thrown with a valid description.\", thrown);","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"RB9823"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"RB9823"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"RB9823"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"RB9823":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RB9823"},"content":"read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"RB9823"},"content":"return book","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"RB9823"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"RB9823"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"RB9823"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"RB9823"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"RB9823"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"RB9823"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"RB9823":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"RB9823"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RB9823":1,"-":20}}]
