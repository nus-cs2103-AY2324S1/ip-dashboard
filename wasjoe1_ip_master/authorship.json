[{"path":"src/main/java/Exceptions/InitializationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package Exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"public class InitializationException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"    public InitializationException(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"        super(\"initialization exception thrown\");","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":7}},{"path":"src/main/java/Exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package Exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"public class InvalidCommandException extends RunException {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"    public InvalidCommandException(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"        super(\"☹ OOPS!!! A valid command is required. Your current command \\\"\" + input + \"\\\" is not a valid command.\\n\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"                \"Please enter your input starting with :\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"                \"bye\\n\" + \"list\\n\" + \"todo\\n\" + \"deadline\\n\" + \"event\\n\" + \"mark\\n\" + \"unmark\\n\" + \"delete\\n\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"                \"After the command word, leave a space before typing your task.\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":11}},{"path":"src/main/java/Exceptions/NoCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package Exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"public class NoCommandException extends RunException {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"    public NoCommandException(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"        super(\"☹ OOPS!!! A valid command is required. Your current command \\\"\" + input + \"\\\" is empty.\\n\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"                \"Please enter your input starting with :\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"                \"bye\\n\" + \"list\\n\" + \"todo\\n\" + \"deadline\\n\" + \"event\\n\" + \"mark\\n\" + \"unmark\\n\" + \"delete\\n\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"                \"After the command word, leave a space before typing your task.\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":11}},{"path":"src/main/java/Exceptions/RunException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package Exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"public class RunException extends Exception{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"    public RunException(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"                input +","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":9}},{"path":"src/main/java/Jeoe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import Exceptions.InitializationException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"import Exceptions.RunException;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"import Exceptions.NoCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"import Exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"import Tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"import Tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"import Tasks.Task.TaskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"public class Jeoe {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    private static Scanner scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    private static List\u003cTask\u003e storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    private static String filePath \u003d System.getProperty(\"user.dir\") + \"/storage/taskListData.txt\"; // dir is till ip","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    private static Task StringToTask(String taskInStringForm) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        String[] taskData \u003d taskInStringForm.split(\" \\\\| \"); // assuming the description and all that doesnt have |","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"        // splits into type, mark or not, description, from, to","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"        switch (taskData[0]) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"            case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"                Task todo \u003d new Todo(taskData[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"                if (taskData[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"                    todo.mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"                return todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"            case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"                Task deadline \u003d new Deadline(taskData[2], LocalDateTime.parse(taskData[3]));","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"                if (taskData[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"                    deadline.mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"                return deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"            case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"                Task event \u003d new Event(taskData[2], taskData[3], taskData[4]);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"                if (taskData[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"                    event.mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"                return event;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"            default:","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"                return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    private static String taskToString(Task t) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"        // splits into type, mark or not, description, from, to","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        String deLim \u003d \" | \";","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        switch (t.taskType()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"            case TODO:","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"                String todo \u003d \"T\" + deLim;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"                todo +\u003d t.isDone() ? (\"1\" + deLim) : (\"0\" + deLim);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"                todo +\u003d t.getDescription();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"                return todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"                String deadline \u003d \"D\" + deLim;","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"                deadline +\u003d t.isDone() ? (\"1\" + deLim) : (\"0\" + deLim);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"                deadline +\u003d t.getDescription() + deLim;","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"                deadline +\u003d t.getEndDateTimeString();","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"                return deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"            case EVENT:","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"                String event \u003d \"E\" + deLim;","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"                event +\u003d t.isDone() ? (\"1\" + deLim) : (\"0\" + deLim);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"                event +\u003d t.getDescription() + deLim;","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"                event +\u003d t.getEndDateTimeString();","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"                return event;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"            default:","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"                return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"    private static void save() { // for saving into the storage, just rewrite the entire file","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"        // to overwrite the file","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"            // concatenate all the tasks in string form","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"            String listOfTasksString \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"            for(Task t : storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"                String tString \u003d taskToString(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"                listOfTasksString +\u003d (tString + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"            // write to the file","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"            fw.write(listOfTasksString);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"wasjoe1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"wasjoe1"},"content":"    private static String convertToISO8601(String dt) {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"wasjoe1"},"content":"        // dt are in the format 2022-12-01 18:00","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"wasjoe1"},"content":"        String[] dtArr \u003d dt.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"wasjoe1"},"content":"        return dtArr[0] + \"T\" + dtArr[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"wasjoe1"},"content":"    private static void initialize() throws InitializationException { // create the initialization exception","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"wasjoe1"},"content":"            scanner \u003d new Scanner(System.in); // makes it such that the scanner takes in inputs from the console","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"wasjoe1"},"content":"            storage \u003d new ArrayList\u003c\u003e(); // everytime you initialize, you start with a new storage","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"wasjoe1"},"content":"            // add items into the storage when loading the app","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"wasjoe1"},"content":"            // find the file","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"wasjoe1"},"content":"            File taskListData \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"wasjoe1"},"content":"            // if file doesnt exist, // taskListData.length() \u003d\u003d 0; // is used to check length of file","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"wasjoe1"},"content":"            if (!taskListData.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"wasjoe1"},"content":"                System.out.println(\"task list data doesnt exist\");","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"wasjoe1"},"content":"                taskListData.getParentFile().mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"wasjoe1"},"content":"                taskListData.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"wasjoe1"},"content":"            Scanner fileSc \u003d new Scanner(taskListData);","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"wasjoe1"},"content":"            while (fileSc.hasNextLine()) { // if no task, storage is empty","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"wasjoe1"},"content":"                Task task \u003d StringToTask(fileSc.nextLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"wasjoe1"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"wasjoe1"},"content":"                    storage.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"wasjoe1"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"wasjoe1"},"content":"            String openingStr \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"wasjoe1"},"content":"                    \" Hello! I\u0027m JEOE\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"wasjoe1"},"content":"                    \" What can I do for you?\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"wasjoe1"},"content":"                    \" type :\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"wasjoe1"},"content":"                    \" list \u003d\u003e to list out items in storage\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"wasjoe1"},"content":"                    \" _Anything else_ \u003d\u003e store in storage\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"wasjoe1"},"content":"                    \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"wasjoe1"},"content":"            System.out.println(openingStr);","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"wasjoe1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"wasjoe1"},"content":"            System.out.println(\"smt went wrong\");","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"wasjoe1"},"content":"            // could be scanner fail OR cannot find such file (assumes if file is found, its always correct format)","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"wasjoe1"},"content":"            // if cannot find file, create new file","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"wasjoe1"},"content":"            // if scanner fail, throw scanner fail exception","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"wasjoe1"},"content":"//            throw new InitializationException(\"initiazlization exception\");","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"wasjoe1"},"content":"    public static void run(){","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"wasjoe1"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"wasjoe1"},"content":"        while (isRunning) {","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"wasjoe1"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"wasjoe1"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"wasjoe1"},"content":"                String reply \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"wasjoe1"},"content":"                String command \u003d input.split(\" \")[0]; // even if its empty string, the 0 index will still be \"\"","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"wasjoe1"},"content":"                switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"wasjoe1"},"content":"                case \"bye\":","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"wasjoe1"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"wasjoe1"},"content":"                    reply +\u003d \" Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"wasjoe1"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"wasjoe1"},"content":"                case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"wasjoe1"},"content":"                    reply +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"wasjoe1"},"content":"                    for (int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"wasjoe1"},"content":"                        String num \u003d String.valueOf(i + 1) + \". \";","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"wasjoe1"},"content":"                        Task task \u003d storage.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"wasjoe1"},"content":"                        reply +\u003d num + task + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"wasjoe1"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"wasjoe1"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"wasjoe1"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"wasjoe1"},"content":"                    // create the actual task","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"wasjoe1"},"content":"                    String todoDescription \u003d input.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"wasjoe1"},"content":"                    Todo todo \u003d new Todo(todoDescription);","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"wasjoe1"},"content":"                    // add to the storage","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"wasjoe1"},"content":"                    storage.add(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"wasjoe1"},"content":"                    Jeoe.save();","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"wasjoe1"},"content":"                    // add to the reply","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"wasjoe1"},"content":"                    reply +\u003d todo.replyString(storage.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"wasjoe1"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"wasjoe1"},"content":"                case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"wasjoe1"},"content":"                    String[] deadlineArr \u003d input.replaceFirst(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"wasjoe1"},"content":"                    String deadlineDescription \u003d deadlineArr[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"wasjoe1"},"content":"                    String by \u003d convertToISO8601(deadlineArr[1]); // need to add the T in","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"wasjoe1"},"content":"                    Deadline deadline \u003d new Deadline(deadlineDescription, LocalDateTime.parse(by));","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"wasjoe1"},"content":"                    // add to storage","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"wasjoe1"},"content":"                    storage.add(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"wasjoe1"},"content":"                    Jeoe.save();","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"wasjoe1"},"content":"                    //add to the reply","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"wasjoe1"},"content":"                    reply +\u003d deadline.replyString(storage.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"wasjoe1"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"wasjoe1"},"content":"                case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"wasjoe1"},"content":"                    String[] eventArr \u003d input.replaceFirst(\"event \", \"\").split(\" /from \"); // eventArr have description","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"wasjoe1"},"content":"                    String eventDescription \u003d eventArr[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"wasjoe1"},"content":"                    String[] eventArr2 \u003d eventArr[1].split(\" /to \"); // eventArr2 have the from \u0026 to","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"wasjoe1"},"content":"                    String from \u003d eventArr2[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"wasjoe1"},"content":"                    String to \u003d eventArr2[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"wasjoe1"},"content":"                    Event event \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"wasjoe1"},"content":"                    // add to storage","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"wasjoe1"},"content":"                    storage.add(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"wasjoe1"},"content":"                    Jeoe.save();","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"wasjoe1"},"content":"                    // add to the reply","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"wasjoe1"},"content":"                    reply +\u003d event.replyString(storage.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"wasjoe1"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"wasjoe1"},"content":"                case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"wasjoe1"},"content":"                    int idxMark \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"wasjoe1"},"content":"                    // mark the task","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"wasjoe1"},"content":"                    storage.get(idxMark).mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"wasjoe1"},"content":"                    Jeoe.save();","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"wasjoe1"},"content":"                    // format the reply","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"wasjoe1"},"content":"                    reply +\u003d (\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"wasjoe1"},"content":"                            storage.get(idxMark).toString() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"wasjoe1"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"wasjoe1"},"content":"                case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"wasjoe1"},"content":"                    int idxUnmark \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"wasjoe1"},"content":"                    // unmark the task","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"wasjoe1"},"content":"                    storage.get(idxUnmark).unmark();","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"wasjoe1"},"content":"                    Jeoe.save();","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"wasjoe1"},"content":"                    // format the reply","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"wasjoe1"},"content":"                    reply +\u003d (\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"wasjoe1"},"content":"                            storage.get(idxUnmark).toString() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"wasjoe1"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"wasjoe1"},"content":"                case \"delete\":","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"wasjoe1"},"content":"                    int idxDel \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"wasjoe1"},"content":"                    // delete from the array","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"wasjoe1"},"content":"                    Task t \u003d storage.remove(idxDel);","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"wasjoe1"},"content":"                    Jeoe.save();","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"wasjoe1"},"content":"                    // add to the reply","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"wasjoe1"},"content":"                    reply +\u003d (\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"wasjoe1"},"content":"                            t.toString() + \"\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"wasjoe1"},"content":"                            \"Now you have \" + storage.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"wasjoe1"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"wasjoe1"},"content":"                case \"\":","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"wasjoe1"},"content":"                    throw new NoCommandException(command);","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"wasjoe1"},"content":"                default:","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"wasjoe1"},"content":"                    // throw exception when it doesnt have a command word","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"wasjoe1"},"content":"                    throw new InvalidCommandException(command);","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"wasjoe1"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"wasjoe1"},"content":"                reply +\u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"wasjoe1"},"content":"                System.out.println(reply);","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"wasjoe1"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"wasjoe1"},"content":"                // print exception, they will handle their formatting themselves","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"wasjoe1"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"wasjoe1"},"content":"            } catch (NoCommandException e) { // can think of if tried 3 empty commands, terminate program","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"wasjoe1"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"wasjoe1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"wasjoe1"},"content":"            Jeoe.initialize();","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"wasjoe1"},"content":"            Jeoe.run();","lastModifiedDate":"2023-09-01"},{"lineNumber":250,"author":{"gitId":"wasjoe1"},"content":"            scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"wasjoe1"},"content":"        } catch (InitializationException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"wasjoe1"},"content":"            // exception to do with initialization \u003d\u003e scanner fails (cannot be file issue)","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":254,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":255,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":255}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package Tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    public String getEndDateTimeString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        return this.by.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"        // return this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"                // + \"T\" + this.by.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    public String replyString(int currNumOfTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"        return super.replyString(currNumOfTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":29}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package Tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"    protected String from;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"    protected String to;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"    public Event (String description, String from, String to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    public String getStartDateTimeString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        return this.from;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    public String getEndDateTimeString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        return this.to;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    public String replyString(int currNumOfTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        return super.replyString(currNumOfTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":30}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package Tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"public class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"    private String description; // the toString handles the space after the [ ] or [X]","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"    boolean isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"    public enum TaskType {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"        TODO,","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"        EVENT,","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"        DEADLINE","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    TaskType taskType \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        return isDone ? \"[X] \" + this.description : \"[ ] \" + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    public void unmark() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    public void mark() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    public TaskType taskType() {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"        return this.taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        return this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    public String getStartDateTimeString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    public String getEndDateTimeString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"    public String replyString (int currNumOfTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"                + this.toString() + \"\\n\" // the toString is called from the child class which is amazing \u003d\u003e RTT is child class type i guess","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"                + \"Now you have \" + currNumOfTask + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":56}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package Tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    public String replyString (int currNumOfTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"        return super.replyString(currNumOfTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":17}},{"path":"storage/taskListData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"T | 0 | another thing","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"T | 0 | really another thing","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"D | 0 | smt | 2022-12-01T18:00:00","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"D | 0 | another thing | 2021-11-01T15:35:00","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":4}},{"path":"text-ui-test/diff-output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"--- ACTUAL.TXT\t2023-08-24 12:24:54","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"+++ EXPECTED.TXT\t2023-08-24 12:08:47","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"@@ -24,3 +24,40 @@","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":" Now you have 3 tasks in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":" ____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"+ ☹ OOPS!!! A valid Tasks.Tasks is required. Your current input \"random grribish\" is not a valid task.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"+Please enter your input starting with :","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"+todo","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"+deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"+event","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"+ After the command word, leave a space before typing your task.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"+Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"+[T][X] borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"+OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"+[T][ ] borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"+Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"+[D][X] return book (by: Sunday)","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"+Here are the tasks in your list:","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"+1. [T][ ] borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"+2. [D][X] return book (by: Sunday)","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"+3. [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"+ Bye. Hope to see you again soon!","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wasjoe1":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"random grribish","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wasjoe1":9}}]
