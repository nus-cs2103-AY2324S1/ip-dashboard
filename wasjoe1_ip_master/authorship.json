[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    mainClass.set(\"jeoe.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    archiveBaseName \u003d \"Jeoe\"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wasjoe1":21,"-":40}},{"path":"src/main/java/jeoe/Commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates a command that ends the Jeoe chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a ByeCommand object.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to parse into a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    ByeCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        super(true);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"     * Executes the bye command.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"     * Prints an exit command.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    public void execute(TaskManager taskManager, Ui ui, StorageManager storageManager) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        ui.showEndString();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"     * Executes the bye command.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"     * Returns an exit command.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    public String executeAndReply(TaskManager taskManager, Ui ui, StorageManager storageManager)  {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        return ui.getReply(ui.getEndString());","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":47}},{"path":"src/main/java/jeoe/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the abstract class Command.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * It is meant for executing an action \u0026 determining if the command would end the run loop.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    /** A boolean that determines whether this command would end the run loop in Jeoe */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    private boolean isExit;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a Command object.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"     * @param isExit Exit status inputted by other commands to see if they end the run loop or not.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    Command(boolean isExit) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"     * Executes the actions for the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"    public abstract void execute(TaskManager taskManager, Ui ui, StorageManager storageManager);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    public abstract String executeAndReply(TaskManager taskManager, Ui ui, StorageManager storageManager);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"     * Returns the exit status of the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"     * @return Exit status of the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        return this.isExit;","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":46}},{"path":"src/main/java/jeoe/Commands/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Exceptions.NoCommandException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Exceptions.RunException;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates Command Parser class which parses commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"public class CommandParser {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"     * Returns the parsed command.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"     * @param input the full input by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"     * @return Command that is produced from the user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"     * @throws RunException If the input by the user does not have a valid command.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    public static Command parse(String input) throws RunException {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        String command \u003d input.split(\" \")[0]; // even if its empty string, the 0 index will still be \"\"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        switch (command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"            return new ByeCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"        case \"list\":","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"            return new ListCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        case \"event\":","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"            return new EventCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        case \"find\":","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"            return new FindCommand(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        case \"\":","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"            throw new NoCommandException(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"            // throw exception when it doesnt have a command word","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"            throw new InvalidCommandException(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":50}},{"path":"src/main/java/jeoe/Commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class DeadlineCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * It is meant to execute the creation of a Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    /** Contains the components of the deadline command */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    private String[] deadlineArr;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a DeadlineCommand object.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to parse into a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    DeadlineCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        deadlineArr \u003d input.replaceFirst(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * Converts date string inputted by user into Iso8601 format date string.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * @param dt The string input by the user to parse into a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * @return Iso8601 format date string.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    private String convertToIso8601(String dt) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"        // dt are in the format 2022-12-01 18:00","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        String[] dtArr \u003d dt.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        return dtArr[0] + \"T\" + dtArr[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"     * Executes the deadline command.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"     * Creates a Deadline object, adds it to the task list, saves it in local storage then displays it.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"    public void execute(TaskManager taskManager, Ui ui, StorageManager storageManager) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        String deadlineDescription \u003d this.deadlineArr[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        String by \u003d convertToIso8601(this.deadlineArr[1]); // need to add the T in","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"        Deadline deadline \u003d new Deadline(deadlineDescription, LocalDateTime.parse(by));","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        // add to the storage in Task \u0026 save into HDD","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        taskManager.addTask(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        ui.displayReply(deadline.replyString(taskManager.getTasksSize()));","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"     * Executes the deadline command.","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"     * Creates a Deadline object, adds it to the task list, saves it in local storage then returns required string.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"    public String executeAndReply(TaskManager taskManager, Ui ui, StorageManager storageManager)  {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"        String deadlineDescription \u003d this.deadlineArr[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"        String by \u003d convertToIso8601(this.deadlineArr[1]); // need to add the T in","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"        Deadline deadline \u003d new Deadline(deadlineDescription, LocalDateTime.parse(by));","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"        // add to the storage in Task \u0026 save into HDD","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"        taskManager.addTask(deadline);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"        return ui.getReply(deadline.replyString(taskManager.getTasksSize()));","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":84}},{"path":"src/main/java/jeoe/Commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class DeleteCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * It is meant to execute the deletion of a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    /** Index in task list to delete task. */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    private int idxDel;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a DeleteCommand object.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to parse into a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    DeleteCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        idxDel \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     * Executes the delete command.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     * Deletes a task from the list, remove it from local storage then prints out delete confirmation.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    public void execute(TaskManager taskManager, Ui ui, StorageManager storageManager) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        // add to the storage in Task \u0026 save into HDD","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        Task t \u003d taskManager.deleteIndex(idxDel);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        // format the reply","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"Noted. I\u0027ve removed this task:\\n\" + t.toString() + \"\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"                + \"Now you have \" + taskManager.getTasksSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        ui.displayReply(reply);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"     * Executes the delete command.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"     * Deletes a task from the list, remove it from local storage then returns delete confirmation string.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"    public String executeAndReply(TaskManager taskManager, Ui ui, StorageManager storageManager)  {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        // add to the storage in Task \u0026 save into HDD","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        Task t \u003d taskManager.deleteIndex(idxDel);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        // format the reply","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"Noted. I\u0027ve removed this task:\\n\" + t.toString() + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"                + \"Now you have \" + taskManager.getTasksSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"        return ui.getReply(reply);","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":71}},{"path":"src/main/java/jeoe/Commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class EventCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * It is meant to execute the creation of an Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    /** Contains the components of the event command */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    private String[] eventArr;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for an EventCommand object.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to parse into a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    EventCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        this.eventArr \u003d input.replaceFirst(\"event \", \"\").split(\" /from \"); // eventArr have description","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     * Executes the event command.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     * Creates an Event object, adds it to the task list, saves it in local storage then displays it.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    public void execute(TaskManager taskManager, Ui ui, StorageManager storageManager) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        String eventDescription \u003d eventArr[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        String[] eventArr2 \u003d eventArr[1].split(\" /to \"); // eventArr2 have the from \u0026 to","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        String from \u003d eventArr2[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"        String to \u003d eventArr2[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        Event event \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        // add to storage","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        taskManager.addTask(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        ui.displayReply(event.replyString(taskManager.getTasksSize()));","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"     * Executes the event command.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"     * Creates an Event object, adds it to the task list, saves it in local storage then returns string.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"    public String executeAndReply(TaskManager taskManager, Ui ui, StorageManager storageManager)  {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"        String eventDescription \u003d eventArr[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        String[] eventArr2 \u003d eventArr[1].split(\" /to \"); // eventArr2 have the from \u0026 to","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        String from \u003d eventArr2[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        String to \u003d eventArr2[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"        Event event \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"        // add to storage","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"        taskManager.addTask(event);","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"        return ui.getReply(event.replyString(taskManager.getTasksSize()));","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":75}},{"path":"src/main/java/jeoe/Commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class FindCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" * It is meant to help the user find a task in the list of tasks,","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * with description matching the user input, and ran checkstyle on my current code.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    /** Contains the filter words that will filter our matching tasks. */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    private String filterWords;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a FindCommand object.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to parse into a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    FindCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"        super(false);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"        this.filterWords \u003d input.replaceFirst(\"find \", \"\");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * Executes the find command.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * Goes through the list and finds the tasks with description matching the user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    public void execute(TaskManager taskManager, Ui ui, StorageManager storageManager) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskManager.getTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"            // check if the task has matching words, else continue","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"            if (task.getDescription().contains(this.filterWords)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"                String num \u003d String.valueOf(i + 1) + \". \";","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"                reply +\u003d num + task + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"        ui.displayReply(reply);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"     * Executes the find command.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"     * Goes through the list and finds the tasks with description matching the user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"    public String executeAndReply(TaskManager taskManager, Ui ui, StorageManager storageManager)  {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskManager.getTasks();","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"            // check if the task has matching words, else continue","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"            if (task.getDescription().contains(this.filterWords)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"                String num \u003d String.valueOf(i + 1) + \". \";","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"                reply +\u003d num + task + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"        return ui.getReply(reply);","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"wasjoe1":81}},{"path":"src/main/java/jeoe/Commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class ListCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * It is meant to display a list view of all the tasks currently stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a ListCommand object.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to parse into a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    ListCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"     * Executes the list command.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"     * Iterates through the list of task then displays a list view of the tasks to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    public void execute(TaskManager taskManager, Ui ui, StorageManager storageManager) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskManager.getTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"            String num \u003d String.valueOf(i + 1) + \". \";","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"            reply +\u003d num + task + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        ui.displayReply(reply);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"     * Executes the list command.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"     * Iterates through the list of task then displays a list view of the tasks to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"    public String executeAndReply(TaskManager taskManager, Ui ui, StorageManager storageManager)  {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskManager.getTasks();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"            String num \u003d String.valueOf(i + 1) + \". \";","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"            reply +\u003d num + task + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        return ui.getReply(reply);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":67}},{"path":"src/main/java/jeoe/Commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class MarkCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * It is meant to mark a task as done in the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    /** Index in the task list to mark a task. */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    private int idxMark;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a MarkCommand object.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to parse into a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    MarkCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        idxMark \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"     * Executes the mark command.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     * Marks a task from the list, updates the local storage then prints out the marked confirmation.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    public void execute(TaskManager taskManager, Ui ui, StorageManager storageManager) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        // add to the storage in Task \u0026 save into HDD","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        taskManager.mark(idxMark);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"        // format the reply","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + taskManager.getTask(idxMark).toString() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        ui.displayReply(reply);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"     * Executes the mark command.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"     * Marks a task from the list, updates the local storage then returns out the marked confirmation string.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"    public String executeAndReply(TaskManager taskManager, Ui ui, StorageManager storageManager)  {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        // add to the storage in Task \u0026 save into HDD","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"        taskManager.mark(idxMark);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"        // format the reply","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + taskManager.getTask(idxMark).toString() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"        return ui.getReply(reply);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":68}},{"path":"src/main/java/jeoe/Commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.Todo;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class TodoCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * It is meant to execute the creation of a Todo object.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    /** Contains the description of the to do command. */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    private String todoDescription;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a TodoCommand object.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to parse into a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    TodoCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        this.todoDescription \u003d input.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     * Executes the Todo command.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     * Creates a todo object, adds it to the task list, saves it in local storage then displays it.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    public void execute(TaskManager taskManager, Ui ui, StorageManager storageManager) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        // create the actual task","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        Todo todo \u003d new Todo(todoDescription);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"        // add to the storage in Task \u0026 save into HDD","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        taskManager.addTask(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        ui.displayReply(todo.replyString(taskManager.getTasksSize()));","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"     * Executes the Todo command.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"     * Creates a todo object, adds it to the task list, saves it in local storage then returns the todo string.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"    public String executeAndReply(TaskManager taskManager, Ui ui, StorageManager storageManager)  {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"        // create the actual task","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        Todo todo \u003d new Todo(todoDescription);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"        // add to the storage in Task \u0026 save into HDD","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        taskManager.addTask(todo);","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"        return ui.getReply(todo.replyString(taskManager.getTasksSize()));","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":69}},{"path":"src/main/java/jeoe/Commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class UnmarkCommand.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * It is meant to un-mark a task as done in the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    /** Index in the task list to un-mark a task. */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    private int idxUnmark;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a UnmarkCommand object.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to parse into a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    UnmarkCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        idxUnmark \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"     * Executes the unmark command.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     * Un-marks a task from the list, updates the local storage then prints out the un-marked confirmation.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    public void execute(TaskManager taskManager, Ui ui, StorageManager storageManager) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        // add to the storage in Task \u0026 save into HDD","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        taskManager.unmark(idxUnmark);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"        // format the reply","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"                + taskManager.getTask(idxUnmark).toString() + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"        ui.displayReply(reply);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"     * Executes the unmark command.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"     * Un-marks a task from the list, updates the local storage then returns the un-marked confirmation string.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"     * @param taskManager Task manager handling tasks operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"     * @param ui Ui handling output to users.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"     * @param storageManager Storage manager handling storing \u0026 deletion of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"    public String executeAndReply(TaskManager taskManager, Ui ui, StorageManager storageManager)  {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"        // add to the storage in Task \u0026 save into HDD","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        taskManager.unmark(idxUnmark);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        storageManager.save(taskManager.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        // format the reply","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"                + taskManager.getTask(idxUnmark).toString() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"        // add to the reply","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"        return ui.getReply(reply);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":70}},{"path":"src/main/java/jeoe/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a DialogBox object.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     * @param text The string input to be placed in the dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * @param img The image to be placed in the dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"    /** Flips the dialog box such that the ImageView is on the left and text on the right. */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"     * Returns the user\u0027s dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"     * @param img Image of the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"     * @param text The user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"     * @return User\u0027s dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"     * Returns Jeoe\u0027s dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"     * @param img Image of Jeoe.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"     * @param text Jeoe\u0027s output.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"     * @return Jeoe\u0027s dialog box.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"    public static DialogBox getJeoeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"// --------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"// DialogBox version 1","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"//import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"//import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"//import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"wasjoe1"},"content":"//import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"//import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"//public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"//    private Label text;","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"wasjoe1"},"content":"//    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"wasjoe1"},"content":"//    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"//        text \u003d l;","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"wasjoe1"},"content":"//        displayPicture \u003d iv;","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"wasjoe1"},"content":"//        text.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"wasjoe1"},"content":"//        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"wasjoe1"},"content":"//        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"wasjoe1"},"content":"//        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"wasjoe1"},"content":"//        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"wasjoe1"},"content":"//    }","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"wasjoe1"},"content":"//    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"wasjoe1"},"content":"//     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"wasjoe1"},"content":"//     */","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"wasjoe1"},"content":"//    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"wasjoe1"},"content":"//        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"wasjoe1"},"content":"//        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"wasjoe1"},"content":"//        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"wasjoe1"},"content":"//        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"wasjoe1"},"content":"//    }","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"wasjoe1"},"content":"//    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"wasjoe1"},"content":"//        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"wasjoe1"},"content":"//    }","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"wasjoe1"},"content":"//    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"wasjoe1"},"content":"//        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"wasjoe1"},"content":"//        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"wasjoe1"},"content":"//        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"wasjoe1"},"content":"//    }","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"wasjoe1"},"content":"//}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wasjoe1":127}},{"path":"src/main/java/jeoe/Exceptions/InitializationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class InitializationException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":" * It is an exception thrown when initialization of the Jeoe program fails.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class InitializationException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a InitializationException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to be included in the error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public InitializationException(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        super(\"Initialization exception thrown\");","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":19}},{"path":"src/main/java/jeoe/Exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class InvalidCommandException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":" * It is an exception thrown when an invalid command was inputted by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class InvalidCommandException extends RunException {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a InvalidCommandException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to be included in the error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public InvalidCommandException(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        super(\"☹ OOPS!!! A valid command is required. Your current command \\\"\" + input","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"                + \"\\\" is not a valid command.\\n\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"                + \"Please enter your input starting with :\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"                + \"bye\\n\" + \"list\\n\" + \"todo\\n\" + \"deadline\\n\" + \"event\\n\" + \"mark\\n\" + \"unmark\\n\" + \"delete\\n\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"                + \"After the command word, leave a space before typing your task.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":24}},{"path":"src/main/java/jeoe/Exceptions/NoCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class NoCommandException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":" * It is an exception thrown when no command was inputted by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class NoCommandException extends RunException {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a NoCommandException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to be included in the error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public NoCommandException(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        super(\"☹ OOPS!!! A valid command is required. Your current command \\\"\" + input + \"\\\" is empty.\\n\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"                + \"Please enter your input starting with :\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"                + \"bye\\n\" + \"list\\n\" + \"todo\\n\" + \"deadline\\n\" + \"event\\n\" + \"mark\\n\" + \"unmark\\n\" + \"delete\\n\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"                + \"After the command word, leave a space before typing your task.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":23}},{"path":"src/main/java/jeoe/Exceptions/RunException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the class RunException.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":" * It is an exception thrown when an error was encountered during the Jeoe program.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class RunException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a RunException object.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     * @param input The string input by the user to be included in the error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    public RunException(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        super(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":19}},{"path":"src/main/java/jeoe/Jeoe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Commands.CommandParser;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Exceptions.InitializationException;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Exceptions.NoCommandException;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Exceptions.RunException;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates my version of Duke, called Jeoe.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":" * Jeoe is a chatbot that helps the user keep track of their tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":" * Java coding standard was adhered to in this program.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"public class Jeoe {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"    /** Manager to contain task list and handle operations on tasks. */","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    private static TaskManager taskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    /** Manager to format \u0026 print statements to the ui. */","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    private static Ui ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    /** Manager to load \u0026 save task from local storage. */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    private static StorageManager storageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    /** Contains file path to local storage containing saved tasks. */","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"    private static String filePath \u003d System.getProperty(\"user.dir\") + \"/storage/taskListData.txt\"; // dir is till ip","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a Jeoe object.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"     * The Jeoe object is to be passed to the Main class which runs the entire application.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"     * The Jeoe object process the input using all its other components and passes back the","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"     * result to the Main class for the JavaFX components to render out the output on a GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"    public Jeoe() {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"            Jeoe.initialize();","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        } catch (InitializationException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"            // exception to do with initialization \u003d\u003e scanner fails (cannot be file issue)","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"            System.out.println(e.getMessage()); // can change to ui printing this out in the future","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"     * Initialises the Jeoe program.","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"     * Instantiates a TaskManager object, Ui object, and a StorageManager Object.","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"    private static void initialize() throws InitializationException {","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"            storageManager \u003d new StorageManager(filePath); // loading tasks \u0026 saving tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"            // contains list of task, and has operations to add/delete tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"            taskManager \u003d new TaskManager(storageManager.load()); // load passes the string for TM to add task to arr","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"            ui.showOpenString();","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"            System.out.println(\"Jeoe initialization failed\");","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"    // ----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"    // ----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"    // GUI versions","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"    // ----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"    // GUI version 1","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"//    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"wasjoe1"},"content":"//    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"//    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"//    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"//    private Scene scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"//    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"//    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaJeoe.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"//    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"wasjoe1"},"content":"//     * Method to initialize then render out GUI components of Jeoe program.","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"//     * Initializes the Jeoe program, then renden our al the GUI components","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"wasjoe1"},"content":"//     *","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"wasjoe1"},"content":"//     * @param stage The stage that the scene will be placed on.","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"wasjoe1"},"content":"//     */","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"wasjoe1"},"content":"//    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"wasjoe1"},"content":"//    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"wasjoe1"},"content":"//        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"wasjoe1"},"content":"//            Jeoe.initialize();","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"wasjoe1"},"content":"//        } catch (InitializationException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"wasjoe1"},"content":"//            // exception to do with initialization \u003d\u003e scanner fails (cannot be file issue)","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"wasjoe1"},"content":"//            System.out.println(e.getMessage()); // can change to ui printing this out in the future","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"wasjoe1"},"content":"//            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"wasjoe1"},"content":"//        }","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"wasjoe1"},"content":"//        //Step 1. Setting up required components","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"wasjoe1"},"content":"//        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"wasjoe1"},"content":"//        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"wasjoe1"},"content":"//        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"wasjoe1"},"content":"//        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"wasjoe1"},"content":"//        userInput \u003d new TextField();","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"wasjoe1"},"content":"//        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"wasjoe1"},"content":"//        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"wasjoe1"},"content":"//        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"wasjoe1"},"content":"//        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"wasjoe1"},"content":"//        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"wasjoe1"},"content":"//        stage.show(); // Render the stage.","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"wasjoe1"},"content":"//        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"wasjoe1"},"content":"//        stage.setTitle(\"jeoe\");","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"wasjoe1"},"content":"//        stage.setResizable(false);","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"wasjoe1"},"content":"//        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"wasjoe1"},"content":"//        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"wasjoe1"},"content":"//        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"wasjoe1"},"content":"//        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"wasjoe1"},"content":"//        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"wasjoe1"},"content":"//        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"wasjoe1"},"content":"//        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"wasjoe1"},"content":"//        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"wasjoe1"},"content":"//        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"wasjoe1"},"content":"//        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"wasjoe1"},"content":"//        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"wasjoe1"},"content":"//        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"wasjoe1"},"content":"//        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"wasjoe1"},"content":"//        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"wasjoe1"},"content":"//        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"wasjoe1"},"content":"//        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"wasjoe1"},"content":"//        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"wasjoe1"},"content":"//        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"wasjoe1"},"content":"//        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"wasjoe1"},"content":"//            handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"wasjoe1"},"content":"//        });","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"wasjoe1"},"content":"//        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"wasjoe1"},"content":"//            handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"wasjoe1"},"content":"//        });","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"wasjoe1"},"content":"//        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"wasjoe1"},"content":"//    }","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"wasjoe1"},"content":"//    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"wasjoe1"},"content":"//     * Handles the user input through a GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"wasjoe1"},"content":"//     *","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"wasjoe1"},"content":"//     * Creates two dialog boxes, one echoing user input and the other containing Jeoe\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"wasjoe1"},"content":"//     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"wasjoe1"},"content":"//     */","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"wasjoe1"},"content":"//    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"wasjoe1"},"content":"//        Label userText \u003d new Label(\"You :\\n\" + userInput.getText());","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"wasjoe1"},"content":"//        String jeoeReply \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"wasjoe1"},"content":"//        Label jeoeText \u003d new Label(jeoeReply);","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"wasjoe1"},"content":"//        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"wasjoe1"},"content":"//            String fullCommand \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"wasjoe1"},"content":"//            Command c \u003d CommandParser.parse(fullCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"wasjoe1"},"content":"//            jeoeReply \u003d c.executeAndReply(taskManager, ui, storageManager); // already has ui.getReply executed","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"wasjoe1"},"content":"//            jeoeText \u003d new Label(jeoeReply);","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"wasjoe1"},"content":"//        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"wasjoe1"},"content":"//            // print exception, they will handle their formatting themselves","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"wasjoe1"},"content":"//            jeoeText \u003d new Label(ui.getReply(e.getMessage()));","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"wasjoe1"},"content":"//        } catch (NoCommandException e) { // can think of if tried 3 empty commands, terminate program","lastModifiedDate":"2023-09-06"},{"lineNumber":183,"author":{"gitId":"wasjoe1"},"content":"//            jeoeText \u003d new Label(ui.getReply(e.getMessage()));","lastModifiedDate":"2023-09-06"},{"lineNumber":184,"author":{"gitId":"wasjoe1"},"content":"//        } catch (RunException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":185,"author":{"gitId":"wasjoe1"},"content":"//            jeoeText \u003d new Label(ui.getReply(e.getMessage()));","lastModifiedDate":"2023-09-06"},{"lineNumber":186,"author":{"gitId":"wasjoe1"},"content":"//        }","lastModifiedDate":"2023-09-06"},{"lineNumber":187,"author":{"gitId":"wasjoe1"},"content":"//","lastModifiedDate":"2023-09-06"},{"lineNumber":188,"author":{"gitId":"wasjoe1"},"content":"//        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"wasjoe1"},"content":"//                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-09-06"},{"lineNumber":190,"author":{"gitId":"wasjoe1"},"content":"//                DialogBox.getDukeDialog(jeoeText, new ImageView(duke))","lastModifiedDate":"2023-09-06"},{"lineNumber":191,"author":{"gitId":"wasjoe1"},"content":"//        );","lastModifiedDate":"2023-09-06"},{"lineNumber":192,"author":{"gitId":"wasjoe1"},"content":"//        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":193,"author":{"gitId":"wasjoe1"},"content":"//    }","lastModifiedDate":"2023-09-06"},{"lineNumber":194,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":195,"author":{"gitId":"wasjoe1"},"content":"    // ----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-06"},{"lineNumber":196,"author":{"gitId":"wasjoe1"},"content":"    // GUI version 2","lastModifiedDate":"2023-09-06"},{"lineNumber":197,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":198,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":199,"author":{"gitId":"wasjoe1"},"content":"     * Gets the response from the Jeoe program.","lastModifiedDate":"2023-09-06"},{"lineNumber":200,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":201,"author":{"gitId":"wasjoe1"},"content":"     * Gets the response from the Jeoe program to be displayed on the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":202,"author":{"gitId":"wasjoe1"},"content":"     * @param input The input from the user using the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":203,"author":{"gitId":"wasjoe1"},"content":"     * @return Response string to be displayed on the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":204,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":205,"author":{"gitId":"wasjoe1"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":206,"author":{"gitId":"wasjoe1"},"content":"        String jeoeReply;","lastModifiedDate":"2023-09-06"},{"lineNumber":207,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":208,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":209,"author":{"gitId":"wasjoe1"},"content":"            Command c \u003d CommandParser.parse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"wasjoe1"},"content":"            jeoeReply \u003d c.executeAndReply(taskManager, ui, storageManager); // already has ui.getReply executed","lastModifiedDate":"2023-09-06"},{"lineNumber":211,"author":{"gitId":"wasjoe1"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":212,"author":{"gitId":"wasjoe1"},"content":"            // print exception, they will handle their formatting themselves","lastModifiedDate":"2023-09-06"},{"lineNumber":213,"author":{"gitId":"wasjoe1"},"content":"            jeoeReply \u003d ui.getReply(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":214,"author":{"gitId":"wasjoe1"},"content":"        } catch (NoCommandException e) { // can think of if tried 3 empty commands, terminate program","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"wasjoe1"},"content":"            jeoeReply \u003d ui.getReply(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":216,"author":{"gitId":"wasjoe1"},"content":"        } catch (RunException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":217,"author":{"gitId":"wasjoe1"},"content":"            jeoeReply \u003d ui.getReply(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":218,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":219,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":220,"author":{"gitId":"wasjoe1"},"content":"        return jeoeReply;","lastModifiedDate":"2023-09-06"},{"lineNumber":221,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":222,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":223,"author":{"gitId":"wasjoe1"},"content":"    // ----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-06"},{"lineNumber":224,"author":{"gitId":"wasjoe1"},"content":"    // ----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-06"},{"lineNumber":225,"author":{"gitId":"wasjoe1"},"content":"    // CLI version","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":227,"author":{"gitId":"wasjoe1"},"content":"     * Runs the Jeoe program in the CLI.","lastModifiedDate":"2023-09-06"},{"lineNumber":228,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":229,"author":{"gitId":"wasjoe1"},"content":"     * Sets the loop for the 3 components and executes the commands till a bye command is reached.","lastModifiedDate":"2023-09-06"},{"lineNumber":230,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":231,"author":{"gitId":"wasjoe1"},"content":"    public static void run() {","lastModifiedDate":"2023-09-06"},{"lineNumber":232,"author":{"gitId":"wasjoe1"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":233,"author":{"gitId":"wasjoe1"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-06"},{"lineNumber":234,"author":{"gitId":"wasjoe1"},"content":"            try {","lastModifiedDate":"2023-09-06"},{"lineNumber":235,"author":{"gitId":"wasjoe1"},"content":"                String fullCommand \u003d ui.nextLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":236,"author":{"gitId":"wasjoe1"},"content":"                Command c \u003d CommandParser.parse(fullCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":237,"author":{"gitId":"wasjoe1"},"content":"                c.execute(taskManager, ui, storageManager);","lastModifiedDate":"2023-09-06"},{"lineNumber":238,"author":{"gitId":"wasjoe1"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-06"},{"lineNumber":239,"author":{"gitId":"wasjoe1"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":240,"author":{"gitId":"wasjoe1"},"content":"                // print exception, they will handle their formatting themselves","lastModifiedDate":"2023-09-06"},{"lineNumber":241,"author":{"gitId":"wasjoe1"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":242,"author":{"gitId":"wasjoe1"},"content":"            } catch (NoCommandException e) { // can think of if tried 3 empty commands, terminate program","lastModifiedDate":"2023-09-06"},{"lineNumber":243,"author":{"gitId":"wasjoe1"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":244,"author":{"gitId":"wasjoe1"},"content":"            } catch (RunException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":245,"author":{"gitId":"wasjoe1"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":246,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":247,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":248,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":249,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":250,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":251,"author":{"gitId":"wasjoe1"},"content":"     * The main method of Jeoe.","lastModifiedDate":"2023-09-06"},{"lineNumber":252,"author":{"gitId":"wasjoe1"},"content":"     * The block of code is to initialize \u0026 run the Jeoe program (in the CLI).","lastModifiedDate":"2023-09-06"},{"lineNumber":253,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":254,"author":{"gitId":"wasjoe1"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":255,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":256,"author":{"gitId":"wasjoe1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":257,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":258,"author":{"gitId":"wasjoe1"},"content":"            Jeoe.initialize();","lastModifiedDate":"2023-09-06"},{"lineNumber":259,"author":{"gitId":"wasjoe1"},"content":"            Jeoe.run();","lastModifiedDate":"2023-09-06"},{"lineNumber":260,"author":{"gitId":"wasjoe1"},"content":"        } catch (InitializationException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":261,"author":{"gitId":"wasjoe1"},"content":"            // exception to do with initialization \u003d\u003e scanner fails (cannot be file issue)","lastModifiedDate":"2023-09-06"},{"lineNumber":262,"author":{"gitId":"wasjoe1"},"content":"            System.out.println(e.getMessage()); // can change to ui printing this out in the future","lastModifiedDate":"2023-09-06"},{"lineNumber":263,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":264,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":265,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wasjoe1":265}},{"path":"src/main/java/jeoe/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"     * The main method of Launcher.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"        // this launch method will find the start method and run it","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wasjoe1":19}},{"path":"src/main/java/jeoe/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * A GUI for Jeoe using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    private Jeoe jeoe \u003d new Jeoe();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"     * Starts the GUI by taking in a stage.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"     * @param stage Stage to be taken in for display on the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJeoe(jeoe);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wasjoe1":36}},{"path":"src/main/java/jeoe/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    private Jeoe jeoe;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaJeoe.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    /** Initializes the main window. */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     * Sets the Jeoe object for future usage(getting the Jeoe response).","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"     * @param j Jeoe object to be assigned.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"    public void setJeoe(Jeoe j) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"        jeoe \u003d j;","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"     * Creates 2 dialog boxes for user input and Jeoe output.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Jeoe\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        String response \u003d jeoe.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"                DialogBox.getJeoeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wasjoe1":60}},{"path":"src/main/java/jeoe/Others/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Others;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the StorageManager class.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" * The StorageManager helps to manage the loading \u0026 saving of tasks, to and from the local storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"public class StorageManager {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    /** Contains file path to local storage containing saved tasks. */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    private String filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a StorageManager object.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"     * @param filePath The file path which the storage manager will save tasks to.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    public StorageManager(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     * Loads the tasks from local storage for usage in the Jeoe program.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"     * @return File that contains list of tasks, to be handled by the TaskManager object.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"     * @throws IOException If the file doesn\u0027t exist.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"    public File load() throws IOException {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"            // add items into the storage when loading the app","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"            // find the file","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"            File taskListData \u003d new File(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"            // if file doesnt exist, // taskListData.length() \u003d\u003d 0; // is used to check length of file","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"            if (!taskListData.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"                System.out.println(\"task list data doesnt exist\");","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"                taskListData.getParentFile().mkdirs();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"                taskListData.createNewFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"            return taskListData;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"            System.out.println(\"couldn\u0027t create the new file exception\");","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"            throw new IOException();","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"     * Converts a task of Task type, to a string to be stored in local storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"     * @param t Task to be converted to string form.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"     * @return String that is to be stored in local storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"    private static String taskToStringForStorage(Task t) {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"        // splits into type, mark or not, description, from, to","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"        String deLim \u003d \" | \";","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        switch (t.taskType()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"        case TODO:","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"            String todo \u003d \"T\" + deLim;","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"            todo +\u003d t.isDone() ? (\"1\" + deLim) : (\"0\" + deLim);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"            todo +\u003d t.getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"            return todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"            String deadline \u003d \"D\" + deLim;","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"            deadline +\u003d t.isDone() ? (\"1\" + deLim) : (\"0\" + deLim);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"            deadline +\u003d t.getDescription() + deLim;","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"            deadline +\u003d t.getEndDateTimeString();","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"            return deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"        case EVENT:","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"            String event \u003d \"E\" + deLim;","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"            event +\u003d t.isDone() ? (\"1\" + deLim) : (\"0\" + deLim);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"            event +\u003d t.getDescription() + deLim;","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"            event +\u003d t.getEndDateTimeString();","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"            return event;","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"            return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"     * Saves a list of tasks in local storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"     * @param tasks An ArrayList of tasks to be converted to string form and stored in local storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) { // for saving into the storage, just rewrite the entire file","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"wasjoe1"},"content":"        // to overwrite the file","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"wasjoe1"},"content":"            // concatenate all the tasks in string form","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"            String listOfTasksString \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"wasjoe1"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"wasjoe1"},"content":"                String tString \u003d taskToStringForStorage(t);","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"wasjoe1"},"content":"                listOfTasksString +\u003d (tString + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"wasjoe1"},"content":"            // write to the file","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"wasjoe1"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"wasjoe1"},"content":"            fw.write(listOfTasksString);","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"wasjoe1"},"content":"            fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"wasjoe1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"wasjoe1"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"wasjoe1"},"content":"    /** Deletes all tasks in local storage. */","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"wasjoe1"},"content":"    public void deleteAllInFile() {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"wasjoe1"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"wasjoe1"},"content":"        this.save(arr);","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"wasjoe1"},"content":"        System.out.println(\"deleted all in file\");","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":118}},{"path":"src/main/java/jeoe/Others/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Others;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the Ui class.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":" * The Ui helps to manage the inputs \u0026 outputs of the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    /** Scanner to scan for inputs by user */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    /** Constructor for a Ui object. */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"        scanner \u003d new Scanner(System.in); // makes it such that the scanner takes in inputs from the console","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"     * Returns the next input line by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"     * @return Next input line by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    public String nextLine() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"    /** Displays the opening string of the Jeoe program. */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    public void showOpenString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"        String openingStr \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"                + \" Hello! I\u0027m JEOE\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"                + \" What can I do for you?\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"                + \" type :\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"                + \" list \u003d\u003e to list out items in storage\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"                + \" _Anything else_ \u003d\u003e store in storage\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        System.out.println(openingStr);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    /** Displays the ending string of the Jeoe program. */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    public void showEndString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"        String endStr \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"                + \" Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"        System.out.println(endStr);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        scanner.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"     * Displays an output message to the user base on the input reply.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"     * @param reply Input reply by the execution of a command.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"    public void displayReply(String reply) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"                + reply","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"                + \"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"    // ----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"    // when it switched to GUI","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"    /** Returns the opening string of the Jeoe program. */","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"    public String getOpeningString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"        String openingStr \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"                + \" Hello! I\u0027m JEOE\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"                + \" What can I do for you?\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"                + \" type :\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"                + \" list \u003d\u003e to list out items in storage\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"                + \" _Anything else_ \u003d\u003e store in storage\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"        return openingStr;","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"    /** Returns the ending string of the Jeoe program. */","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"    public String getEndString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"        String endStr \u003d \" Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"        return endStr;","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"     * Returns an output message to the user base on the input reply.","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"     * @param reply Input reply by the execution of a command.","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"wasjoe1"},"content":"    public String getReply(String reply) {","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"        return \"Jeoe :\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"                + reply;","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":92}},{"path":"src/main/java/jeoe/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the Deadline class.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * It represents a task that has a deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    /** End date \u0026 time of the deadline task. */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"     * @param by The end date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     * Returns the end date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * @return String representation of the end date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    public String getEndDateTimeString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"        return this.by.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"        // return this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        // + \"T\" + this.by.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"                + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":46}},{"path":"src/main/java/jeoe/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the Event class.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":" * It represents a task that has a start date \u0026 time and a deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"    protected String from;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    protected String to;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for an Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"     * @param from The start date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"     * @param to The end date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"     * Returns the start date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     * @return String representation of the start date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"    public String getStartDateTimeString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"        return this.from;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"     * Returns the end date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"     * @return String representation of the end date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    public String getEndDateTimeString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"        return this.to;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":51}},{"path":"src/main/java/jeoe/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the Task class.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":" * It represents a task that is added to the Jeoe program upon a command by the user that creates a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    /** Description of the task. */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    private String description; // the toString handles the space after the [ ] or [X]","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    /** Status of whether the task is done. */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    /** Enum type TaskType which lists the different task types. */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    public enum TaskType {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"        TODO,","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"        EVENT,","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"        DEADLINE","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"    /** TaskType of the task. */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"    private TaskType taskType;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"     * @param taskType The task type of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"        return isDone ? \"[X] \" + this.description : \"[ ] \" + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"     * Returns the done status of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"     * @return Status of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"    /** Un-marks the task to be not done. */","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"    public void unmark() {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"    /** Marks the task to be done. */","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"    public void mark() {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"     * @return Type of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"    public TaskType taskType() {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"        return this.taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"        return this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"     * Returns the start date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"     * @return String representation of the start date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"    public String getStartDateTimeString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"        // can consider removing this method by typecasting","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"        return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"     * Returns the end date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"wasjoe1"},"content":"     * @return String representation of the end date \u0026 time of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"wasjoe1"},"content":"    public String getEndDateTimeString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"wasjoe1"},"content":"        // can consider removing this method by typecasting","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"wasjoe1"},"content":"        return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"wasjoe1"},"content":"     * Returns the String to be returned when task is added to the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"wasjoe1"},"content":"     * @param currNumOfTask Current number of tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"wasjoe1"},"content":"     * @return String to be returned when task is added to the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"wasjoe1"},"content":"    public String replyString(int currNumOfTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"wasjoe1"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"wasjoe1"},"content":"                + this.toString() + \"\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"wasjoe1"},"content":"                + \"Now you have \" + currNumOfTask + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"wasjoe1"},"content":"        // the toString is called from the child class which is amazing \u003d\u003e RTT is child class type i guess","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":118}},{"path":"src/main/java/jeoe/Tasks/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the TaskManager class.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":" * The StorageManager helps to contain the task list and handle operations on tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"public class TaskManager {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    /** Contains list of tasks. */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    private ArrayList\u003cTask\u003e storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a TaskManager object.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"     * Adds the lists of task to the storage field.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"     * @param taskListData A file containing stored tasks on local machine.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"    public TaskManager(File taskListData) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"            storage \u003d new ArrayList\u003c\u003e(); // everytime you initialize, you start with a new storage","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"            Scanner fileSc \u003d new Scanner(taskListData);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"            while (fileSc.hasNextLine()) { // if no task, storage is empty","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"                Task task \u003d stringToTask(fileSc.nextLine());","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"                    storage.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"            fileSc.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"            System.out.println(\"storage manager did not load file properly\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wasjoe1"},"content":"     * Converts a task in string format to Task type.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"wasjoe1"},"content":"     * @param taskInStringForm The task in string format to be converted.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"wasjoe1"},"content":"     * @return A task of Task type.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"wasjoe1"},"content":"    private Task stringToTask(String taskInStringForm) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"wasjoe1"},"content":"        String[] taskData \u003d taskInStringForm.split(\" \\\\| \"); // assuming the description and all that doesnt have |","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wasjoe1"},"content":"        // splits into type, mark or not, description, from, to","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wasjoe1"},"content":"        switch (taskData[0]) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wasjoe1"},"content":"        case \"T\":","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"wasjoe1"},"content":"            Task todo \u003d new Todo(taskData[2]);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"wasjoe1"},"content":"            if (taskData[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"wasjoe1"},"content":"                todo.mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wasjoe1"},"content":"            return todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"wasjoe1"},"content":"        case \"D\":","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"wasjoe1"},"content":"            Task deadline \u003d new Deadline(taskData[2], LocalDateTime.parse(taskData[3]));","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"wasjoe1"},"content":"            if (taskData[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wasjoe1"},"content":"                deadline.mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"wasjoe1"},"content":"            return deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"wasjoe1"},"content":"        case \"E\":","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"wasjoe1"},"content":"            Task event \u003d new Event(taskData[2], taskData[3], taskData[4]);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"wasjoe1"},"content":"            if (taskData[1] \u003d\u003d \"1\") {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"wasjoe1"},"content":"                event.mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"wasjoe1"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wasjoe1"},"content":"            return event;","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"wasjoe1"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"wasjoe1"},"content":"            return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"wasjoe1"},"content":"     * Returns the list of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"wasjoe1"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"wasjoe1"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"wasjoe1"},"content":"        return this.storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"wasjoe1"},"content":"     * Returns the task at that index.","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"wasjoe1"},"content":"     * @param idx Index of the task to be returned.","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"wasjoe1"},"content":"     * @return The task at that index.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"wasjoe1"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"wasjoe1"},"content":"        return this.storage.get(idx);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"wasjoe1"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"wasjoe1"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"wasjoe1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"wasjoe1"},"content":"        this.storage.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"wasjoe1"},"content":"     * Deletes the task at that index.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"wasjoe1"},"content":"     * @param idx Index of the task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"wasjoe1"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"wasjoe1"},"content":"    public Task deleteIndex(int idx) {","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"wasjoe1"},"content":"        return this.storage.remove(idx);","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"wasjoe1"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"wasjoe1"},"content":"     * @return Size of the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"wasjoe1"},"content":"    public int getTasksSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"wasjoe1"},"content":"        return this.storage.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"wasjoe1"},"content":"     * Marks a task in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"wasjoe1"},"content":"     * @param idxMark Index of the task to be marked.","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"wasjoe1"},"content":"    public void mark(int idxMark) {","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"wasjoe1"},"content":"        storage.get(idxMark).mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"wasjoe1"},"content":"     * Un-marks a task in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"wasjoe1"},"content":"     * @param idxUnmark Index of the task to be un-marked.","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"wasjoe1"},"content":"    public void unmark(int idxUnmark) {","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"wasjoe1"},"content":"        storage.get(idxUnmark).unmark();","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"wasjoe1"},"content":"    /** Returns a string representation of the list of tasks. */","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"wasjoe1"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"wasjoe1"},"content":"        for (int i \u003d 0; i \u003c this.storage.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"wasjoe1"},"content":"            String num \u003d String.valueOf(i + 1) + \". \";","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"wasjoe1"},"content":"            Task task \u003d this.storage.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"wasjoe1"},"content":"            reply +\u003d num + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"wasjoe1"},"content":"        return reply;","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":152}},{"path":"src/main/java/jeoe/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":" * This class encapsulates the Todo class.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":" * It represents a task that has only its description.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":" * @author Joe Chua","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":" * @version Week-3","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"     * Constructor for a Todo object.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wasjoe1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"jeoe.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"447.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"153.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"446.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"153.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"447.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"472.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wasjoe1":19}},{"path":"src/test/java/jeoe/Commands/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    protected StorageManager sm;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    protected TaskManager tm;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    protected Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    public void testAddDeadline() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"            String filePath \u003d System.getProperty(\"user.dir\") + \"/storage/testTaskListData.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"            sm \u003d new StorageManager(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"            sm.deleteAllInFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"            tm \u003d new TaskManager(sm.load());","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"            DeadlineCommand deadline \u003d new DeadlineCommand(\"deadline test /by 2022-12-01 18:00\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"            deadline.execute(tm, ui, sm);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"            assertEquals(\"1. [D][ ] test (by: Dec 1 2022 18:00)\\n\", tm.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"            System.out.println(\"Exception in add deadline test\");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":30}},{"path":"src/test/java/jeoe/Commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"package jeoe.Commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.StorageManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Others.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"import jeoe.Tasks.TaskManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"    protected StorageManager sm;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"    protected TaskManager tm;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"    protected Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"    public void testAddTodo() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"            String filePath \u003d System.getProperty(\"user.dir\") + \"/storage/testTaskListData.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"            sm \u003d new StorageManager(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"            sm.deleteAllInFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"            tm \u003d new TaskManager(sm.load());","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"            TodoCommand todoTest \u003d new TodoCommand(\"todo test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"            todoTest.execute(tm, ui, sm);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"            assertEquals(\"1. [T][ ] test\\n\", tm.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"            System.out.println(\"Exception in add to do test\");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":30}},{"path":"storage/taskListData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"T | 1 | another thing","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"T | 0 | really another thing","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wasjoe1":2}},{"path":"storage/testTaskListData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"T | 0 | test","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":1}},{"path":"testdata/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"T | 0 | test","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"T | 0 | test","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"T | 0 | test","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"T | 0 | test","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"T | 0 | test","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"T | 0 | test","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"T | 0 | test","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"T | 0 | test","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wasjoe1":8}},{"path":"text-ui-test/diff-output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"--- ACTUAL.TXT\t2023-08-24 12:24:54","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"+++ EXPECTED.TXT\t2023-08-24 12:08:47","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"@@ -24,3 +24,40 @@","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":" Now you have 3 tasks in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":" ____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"+ ☹ OOPS!!! A valid jeoe.Tasks.jeoe.Tasks is required. Your current input \"random grribish\" is not a valid task.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wasjoe1"},"content":"+Please enter your input starting with :","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wasjoe1"},"content":"+todo","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wasjoe1"},"content":"+deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wasjoe1"},"content":"+event","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wasjoe1"},"content":"+ After the command word, leave a space before typing your task.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wasjoe1"},"content":"+Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wasjoe1"},"content":"+[T][X] borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"wasjoe1"},"content":"+OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"wasjoe1"},"content":"+[T][ ] borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"wasjoe1"},"content":"+Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"wasjoe1"},"content":"+[D][X] return book (by: Sunday)","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"wasjoe1"},"content":"+Here are the tasks in your list:","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"wasjoe1"},"content":"+1. [T][ ] borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"wasjoe1"},"content":"+2. [D][X] return book (by: Sunday)","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"wasjoe1"},"content":"+3. [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"wasjoe1"},"content":"+ Bye. Hope to see you again soon!","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"wasjoe1"},"content":"+____________________________________________________________","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"wasjoe1"},"content":"+","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wasjoe1":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wasjoe1"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wasjoe1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wasjoe1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wasjoe1"},"content":"random grribish","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wasjoe1"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wasjoe1"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wasjoe1"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wasjoe1"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wasjoe1"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wasjoe1":9}}]
