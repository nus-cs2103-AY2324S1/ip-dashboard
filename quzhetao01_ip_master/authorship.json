[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Homepage","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)","lastModifiedDate":"2019-08-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2019-08-06"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"# I would like to join this duke.list. How can I help the project","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"quzhetao01":1,"-":8}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"quzhetao01":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":" plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"quzhetao01":2,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" * Main class for the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":" * This class initializes and manages the Duke application. It handles user interaction,","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":" * task processing, and exception handling.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"    private FunnyList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"     * Constructs a Duke instance with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"     * @param filePath The file path to the text file to load and save task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"            this.tasks \u003d new FunnyList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"            this.tasks \u003d new FunnyList();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"     * Main method to start the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"     * @param args Command-line arguments (Not applicable).","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"        new Duke(\"./tasks.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"quzhetao01"},"content":"     * Runs the main loop of the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"quzhetao01"},"content":"     * Processes user commands and handles exceptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"quzhetao01"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"quzhetao01"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"quzhetao01"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"quzhetao01"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"quzhetao01"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"quzhetao01"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"quzhetao01"},"content":"                ui.printLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"quzhetao01"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"quzhetao01"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"quzhetao01"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"quzhetao01"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"quzhetao01"},"content":"                ui.showError(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"quzhetao01"},"content":"            } finally {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"quzhetao01"},"content":"                ui.printLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"quzhetao01"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"quzhetao01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"quzhetao01":64,"-":2}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" * Represents a command to add a deadline task in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" * Extends the base Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"\tpublic static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"\tprivate String taskDescription;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\tprivate String by;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t * Constructs an AddDeadlineCommand with the given task description and due date.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"\t * @param taskDescription The description of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\t * @param by The due date of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\tpublic AddDeadlineCommand(String taskDescription, String by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\t * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"\t@Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"\tpublic void execute(FunnyList taskList, Ui ui, Storage storage) throws DukeException  {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"\t\tDeadline task \u003d new Deadline(this.taskDescription, false, this.by);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"\t\ttaskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"\t\tstorage.write(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"\t\tui.showAddTodoMessage(task, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":41}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" * Represents a command to add an event task in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" * Extends the base Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"\tpublic static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"\tprivate String taskDescription;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\tprivate String from;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"\tprivate String to;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t * Constructs an AddEventCommand with the given task description, start time, and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\t * @param taskDescription The description of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\t * @param from The start time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\t * @param to The end time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\tpublic AddEventCommand(String taskDescription, String from, String to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"\t * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"\t@Override","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"\tpublic void execute(FunnyList taskList, Ui ui, Storage storage) throws DukeException  {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"\t\tEvent task \u003d new Event(this.taskDescription, false, this.from, this.to);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"\t\ttaskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"\t\tstorage.write(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"\t\tui.showAddTodoMessage(task, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":44}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" * Represents a command to add a todo task in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" * Extends the base Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"\tpublic static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"\tprivate String taskDescription;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\t * Constructs a AddTodoCommand with the given task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t * @param taskDescription The description of the todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\tpublic AddTodoCommand(String taskDescription) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\t@Override","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\tpublic void execute(FunnyList taskList, Ui ui, Storage storage) throws DukeException  {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"\t\tToDo task \u003d new ToDo(this.taskDescription);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"\t\ttaskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"\t\tstorage.write(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"\t\tui.showAddTodoMessage(task, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":" * Represents a command in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" * This abstract class serves as the base for different types of commands that can be executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"\tprotected boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\t * Executes the command using the provided FunnyList, Ui, and Storage objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\t * @param tasks The list of tasks to be operated on.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t * @param ui The user interface for interaction.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t * @param storage The storage manager for data management.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"\t * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\tpublic abstract void execute(FunnyList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\t * Checks if the command triggers an exit from the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t * @return True if the command triggers an exit, otherwise false.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\tpublic boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"\t\treturn isExit;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":35}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" * Represents a command to delete a task in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" * Extends the base Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"\tpublic static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\tprivate int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\tpublic DeleteCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\t * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t@Override","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\tpublic void execute(FunnyList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t\tTask task \u003d taskList.deleteTask(this.index);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t\tstorage.write(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\t\tui.showDeleteMessage(task, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":34}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":" * Represents a command to terminate the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":" * Extends the base Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"\tpublic static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"\t * Represents a command to add an event task in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"\t * Extends the base Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"\t@Override","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\tpublic void execute(FunnyList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.isExit \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t\tui.showGoodbyeMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":23}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"\tpublic static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"\tprivate String search;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\tpublic FindCommand(String search) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.search \u003d search;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t@Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"\tpublic void execute(FunnyList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\t\tArrayList\u003cTask\u003e matchingTasks \u003d taskList.findTasks(this.search);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\t\tui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"quzhetao01":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":" * Represents a command to list out all tasks in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" * Extends the base Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"\tpublic static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\t * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\t@Override","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\tpublic void execute(FunnyList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t\tui.showItems(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":23}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" * Represents a command to mark a task as completed in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" * Extends the base Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"\tpublic static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\tprivate int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\tpublic MarkCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\t * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t@Override","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\tpublic void execute(FunnyList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t\tTask task \u003d taskList.completeTask(this.index);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t\tstorage.write(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\t\tui.showMarkMessage(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":32}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" * Represents a command to unmark a task as incomplete in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" * Extends the base Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"\tpublic static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\tprivate int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\tpublic UnmarkCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\t * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t@Override","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\tpublic void execute(FunnyList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t\tTask task \u003d taskList.undoTask(this.index);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t\tstorage.write(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\t\tui.showUnmarkMessage(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":32}},{"path":"src/main/java/duke/command/WrongCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":" * Represents a command that cannot be understood.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":" * Extends the base Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"public class WrongCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"\t * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\t@Override","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"\tpublic void execute(FunnyList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\t\tui.showInvalidInput();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":21}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":" * Custom exception class for Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":" * It extends the Exception Class and provides a custom error message format.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"     * Constructs a DukeException with a specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"     * @return A string containing the formatted error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"        return \"☹ OOPS!!! \" + this.getMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"quzhetao01":27}},{"path":"src/main/java/duke/list/FunnyList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.list;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":" * Represents a list of tasks in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" * This class manages a list of tasks and provides methods for adding, retrieving,","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" * completing, undoing, and deleting tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"public class FunnyList {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"     * Constructs a FunnyList with the given list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"     * @param taskList The initial list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"    */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"    public FunnyList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"     * Constructs an empty FunnyList.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"    public FunnyList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"        return this.taskList.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"     * Marks a task at the specified index as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"quzhetao01"},"content":"     * @param index The index of the task to complete.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"quzhetao01"},"content":"     * @return The completed task.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"quzhetao01"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"quzhetao01"},"content":"    public Task completeTask(int index) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"quzhetao01"},"content":"        if (index \u003c 1 || index \u003e this.taskList.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"quzhetao01"},"content":"            throw new DukeException(\"Index does not exist\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"quzhetao01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"quzhetao01"},"content":"        return this.taskList.get(index - 1).completeTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"quzhetao01"},"content":"     * Marks a completed task at the specified index as incomplete.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"quzhetao01"},"content":"     * @param index The index of the task to undo.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"quzhetao01"},"content":"     * @return The task that was undone.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"quzhetao01"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"quzhetao01"},"content":"    public Task undoTask(int index) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"quzhetao01"},"content":"        if (index \u003c 1 || index \u003e this.taskList.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"quzhetao01"},"content":"            throw new DukeException(\"Index does not exist\");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"quzhetao01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"quzhetao01"},"content":"        return this.taskList.get(index - 1).undoTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"quzhetao01"},"content":"     * Removes and returns a task from the list at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"quzhetao01"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"quzhetao01"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"quzhetao01"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"quzhetao01"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"quzhetao01"},"content":"        if (index \u003c 1 || index \u003e this.taskList.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"quzhetao01"},"content":"            throw new DukeException(\"Index does not exist\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"quzhetao01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"quzhetao01"},"content":"        Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"quzhetao01"},"content":"        this.taskList.remove(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"quzhetao01"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"quzhetao01"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"quzhetao01"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"quzhetao01"},"content":"    public ArrayList\u003cTask\u003e findTasks(String search) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"quzhetao01"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"quzhetao01"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"quzhetao01"},"content":"            Task curr \u003d this.taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"quzhetao01"},"content":"            if (curr.match(search)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"quzhetao01"},"content":"                result.add(curr);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"quzhetao01"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"quzhetao01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"quzhetao01"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":99}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"import duke.command.WrongCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":" * The Parser class is responsible for parsing data from standard input for the Duke Program.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t * Parses the input given by the user from standard input and packages them into a Command instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t * @param input A string representing a full command from the standard input","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t * @return A Command Object which holds the necessary data required for further execution of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\t * @throws DukeException If any full command is incomplete or cannot be understood","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"\tpublic static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"\t\tinput \u003d input.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"\t\tString commandWord \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"\t\tswitch (commandWord) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"\t\tcase AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"\t\t\tString[] todoData \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"\t\t\tif (todoData.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"\t\t\treturn new AddTodoCommand(todoData[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"\t\tcase AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"\t\t\tString[] eventData \u003d input.split(\" /from \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"quzhetao01"},"content":"\t\t\tif (eventData.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"An event requires a /from (timedate) descriptor\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"quzhetao01"},"content":"\t\t\tString[] period \u003d eventData[1].split( \"/to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"quzhetao01"},"content":"\t\t\tif (period.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"An event requires a /to (timedate) descriptor\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"quzhetao01"},"content":"\t\t\tif (eventData[0].split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"quzhetao01"},"content":"\t\t\ttry {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tString from \u003d LocalDate.parse(period[0].trim())","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\t\t.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tString to \u003d LocalDate.parse(period[1].trim())","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\t\t.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\treturn new AddEventCommand(eventData[0].split(\" \", 2)[1], from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"quzhetao01"},"content":"\t\t\t} catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"Please represent time in a proper time format of yyyy-mm-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"quzhetao01"},"content":"\t\tcase AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"quzhetao01"},"content":"\t\t\tString[] deadlineData \u003d input.split(\" /by \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"quzhetao01"},"content":"\t\t\tif (deadlineData.length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"A deadline task requires a /by (timedate) descriptor\");","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"quzhetao01"},"content":"\t\t\tif (deadlineData[0].split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"quzhetao01"},"content":"\t\t\ttry {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tString by \u003d LocalDate.parse(deadlineData[1]).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\treturn new AddDeadlineCommand(deadlineData[0].split(\" \", 2)[1], by);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"quzhetao01"},"content":"\t\t\t} catch (DateTimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"Please represent time in a proper time format of yyyy-mm-dd\");","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"quzhetao01"},"content":"\t\tcase MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"quzhetao01"},"content":"\t\t\tString[] markData \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"quzhetao01"},"content":"\t\t\tif (markData.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"Please select a task using its index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"quzhetao01"},"content":"\t\t\ttry {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\treturn new MarkCommand(Integer.valueOf(markData[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"quzhetao01"},"content":"\t\t\t} catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"Please specify the index of the task (Numbers only)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"quzhetao01"},"content":"\t\tcase UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"quzhetao01"},"content":"\t\t\tString[] unmarkData \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"quzhetao01"},"content":"\t\t\tif (unmarkData.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"Please select a task using its index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"quzhetao01"},"content":"\t\t\ttry {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\treturn new UnmarkCommand(Integer.valueOf(unmarkData[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"quzhetao01"},"content":"\t\t\t} catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"Please specify the index of the task (Numbers only)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"quzhetao01"},"content":"\t\tcase DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"quzhetao01"},"content":"\t\t\tString[] deleteData \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"quzhetao01"},"content":"\t\t\tif (deleteData.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"Please select a task using its index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"quzhetao01"},"content":"\t\t\ttry {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\treturn new DeleteCommand(Integer.valueOf(deleteData[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"quzhetao01"},"content":"\t\t\t} catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"Please specify the index of the task (Numbers only)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"quzhetao01"},"content":"\t\tcase FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"quzhetao01"},"content":"\t\t\tString[] searchData \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"quzhetao01"},"content":"\t\t\tif (searchData.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tthrow new DukeException(\"Search string cannot be empty\");","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"quzhetao01"},"content":"\t\t\treturn new FindCommand(searchData[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"quzhetao01"},"content":"\t\tcase ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"quzhetao01"},"content":"\t\t\treturn new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"quzhetao01"},"content":"\t\tcase ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"quzhetao01"},"content":"\t\t\treturn new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"quzhetao01"},"content":"\t\tdefault:","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"quzhetao01"},"content":"\t\t\treturn new WrongCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":123}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":" *  The Storage class is responsible for handling operations with saved task data in a text file for the Duke Program.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":" *  It is capable of reading / loading and writing to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\tprivate File data;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t * Constructs a new instance of the Ui class.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\t * Initialises an internal File object to read / write Task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t * @param filePath The path location of the data text file.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\tpublic Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.data \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"\t * Reads the data from the text file and converts them to their corresponding task objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"\t * The tasks are added to an ArrayList to be returned.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"\t * @return An ArrayList of Task objects which were originally stored in the text file.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"\t * @throws DukeException If the file specified cannot be found.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"\tpublic ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"\t\t\tScanner s \u003d new Scanner(this.data);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"quzhetao01"},"content":"\t\t\tArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"quzhetao01"},"content":"\t\t\twhile (s.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tString[] row  \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tswitch (row.length) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\tcase 3:","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\t\ttaskList.add(new ToDo(row[2], row[1].equals(\"1\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\t\tbreak;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\tcase 4:","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\t\ttaskList.add(new Deadline(row[2], row[1].equals(\"1\"), row[3]));","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\t\tbreak;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\tcase 5:","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\t\ttaskList.add(new Event(row[2], row[1].equals(\"1\"), row[3], row[4]));","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\t\tbreak;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\tdefault:","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\t\tbreak;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"quzhetao01"},"content":"\t\t\treturn taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"quzhetao01"},"content":"\t\t\tthrow new DukeException(\"No tasklist record was found\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"quzhetao01"},"content":"\t * Takes a FunnyList of tasks and writes each task to the specified data source.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"quzhetao01"},"content":"\t * @param taskList The FunnyList containing the tasks to be written.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"quzhetao01"},"content":"\t * @throws DukeException If there is an issue writing the data.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"quzhetao01"},"content":"\tpublic void write(FunnyList taskList) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"quzhetao01"},"content":"\t\t\tFileWriter fw \u003d new FileWriter(this.data);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfor (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\ttaskList.get(i).writeToFile(fw);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tfw.write(System.lineSeparator());","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"quzhetao01"},"content":"\t\t\tthrow new DukeException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":85}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":" * Represents a deadline task in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":" * Deadline tasks have a specific due date.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"    private String due;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"     * Constructs a Deadline task with the given task description, completion status, and due date.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"     * @param task The description of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"     * @param isDone The completion status of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"     * @param due The due date of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"     * @throws DateTimeException If there is an issue with date or time formatting.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"    public Deadline(String task, boolean isDone, String due) throws DateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"        super(task, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"        this.due \u003d due;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"     * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + due + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"     * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"    public void writeToFile(FileWriter fw) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"        String storedRow \u003d \"D|\" + (this.isDone ? \"1|\" : \"0|\") + this.getTask() + \"|\" + this.due;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"        fw.write(storedRow);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"quzhetao01":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":" * Events have a start and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"    private String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"    private String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"     * Constructs an Event task with the given task description, completion status, start time, and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"     * @param task The description of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"     * @param isDone The completion status of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"     * @throws DateTimeException If there is an issue with date or time formatting.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"    public Event(String task, boolean isDone, String from, String to) throws DateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"        super(task, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"     * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"                + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"     * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"quzhetao01"},"content":"    public void writeToFile(FileWriter fw) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"quzhetao01"},"content":"        String storedRow \u003d \"E|\" + (this.isDone ? \"1|\" : \"0|\") + this.getTask() + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"quzhetao01"},"content":"        fw.write(storedRow);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"quzhetao01":49}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":" * Represents a task in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":" * This abstract class serves as the base for different types of tasks that can be created.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"    private String task;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"     * Constructs a task with the given task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"     * Constructs a task with the given task description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"    public Task(String task, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"     * @return A string containing the task\u0027s status icon and description.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"quzhetao01"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"quzhetao01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"quzhetao01"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + task;","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"quzhetao01"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"quzhetao01"},"content":"     * @return The completed task.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"quzhetao01"},"content":"    public Task completeTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"quzhetao01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"quzhetao01"},"content":"        return this;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"quzhetao01"},"content":"     * Marks the task as not completed (undoes completion).","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"quzhetao01"},"content":"     * @return The task that was marked as not completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"quzhetao01"},"content":"    public Task undoTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"quzhetao01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"quzhetao01"},"content":"        return this;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"quzhetao01"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"quzhetao01"},"content":"        return this.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"quzhetao01"},"content":"    public boolean match(String search) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"quzhetao01"},"content":"        return this.task.contains(search);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"quzhetao01"},"content":"     * Writes the task data to a FileWriter.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"quzhetao01"},"content":"     * @param fw The FileWriter to write task data to.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"quzhetao01"},"content":"     * @throws IOException If there is an issue writing the data.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"quzhetao01"},"content":"    public abstract void writeToFile(FileWriter fw) throws IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"quzhetao01":85}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":" * Represents a ToDo task in the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":" * Todos tasks have no time restrictions","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"     * Constructs a ToDo task with the given task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"     * @param task The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"        super(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"     * Constructs a ToDo task with the given task description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"     * @param task The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"     * @param isDone The completion status of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"    public ToDo(String task, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"        super(task, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"     * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"     * @inheritDoc","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"    public void writeToFile(FileWriter fw) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"quzhetao01"},"content":"        String storedRow \u003d \"T|\" + (this.isDone ? \"1|\" : \"0|\") + this.getTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"quzhetao01"},"content":"        fw.write(storedRow);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"quzhetao01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"quzhetao01":47}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.list.FunnyList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":" * The Ui class is responsible for handling the standard input and output of the Duke Program.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":" * It handles the printing of prompts and responses and takes in input commands from standard input","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"\tprivate Scanner sc;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\t * Constructs a new instance of the Ui class","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t * Initialises an internal Scanner object to read input from standard input","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"\tpublic Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\t\tthis.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\t *  Displays a welcome message from the FUNNY application.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t *  Introduces the application and invites users to interact with it","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\t\tprintLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"        System.out.println(\"\\tHello! I\u0027m FUNNY.\\n\\tWhat can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"        printLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"\t *  Read a command input from the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"\t * @return A string containing the user\u0027s input command.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"\tpublic String readCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"\t\treturn this.sc.nextLine().trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"quzhetao01"},"content":"\t * Displays an error message indicating a loading issue with the tasklist.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"quzhetao01"},"content":"\t * Indicates that a brand new tasklist is initialised.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showLoadingError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"quzhetao01"},"content":"\t\tprintLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(\"\\tNo previous tasklist detected. We have initialised a new tasklist\");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"quzhetao01"},"content":"\t\tprintLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"quzhetao01"},"content":"\t * Displays a message confirming the addition of a new Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"quzhetao01"},"content":"\t * This method prints a formatted message to the console after successfully","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"quzhetao01"},"content":"\t * adding a new Todo task to the tasklist. It includes information about","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"quzhetao01"},"content":"\t * the added task and the updated total number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"quzhetao01"},"content":"\t * @param task The Todo task that was added.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"quzhetao01"},"content":"\t * @param taskList The FunnyList containing the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showAddTodoMessage(Task task, FunnyList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(\"\\t\\t\" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(\"\\tNow you have \" + String.valueOf(taskList.size()) + \" tasks in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"quzhetao01"},"content":"\t * Displays an error message indicating that a wrong command was entered.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"quzhetao01"},"content":"\t * Indicates that a brand new tasklist is initialised.","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showInvalidInput() {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"quzhetao01"},"content":"\t * Displays an error message based on the provided DukeException.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"quzhetao01"},"content":"\t * @param e The DukeException containing the error details.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showError(DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"quzhetao01"},"content":"\t * Displays a message confirming the task to be marked as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"quzhetao01"},"content":"\t * It includes information about the marked task.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"quzhetao01"},"content":"\t * @param task The task to be marked as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showMarkMessage(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(\"\\tNice! I\u0027ve marked this task as done:\\n\\t\\t\" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"quzhetao01"},"content":"\t * Displays a message confirming the task to be unmarked as incomplete.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"quzhetao01"},"content":"\t * It includes information about the unmarked task.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"quzhetao01"},"content":"\t * @param task The task to be marked as incomplete.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showUnmarkMessage(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(\"\\tOk, I\u0027ve marked this task as not done yet:\\n\\t\\t\" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"quzhetao01"},"content":"\t * Displays the items in a FunnyList.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"quzhetao01"},"content":"\t * This method iterates through the provided FunnyList and displays each item","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"quzhetao01"},"content":"\t * formatted as a numbered list.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"quzhetao01"},"content":"\t * @param taskList The FunnyList containing the tasks to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showItems(FunnyList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"quzhetao01"},"content":"\t\tfor (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"quzhetao01"},"content":"\t\t\tSystem.out.println(\"\\t\" + String.valueOf(i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"quzhetao01"},"content":"\t * Displays a message confirming the task to be unmarked as incomplete.","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"quzhetao01"},"content":"\t * It includes information about the unmarked task.","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"quzhetao01"},"content":"\t *","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"quzhetao01"},"content":"\t * @param task The task to be marked as incomplete.","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showDeleteMessage(Task task, FunnyList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(\"\\tNoted. I\u0027ve removed this duke.task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(\"\\t\\t\" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(\"\\tNow you have \" + String.valueOf(taskList.size()) + \" tasks in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showMatchingTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"quzhetao01"},"content":"\t\tif (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"quzhetao01"},"content":"\t\t\tSystem.out.println(\"\\tThere are no matching tasks found based on you search.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"quzhetao01"},"content":"\t\t} else {","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"quzhetao01"},"content":"\t\t\tSystem.out.println(\"\\tHere are the matching tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfor (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\tSystem.out.println(\"\\t\" + String.valueOf(i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"quzhetao01"},"content":"\t\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"quzhetao01"},"content":"\t * Displays a goodbye message confirming the termination of the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"quzhetao01"},"content":"\tpublic void showGoodbyeMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"quzhetao01"},"content":"\t/**","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"quzhetao01"},"content":"\t * Prints a decorative line to the console.","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"quzhetao01"},"content":"\t */","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"quzhetao01"},"content":"\tpublic void printLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.print(\"\\t\");","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"quzhetao01"},"content":"\t\tfor (int i \u003d 0; i \u003c 80; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"quzhetao01"},"content":"\t\t\tSystem.out.print(\"─\");","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"quzhetao01"},"content":"\t\tSystem.out.println();","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"quzhetao01":160}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"import duke.command.WrongCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\tpublic void success_AddTodo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(Parser.parse(\"todo return book\").getClass(), AddTodoCommand.class);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\tpublic void addTodo_noDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"todo \");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"quzhetao01"},"content":"\tpublic void success_AddDeadline() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(Parser.parse(\"deadline return book /by 2023-09-30\").getClass(), AddDeadlineCommand.class);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"quzhetao01"},"content":"\tpublic void addDeadline_noDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"deadline /by 2923-09-30\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"The description of a deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"quzhetao01"},"content":"\tpublic void addDeadline_noDue() {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"deadline return book \");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"A deadline task requires a /by (timedate) descriptor\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"quzhetao01"},"content":"\tpublic void addDeadline_wrongTimeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"deadline return book /by 2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"Please represent time in a proper time format of yyyy-mm-dd\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"quzhetao01"},"content":"\tpublic void success_AddEvent() {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(Parser.parse(\"event read book /from 2023-09-30 /to 2023-10-10\").getClass(),","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"quzhetao01"},"content":"\t\t\t\t\tAddEventCommand.class);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"quzhetao01"},"content":"\tpublic void addEvent_noDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"event /from 2023-09-30 /to 2023-10-10\");","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"The description of an event cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"quzhetao01"},"content":"\tpublic void addEvent_noFrom() {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"event read book \");","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"An event requires a /from (timedate) descriptor\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"quzhetao01"},"content":"\tpublic void addEvent_noTo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"event read book /from 2023-09-30\");","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"An event requires a /to (timedate) descriptor\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"quzhetao01"},"content":"\tpublic void addEvent_wrongTimeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"event read book /from 2 /to 3\");","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"Please represent time in a proper time format of yyyy-mm-dd\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"quzhetao01"},"content":"\tpublic void markTask_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(Parser.parse(\"mark 1\").getClass(), MarkCommand.class);","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"quzhetao01"},"content":"\tpublic void markTask_noIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"mark \");","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"Please select a task using its index\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"quzhetao01"},"content":"\tpublic void markTask_notNumber() {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"mark hello\");","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"Please specify the index of the task (Numbers only)\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"quzhetao01"},"content":"\tpublic void unmarkTask_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(Parser.parse(\"unmark 1\").getClass(), UnmarkCommand.class);","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"quzhetao01"},"content":"\tpublic void unmarkTask_noIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"unmark \");","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"Please select a task using its index\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"quzhetao01"},"content":"\tpublic void unmarkTask_notNumber() {","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"unmark hello\");","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"Please specify the index of the task (Numbers only)\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"quzhetao01"},"content":"\tpublic void deleteTask_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(Parser.parse(\"delete 1\").getClass(), DeleteCommand.class);","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"quzhetao01"},"content":"\tpublic void deleteTask_noIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"delete \");","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"Please select a task using its index\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"quzhetao01"},"content":"\tpublic void deleteTask_notNumber() {","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"quzhetao01"},"content":"\t\t\tParser.parse(\"delete hello\");","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"Please specify the index of the task (Numbers only)\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"quzhetao01"},"content":"\tpublic void listCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(parser.parse(\"list\").getClass(), ListCommand.class);","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"quzhetao01"},"content":"\tpublic void exitCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(parser.parse(\"bye\").getClass(), ExitCommand.class);","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":255,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":256,"author":{"gitId":"quzhetao01"},"content":"\tpublic void wrongCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":257,"author":{"gitId":"quzhetao01"},"content":"\t\tParser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":258,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":259,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(parser.parse(\"hello\").getClass(), WrongCommand.class);","lastModifiedDate":"2023-08-31"},{"lineNumber":260,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":261,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":262,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":263,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":264,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"quzhetao01":264}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"package duke.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"quzhetao01"},"content":"\tpublic void correctFile_load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"quzhetao01"},"content":"\t\tStorage storage \u003d new Storage(\"./test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(storage.load().size(), 3);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"quzhetao01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"quzhetao01"},"content":"\t@Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"quzhetao01"},"content":"\tpublic void wrongFile_load(){","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"quzhetao01"},"content":"\t\tStorage storage \u003d new Storage(\"./wrongTest.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"quzhetao01"},"content":"\t\ttry {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(storage.load().size(), 3);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"quzhetao01"},"content":"\t\t\tfail();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"quzhetao01"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"quzhetao01"},"content":"\t\t\tassertEquals(\"No tasklist record was found\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"quzhetao01"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"quzhetao01"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"quzhetao01"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"quzhetao01":32}},{"path":"test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"T|1|borrow book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"E|1|read book|Oct 1 2023|Oct 10 2023","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"D|0|return book|Sep 1 2023","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"quzhetao01":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"quzhetao01"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"quzhetao01"},"content":"event read book /from 2023-10-01 /to 2023-10-10","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"quzhetao01"},"content":"deadline return book /by 2023-09-01","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"quzhetao01"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"quzhetao01"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"quzhetao01"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"quzhetao01"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"quzhetao01"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"quzhetao01"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"quzhetao01":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"quzhetao01"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"quzhetao01"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"quzhetao01":2,"-":19}}]
