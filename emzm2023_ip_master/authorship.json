[{"path":"src/main/java/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"content":"import java.util.List;"},{"lineNumber":3,"content":"import java.util.Scanner;"},{"lineNumber":4,"content":""},{"lineNumber":5,"content":"public class Chatbot {"},{"lineNumber":6,"content":"    /** Name of the Chatbot. */"},{"lineNumber":7,"content":"    private static final String NAME \u003d \"Bro\";"},{"lineNumber":8,"content":""},{"lineNumber":9,"content":"    /** Scanner for the Chatbot. */"},{"lineNumber":10,"content":"    private Scanner scanner;"},{"lineNumber":11,"content":""},{"lineNumber":12,"content":"    /** TaskList for the Chatbot. */"},{"lineNumber":13,"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":14,"content":""},{"lineNumber":15,"content":"    /** Constructor for the Chatbot. */"},{"lineNumber":16,"content":"    private Chatbot() {"},{"lineNumber":17,"content":"        this.scanner \u003d new Scanner(System.in);"},{"lineNumber":18,"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"content":"    }"},{"lineNumber":20,"content":""},{"lineNumber":21,"content":"    /** Greets the user. */"},{"lineNumber":22,"content":"    private void greet() {"},{"lineNumber":23,"content":"        System.out.println(\"Hello! I\u0027m \" + NAME + \"\\n\" + \"What can I do for you?\\n\");"},{"lineNumber":24,"content":"    }"},{"lineNumber":25,"content":""},{"lineNumber":26,"content":"    /** Causes Chatbot to exit. */"},{"lineNumber":27,"content":"    private void exit() {"},{"lineNumber":28,"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":29,"content":"        this.scanner.close();"},{"lineNumber":30,"content":"    }"},{"lineNumber":31,"content":""},{"lineNumber":32,"content":"    /** Echoes commands entered by user."},{"lineNumber":33,"content":"     *"},{"lineNumber":34,"content":"     * @param input The command entered by the user."},{"lineNumber":35,"content":"     */"},{"lineNumber":36,"content":"    private void echo(String input) {"},{"lineNumber":37,"content":"        System.out.println(input + \"\\n\");"},{"lineNumber":38,"content":"    }"},{"lineNumber":39,"content":""},{"lineNumber":40,"content":"    /** Adds task inputted by user to taskList. Prints out confirmation."},{"lineNumber":41,"content":"     *"},{"lineNumber":42,"content":"     * @param input The command inputted by the user."},{"lineNumber":43,"content":"     */"},{"lineNumber":44,"content":"    private void add(String input) throws InvalidTodoException,"},{"lineNumber":45,"content":"            InvalidDeadlineException, InvalidEventException, InvalidCommandException {"},{"lineNumber":46,"content":"        Task newTask \u003d null;"},{"lineNumber":47,"content":"        String nextInput;"},{"lineNumber":48,"content":""},{"lineNumber":49,"content":"        try {"},{"lineNumber":50,"content":"            nextInput \u003d input.substring(4);"},{"lineNumber":51,"content":""},{"lineNumber":52,"content":"            if (nextInput.isBlank()) {"},{"lineNumber":53,"content":"                throw new InvalidCommandException();"},{"lineNumber":54,"content":"            }"},{"lineNumber":55,"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":56,"content":"            throw new InvalidCommandException();"},{"lineNumber":57,"content":"        }"},{"lineNumber":58,"content":""},{"lineNumber":59,"content":"        if (nextInput.startsWith(\"todo\")) {"},{"lineNumber":60,"content":"            try {"},{"lineNumber":61,"content":"                String description \u003d nextInput.substring(5);"},{"lineNumber":62,"content":""},{"lineNumber":63,"content":"                if (description.isBlank()) {"},{"lineNumber":64,"content":"                    throw new InvalidTodoException();"},{"lineNumber":65,"content":"                } else {"},{"lineNumber":66,"content":"                    newTask \u003d new Todo(description);"},{"lineNumber":67,"content":"                }"},{"lineNumber":68,"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":69,"content":"                throw new InvalidTodoException();"},{"lineNumber":70,"content":"            }"},{"lineNumber":71,"content":"        } else if (nextInput.startsWith(\"deadline\")) {"},{"lineNumber":72,"content":"            try {"},{"lineNumber":73,"content":"                int by \u003d nextInput.indexOf(\"/by\");"},{"lineNumber":74,"content":"                String description \u003d nextInput.substring(9, by - 1);"},{"lineNumber":75,"content":"                String deadline \u003d nextInput.substring(by + 4);"},{"lineNumber":76,"content":""},{"lineNumber":77,"content":"                if (description.isBlank() || deadline.isBlank()) {"},{"lineNumber":78,"content":"                    throw new InvalidDeadlineException();"},{"lineNumber":79,"content":"                } else {"},{"lineNumber":80,"content":"                    newTask \u003d new Deadline(description, deadline);"},{"lineNumber":81,"content":"                }"},{"lineNumber":82,"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":83,"content":"                throw new InvalidDeadlineException();"},{"lineNumber":84,"content":"            }"},{"lineNumber":85,"content":"        } else if (nextInput.startsWith(\"event\")) {"},{"lineNumber":86,"content":"            try {"},{"lineNumber":87,"content":"                int from \u003d nextInput.indexOf(\"/from\");"},{"lineNumber":88,"content":"                int to \u003d nextInput.indexOf(\"/to\");"},{"lineNumber":89,"content":"                String description \u003d nextInput.substring(6, from - 1);"},{"lineNumber":90,"content":"                String start \u003d nextInput.substring(from + 6, to - 1);"},{"lineNumber":91,"content":"                String end \u003d nextInput.substring(to + 4);"},{"lineNumber":92,"content":""},{"lineNumber":93,"content":"                if (description.isBlank() || start.isBlank() || end.isBlank()) {"},{"lineNumber":94,"content":"                    throw new InvalidEventException();"},{"lineNumber":95,"content":"                } else {"},{"lineNumber":96,"content":"                    newTask \u003d new Event(description, start, end);"},{"lineNumber":97,"content":"                }"},{"lineNumber":98,"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":99,"content":"                throw new InvalidEventException();"},{"lineNumber":100,"content":"            }"},{"lineNumber":101,"content":"        } else {"},{"lineNumber":102,"content":"            throw new InvalidCommandException();"},{"lineNumber":103,"content":"        }"},{"lineNumber":104,"content":""},{"lineNumber":105,"content":"        if (newTask !\u003d null) {"},{"lineNumber":106,"content":"            this.taskList.add(newTask);"},{"lineNumber":107,"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTask);"},{"lineNumber":108,"content":"            System.out.println(\"Now you have \" + this.taskList.size() + \" tasks in the list.\\n\");"},{"lineNumber":109,"content":"        }"},{"lineNumber":110,"content":"    }"},{"lineNumber":111,"content":""},{"lineNumber":112,"content":"    /** Lists out all the tasks in taskList. */"},{"lineNumber":113,"content":"    private void listTasks() {"},{"lineNumber":114,"content":"        System.out.println(\"Here are the tasks in your list:\\n\");"},{"lineNumber":115,"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":116,"content":"            int num \u003d i + 1;"},{"lineNumber":117,"content":"            System.out.println(num +\". \" + taskList.get(i).toString());"},{"lineNumber":118,"content":"        }"},{"lineNumber":119,"content":"        System.out.print(\"\\n\");"},{"lineNumber":120,"content":"    }"},{"lineNumber":121,"content":""},{"lineNumber":122,"content":"    /** Marks specified task as done. Prints confirmation."},{"lineNumber":123,"content":"     *"},{"lineNumber":124,"content":"     * @param input The user input."},{"lineNumber":125,"content":"     */"},{"lineNumber":126,"content":"    private void markTaskStatusTrue(String input) throws InvalidTaskNumberException, InvalidCommandException {"},{"lineNumber":127,"content":"        int taskIndex;"},{"lineNumber":128,"content":"        try {"},{"lineNumber":129,"content":"            String nextInput \u003d input.substring(5);"},{"lineNumber":130,"content":"            if (nextInput.isBlank()) {"},{"lineNumber":131,"content":"                throw new InvalidCommandException();"},{"lineNumber":132,"content":"            } else {"},{"lineNumber":133,"content":"                taskIndex \u003d Integer.parseInt(nextInput);"},{"lineNumber":134,"content":"            }"},{"lineNumber":135,"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":136,"content":"            throw new InvalidCommandException();"},{"lineNumber":137,"content":"        }"},{"lineNumber":138,"content":""},{"lineNumber":139,"content":"        if (taskIndex \u003e this.taskList.size()) {"},{"lineNumber":140,"content":"            throw new InvalidTaskNumberException(taskIndex);"},{"lineNumber":141,"content":"        } else {"},{"lineNumber":142,"content":"            Task task \u003d taskList.get(taskIndex - 1);"},{"lineNumber":143,"content":"            task.markStatus(true);"},{"lineNumber":144,"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task + \"\\n\");"},{"lineNumber":145,"content":"        }"},{"lineNumber":146,"content":"    }"},{"lineNumber":147,"content":""},{"lineNumber":148,"content":"    /** Marks specified task as undone. Prints confirmation."},{"lineNumber":149,"content":"     *"},{"lineNumber":150,"content":"     * @param input The user input."},{"lineNumber":151,"content":"     */"},{"lineNumber":152,"content":"    private void markTaskStatusFalse(String input) throws InvalidTaskNumberException, InvalidCommandException {"},{"lineNumber":153,"content":"        int taskIndex;"},{"lineNumber":154,"content":"        try {"},{"lineNumber":155,"content":"            String nextInput \u003d input.substring(7);"},{"lineNumber":156,"content":"            if (nextInput.isBlank()) {"},{"lineNumber":157,"content":"                throw new InvalidCommandException();"},{"lineNumber":158,"content":"            } else {"},{"lineNumber":159,"content":"                taskIndex \u003d Integer.parseInt(nextInput);"},{"lineNumber":160,"content":"            }"},{"lineNumber":161,"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":162,"content":"            throw new InvalidCommandException();"},{"lineNumber":163,"content":"        }"},{"lineNumber":164,"content":""},{"lineNumber":165,"content":"        if (taskIndex \u003e this.taskList.size()) {"},{"lineNumber":166,"content":"            throw new InvalidTaskNumberException(taskIndex);"},{"lineNumber":167,"content":"        } else {"},{"lineNumber":168,"content":"            Task task \u003d taskList.get(taskIndex - 1);"},{"lineNumber":169,"content":"            task.markStatus(false);"},{"lineNumber":170,"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task + \"\\n\");"},{"lineNumber":171,"content":"        }"},{"lineNumber":172,"content":"    }"},{"lineNumber":173,"content":""},{"lineNumber":174,"content":"    /** Deletes the specified task in the list."},{"lineNumber":175,"content":"     *"},{"lineNumber":176,"content":"     * @param input The user input."},{"lineNumber":177,"content":"     */"},{"lineNumber":178,"content":"    public void delete(String input) throws InvalidTaskNumberException, InvalidCommandException {"},{"lineNumber":179,"content":"        int taskIndex;"},{"lineNumber":180,"content":"        try {"},{"lineNumber":181,"content":"            String nextInput \u003d input.substring(7);"},{"lineNumber":182,"content":"            if (nextInput.isBlank()) {"},{"lineNumber":183,"content":"                throw new InvalidCommandException();"},{"lineNumber":184,"content":"            } else {"},{"lineNumber":185,"content":"                taskIndex \u003d Integer.parseInt(nextInput);"},{"lineNumber":186,"content":"            }"},{"lineNumber":187,"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":188,"content":"            throw new InvalidCommandException();"},{"lineNumber":189,"content":"        }"},{"lineNumber":190,"content":""},{"lineNumber":191,"content":"        Task removed;"},{"lineNumber":192,"content":"        try {"},{"lineNumber":193,"content":"            removed \u003d this.taskList.remove(taskIndex - 1);"},{"lineNumber":194,"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":195,"content":"            throw new InvalidTaskNumberException(taskIndex);"},{"lineNumber":196,"content":"        }"},{"lineNumber":197,"content":""},{"lineNumber":198,"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + removed + \"\\n\");"},{"lineNumber":199,"content":"    }"},{"lineNumber":200,"content":""},{"lineNumber":201,"content":"    /** Reads user input. Exits if user input is \"bye\","},{"lineNumber":202,"content":"     * lists tasks if input is \"list\", else, echoes commands. */"},{"lineNumber":203,"content":"    private void readInput() {"},{"lineNumber":204,"content":"        System.out.print(\"\u003e \");"},{"lineNumber":205,"content":"        String userInput \u003d this.scanner.nextLine();"},{"lineNumber":206,"content":""},{"lineNumber":207,"content":"        try {"},{"lineNumber":208,"content":"            if (userInput.equals(\"list\")) {"},{"lineNumber":209,"content":"                this.listTasks();"},{"lineNumber":210,"content":"            } else if (userInput.equals(\"bye\")) {"},{"lineNumber":211,"content":"                this.exit();"},{"lineNumber":212,"content":"            } else if (userInput.startsWith(\"add \")) {"},{"lineNumber":213,"content":"                this.add(userInput);"},{"lineNumber":214,"content":"            } else if (userInput.startsWith(\"mark \")) {"},{"lineNumber":215,"content":"                this.markTaskStatusTrue(userInput);"},{"lineNumber":216,"content":"            } else if (userInput.startsWith(\"unmark \")) {"},{"lineNumber":217,"content":"                this.markTaskStatusFalse(userInput);"},{"lineNumber":218,"content":"            } else if (userInput.startsWith(\"delete \")) {"},{"lineNumber":219,"content":"                this.delete(userInput);"},{"lineNumber":220,"content":"            } else {"},{"lineNumber":221,"content":"                throw new InvalidCommandException();"},{"lineNumber":222,"content":"            }"},{"lineNumber":223,"content":"        } catch (Exception e) {"},{"lineNumber":224,"content":"            System.out.println(e.getMessage() + \"\\n\");"},{"lineNumber":225,"content":"        } finally {"},{"lineNumber":226,"content":"            if (!userInput.equals(\"bye\")) {"},{"lineNumber":227,"content":"                this.readInput();"},{"lineNumber":228,"content":"            }"},{"lineNumber":229,"content":"        }"},{"lineNumber":230,"content":"    }"},{"lineNumber":231,"content":""},{"lineNumber":232,"content":"    public static void main(String[] args) {"},{"lineNumber":233,"content":"        Chatbot chatbot \u003d new Chatbot();"},{"lineNumber":234,"content":"        chatbot.greet();"},{"lineNumber":235,"content":"        chatbot.readInput();"},{"lineNumber":236,"content":"    }"},{"lineNumber":237,"content":"}"}],"authorContributionMap":{"null":236,"emzm2023":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"    /** String deadline for Deadline. */","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"    /** Constructor for Deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"     * @param by Deadline for Deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"    /** toString method for Deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"emzm2023":23}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"    /** Start time of Event. */","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"    protected String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    /** End time of Event. */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"    protected String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"    /** Constructor for Event.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"     * @param start Start time of Event.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"     * @param end End time of Event.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"    /** toString method for Event.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"     * @return String representation of Event.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"        return \"[D]\" + super.toString() + \" (from: \" + start + \" to: \"+ end + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"emzm2023":27}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"    public InvalidCommandException(){","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"        super(\"OOPS!!! Please type a valid command!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"emzm2023":5}},{"path":"src/main/java/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"        super(\"OOPS!!! Please specify the description and deadline for this Deadline!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"emzm2023":5}},{"path":"src/main/java/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"        super(\"OOPS!!! Please specify the description, start, and end time for this Event!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"emzm2023":5}},{"path":"src/main/java/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"public class InvalidTaskNumberException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"    public InvalidTaskNumberException(int index){","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"        super(\"OOPS!!! There is no task \" + index + \"!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"emzm2023":5}},{"path":"src/main/java/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"public class InvalidTodoException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"    public InvalidTodoException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"        super(\"OOPS!!! Please specify the description for this Todo!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"emzm2023":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"    /** The description of the task. */","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"    /** The done status of the task. */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"    /** Constructor for a task.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"     * @param description The task description.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"     * */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"    /** Returns an X if the task is done.","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"     * @return A string showing if the task has been done or not.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"    /** Prints out task done status along with the task description.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"emzm2023"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"emzm2023"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"emzm2023"},"content":"    /** Marks the task done status with the boolean argument.","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"     * @param status The boolean value to represent the task done status with.","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"emzm2023"},"content":"     * @return Returns true if successful.","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"emzm2023"},"content":"    public boolean markStatus(boolean status) {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"emzm2023"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"emzm2023"},"content":"        return true;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"emzm2023":42}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"    /** Constructor for Todo.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"    /** toString method for Todo.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"     * @return String representation of Todo.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"emzm2023":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"hi","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"add","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"add","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"add todo","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"add todo study","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"add deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"add deadline read","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"add deadline read /by","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"add deadline /by april","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"add deadline read /by april","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"add event","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"add event shop","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"add event shop /from","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"add event shop /from monday","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"add event shop /from monday /to tuesday","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"mark","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"unmark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"unmark","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"delete 5","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"emzm2023":25}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"java -classpath ../bin Chatbot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"## convert to UNIX format","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"dos2unix ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"dos2unix EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":35,"emzm2023":4}}]
