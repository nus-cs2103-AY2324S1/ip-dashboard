[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"    mainClass.set(\"chatbot.Chatbot\")","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"    archiveBaseName \u003d \"chatbot\"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"emzm2023":2}},{"path":"src/main/java/chatbot/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"content":""},{"lineNumber":3,"content":"import chatbot.exception.*;"},{"lineNumber":4,"content":"import chatbot.task.Deadline;"},{"lineNumber":5,"content":"import chatbot.task.Event;"},{"lineNumber":6,"content":"import chatbot.task.Task;"},{"lineNumber":7,"content":"import chatbot.task.Todo;"},{"lineNumber":8,"content":""},{"lineNumber":9,"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":10,"content":"import java.util.List;"},{"lineNumber":11,"content":""},{"lineNumber":12,"content":"public class Chatbot {"},{"lineNumber":13,"content":"    /** Name of the Chatbot. */"},{"lineNumber":14,"content":"    private static final String NAME \u003d \"Bro\";"},{"lineNumber":15,"content":""},{"lineNumber":16,"content":"    /** chatbot.TaskList for the Chatbot. */"},{"lineNumber":17,"content":"    private TaskList taskList;"},{"lineNumber":18,"content":""},{"lineNumber":19,"content":"    /** chatbot.Ui for the Chatbot. */"},{"lineNumber":20,"content":"    private Ui ui;"},{"lineNumber":21,"content":""},{"lineNumber":22,"content":"    /** chatbot.Storage for the Chatbot. */"},{"lineNumber":23,"content":"    private Storage storage;"},{"lineNumber":24,"content":""},{"lineNumber":25,"content":"    /** chatbot.Parser for the Chatbot. */"},{"lineNumber":26,"content":"    private Parser parser;"},{"lineNumber":27,"content":""},{"lineNumber":28,"content":"    /**"},{"lineNumber":29,"content":"     * Constructor for the Chatbot."},{"lineNumber":30,"content":"     */"},{"lineNumber":31,"content":"    private Chatbot() {"},{"lineNumber":32,"content":"        this.taskList \u003d new TaskList();"},{"lineNumber":33,"content":"        this.ui \u003d new Ui(NAME);"},{"lineNumber":34,"content":"        this.storage \u003d new Storage();"},{"lineNumber":35,"content":"        this.parser \u003d new Parser();"},{"lineNumber":36,"content":"    }"},{"lineNumber":37,"content":""},{"lineNumber":38,"content":"    /**"},{"lineNumber":39,"content":"     * Greets the user."},{"lineNumber":40,"content":"     */"},{"lineNumber":41,"content":"    private void greet() {"},{"lineNumber":42,"content":"        this.ui.greet();"},{"lineNumber":43,"content":"    }"},{"lineNumber":44,"content":""},{"lineNumber":45,"content":"    /**"},{"lineNumber":46,"content":"     * Causes Chatbot to exit."},{"lineNumber":47,"content":"     */"},{"lineNumber":48,"content":"    private void exit() {"},{"lineNumber":49,"content":"        this.ui.exit();"},{"lineNumber":50,"content":"    }"},{"lineNumber":51,"content":""},{"lineNumber":52,"content":"    /**"},{"lineNumber":53,"content":"     * Adds task inputted by user to taskList. Prints out confirmation."},{"lineNumber":54,"content":"     *"},{"lineNumber":55,"content":"     * @param input The command inputted by the user."},{"lineNumber":56,"content":"     * @throws InvalidTodoException If format of todo entered is invalid."},{"lineNumber":57,"content":"     * @throws InvalidDeadlineException If format of deadline entered is invalid."},{"lineNumber":58,"content":"     * @throws InvalidEventException If format of event entered is invalid."},{"lineNumber":59,"content":"     * @throws InvalidCommandException If format of command entered is invalid."},{"lineNumber":60,"content":"     */"},{"lineNumber":61,"content":"    private void add(String input) throws InvalidTodoException,"},{"lineNumber":62,"content":"            InvalidDeadlineException, InvalidEventException, InvalidCommandException {"},{"lineNumber":63,"content":"        Task newTask;"},{"lineNumber":64,"content":"        List\u003cString\u003e taskArr \u003d this.parser.parseAdd(input);"},{"lineNumber":65,"content":"        String type \u003d taskArr.get(0);"},{"lineNumber":66,"content":""},{"lineNumber":67,"content":"        if (type.equals(\"todo\")) {"},{"lineNumber":68,"content":"            String description \u003d taskArr.get(1);"},{"lineNumber":69,"content":"            newTask \u003d new Todo(description);"},{"lineNumber":70,"content":"        } else if (type.equals(\"deadline\")) {"},{"lineNumber":71,"content":"            try {"},{"lineNumber":72,"content":"                String description \u003d taskArr.get(1);"},{"lineNumber":73,"content":"                String deadline \u003d taskArr.get(2);"},{"lineNumber":74,"content":"                newTask \u003d new Deadline(description, deadline);"},{"lineNumber":75,"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":76,"content":"                throw new InvalidDeadlineException();"},{"lineNumber":77,"content":"            }"},{"lineNumber":78,"content":"        } else {"},{"lineNumber":79,"content":"            try {"},{"lineNumber":80,"content":"                String description \u003d taskArr.get(1);"},{"lineNumber":81,"content":"                String start \u003d taskArr.get(2);"},{"lineNumber":82,"content":"                String end \u003d taskArr.get(3);"},{"lineNumber":83,"content":""},{"lineNumber":84,"content":"                newTask \u003d new Event(description, start, end);"},{"lineNumber":85,"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":86,"content":"                throw new InvalidEventException();"},{"lineNumber":87,"content":"            }"},{"lineNumber":88,"content":"        }"},{"lineNumber":89,"content":""},{"lineNumber":90,"content":"        this.taskList.add(newTask);"},{"lineNumber":91,"content":"        this.ui.printAddConfirmation(this.taskList);"},{"lineNumber":92,"content":"    }"},{"lineNumber":93,"content":""},{"lineNumber":94,"content":"    /**"},{"lineNumber":95,"content":"     * Lists out all the tasks in taskList."},{"lineNumber":96,"content":"     */"},{"lineNumber":97,"content":"    private void listTasks() {"},{"lineNumber":98,"content":"        this.ui.listTasks(this.taskList);"},{"lineNumber":99,"content":"    }"},{"lineNumber":100,"content":""},{"lineNumber":101,"content":"    /**"},{"lineNumber":102,"content":"     * Marks specified task as done. Prints confirmation."},{"lineNumber":103,"content":"     *"},{"lineNumber":104,"content":"     * @param input The user input."},{"lineNumber":105,"content":"     * @throws InvalidTaskNumberException If there is no task with the task number in the taskList."},{"lineNumber":106,"content":"     * @throws InvalidCommandException If format of command entered is invalid."},{"lineNumber":107,"content":"     */"},{"lineNumber":108,"content":"    private void markTaskStatusTrue(String input) throws InvalidTaskNumberException, InvalidCommandException {"},{"lineNumber":109,"content":"        int taskNum \u003d parser.parseMarkTaskStatusTrue(input);"},{"lineNumber":110,"content":""},{"lineNumber":111,"content":"        if (taskNum \u003e this.taskList.size()) {"},{"lineNumber":112,"content":"            throw new InvalidTaskNumberException(taskNum);"},{"lineNumber":113,"content":"        } else {"},{"lineNumber":114,"content":"            taskList.markTaskTrue(taskNum - 1);"},{"lineNumber":115,"content":"            this.ui.printMarkDoneConfirmation(taskNum - 1, this.taskList);"},{"lineNumber":116,"content":"        }"},{"lineNumber":117,"content":"    }"},{"lineNumber":118,"content":""},{"lineNumber":119,"content":"    /**"},{"lineNumber":120,"content":"     * Marks specified task as undone. Prints confirmation."},{"lineNumber":121,"content":"     *"},{"lineNumber":122,"content":"     * @param input The user input."},{"lineNumber":123,"content":"     * @throws InvalidTaskNumberException If there is no task with the task number in the taskList."},{"lineNumber":124,"content":"     * @throws InvalidCommandException If format of command entered is invalid."},{"lineNumber":125,"content":"     */"},{"lineNumber":126,"content":"    private void markTaskStatusFalse(String input) throws InvalidTaskNumberException, InvalidCommandException {"},{"lineNumber":127,"content":"        int taskNum \u003d parser.parseMarkTaskStatusFalse(input);"},{"lineNumber":128,"content":""},{"lineNumber":129,"content":"        if (taskNum \u003e this.taskList.size()) {"},{"lineNumber":130,"content":"            throw new InvalidTaskNumberException(taskNum);"},{"lineNumber":131,"content":"        } else {"},{"lineNumber":132,"content":"            taskList.markTaskFalse(taskNum - 1);"},{"lineNumber":133,"content":"            this.ui.printMarkUndoneConfirmation(taskNum - 1, this.taskList);"},{"lineNumber":134,"content":"        }"},{"lineNumber":135,"content":"    }"},{"lineNumber":136,"content":""},{"lineNumber":137,"content":"    /**"},{"lineNumber":138,"content":"     * Deletes the specified task in the list."},{"lineNumber":139,"content":"     *"},{"lineNumber":140,"content":"     * @param input The user input."},{"lineNumber":141,"content":"     * @throws InvalidTaskNumberException If there is no task with the task number in the taskList."},{"lineNumber":142,"content":"     * @throws InvalidCommandException If format of command entered is invalid."},{"lineNumber":143,"content":"     */"},{"lineNumber":144,"content":"    public void delete(String input) throws InvalidTaskNumberException, InvalidCommandException {"},{"lineNumber":145,"content":"        int taskNum \u003d parser.parseDelete(input);"},{"lineNumber":146,"content":"        this.taskList.delete(taskNum - 1);"},{"lineNumber":147,"content":"        this.ui.printDeleteConfirmation(taskNum - 1, this.taskList);"},{"lineNumber":148,"content":"    }"},{"lineNumber":149,"content":""},{"lineNumber":150,"content":"    /** Lists out the tasks in the taskList with the matching keyword."},{"lineNumber":151,"content":"     *"},{"lineNumber":152,"content":"     * @param input The user input."},{"lineNumber":153,"content":"     * @throws InvalidCommandException If format of command entered is invalid."},{"lineNumber":154,"content":"     */"},{"lineNumber":155,"content":"    public void find(String input) throws InvalidCommandException {"},{"lineNumber":156,"content":"        String keyword \u003d parser.parseFind(input);"},{"lineNumber":157,"content":"        this.ui.listMatchingTasks(keyword, this.taskList.find(keyword));"},{"lineNumber":158,"content":"    }"},{"lineNumber":159,"content":""},{"lineNumber":160,"content":"    /**"},{"lineNumber":161,"content":"     * Loads file input and adds respective tasks into chatbot taskList."},{"lineNumber":162,"content":"     */"},{"lineNumber":163,"content":"    private void loadTasksFromFile() {"},{"lineNumber":164,"content":"        try {"},{"lineNumber":165,"content":"            this.storage.loadTasksFromFile(this.taskList);"},{"lineNumber":166,"content":"        } catch (Exception e) {"},{"lineNumber":167,"content":"            this.ui.printExceptionMessage(e);"},{"lineNumber":168,"content":"        }"},{"lineNumber":169,"content":"    }"},{"lineNumber":170,"content":""},{"lineNumber":171,"content":"    /**"},{"lineNumber":172,"content":"     * Reads user input. Exits if user input is \"bye\", lists tasks if input is \"list\", else, echoes commands."},{"lineNumber":173,"content":"     * Update current state of tasks to data file."},{"lineNumber":174,"content":"     */"},{"lineNumber":175,"content":"    private void readInput() {"},{"lineNumber":176,"content":"        String userInput \u003d this.ui.getUserInput();"},{"lineNumber":177,"content":""},{"lineNumber":178,"content":"        try {"},{"lineNumber":179,"content":"            if (userInput.equals(\"list\")) {"},{"lineNumber":180,"content":"                this.listTasks();"},{"lineNumber":181,"content":"            } else if (userInput.equals(\"bye\")) {"},{"lineNumber":182,"content":"                this.exit();"},{"lineNumber":183,"content":"            } else if (userInput.startsWith(\"add \")) {"},{"lineNumber":184,"content":"                this.add(userInput);"},{"lineNumber":185,"content":"            } else if (userInput.startsWith(\"mark \")) {"},{"lineNumber":186,"content":"                this.markTaskStatusTrue(userInput);"},{"lineNumber":187,"content":"            } else if (userInput.startsWith(\"unmark \")) {"},{"lineNumber":188,"content":"                this.markTaskStatusFalse(userInput);"},{"lineNumber":189,"content":"            } else if (userInput.startsWith(\"delete \")) {"},{"lineNumber":190,"content":"                this.delete(userInput);"},{"lineNumber":191,"content":"            } else if (userInput.startsWith(\"find \")) {"},{"lineNumber":192,"content":"                this.find(userInput);"},{"lineNumber":193,"content":"            } else {"},{"lineNumber":194,"content":"                throw new InvalidCommandException();"},{"lineNumber":195,"content":"            }"},{"lineNumber":196,"content":"            this.saveTasks();"},{"lineNumber":197,"content":"        } catch (Exception e) {"},{"lineNumber":198,"content":"            this.ui.printExceptionMessage(e);"},{"lineNumber":199,"content":"        } finally {"},{"lineNumber":200,"content":"            if (!userInput.equals(\"bye\")) {"},{"lineNumber":201,"content":"                this.readInput();"},{"lineNumber":202,"content":"            }"},{"lineNumber":203,"content":"        }"},{"lineNumber":204,"content":"    }"},{"lineNumber":205,"content":""},{"lineNumber":206,"content":"    /**"},{"lineNumber":207,"content":"     * Saves current taskList to data file."},{"lineNumber":208,"content":"     */"},{"lineNumber":209,"content":"    public void saveTasks() {"},{"lineNumber":210,"content":"        try {"},{"lineNumber":211,"content":"            this.storage.saveTasks(this.taskList);"},{"lineNumber":212,"content":"        } catch (Exception e) {"},{"lineNumber":213,"content":"            this.ui.printExceptionMessage(e);"},{"lineNumber":214,"content":"        }"},{"lineNumber":215,"content":"    }"},{"lineNumber":216,"content":""},{"lineNumber":217,"content":"    public static void main(String[] args) {"},{"lineNumber":218,"content":"        Chatbot chatbot \u003d new Chatbot();"},{"lineNumber":219,"content":"        chatbot.loadTasksFromFile();"},{"lineNumber":220,"content":"        chatbot.greet();"},{"lineNumber":221,"content":"        chatbot.readInput();"},{"lineNumber":222,"content":"    }"},{"lineNumber":223,"content":"}"}],"authorContributionMap":{"null":222,"emzm2023":1}},{"path":"src/main/java/chatbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"import chatbot.exception.InvalidTodoException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"import chatbot.exception.InvalidEventException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"import chatbot.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"import chatbot.exception.InvalidCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"import chatbot.exception.InvalidTaskNumberException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"     * Parses user input for add method. If input is appropriate, returns an array containing the type of task,","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"     * description, and other parameters, in that order.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"     * @param input The command inputted by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"     * @returns An array containing the type and details of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidTodoException If format of todo entered is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidDeadlineException If format of deadline entered is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidEventException If format of event entered is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidCommandException If format of command entered is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"    public List\u003cString\u003e parseAdd(String input) throws InvalidTodoException,","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"            InvalidDeadlineException, InvalidEventException, InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"        List\u003cString\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"        String nextInput;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"emzm2023"},"content":"            nextInput \u003d input.substring(4);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"emzm2023"},"content":"            if (nextInput.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"emzm2023"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"emzm2023"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"emzm2023"},"content":"        if (nextInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"emzm2023"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"emzm2023"},"content":"                String description \u003d nextInput.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"emzm2023"},"content":"                if (description.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"emzm2023"},"content":"                    throw new InvalidTodoException();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"emzm2023"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"emzm2023"},"content":"                    arr.add(0, \"todo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"emzm2023"},"content":"                    arr.add(1, description);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"emzm2023"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"emzm2023"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"emzm2023"},"content":"                throw new InvalidTodoException();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"emzm2023"},"content":"        } else if (nextInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"emzm2023"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"emzm2023"},"content":"                int by \u003d nextInput.indexOf(\"/by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"emzm2023"},"content":"                String description \u003d nextInput.substring(9, by - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"emzm2023"},"content":"                String deadline \u003d nextInput.substring(by + 4);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"emzm2023"},"content":"                if (description.isBlank() || deadline.isBlank()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"emzm2023"},"content":"                    throw new InvalidDeadlineException();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"emzm2023"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"emzm2023"},"content":"                    arr.add(0,\"deadline\");","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"emzm2023"},"content":"                    arr.add(1, description);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"emzm2023"},"content":"                    arr.add(2, deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"emzm2023"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"emzm2023"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"emzm2023"},"content":"                throw new InvalidDeadlineException();","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"emzm2023"},"content":"        } else if (nextInput.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"emzm2023"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"emzm2023"},"content":"                int from \u003d nextInput.indexOf(\"/from\");","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"emzm2023"},"content":"                int to \u003d nextInput.indexOf(\"/to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"emzm2023"},"content":"                String description \u003d nextInput.substring(6, from - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"emzm2023"},"content":"                String start \u003d nextInput.substring(from + 6, to - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"emzm2023"},"content":"                String end \u003d nextInput.substring(to + 4);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"emzm2023"},"content":"                if (description.isBlank() || start.isBlank() || end.isBlank()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"emzm2023"},"content":"                    throw new InvalidEventException();","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"emzm2023"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"emzm2023"},"content":"                    arr.add(0, \"event\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"emzm2023"},"content":"                    arr.add(1, description);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"emzm2023"},"content":"                    arr.add(2, start);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"emzm2023"},"content":"                    arr.add(3, end);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"emzm2023"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"emzm2023"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"emzm2023"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"emzm2023"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"emzm2023"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"emzm2023"},"content":"        return arr;","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"emzm2023"},"content":"     * Parses input for markTaskStatusTrue method. If input is appropriate, returns an integer","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"emzm2023"},"content":"     * representing the number of the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"emzm2023"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"emzm2023"},"content":"     * @returns The number of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidTaskNumberException If there is no task with the task number in the taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidCommandException If format of command entered is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"emzm2023"},"content":"    public int parseMarkTaskStatusTrue(String input) throws InvalidTaskNumberException, InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"emzm2023"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"emzm2023"},"content":"            String nextInput \u003d input.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"emzm2023"},"content":"            if (nextInput.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"emzm2023"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"emzm2023"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"emzm2023"},"content":"                taskIndex \u003d Integer.parseInt(nextInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"emzm2023"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"emzm2023"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"emzm2023"},"content":"        return taskIndex;","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"emzm2023"},"content":"     * Parses input for markTaskStatusFalse method. If input is appropriate, returns an integer","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"emzm2023"},"content":"     * representing the number of the task to be unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"emzm2023"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"emzm2023"},"content":"     * @returns The number of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidTaskNumberException If there is no task with the task number in the taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidCommandException If format of command entered is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"emzm2023"},"content":"    public int parseMarkTaskStatusFalse(String input) throws InvalidTaskNumberException, InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"emzm2023"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"emzm2023"},"content":"            String nextInput \u003d input.substring(7);","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"emzm2023"},"content":"            if (nextInput.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"emzm2023"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"emzm2023"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"emzm2023"},"content":"                taskIndex \u003d Integer.parseInt(nextInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"emzm2023"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"emzm2023"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"emzm2023"},"content":"        return taskIndex;","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"emzm2023"},"content":"     * Parses input for the find method. If input is appropriate, returns a String of the keyword to match with.","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"emzm2023"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"emzm2023"},"content":"     * @returns The String keyword to search for.","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidCommandException If format of command entered is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"emzm2023"},"content":"    public String parseFind(String input) throws InvalidCommandException {","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"emzm2023"},"content":"        String keyword;","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"emzm2023"},"content":"            keyword \u003d input.substring(5);","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"emzm2023"},"content":"            if (keyword.isBlank()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"emzm2023"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"emzm2023"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"emzm2023"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"emzm2023"},"content":"        return keyword;","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"emzm2023"},"content":"     * Parses input for the delete method. If input is appropriate, returns an integer","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"emzm2023"},"content":"     * representing the number of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"emzm2023"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"emzm2023"},"content":"     * @returns The number of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidTaskNumberException If there is no task with the task number in the taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidCommandException If format of command entered is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"emzm2023"},"content":"    public int parseDelete(String input) throws InvalidTaskNumberException, InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"emzm2023"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"emzm2023"},"content":"            String nextInput \u003d input.substring(7);","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"emzm2023"},"content":"            if (nextInput.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"emzm2023"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"emzm2023"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"emzm2023"},"content":"                taskIndex \u003d Integer.parseInt(nextInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"emzm2023"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"emzm2023"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"emzm2023"},"content":"        return taskIndex;","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"emzm2023":184}},{"path":"src/main/java/chatbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"import chatbot.exception.InvalidFileFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"import chatbot.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"import chatbot.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"import chatbot.task.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"     * Loads file input and adds respective tasks into chatbot taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"    public void loadTasksFromFile(TaskList taskList) throws FileNotFoundException, InvalidFileFormatException,","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"            IOException, SecurityException {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"            directory.mkdir();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"        File data \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"        if (data.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"emzm2023"},"content":"            Scanner dataScanner \u003d new Scanner(data);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"emzm2023"},"content":"            while (dataScanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"                String task \u003d dataScanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"emzm2023"},"content":"                if (task.startsWith(\"[T]\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"emzm2023"},"content":"                    String description \u003d task.substring(7);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"                    if (description.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"emzm2023"},"content":"                        throw new InvalidFileFormatException();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"emzm2023"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"emzm2023"},"content":"                        taskList.add(new Todo(description));","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"emzm2023"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"emzm2023"},"content":"                } else if (task.startsWith(\"[D]\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"emzm2023"},"content":"                    int by \u003d task.indexOf(\"(by: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"emzm2023"},"content":"                    String description \u003d task.substring(7, by - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"emzm2023"},"content":"                    LocalDate deadline \u003d LocalDate.parse(task.substring(by + 5, task.length() - 1),","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"emzm2023"},"content":"                            DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"emzm2023"},"content":"                    if (description.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"emzm2023"},"content":"                        throw new InvalidFileFormatException();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"emzm2023"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"emzm2023"},"content":"                        taskList.add(new Deadline(description, deadline));","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"emzm2023"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"emzm2023"},"content":"                } else if (task.startsWith(\"[E]\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"emzm2023"},"content":"                    int from \u003d task.indexOf(\"(from: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"emzm2023"},"content":"                    int to \u003d task.indexOf(\"to: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"emzm2023"},"content":"                    String description \u003d task.substring(7, from - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"emzm2023"},"content":"                    LocalDate start \u003d LocalDate.parse(task.substring(from + 7, to - 1),","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"emzm2023"},"content":"                            DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"emzm2023"},"content":"                    LocalDate end \u003d LocalDate.parse(task.substring(to + 4, task.length() - 1),","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"emzm2023"},"content":"                            DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"emzm2023"},"content":"                    if (description.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"emzm2023"},"content":"                        throw new InvalidFileFormatException();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"emzm2023"},"content":"                    } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"emzm2023"},"content":"                        taskList.add(new Event(description, start, end));","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"emzm2023"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"emzm2023"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"emzm2023"},"content":"                    throw new InvalidFileFormatException();","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"emzm2023"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"emzm2023"},"content":"            dataScanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"emzm2023"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"emzm2023"},"content":"            data.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"emzm2023"},"content":"     * Saves current taskList to data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"emzm2023"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"emzm2023"},"content":"        FileWriter fw \u003d new FileWriter(\"data/tasks.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"emzm2023"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"emzm2023"},"content":"            fw.write(taskList.taskRep(i) + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"emzm2023"},"content":"        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"emzm2023":86}},{"path":"src/main/java/chatbot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"import chatbot.exception.InvalidTaskNumberException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"import chatbot.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"    /** TaskList for the Chatbot. */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"     * Constructor for the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"     * Adds given task to the taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"     * @param newTask The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"emzm2023"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"     * Returns the current size of the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"emzm2023"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"emzm2023"},"content":"     * Returns the current size of the taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"emzm2023"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-9","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"emzm2023"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"emzm2023"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"emzm2023"},"content":"     * Returns the String representation of the task with the given index.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"emzm2023"},"content":"     * @param i The index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"emzm2023"},"content":"     * @returns The String representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"emzm2023"},"content":"    public String taskRep(int i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"emzm2023"},"content":"        return taskList.get(i).toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"emzm2023"},"content":"     * Marks the task with the given index as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"emzm2023"},"content":"     * @param i The index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"emzm2023"},"content":"    public void markTaskTrue(int i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"emzm2023"},"content":"        taskList.get(i).markStatus(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"emzm2023"},"content":"     * Marks the task with the given index as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"emzm2023"},"content":"     * @param i The index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"emzm2023"},"content":"    public void markTaskFalse(int i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"emzm2023"},"content":"        taskList.get(i).markStatus(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"emzm2023"},"content":"     * Removes the task with the given index.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"emzm2023"},"content":"     * @param i The index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"emzm2023"},"content":"     * @throws InvalidTaskNumberException If there is no task with the given index in the taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"emzm2023"},"content":"    public void delete(int i) throws InvalidTaskNumberException {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"emzm2023"},"content":"            this.taskList.remove(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"emzm2023"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"emzm2023"},"content":"            throw new InvalidTaskNumberException(i + 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"emzm2023"},"content":"     * Returns a new TaskList containing all the tasks in this taskList with the matching keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"emzm2023"},"content":"     * @param keyword The keyword to match with.","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"emzm2023"},"content":"     * @returns A TaskList with the matching tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"emzm2023"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"emzm2023"},"content":"        TaskList res \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"emzm2023"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"emzm2023"},"content":"            if (task.toString().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"emzm2023"},"content":"                res.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"emzm2023"},"content":"        return res;","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"emzm2023":97}},{"path":"src/main/java/chatbot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"import chatbot.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"    /** Name of the Chatbot associated with the Ui instance. */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"    private String name;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"    /** Scanner for the Ui. */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"     * Constructor for the Chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"    public Ui(String name) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"     * Greets the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"    public void greet() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"        System.out.println(\"Hello! I\u0027m \" + this.name + \"\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"emzm2023"},"content":"     * Ends user interactions and closes scanner.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"emzm2023"},"content":"    public void exit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"emzm2023"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"emzm2023"},"content":"        this.scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"emzm2023"},"content":"     * Prints confirmation after adding task.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"emzm2023"},"content":"     * @param taskList The TaskList containing the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"emzm2023"},"content":"    public void printAddConfirmation(TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"emzm2023"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + taskList.taskRep(taskList.size() - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"emzm2023"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"emzm2023"},"content":"     * Prints confirmation after marking task done status as true.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"emzm2023"},"content":"     * @param i The index of the task that is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"emzm2023"},"content":"     * @param taskList The TaskList containing the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"emzm2023"},"content":"    public void printMarkDoneConfirmation(int i, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"emzm2023"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + taskList.taskRep(i) + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"emzm2023"},"content":"     * Prints confirmation after marking task done status as false.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"emzm2023"},"content":"     * @param i The index of the task that is marked as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"emzm2023"},"content":"     * @param taskList The TaskList containing the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"emzm2023"},"content":"    public void printMarkUndoneConfirmation(int i, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"emzm2023"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + taskList.taskRep(i) + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"emzm2023"},"content":"     * Prints confirmation after deleting task.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"emzm2023"},"content":"     * @param i The index of the task that is deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"emzm2023"},"content":"     * @param taskList The TaskList containing the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"emzm2023"},"content":"    public void printDeleteConfirmation(int i, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"emzm2023"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + taskList.taskRep(i) + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"emzm2023"},"content":"     * Lists out all the tasks in taskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"emzm2023"},"content":"     * @param taskList The TaskList to list tasks from.","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"emzm2023"},"content":"    public void listTasks(TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"emzm2023"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"emzm2023"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"emzm2023"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"emzm2023"},"content":"            System.out.println(num + \". \" + taskList.taskRep(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"emzm2023"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"emzm2023"},"content":"     * Lists out the matching tasks in the taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"emzm2023"},"content":"     * @param keyword The keyword to match with.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"emzm2023"},"content":"     * @param taskList The TaskList to print.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"emzm2023"},"content":"    public void listMatchingTasks(String keyword, TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"emzm2023"},"content":"        if (taskList.size() \u003e 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"emzm2023"},"content":"            System.out.println(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"emzm2023"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"emzm2023"},"content":"                int num \u003d i + 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"emzm2023"},"content":"                System.out.println(num + \". \" + taskList.taskRep(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"emzm2023"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"emzm2023"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"emzm2023"},"content":"            System.out.println(\"There are no matching tasks in your list!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"emzm2023"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"emzm2023"},"content":"     * Receives and reads user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"emzm2023"},"content":"     * @returns String containing next line of user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"emzm2023"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"emzm2023"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"emzm2023"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"emzm2023"},"content":"     * Prints Exception message.","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"emzm2023"},"content":"     * @param e The caught Exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"emzm2023"},"content":"    public void printExceptionMessage(Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"emzm2023"},"content":"        System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"emzm2023":128}},{"path":"src/main/java/chatbot/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    public InvalidCommandException(){","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"        super(\"OOPS!!! Please type a valid command!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"emzm2023":7}},{"path":"src/main/java/chatbot/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"        super(\"OOPS!!! Please specify the description and deadline in the correct format for this Deadline!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"emzm2023":7}},{"path":"src/main/java/chatbot/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"        super(\"OOPS!!! Please specify the description, start, and end time in the correct format for this Event!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"emzm2023":7}},{"path":"src/main/java/chatbot/exception/InvalidFileFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"public class InvalidFileFormatException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    public InvalidFileFormatException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"        super(\"Error loading tasks from file. Please check the format of the tasks in the data file!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"emzm2023":7}},{"path":"src/main/java/chatbot/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"public class InvalidTaskNumberException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    public InvalidTaskNumberException(int index){","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"        super(\"OOPS!!! There is no task \" + index + \"!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"emzm2023":7}},{"path":"src/main/java/chatbot/exception/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"public class InvalidTodoException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    public InvalidTodoException() {","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"        super(\"OOPS!!! Please specify the description for this Todo!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"emzm2023":7}},{"path":"src/main/java/chatbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"    /** LocalDate deadline for Deadline. */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"     * @param by Deadline for Deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"     * Constructor for Deadline loaded from Storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"     * @param by Deadline for Deadline as LocalDate.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"emzm2023"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"emzm2023"},"content":"     * toString method for Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"emzm2023"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"emzm2023"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"emzm2023"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"emzm2023":41}},{"path":"src/main/java/chatbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"    /** Start time of Event. */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"    /** End time of Event. */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"     * Constructor for Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"     * @param start Start time of event.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"     * @param end End time of event.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"        this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"        this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"     * Constructor for Event loaded from Storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"emzm2023"},"content":"     * @param start Start time of event as LocalDate.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"emzm2023"},"content":"     * @param end End time of event as LocalDate.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"emzm2023"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"emzm2023"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"emzm2023"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"emzm2023"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"emzm2023"},"content":"     * toString method for Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"emzm2023"},"content":"     * @return String representation of event.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"emzm2023"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"emzm2023"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"emzm2023"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"emzm2023"},"content":"                + \" to: \"+ end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"emzm2023":48}},{"path":"src/main/java/chatbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"    /** The description of the task. */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"    /** The done status of the task. */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"    /** Constructor for a task.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"     * @param description The task description.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"     * */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"    /** Returns an X if the task is done.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"     * @return A string showing if the task has been done or not.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"    /** Prints out task done status along with the task description.","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"emzm2023"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"emzm2023"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"    /** Marks the task done status with the boolean argument.","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"emzm2023"},"content":"     * @param status The boolean value to represent the task done status with.","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"emzm2023"},"content":"     * @return Returns true if successful.","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"emzm2023"},"content":"    public boolean markStatus(boolean status) {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"emzm2023"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"emzm2023"},"content":"        return true;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"emzm2023":44}},{"path":"src/main/java/chatbot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"import chatbot.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"    /** Constructor for chatbot.task.Todo.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"    /** toString method for todo.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"     * @return String representation of todo.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"emzm2023":22}},{"path":"src/test/java/chatbot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"    public void parseAdd_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"            assertEquals(\"\", parser.parseAdd(\"blah\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"            assertEquals(\"OOPS!!! Please type a valid command!\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"    public void parseAdd_missingTodoDescription_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"            assertEquals(\"\", parser.parseAdd(\"add todo\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"emzm2023"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"emzm2023"},"content":"            assertEquals(\"OOPS!!! Please specify the description for this Todo!\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"emzm2023"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"    public void parseAdd_missingDeadlineDate_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"emzm2023"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"emzm2023"},"content":"            assertEquals(\"\", parser.parseAdd(\"add deadline read\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"emzm2023"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"emzm2023"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"emzm2023"},"content":"            assertEquals(","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"emzm2023"},"content":"                    \"OOPS!!! Please specify the description and deadline in the correct format for this Deadline!\",","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"emzm2023"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"emzm2023"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"emzm2023"},"content":"    public void parseAdd_missingEventDate_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"emzm2023"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"emzm2023"},"content":"            assertEquals(\"\", parser.parseAdd(\"add event shop /from 2023-09-09 /to \"));","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"emzm2023"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"emzm2023"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"emzm2023"},"content":"            assertEquals(","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"emzm2023"},"content":"                    \"OOPS!!! Please specify the description, start, and end time in the correct format for this Event!\",","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"emzm2023"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"emzm2023"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"emzm2023"},"content":"    public void parseAdd_validEventCommand_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"emzm2023"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"emzm2023"},"content":"        List\u003cString\u003e res \u003d parser.parseAdd(\"add event shop /from 2023-09-09 /to 2023-10-09\");","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"emzm2023"},"content":"        assertEquals(\"event\", res.get(0));","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"emzm2023"},"content":"        assertEquals(\"shop\", res.get(1));","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"emzm2023"},"content":"        assertEquals(\"2023-09-09\", res.get(2));","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"emzm2023"},"content":"        assertEquals(\"2023-10-09\", res.get(3));","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"emzm2023"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"emzm2023"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"emzm2023":73}},{"path":"src/test/java/chatbot/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"package chatbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"import chatbot.task.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"    public void taskRep_emptyTaskList_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"            assertEquals(\"\", new TaskList().taskRep(2));","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"            assertEquals(\"Index 2 out of bounds for length 0\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"    public void taskRep_nonEmptyTaskListValidIndex_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"        taskList.add(new Todo(\"read\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"        assertEquals(\"[T][ ] read\", taskList.taskRep(0));","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"emzm2023"},"content":"    public void taskRep_nonEmptyTaskListInvalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"emzm2023"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"emzm2023"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"emzm2023"},"content":"            taskList.add(new Todo(\"read\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"emzm2023"},"content":"            assertEquals(\"[T][ ] read\", taskList.taskRep(2));","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"emzm2023"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"emzm2023"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"emzm2023"},"content":"            assertEquals(\"Index 2 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"emzm2023"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"emzm2023"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"emzm2023"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"emzm2023"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"emzm2023":40}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"[T][ ] study","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"[T][X] study","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"[E][ ] shop (from: Sep 5 2023 to: Sep 10 2023)","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"[D][ ] read (by: Oct 4 2023)","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"[E][ ] shop (from: Sep 5 2023 to: Sep 10 2023)","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"emzm2023":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"emzm2023"},"content":"hi","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"emzm2023"},"content":"add","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"emzm2023"},"content":"add","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"emzm2023"},"content":"add todo","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"emzm2023"},"content":"add todo study","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"emzm2023"},"content":"add deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"emzm2023"},"content":"add deadline read","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"emzm2023"},"content":"add deadline read /by","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"emzm2023"},"content":"add deadline /by 2023-10-04","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"emzm2023"},"content":"add deadline read /by 2023-10-04","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"emzm2023"},"content":"add event","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"emzm2023"},"content":"add event shop","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"emzm2023"},"content":"add event shop /from","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"emzm2023"},"content":"add event shop /from 2023-09-05","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"emzm2023"},"content":"add event shop /from 2023-09-05 /to 2023-09-10","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"emzm2023"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"emzm2023"},"content":"find","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"emzm2023"},"content":"find shop","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"emzm2023"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"emzm2023"},"content":"mark","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"emzm2023"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"emzm2023"},"content":"unmark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"unmark","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"emzm2023"},"content":"delete 5","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"emzm2023"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"emzm2023":27}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"emzm2023"},"content":"java -classpath ../bin Chatbot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"emzm2023"},"content":"## convert to UNIX format","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"emzm2023"},"content":"dos2unix ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"emzm2023"},"content":"dos2unix EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":35,"emzm2023":4}}]
