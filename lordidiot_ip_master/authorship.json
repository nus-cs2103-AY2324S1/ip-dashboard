[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"    private final String deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"    public Deadline(String deadlineName, String deadline) {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"        super(deadlineName);","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadline);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"        boolean running \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"Hello! I\u0027m Pong\");","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"        while (running) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"            System.out.print(\"You:  \");","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"                running \u003d Duke.handleInput(userInput, tasks);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"                System.out.printf(\"[!] %s\\n\", e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    private static boolean handleInput(String userInput, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"            return false;","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"            System.out.println(\"Pong: \");","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"                System.out.printf(\"    %d. %s\\n\", i+1, tasks.get(i));","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"            String userIndex \u003d userInput.substring(5);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"            int index \u003d Integer.parseInt(userIndex) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"            tasks.get(index).markDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"            System.out.println(\"Pong: I\u0027ve marked this task as done.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"            System.out.printf(\"    %s\\n\", tasks.get(index));","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"            String userIndex \u003d userInput.substring(7);","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"            int index \u003d Integer.parseInt(userIndex) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"            tasks.get(index).unmarkDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"            System.out.println(\"Pong: I\u0027ve marked this task as not done.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"            System.out.printf(\"    %s\\n\", tasks.get(index));","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"                tasks.add(new Todo(userInput.substring(5)));","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"                throw new DukeException(\"Todo name cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"            System.out.printf(\"Pong: [Added] %s\\n\", tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"            String[] tokens;","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"                tokens \u003d userInput.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"                tasks.add(new Deadline(tokens[0], tokens[1]));","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"                throw new DukeException(\"Deadline name cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"                throw new DukeException(\"Use /by to specify deadline date.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"            System.out.printf(\"Pong: [Added] %s\\n\", tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"            String[] tokens;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"                tokens \u003d userInput.substring(6).split(\" /from \");","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"                String[] duration \u003d tokens[1].split(\" /to \");","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"                tasks.add(new Event(tokens[0], duration[0], duration[1]));","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"                throw new DukeException(\"Event name cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"                throw new DukeException(\"Use /from and /to to specify event duration.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"            System.out.printf(\"Pong: [Added] %s\\n\", tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"            int deleteIndex \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"            Task task \u003d tasks.remove(deleteIndex - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"            System.out.printf(\"Pong: [Deleted] %s\\n\", task);","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"        return true;","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lordidiot":85,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"    private final String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"    private final String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"    public Event(String eventName, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"        super(eventName);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"    private boolean done;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"    private final String taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"        return String.format(\"[%c] %s\", (this.done ? \u0027X\u0027 : \u0027 \u0027), this.taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lordidiot":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"    public Todo(String todoName) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"        super(todoName);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":6}}]
