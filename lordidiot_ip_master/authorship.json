[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"    public Deadline(String deadlineName, LocalDateTime deadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"        super(deadlineName);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadline.format(formatter));","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    public String serialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"        return String.format(","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"                \"deadline %s /by %s%s\",","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"                getTaskName(),","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"                this.deadline.format(formatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"                (this.isDone() ? \" /done\" : \"\")","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"        boolean running \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"        TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"        TaskList taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"        // Load tasks from TaskStorage","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"            taskList \u003d new TaskList(taskStorage);","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"            System.out.printf(\"[!] %s\\n\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"            return;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"        Ui ui \u003d new Ui(\"Pong\");","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"        ui.init();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"        while (running) {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"                Parser parser \u003d ui.getParsedInput();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"                running \u003d Duke.handleInput(parser, taskList, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"                ui.printException(e);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"        ui.exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"    private static boolean handleInput(Parser parser, TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        switch (parser.getCommand()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"            return false;","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"        case \"list\":","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"            ui.listTasks(taskList.getTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"            task \u003d taskList.markTask(parser.getArgAsInt());","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"            ui.markTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"            task \u003d taskList.unmarkTask(parser.getArgAsInt());","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"            ui.unmarkTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"            task \u003d taskList.deleteTask(parser.getArgAsInt());","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"            ui.deleteTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"            String todoName \u003d parser.getArg();","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"            if (todoName \u003d\u003d null || todoName.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"                throw new DukeException(\"Todo name cannot be empty\");","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"            task \u003d new Todo(todoName);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"            ui.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"            String deadlineName \u003d parser.getArg();","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"            if (deadlineName \u003d\u003d null || deadlineName.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"                throw new DukeException(\"Deadline name cannot be empty\");","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"            LocalDateTime deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"            deadline \u003d parser.getOptArgAsDateTime(\"by\");","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"            if (deadline \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"                throw new DukeException(\"Use /by to specify deadline date\");","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"            task \u003d new Deadline(deadlineName, deadline);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"            ui.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"        case \"event\":","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"            String eventName \u003d parser.getArg();","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"            if (eventName \u003d\u003d null || eventName.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"                throw new DukeException(\"Deadline name cannot be empty\");","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"            LocalDateTime from, to;","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"            from \u003d parser.getOptArgAsDateTime(\"from\");","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"            to \u003d parser.getOptArgAsDateTime(\"to\");","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"            if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"                throw new DukeException(\"Use /from and /to to specify event duration\");","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"            task \u003d new Event(eventName, from, to);","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"            ui.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"        default:","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"            ui.invalidCommand(parser.getCommand());","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"        return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lordidiot":98,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    public Event(String eventName, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"        super(eventName);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"        return String.format(","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"                \"[E]%s (from: %s, to: %s)\",","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"                super.toString(),","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"                this.from.format(formatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"                this.to.format(formatter)","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    public String serialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"        return String.format(","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"                \"event %s /from %s /to %s%s\",","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"                getTaskName(),","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"                this.from.format(formatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"                this.to.format(formatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"                (this.isDone() ? \" /done\" : \"\")","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":37}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    private static final String DELIMITER_REGEX \u003d \" (?\u003d/\\\\w+)\";","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"    private final String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    private final String argument;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    private final HashMap\u003cString, String\u003e optionalArgs;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    private Parser(String command) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"        this.argument \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"        this.optionalArgs \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    private Parser(String command, String argument, HashMap\u003cString, String\u003e optionalArgs) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        this.optionalArgs \u003d optionalArgs;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"     * Parses line of input and extracts task type, name and optional args.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"     * @param line User input.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"     * @return Parser instance with parsed information.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException If input does not match expected format.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"    public static Parser from(String line) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        String taskName, taskType;","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        HashMap\u003cString, String\u003e optionalArgs;","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"        int firstSpace \u003d line.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        // No arguments (bye/list/...)","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"            return new Parser(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        taskType \u003d line.substring(0, firstSpace);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        String remainder \u003d line.substring(firstSpace + 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"        String[] parts \u003d remainder.split(DELIMITER_REGEX);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"        if (parts.length \u003c 1 || parts[0].equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Invalid command. Expected format: \u003ctask type\u003e \u003ctask name\u003e [...].\");","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"        taskName \u003d parts[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"        optionalArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"            String k, v;","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"            String part \u003d parts[i];","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"            int space \u003d part.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"            if (space \u003d\u003d -1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"                k \u003d part.substring(1);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"                v \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"            } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"                k \u003d part.substring(1, space);","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"                v \u003d part.substring(space + 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"            optionalArgs.put(k, v);","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"        return new Parser(taskType, taskName, optionalArgs);","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"     * Get command.","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"     * @return Command name.","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"    public String getCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"        return this.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"     * Get first argument.","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"     * @return First argument.","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"    public String getArg() {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"        return this.argument;","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"     * Get first argument as integer.","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"     * @return First argument cast to integer.","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException If argument cannot be parsed to integer.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"    public int getArgAsInt() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"        if (this.argument \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"No integer argument provided\");","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"            return Integer.parseInt(this.argument);","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(String.format(\"Invalid integer argument: %s\", this.argument));","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"     * Get optional argument value.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"lordidiot"},"content":"     * @param argName Name of argument to get.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"     * @return Value of optional argument or null if not present.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"lordidiot"},"content":"    public String getOptArg(String argName) {","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"lordidiot"},"content":"        if (this.optionalArgs \u003d\u003d null || !this.optionalArgs.containsKey(argName)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"lordidiot"},"content":"            return null;","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"lordidiot"},"content":"        return this.optionalArgs.get(argName);","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"lordidiot"},"content":"     * Get optional argument value as LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"lordidiot"},"content":"     * @param argName Name of argument to get.","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"lordidiot"},"content":"     * @return Value of optional argument as LocalDateTime or null if not present.","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException If argument value cannot be parsed as LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"lordidiot"},"content":"    public LocalDateTime getOptArgAsDateTime(String argName) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"lordidiot"},"content":"        String arg \u003d getOptArg(argName);","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"lordidiot"},"content":"        if (arg \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"lordidiot"},"content":"            return null;","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"lordidiot"},"content":"        SimpleDateFormat dateFormat;","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"lordidiot"},"content":"        if (arg.length() \u003d\u003d 10) {","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"lordidiot"},"content":"            dateFormat \u003d new SimpleDateFormat(\"yyyy/MM/dd\");","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"lordidiot"},"content":"        } else if (arg.length() \u003d\u003d 15) {","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"lordidiot"},"content":"            dateFormat \u003d new SimpleDateFormat(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"lordidiot"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(String.format(\"Invalid date (%s), should be yyyy/MM/dd HHmm\", arg));","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"lordidiot"},"content":"        Date parsedDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"lordidiot"},"content":"            parsedDate \u003d dateFormat.parse(arg);","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"lordidiot"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(String.format(\"Invalid date (%s), should be yyyy/MM/dd HHmm\", arg));","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"lordidiot"},"content":"        return parsedDate","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"lordidiot"},"content":"                .toInstant()","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"lordidiot"},"content":"                .atZone(ZoneId.systemDefault())","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"lordidiot"},"content":"                .toLocalDateTime();","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":155}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"    private final String taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        return String.format(\"[%c] %s\", (this.isDone ? \u0027X\u0027 : \u0027 \u0027), this.taskName);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    public abstract String serialize();","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lordidiot":32}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"    private final TaskStorage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"     * Initialises TaskList and restores existing tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"     * from TaskStorage provided as argument.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"     * @param storage TaskStorage to use for restore/save of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException If an issue occurs during restore of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    public TaskList(TaskStorage storage) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"        this.tasks \u003d storage.loadExistingTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"     * Adds task.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"     * @param task Task to add.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        storeTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"     * Deletes task by index.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"     * @param index Index of task to delete.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"     * @return Task deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d this.tasks.remove(index - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        storeTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"        return task;","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"     * Marks task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"     * @param index Index of task to mark.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Index out of bounds\");","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"        task.markDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"        storeTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"        return task;","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"     * @param index Index of task to unmark.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Index out of bounds\");","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"        storeTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"        return task;","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"     * Get all tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"     * @return All tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"    private void storeTasks() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"        this.storage.storeTasks(this.tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":85}},{"path":"src/main/java/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":" * Handles storage of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":" * Uses text file as storage method.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"public class TaskStorage {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    public static final String DEFAULT_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    private final File file;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"     * TaskStorage constructor, uses default path.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    public TaskStorage() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        this.file \u003d new File(DEFAULT_PATH);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"     * Load existing tasks from text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"     * @return ArrayList of Tasks loaded","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException Any errors encountered while loading","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    public ArrayList\u003cTask\u003e loadExistingTasks() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"                this.file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"            FileReader fileReader \u003d new FileReader(this.file);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"            // Format: \u003ctype\u003e|\u003cisDone\u003e|\u003ctaskName\u003e[|...]","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"            Parser parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"            String line;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"                Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"                parser \u003d Parser.from(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"                switch(parser.getCommand()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"                    task \u003d new Todo(parser.getArg());","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"                    break;","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"                case \"deadline\":","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"                    task \u003d new Deadline(","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"                            parser.getArg(),","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"                            parser.getOptArgAsDateTime(\"by\")","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"                    );","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"                    break;","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"                case \"event\":","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"                    task \u003d new Event(","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"                            parser.getArg(),","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"                            parser.getOptArgAsDateTime(\"from\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"                            parser.getOptArgAsDateTime(\"to\")","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"                    );","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"                    break;","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"                default:","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"                    continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"                if (parser.getOptArg(\"done\") !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"                    task.markDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"            fileReader.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"            return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Error while loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"     * Stores serialized tasks in text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"     * @param tasks Tasks to store","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException Any errors encountered while storing","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"    public void storeTasks(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"        String serialized \u003d tasks.stream()","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"                .map(Task::serialize)","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"            fileWriter.write(serialized);","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"            fileWriter.flush();","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Error while storing tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":105}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"    public Todo(String todoName) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"        super(todoName);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    public String serialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"        return String.format(","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"                \"todo %s%s\",","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"                getTaskName(),","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"                (this.isDone() ? \" /done\" : \"\")","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":19}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"    private final String name;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"     * Initialise Ui handler.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"     * @param name Name of chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    public Ui(String name) {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"     * Initialise UI. Prints banner.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    public void init() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"Hello! I\u0027m %s\\n\", this.name);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"     * Prompts user and parses user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"     * @return Parser instance for user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException If error in parsing user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"    public Parser getParsedInput() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        System.out.print(\"You:  \");","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        return Parser.from(userInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"     * Prints exception to user.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"     * @param e Exception to display.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    public void printException(Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"[!] %s\\n\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"     * Prints exit message to user.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"    public void exit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"     * Prints add task message to user.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"     * @param task Task added.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: [Added] %s\\n\", this.name, task);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"     * Prints delete task message to user.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"     * @param task Task deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: [Deleted] %s\\n\", this.name, task);","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"     * Prints mark task message to user.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"     * @param task Task marked.","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: I\u0027ve marked this task as done.\\n\", this.name);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"    %s\\n\", task);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"     * Prints unmark task message to user.","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"     * @param task Task unmarked.","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: I\u0027ve marked this task as not done.\\n\", this.name);","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"    %s\\n\", task);","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"     * Lists all current tasks to user.","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"     * @param tasks Tasks to list.","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"    public void listTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: \\n\", this.name);","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"            System.out.printf(\"    %d. %s\\n\", i+1, tasks.get(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"     * Prints invalid command message.","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"     * @param command Command used.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"    public void invalidCommand(String command) {","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: Invalid command (%s)\\n\", this.name, command);","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":108}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":6}}]
