[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"lordidiot":12,"-":41}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"lordidiot":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import duke.task.TaskStorage;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"import duke.ui.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":" * Duke class handles main logic for the chatbot.","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"     * Initialise Duke chatbot instance.","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"     * @param ui Ui type that Duke will use.","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    public Duke(Ui ui) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        this.taskList \u003d new TaskList(new TaskStorage());","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"     * Passes input to duke to handle.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"     * @param input String input to handle.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"     * @return isRunning boolean to decide if Duke should continue.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException If error encountered while handling input.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    public boolean handleInput(String input) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"        Parser parser \u003d Parser.from(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        assert parser !\u003d null : \"The variable \u0027parser\u0027 is null\";","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"        switch (parser.getCommand()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"            return false;","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        case \"list\":","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"            listCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"            markCommand(parser);","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"            unmarkCommand(parser);","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"            deleteCommand(parser);","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"            todoCommand(parser);","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"            deadlineCommand(parser);","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"        case \"event\":","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"            eventCommand(parser);","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"        case \"find\":","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"            findCommand(parser);","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"        default:","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"            invalidCommand(parser);","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"            break;","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"        return true;","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"    private void listCommand() {","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"        ui.listTasks(taskList.getTasks());","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"    private void markCommand(Parser parser) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d taskList.markTask(parser.getArgAsInt());","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"        ui.markTask(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"    private void unmarkCommand(Parser parser) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d taskList.unmarkTask(parser.getArgAsInt());","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"        ui.unmarkTask(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"    private void deleteCommand(Parser parser) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d taskList.deleteTask(parser.getArgAsInt());","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"        ui.deleteTask(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"    private void todoCommand(Parser parser) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"        String todoName \u003d parser.getArg();","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"        if (todoName \u003d\u003d null || todoName.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"duke.Todo name cannot be empty\");","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d new Todo(todoName);","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"        ui.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"    private void deadlineCommand(Parser parser) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"        String deadlineName \u003d parser.getArg();","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"        if (deadlineName \u003d\u003d null || deadlineName.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"duke.Deadline name cannot be empty\");","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"lordidiot"},"content":"        deadline \u003d parser.getOptArgAsDateTime(\"by\");","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"lordidiot"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Use /by to specify deadline date (yyyy/MM/dd [HHmm])\");","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d new Deadline(deadlineName, deadline);","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"lordidiot"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"lordidiot"},"content":"        ui.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"lordidiot"},"content":"    private void eventCommand(Parser parser) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"lordidiot"},"content":"        String eventName \u003d parser.getArg();","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"lordidiot"},"content":"        if (eventName \u003d\u003d null || eventName.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"duke.Deadline name cannot be empty\");","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime from;","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime to;","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"lordidiot"},"content":"        from \u003d parser.getOptArgAsDateTime(\"from\");","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"lordidiot"},"content":"        to \u003d parser.getOptArgAsDateTime(\"to\");","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"lordidiot"},"content":"        if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Use /from and /to to specify event duration (yyyy/MM/dd [HHmm])\");","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d new Event(eventName, from, to);","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"lordidiot"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"lordidiot"},"content":"        ui.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"lordidiot"},"content":"    private void findCommand(Parser parser) {","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"lordidiot"},"content":"        String search \u003d parser.getArg();","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"lordidiot"},"content":"        List\u003cTask\u003e tasks \u003d taskList.findTasks(search);","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"lordidiot"},"content":"        ui.listTasks(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"lordidiot"},"content":"    private void invalidCommand(Parser parser) {","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"lordidiot"},"content":"        ui.invalidCommand(parser.getCommand());","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"lordidiot"},"content":"     * Gracefully handle exception thrown by Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"lordidiot"},"content":"     * @param e Exception thrown by Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"lordidiot"},"content":"    public void handleException(DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"lordidiot"},"content":"        this.ui.printException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lordidiot":160,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":" * DukeException encapsulates custom exceptions thrown","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":" * by the Duke project.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"     * @param errorMessage Custom error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":15}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":" * Launcher class to launch GUI main.","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"     * Entrypoint for Duke GUI application.","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"     * @param args Command-line arguments (unused).","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"lordidiot":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    private final Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    private final TextUi textUi;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"     * Main constructor, sets up dependencies.","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    public Main() throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        this.textUi \u003d new TextUi(\"Pong\");","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"        this.duke \u003d new Duke(this.textUi);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTextUi(textUi);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"lordidiot":44}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    private TextUi textUi;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"    public void setTextUi(TextUi textUi) {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"        this.textUi \u003d textUi;","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        boolean isRunning;","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"            isRunning \u003d duke.handleInput(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"            if (!isRunning) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"                exit();","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"            duke.handleException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"        String response \u003d textUi.getTextOutput();","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"    private void exit() {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"        Platform.exit();","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"lordidiot":74}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.task;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":" * Encapsulation of a Deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"     * Deadline constructor.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"     * @param deadlineName Name of deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"     * @param deadline Time and date of the deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    public Deadline(String deadlineName, LocalDateTime deadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"        super(deadlineName);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadline.format(formatter));","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    public String serialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        return String.format(","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"                \"deadline %s /by %s%s\",","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"                getTaskName(),","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"                this.deadline.format(formatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"                this.isDone() ? \" /done\" : \"\"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":38}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.task;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":" * Encapsulation of an Event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"     * Constructor for Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"     * @param eventName Name of event.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"     * @param from Date and time of event start.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"     * @param to Date and time of event end.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    public Event(String eventName, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"        super(eventName);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"        return String.format(","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"                \"[E]%s (from: %s, to: %s)\",","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"                super.toString(),","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"                this.from.format(formatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"                this.to.format(formatter)","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    public String serialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        return String.format(","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"                \"event %s /from %s /to %s%s\",","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"                getTaskName(),","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"                this.from.format(formatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"                this.to.format(formatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"                this.isDone() ? \" /done\" : \"\"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":48}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.task;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":" * Abstract class encapsulating Tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"    private final String taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"     * Constructor for a Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"     * Check if task is marked done.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"     * @return true if task is marked done else false.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"     * Mark task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"     * Mark task as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"     * Get name of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"     * @return Name of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        return String.format(\"[%c] %s\", (this.isDone ? \u0027X\u0027 : \u0027 \u0027), this.taskName);","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"     * Convert data contained by the task into a","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"     * string format to be stored and deserialized back","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"     * into a Task object in the future.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"     * @return Serialized string representation of Task instance.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    public abstract String serialize();","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lordidiot":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.task;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":" * Helper class encapsulating list of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":" * provides methods for basic operations as well.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    private final TaskStorage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"     * Initialises duke.TaskList and restores existing tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"     * from duke.TaskStorage provided as argument.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"     * @param storage duke.TaskStorage to use for restore/save of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException If an issue occurs during restore of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    public TaskList(TaskStorage storage) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        this.tasks \u003d storage.loadExistingTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"     * Adds task.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"     * @param task duke.Task to add.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        storeTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"     * Deletes task by index.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"     * @param index Index of task to delete.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"     * @return duke.Task deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Index out of bounds\");","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d this.tasks.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        storeTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"        return task;","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"     * Marks task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"     * @param index Index of task to mark.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Index out of bounds\");","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"        task.markDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"        storeTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"        return task;","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"     * @param index Index of task to unmark.","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"        index -\u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Index out of bounds\");","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"        storeTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"        return task;","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"     * Get all tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"     * @return All tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"     * Find tasks with names that match search term.","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"     * @return List of tasks that match search.","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"    public List\u003cTask\u003e findTasks(String search) {","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"        return this.tasks.stream()","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"                .filter(t -\u003e t.getTaskName().toLowerCase().contains(search.toLowerCase()))","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"    private void storeTasks() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"        this.storage.storeTasks(this.tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":110}},{"path":"src/main/java/duke/task/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.task;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import duke.ui.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":" * Handles storage of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":" * Uses text file as storage method.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"public class TaskStorage {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    public static final String DEFAULT_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    private final File file;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"     * TaskStorage constructor, uses default path.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    public TaskStorage() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        this.file \u003d new File(DEFAULT_PATH);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"     * Load existing tasks from text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"     * @return ArrayList of Tasks loaded","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException Any errors encountered while loading","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    public ArrayList\u003cTask\u003e loadExistingTasks() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"                this.file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"            FileReader fileReader \u003d new FileReader(this.file);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"            // Format: \u003ctype\u003e|\u003cisDone\u003e|\u003ctaskName\u003e[|...]","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"            Parser parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"            String line;","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"                Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"                parser \u003d Parser.from(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"                switch(parser.getCommand()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"                    task \u003d new Todo(parser.getArg());","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"                    break;","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"                case \"deadline\":","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"                    task \u003d new Deadline(","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"                            parser.getArg(),","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"                            parser.getOptArgAsDateTime(\"by\")","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"                    );","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"                    break;","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"                case \"event\":","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"                    task \u003d new Event(","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"                            parser.getArg(),","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"                            parser.getOptArgAsDateTime(\"from\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"                            parser.getOptArgAsDateTime(\"to\")","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"                    );","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"                    break;","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"                default:","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"                    continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"                if (parser.getOptArg(\"done\") !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"                    task.markDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"            fileReader.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"            return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Error while loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"     * Stores serialized tasks in text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"     * @param tasks Tasks to store","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException Any errors encountered while storing","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"    public void storeTasks(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"        String serialized \u003d tasks.stream()","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"                .map(Task::serialize)","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"            fileWriter.write(serialized);","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"            fileWriter.flush();","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Error while storing tasks: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":110}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.task;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":" * Encapsulation of a Todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"     * Constructor for Todo.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"     * @param todoName Name of todo.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"    public Todo(String todoName) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"        super(todoName);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    public String serialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"        return String.format(","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"                \"todo %s%s\",","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"                getTaskName(),","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"                this.isDone() ? \" /done\" : \"\"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":28}},{"path":"src/main/java/duke/ui/CliUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":" * Helper class for user interface, handles","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":" * user input and outputting to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"public class CliUi implements Ui {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    private static final String DOTTED_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    private final String name;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"     * Initialise Ui handler.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"     * @param name Name of chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    public CliUi(String name) {","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    public void init() {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"        System.out.println(CliUi.DOTTED_LINE);","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"Hello! I\u0027m %s\\n\", this.name);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        System.out.println(CliUi.DOTTED_LINE);","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"        System.out.print(\"You:  \");","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    public void printException(Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"[!] %s\\n\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"    public void exit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"        System.out.println(CliUi.DOTTED_LINE);","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        System.out.println(CliUi.DOTTED_LINE);","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: [Added] %s\\n\", this.name, task);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: [Deleted] %s\\n\", this.name, task);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: I\u0027ve marked this task as done.\\n\", this.name);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"    %s\\n\", task);","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: I\u0027ve marked this task as not done.\\n\", this.name);","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"    %s\\n\", task);","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"    public void listTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: \\n\", this.name);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"            System.out.printf(\"    %d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"    public void invalidCommand(String command) {","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"        System.out.printf(\"%s: Invalid command (%s)\\n\", this.name, command);","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":88}},{"path":"src/main/java/duke/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":" * Helper class to parse user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    private static final String DELIMITER_REGEX \u003d \" (?\u003d/\\\\w+)\";","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    private final String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    private final String argument;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    private final HashMap\u003cString, String\u003e optionalArgs;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    private Parser(String command) {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        this.argument \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        this.optionalArgs \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    private Parser(String command, String argument, HashMap\u003cString, String\u003e optionalArgs) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        this.optionalArgs \u003d optionalArgs;","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"     * Factory method to parses line of input and","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"     * extract task type, name and optional args.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"     * @param line User input.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"     * @return duke.Parser instance with parsed information.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException If input does not match expected format.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"    public static Parser from(String line) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"        String taskName;","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        String taskType;","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        HashMap\u003cString, String\u003e optionalArgs;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"        int firstSpace \u003d line.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"        // No arguments (bye/list/...)","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"            return new Parser(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"        taskType \u003d line.substring(0, firstSpace);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"        String remainder \u003d line.substring(firstSpace + 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"        String[] parts \u003d remainder.split(DELIMITER_REGEX);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"        if (parts.length \u003c 1 || parts[0].equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"Invalid command. Expected format: \u003ctask type\u003e \u003ctask name\u003e [...].\");","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"        taskName \u003d parts[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"        optionalArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"            String k;","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"            String v;","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"            String part \u003d parts[i];","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"            int space \u003d part.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"            if (space \u003d\u003d -1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"                k \u003d part.substring(1);","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"                v \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"            } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"                k \u003d part.substring(1, space);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"                v \u003d part.substring(space + 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"            optionalArgs.put(k, v);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"        return new Parser(taskType, taskName, optionalArgs);","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"     * Get command.","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"     * @return Command name.","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"    public String getCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"        return this.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"     * Get first argument.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"     * @return First argument.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"    public String getArg() {","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"        return this.argument;","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"     * Get first argument as integer.","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"     * @return First argument cast to integer.","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException If argument cannot be parsed to integer.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"    public int getArgAsInt() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"        if (this.argument \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(\"No integer argument provided\");","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"lordidiot"},"content":"            return Integer.parseInt(this.argument);","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"lordidiot"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(String.format(\"Invalid integer argument: %s\", this.argument));","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"lordidiot"},"content":"     * Get optional argument value.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"lordidiot"},"content":"     * @param argName Name of argument to get.","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"lordidiot"},"content":"     * @return Value of optional argument or null if not present.","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"lordidiot"},"content":"    public String getOptArg(String argName) {","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"lordidiot"},"content":"        if (this.optionalArgs \u003d\u003d null || !this.optionalArgs.containsKey(argName)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"lordidiot"},"content":"            return null;","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"lordidiot"},"content":"        return this.optionalArgs.get(argName);","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"lordidiot"},"content":"     * Get optional argument value as LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"lordidiot"},"content":"     * @param argName Name of argument to get.","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"lordidiot"},"content":"     * @return Value of optional argument as LocalDateTime or null if not present.","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"lordidiot"},"content":"     * @throws DukeException If argument value cannot be parsed as LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"lordidiot"},"content":"    public LocalDateTime getOptArgAsDateTime(String argName) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"lordidiot"},"content":"        String arg \u003d getOptArg(argName);","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"lordidiot"},"content":"        if (arg \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"lordidiot"},"content":"            return null;","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"lordidiot"},"content":"        SimpleDateFormat dateFormat;","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"lordidiot"},"content":"        if (arg.length() \u003d\u003d 10) {","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"lordidiot"},"content":"            dateFormat \u003d new SimpleDateFormat(\"yyyy/MM/dd\");","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"lordidiot"},"content":"        } else if (arg.length() \u003d\u003d 15) {","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"lordidiot"},"content":"            dateFormat \u003d new SimpleDateFormat(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"lordidiot"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(String.format(\"Invalid date (%s), should be yyyy/MM/dd HHmm\", arg));","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"lordidiot"},"content":"        Date parsedDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"lordidiot"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"lordidiot"},"content":"            parsedDate \u003d dateFormat.parse(arg);","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"lordidiot"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"lordidiot"},"content":"            throw new DukeException(String.format(\"Invalid date (%s), should be yyyy/MM/dd HHmm\", arg));","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"lordidiot"},"content":"        return parsedDate","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"lordidiot"},"content":"                .toInstant()","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"lordidiot"},"content":"                .atZone(ZoneId.systemDefault())","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"lordidiot"},"content":"                .toLocalDateTime();","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":165}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":" * Helper class for user interface, handles","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":" * user input and outputting to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"public class TextUi implements Ui {","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    private static final String DOTTED_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    private final StringBuilder buffer;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    private String name;","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"     * Initialise Ui handler.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"     * @param name Name of chatbot.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    public TextUi(String name) {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"        this.buffer \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"     * Get accumulated output from the UI.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"     * @return Text output accumulated so far.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    public String getTextOutput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        String out \u003d this.buffer.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        this.buffer.delete(0, this.buffer.length());","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        return out;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    public void init() {","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"        // Does nothing for TextUi","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        // Does nothing for TextUi","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        return \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"    public void printException(Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(String.format(\"[!] %s\\n\", e.getMessage()));","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"    public void exit() {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(TextUi.DOTTED_LINE);","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(TextUi.DOTTED_LINE);","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(String.format(\"%s: [Added] %s\\n\", this.name, task));","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(String.format(\"%s: [Deleted] %s\\n\", this.name, task));","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(String.format(\"%s: I\u0027ve marked this task as done.\\n\", this.name));","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(String.format(\"    %s\\n\", task));","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(String.format(\"%s: I\u0027ve marked this task as not done.\\n\", this.name));","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(String.format(\"    %s\\n\", task));","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"    public void listTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(String.format(\"%s: \\n\", this.name));","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"            this.buffer.append(String.format(\"    %d. %s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"    public void invalidCommand(String command) {","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"        this.buffer.append(String.format(\"%s: Invalid command (%s)\\n\", this.name, command));","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"lordidiot":94}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":" * Ui interface that the various types of Ui should implement.","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"public interface Ui {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"     * Initialises Ui.","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    void init();","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"     * Prompts user and gets user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"     * @return String user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    String getInput();","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"     * Prints exception to user.","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"     * @param e Exception to display.","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    void printException(Exception e);","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"     * Prints exit message to user.","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    void exit();","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"     * Prints add task message to user.","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"     * @param task duke.Task added.","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    void addTask(Task task);","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"     * Prints delete task message to user.","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"     * @param task duke.Task deleted.","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    void deleteTask(Task task);","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"     * Prints mark task message to user.","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"     * @param task duke.Task marked.","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"    void markTask(Task task);","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"     * Prints unmark task message to user.","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"     * @param task duke.Task unmarked.","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"    void unmarkTask(Task task);","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"     * Lists all current tasks to user.","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"     * @param tasks Tasks to list.","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"    void listTasks(List\u003cTask\u003e tasks);","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"     * Prints invalid command message.","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"     * @param command Command used.","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"    void invalidCommand(String command);","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lordidiot":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"lordidiot":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"lordidiot":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import java.time.Month;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import duke.ui.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    public void from_commandNoArg_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e Parser.from(\"command\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    public void from_commandOneArg_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e Parser.from(\"command arg\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    public void from_commandOptArgs_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e Parser.from(\"command arg /opt val /opt2 value2\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"    public void getCommand_valid_success() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        assertEquals(Parser.from(\"command\").getCommand(), \"command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        assertEquals(Parser.from(\"command arg\").getCommand(), \"command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        assertEquals(Parser.from(\"command arg /opt val\").getCommand(), \"command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"    public void getArg_valid_success() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        assertNull(Parser.from(\"command\").getArg());","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        assertEquals(Parser.from(\"command arg\").getArg(), \"arg\");","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"        assertEquals(Parser.from(\"command arg /opt val\").getArg(), \"arg\");","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"    public void getOptArg_valid_success() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"        assertNull(Parser.from(\"command\").getOptArg(\"opt\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"        assertNull(Parser.from(\"command arg\").getOptArg(\"opt\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"        assertEquals(Parser.from(\"command arg /opt val\").getOptArg(\"opt\"), \"val\");","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"    public void getOptArgAsDateTime_validDateTime_success() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"        assertEquals(","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"                Parser.from(\"command arg /opt 2023/02/01\").getOptArgAsDateTime(\"opt\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"                LocalDateTime.of(2023, Month.FEBRUARY, 1, 0, 0)","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"        assertEquals(","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"                Parser.from(\"command arg /opt 2023/02/01 1230\").getOptArgAsDateTime(\"opt\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"                LocalDateTime.of(2023, Month.FEBRUARY, 1, 12, 30)","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"    public void getOptArgAsDateTime_invalidDateTime_throws() {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"        assertThrows(","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"                DukeException.class, ()","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"                        -\u003e Parser.from(\"command arg /opt 2023-02-01\").getOptArgAsDateTime(\"opt\")","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"        assertThrows(","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"                DukeException.class, ()","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"                        -\u003e Parser.from(\"command arg /opt aaaa /b bbbb\").getOptArgAsDateTime(\"opt\")","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":76}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"import duke.mocks.TaskMock;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import duke.mocks.TaskStorageMock;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import duke.task.TaskStorage;","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    public void constructor_normal_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e new TaskList(new TaskStorageMock(null)));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    public void constructor_someTasks_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        TaskStorage taskStorage \u003d new TaskStorageMock(","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"                new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"A\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"B\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"C\")","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"                ))","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e new TaskList(taskStorage));","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    public void constructor_getTasks_success() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"        TaskStorage taskStorage \u003d new TaskStorageMock(","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"                new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"A\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"B\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"C\")","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"                ))","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        TaskList taskList \u003d new TaskList(taskStorage);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.size(), 3);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.get(0).toString(), \"A\");","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.get(1).toString(), \"B\");","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.get(2).toString(), \"C\");","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"    public void addTask_normal_success() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"        TaskStorage taskStorage \u003d new TaskStorageMock(new ArrayList\u003c\u003e(List.of()));","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"        TaskList taskList \u003d new TaskList(taskStorage);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"        taskList.addTask(new TaskMock(\"A\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.size(), 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.get(0).toString(), \"A\");","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"        taskList.addTask(new TaskMock(\"B\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"        tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.size(), 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.get(0).toString(), \"A\");","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.get(1).toString(), \"B\");","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"    public void deleteTask_normal_success() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"        TaskStorage taskStorage \u003d new TaskStorageMock(","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"                new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"A\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"B\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"C\")","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"                ))","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"lordidiot"},"content":"        TaskList taskList \u003d new TaskList(taskStorage);","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"lordidiot"},"content":"        taskList.deleteTask(2);","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"lordidiot"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.size(), 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.get(0).toString(), \"A\");","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"lordidiot"},"content":"        assertEquals(tasks.get(1).toString(), \"C\");","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"    public void deleteTask_outOfBounds_success() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"        TaskStorage taskStorage \u003d new TaskStorageMock(","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"                new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"A\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"B\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"                        new TaskMock(\"C\")","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"                ))","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"        TaskList taskList \u003d new TaskList(taskStorage);","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.deleteTask(9));","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":100}},{"path":"src/test/java/duke/mocks/TaskMock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.mocks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":" * Mock Task class.","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"public class TaskMock extends Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    private final String taskName;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"     * Initialises mock task.","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"     * @param taskName Name of mock task.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    public TaskMock(String taskName) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"        super(taskName);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    public String serialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"        return \"SERIALIZED\";","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":29}},{"path":"src/test/java/duke/mocks/TaskStorageMock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package duke.mocks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import duke.task.TaskStorage;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":" * Mock TaskStorage to aid testing.","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"public class TaskStorageMock extends TaskStorage {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"     * Initialise TaskStorageMock.","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"     * @param tasks Tasks in this mock storage.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    public TaskStorageMock(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    public ArrayList\u003cTask\u003e loadExistingTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    public void storeTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"lordidiot":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lordidiot":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lordidiot":1,"-":20}}]
