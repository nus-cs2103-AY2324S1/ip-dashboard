[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"# duke.duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sasmik23":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sasmik23":3,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package duke; // Use lowercase for package names","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"import duke.filehandler.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import duke.parsers.InputParser;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"public class Duke {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"        ui.printGreeting();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"            tasks \u003d storage.readTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"        InputParser.getUserInputs(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Sasmik23"},"content":"        ui.printEnding();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"Sasmik23"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Sasmik23"},"content":"        new Duke(\"tasks.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Sasmik23":37}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Sasmik23":7}},{"path":"src/main/java/duke/filehandler/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package duke.filehandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"import java.util.Date;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"    private static String FILE_PATH;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"    public Storage (String file_path){","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"        FILE_PATH \u003d file_path;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"    /***","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"     * converts string from saved file to Date object","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"     * @param dateString","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"     * @return Date","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"    public static Date fileDateParser(String dateString) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd MMM yyyy h a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Sasmik23"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Sasmik23"},"content":"            Date date \u003d sdf.parse(dateString);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"            return date;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Sasmik23"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Sasmik23"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Sasmik23"},"content":"           throw new DukeException(\"Cannot read time from file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Sasmik23"},"content":"    /***","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Sasmik23"},"content":"     * Saves tasks in memory to file","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Sasmik23"},"content":"     * @param tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Sasmik23"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Sasmik23"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Sasmik23"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Sasmik23"},"content":"            File taskFile \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Sasmik23"},"content":"            if (!taskFile.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Sasmik23"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Sasmik23"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Sasmik23"},"content":"            throw new DukeException(\"Error creating task file!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Sasmik23"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"            FileWriter taskWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Sasmik23"},"content":"            for(Task task : tasks){","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Sasmik23"},"content":"                taskWriter.write(task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Sasmik23"},"content":"                taskWriter.write(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Sasmik23"},"content":"            taskWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Sasmik23"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Sasmik23"},"content":"            throw new DukeException(\" Error saving tasks to file\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Sasmik23"},"content":"    /***","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Sasmik23"},"content":"     * reads all tasks from saved file","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Sasmik23"},"content":"     * @return tasks as an ArrayList","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Sasmik23"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Sasmik23"},"content":"    public static ArrayList\u003cTask\u003e readTasks() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Sasmik23"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Sasmik23"},"content":"        try{","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Sasmik23"},"content":"            File taskFile \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Sasmik23"},"content":"            if (!taskFile.exists()){","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Sasmik23"},"content":"                return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Sasmik23"},"content":"            Scanner reader \u003d new Scanner(taskFile);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Sasmik23"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Sasmik23"},"content":"                String data \u003d reader.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Sasmik23"},"content":"                if (data.length() \u003e 0){","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Sasmik23"},"content":"                    if (data.charAt(1)\u003d\u003d\u0027T\u0027){","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Sasmik23"},"content":"                        Todo todo \u003d new Todo (data.substring(7));","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Sasmik23"},"content":"                        if (data.charAt(4) \u003d\u003d \u0027X\u0027){","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Sasmik23"},"content":"                            todo.setAction(\"mark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Sasmik23"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Sasmik23"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Sasmik23"},"content":"                    } else if (data.charAt(1)\u003d\u003d\u0027D\u0027){","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Sasmik23"},"content":"                        String dates \u003d data.split(\":\",2)[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Sasmik23"},"content":"                        String desc \u003d data.split(\"\\\\(\")[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Sasmik23"},"content":"                        Date date \u003d fileDateParser(dates.substring(1,dates.length()-1));","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Sasmik23"},"content":"                        Deadline deadline \u003d new Deadline(desc.substring(7), date);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Sasmik23"},"content":"                        if (data.charAt(4) \u003d\u003d \u0027X\u0027){","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Sasmik23"},"content":"                            deadline.setAction(\"mark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Sasmik23"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Sasmik23"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Sasmik23"},"content":"                    } else if (data.charAt(1) \u003d\u003d \u0027E\u0027){","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Sasmik23"},"content":"                        String[] dates \u003d data.split(\":\");","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Sasmik23"},"content":"                        String desc \u003d data.split(\"\\\\(\")[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Sasmik23"},"content":"                        Date from \u003d fileDateParser(dates[1].substring(1,dates[1].length()-2));","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Sasmik23"},"content":"                        Date to \u003d fileDateParser(dates[2].substring(1,dates[2].length()-1));","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Sasmik23"},"content":"                        Event event \u003d new Event(desc.substring(7), from,to);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Sasmik23"},"content":"                        if (data.charAt(4) \u003d\u003d \u0027X\u0027){","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Sasmik23"},"content":"                            event.setAction(\"mark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Sasmik23"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Sasmik23"},"content":"                        tasks.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Sasmik23"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Sasmik23"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"Sasmik23"},"content":"        } catch( IOException e){","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Sasmik23"},"content":"            throw new DukeException(\"error reading from file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Sasmik23"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Sasmik23":122}},{"path":"src/main/java/duke/parsers/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package duke.parsers;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import duke.filehandler.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"import java.util.Date;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"public class InputParser {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"    /***","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"     * Checks user inputs, if invalid throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"     * @param str User input split by each word","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"     * @param task type of task - todo,event,deadline,mark/unmark","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"    public static void inputChecker(String[] str, String task) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"        if (str.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a \" + task + \" cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Sasmik23"},"content":"    /***","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Sasmik23"},"content":"     * receives string of date and time, returns Date object","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Sasmik23"},"content":"     * @param str","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Sasmik23"},"content":"     * @return Date","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Sasmik23"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Sasmik23"},"content":"    public static Date dateParser(String str) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Sasmik23"},"content":"        if (str.length() \u003c 15) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Sasmik23"},"content":"            throw new DukeException(\"Invalid date, must be of the form dd/mm/yyyy hhmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Sasmik23"},"content":"        String newStr \u003d str.substring(0, 13) + \":\" + str.substring(13);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(newStr);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Sasmik23"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Sasmik23"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Sasmik23"},"content":"            Date d1 \u003d df.parse(newStr);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Sasmik23"},"content":"            return d1;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Sasmik23"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Sasmik23"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Sasmik23"},"content":"            throw new DukeException(\"Invalid date\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"    /***","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Sasmik23"},"content":"     * parses user input","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Sasmik23"},"content":"     * @param input","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Sasmik23"},"content":"     * @param toStore","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Sasmik23"},"content":"     * @return truw if user has not exited, false if user has exited chatbot","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Sasmik23"},"content":"    public static boolean parse(String input, boolean toStore) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Sasmik23"},"content":"        String[] splitStr \u003d input.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Sasmik23"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Sasmik23"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Sasmik23"},"content":"        //list out each task from Duke.tasks ArrayList","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Sasmik23"},"content":"        else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Sasmik23"},"content":"            System.out.println(\"  Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Sasmik23"},"content":"            for (int i \u003d 0; i \u003c Task.getSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Sasmik23"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Sasmik23"},"content":"                System.out.println(\"  \" + index + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Sasmik23"},"content":"        //create Todo object","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Sasmik23"},"content":"        else if (splitStr[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Sasmik23"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Sasmik23"},"content":"                inputChecker(splitStr, \"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Sasmik23"},"content":"                Todo t \u003d new Todo(input.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Sasmik23"},"content":"                tasks.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Sasmik23"},"content":"                if (toStore){","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Sasmik23"},"content":"                    Storage.saveTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Sasmik23"},"content":"                };","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Sasmik23"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Sasmik23"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Sasmik23"},"content":"        //create deadline object, splitting the due date by \"/\" and stripping off the by:","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Sasmik23"},"content":"        else if (splitStr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Sasmik23"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Sasmik23"},"content":"                inputChecker(splitStr, \"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Sasmik23"},"content":"                String[] deadlineArr \u003d input.split(\"/by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Sasmik23"},"content":"                Date deadline \u003d dateParser(deadlineArr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Sasmik23"},"content":"                Deadline d \u003d new Deadline(deadlineArr[0].substring(9), deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Sasmik23"},"content":"                tasks.add(d);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Sasmik23"},"content":"                if (toStore){","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Sasmik23"},"content":"                    Storage.saveTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Sasmik23"},"content":"                };","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Sasmik23"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Sasmik23"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Sasmik23"},"content":"        //create event object, splitting the due date by \"/\" and stripping off the to: and from:","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Sasmik23"},"content":"        else if (splitStr[0].equals(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Sasmik23"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Sasmik23"},"content":"                inputChecker(splitStr, \"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Sasmik23"},"content":"                int startIndex \u003d input.indexOf(\"/from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Sasmik23"},"content":"                int endIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Sasmik23"},"content":"                Date from \u003d dateParser(input.substring(startIndex + 6, endIndex - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Sasmik23"},"content":"                Date to \u003d dateParser(input.substring(endIndex + 4));","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Sasmik23"},"content":"                Event e \u003d new Event(input.substring(6, startIndex), from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Sasmik23"},"content":"                tasks.add(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Sasmik23"},"content":"                if (toStore){","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"Sasmik23"},"content":"                    Storage.saveTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"Sasmik23"},"content":"                };","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"Sasmik23"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Sasmik23"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Sasmik23"},"content":"        //find a certain task","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"Sasmik23"},"content":"        else if (splitStr[0].equals(\"find\")){","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"Sasmik23"},"content":"            try{","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"Sasmik23"},"content":"                inputChecker(splitStr, \"find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"Sasmik23"},"content":"                String toFind \u003d input.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"Sasmik23"},"content":"                ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"Sasmik23"},"content":"                for (Task task:tasks){","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Sasmik23"},"content":"                    if (task.getDescription().contains(toFind)){","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"Sasmik23"},"content":"                        foundTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"Sasmik23"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"Sasmik23"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"Sasmik23"},"content":"                if (foundTasks.size() \u003e0){","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"Sasmik23"},"content":"                    System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"Sasmik23"},"content":"                    for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"Sasmik23"},"content":"                        int index \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"Sasmik23"},"content":"                        System.out.println(\"  \" + index + \".\" + foundTasks.get(i).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"Sasmik23"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"Sasmik23"},"content":"                } else{","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"Sasmik23"},"content":"                    System.out.println(\"No tasks called \" + toFind + \" found\");","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"Sasmik23"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"Sasmik23"},"content":"            } catch (DukeException e){","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"Sasmik23"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"Sasmik23"},"content":"        //mark or unmark an existing task","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"Sasmik23"},"content":"        else if (splitStr[0].equals(\"mark\") || splitStr[0].equals(\"unmark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"Sasmik23"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"Sasmik23"},"content":"                inputChecker(splitStr, \"mark/unmark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"Sasmik23"},"content":"                int index \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"Sasmik23"},"content":"                Task item \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"Sasmik23"},"content":"                item.setAction(splitStr[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"Sasmik23"},"content":"                if (toStore){  Storage.saveTasks(tasks); };","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"Sasmik23"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"Sasmik23"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"Sasmik23"},"content":"        //delete task from Duke.tasks ArrayList","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"Sasmik23"},"content":"        else if (splitStr[0].equals(\"delete\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"Sasmik23"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"Sasmik23"},"content":"                inputChecker(splitStr, \"delete\");","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"Sasmik23"},"content":"                int index \u003d Integer.parseInt(splitStr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"Sasmik23"},"content":"                Task item \u003d tasks.remove(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"Sasmik23"},"content":"                item.delete();","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"Sasmik23"},"content":"                if (toStore){","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"Sasmik23"},"content":"                    Storage.saveTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"Sasmik23"},"content":"                };","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"Sasmik23"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"Sasmik23"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"Sasmik23"},"content":"        //unknown command","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"Sasmik23"},"content":"        else {","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"Sasmik23"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"----------------------------------------\");","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"Sasmik23"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"Sasmik23"},"content":"    /***","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"Sasmik23"},"content":"     * Until user types \u0027bye\u0027, will keep calling parse function with user input","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"Sasmik23"},"content":"     * @param savedTasks loads existing","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"Sasmik23"},"content":"    public static void getUserInputs(ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"Sasmik23"},"content":"        tasks \u003d savedTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"Sasmik23"},"content":"        boolean flag \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"Sasmik23"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"Sasmik23"},"content":"        while (flag \u003d\u003d true) {","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"Sasmik23"},"content":"            String input \u003d userInput.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"Sasmik23"},"content":"            flag \u003d parse(input,true);","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Sasmik23":205}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"import java.util.Date;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"    protected Date by;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"    protected String formatDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"    public Deadline(String description, Date by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"        SimpleDateFormat outputFormat \u003d new SimpleDateFormat(\"dd MMM yyyy h a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"        this.formatDate \u003d outputFormat.format(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"  \" + this);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"Now you have \" + super.size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + formatDate + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Sasmik23":25}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"import java.util.Date;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"    protected Date from;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"    protected Date to;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"    protected String fromFormat;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"    protected String toFormat;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"    public Event(String description, Date from , Date to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"        SimpleDateFormat outputFormat \u003d new SimpleDateFormat(\"dd MMM yyyy h a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"        this.fromFormat \u003d outputFormat.format(from);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"        this.toFormat \u003d outputFormat.format(to);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"  \" + this);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"Now you have \" + super.size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + fromFormat + \" to: \" + toFormat + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Sasmik23":30}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"/***","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":" * Task class, superclass to Todo, Deadline and Event subclasses","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"    //total number of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"    protected static int size \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"        size \u003d size + 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"    public String getDescription(){","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"        return this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"    public static int getSize(){","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"        return size;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"    /***","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Sasmik23"},"content":"     * Sets isDone to true or false depending on user input","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Sasmik23"},"content":"     * @param action string mark or unmark","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Sasmik23"},"content":"    public void setAction(String action){","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Sasmik23"},"content":"        if(action.equals(\"mark\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"Sasmik23"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Sasmik23"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Sasmik23"},"content":"        } else if(action.equals(\"unmark\")){","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Sasmik23"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"Sasmik23"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"  \" + this);","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Sasmik23"},"content":"    /***","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Sasmik23"},"content":"     * reduce size of tasks and print remaining number","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Sasmik23"},"content":"    public void delete(){","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"Sasmik23"},"content":"        size \u003d size -1;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"  \" + this);","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"Sasmik23"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"Sasmik23"},"content":"        return \"[\" + this.getStatusIcon()+ \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Sasmik23":63}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"  \" + this);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"Now you have \" + super.size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Sasmik23":17}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"    public void showLoadingError(){","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"Error while loading file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"    public void printGreeting(){","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"        System.out.println(\"Hello! I\u0027m Mikhil\" + \u0027\\n\u0027 + \"What can I do for you\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"    public void printEnding(){ System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Sasmik23":18}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import duke.parsers.InputParser;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"import org.junit.After;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import org.junit.Before;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"public class DukeTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"    @Before","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"    @After","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"    public void InitTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"        assertEquals(1 + 12, 13);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Sasmik23"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Sasmik23"},"content":"    public void todoTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Sasmik23"},"content":"        InputParser.parse(\"todo gym\", false);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Sasmik23"},"content":"        String actual \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + \"  [T][ ] gym\" + \"\\n\" + \"Now you have 1 tasks in the list.\" + \"\\n\" + \"----------------------------------------\";","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Sasmik23"},"content":"        assertEquals(actual, outContent.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Sasmik23":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Sasmik23":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sasmik23":1,"-":20}}]
