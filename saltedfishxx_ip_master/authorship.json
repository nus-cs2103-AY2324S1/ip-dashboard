[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"# controllers.duke project template","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"3. After that, locate the `src/main/java/controllers.duke.java` file, right-click it, and choose `Run controllers.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"saltedfishxx":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"saltedfishxx":21,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"T | 1 | read assignment","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"T | 0 | check class time","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"D | 0 | read book | 2023-09-13 14:00","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"saltedfishxx":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"import ui.Main;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"public class Launcher {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"saltedfishxx":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.ErrorStorageException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import helpers.Message;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import helpers.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import helpers.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":" * Main Class of controllers.Duke","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"public class Duke {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    private final String DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"    private Message message;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"     * Empty public constructor to load controllers.Duke","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    public Duke() {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor to load controllers.Duke","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"     * @param filePath File path to get text file data from","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"     * @throws ErrorStorageException Exception for storage loading error","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"    public Duke(String filePath) throws ErrorStorageException {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"        message \u003d new Message();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"        String projRoot \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"        String path \u003d projRoot + \"/\" + DIRECTORY + filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"            taskList \u003d new TaskList(this.storage.read());","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"            message.showLoadingError();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"    public Storage getStorage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"        return this.storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"        return this.taskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"saltedfishxx":51}},{"path":"src/main/java/exceptions/EmptyTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where a collection of tasks is found to be empty","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" * or when index is not found inside the task elements.","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"public class EmptyTasksException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor for throwing EmptyTasksException","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"     * @param message string of text","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"    public EmptyTasksException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho! The number you entered is incorrect! The task list is empty\"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"                + \" or not part of the tasks, macho!\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":17}},{"path":"src/main/java/exceptions/ErrorStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where there is an error loading text file data","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class ErrorStorageException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor for throwing ErrorStorageException","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"     * @param message string of text","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"    public ErrorStorageException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho! There is an error loading existing storage of tasks list!\\n\" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"saltedfishxx":14}},{"path":"src/main/java/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where input has invalid arguments.","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class InvalidArgumentException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor for throwing InvalidArgumentException","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"     * @param message string of text","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"    public InvalidArgumentException(String message, String cmd) {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Wrong argument \u0027\" + message + \"\u0027 provided, macho! Please use \" + cmd","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"                + \" for any tasks, macho!\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":15}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where input has invalid commands.","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor for throwing InvalidCommandException","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"     * @param message string of text","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho...I do not understand what \" + message + \" means. Please enter a correct command, macho!\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":14}},{"path":"src/main/java/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where input has invalid index entered.","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor for throwing InvalidIndexException","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"     * @param message string of text","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"    public InvalidIndexException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho! The target you selected is out of the list or does not exist, please enter again macho!\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":14}},{"path":"src/main/java/exceptions/InvalidTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where input argument has missing task description.","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class InvalidTaskDescriptionException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor for throwing InvalidTaskDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"     * @param message string of text","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"    public InvalidTaskDescriptionException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho! The description of a \" + message + \" cannot be empty, macho!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":14}},{"path":"src/main/java/exceptions/InvalidTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where input date and time is in invalid format.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"public class InvalidTimeFormatException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor for throwing InvalidTaskDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"     * @param message string of text","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"    public InvalidTimeFormatException(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho! The input time format of a \" + message + \" is wrong, macho! Please enter in format \"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"               + \"yyyy-MM-dd HH:mm, macho!\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"saltedfishxx":16}},{"path":"src/main/java/helpers/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package helpers;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.EmptyTasksException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.ErrorStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidTimeFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":" * Represents Message class that operations to print out messages for users","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"public class Message {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    final boolean isDebug \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show message that task has been marked","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"     * @param task Task to mark as done","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    public String showMarkDoneMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"        return \"I have marked this task as done per your request, macho!\\n\" + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show message that task has been unmarked","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"     * @param task Task to unmarked as done","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"    public String showUnmarkDoneMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"        return \"I have marked this task as undone yet, per your request, macho!\\n\" + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show message that task has been deleted","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"     * @param task     Task to be deleted","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"    public String showDeletedTaskMessage(TaskList taskList, Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"        return \"I have deleted this task as done per your request, macho!\\n\" + task.toString()","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"                + \"\\nYou now have \" + taskList.getListLength() + \" tasks in the list, macho!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show message that task has been added","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"     * @param task     Task to be added","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"    public String showAddTaskMessage(TaskList taskList, Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"        return \"Got it macho! I\u0027ve added this task:\\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"                + \"You now have \" + taskList.getListLength() + \" tasks in the list, macho!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show message on the list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"    public String showTaskList(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"        return taskList.printTaskList();","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show message on the filtered list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"    public String showFilteredTaskList(TaskList taskList, String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"        return taskList.filterTaskList(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show error message if loading of storage fails","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"saltedfishxx"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"saltedfishxx"},"content":"        return new ErrorStorageException(\"\").toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show error message if there is invalid argument","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"saltedfishxx"},"content":"     * @param substring String with invalid argument","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"saltedfishxx"},"content":"     * @param s         Command for correct argument","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"saltedfishxx"},"content":"    public String showArgumentErrorMessage(String substring, String s) {","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"saltedfishxx"},"content":"        return new InvalidArgumentException(substring, s).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show error message if there is invalid datetime format","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"saltedfishxx"},"content":"     * @param part String containing the invalid format","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"saltedfishxx"},"content":"    public String showInvalidTimeFormatErrorMessage(String part) {","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"saltedfishxx"},"content":"        return new InvalidTimeFormatException(part).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show error message if there is invalid index","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String containing the invalid index","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"saltedfishxx"},"content":"    public String showInvalidIndexErrorMessage(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"saltedfishxx"},"content":"        return new InvalidIndexException(input).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show error message if there is invalid command entered","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"saltedfishxx"},"content":"     * @param message String containing the invalid command","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"saltedfishxx"},"content":"    public String showInvalidCommandErrorMessage(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"saltedfishxx"},"content":"        return new InvalidCommandException(message).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show error message if there is invalid command entered","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"saltedfishxx"},"content":"     * @param message String containing the invalid command","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"saltedfishxx"},"content":"    public String showInvalidArgumentErrorMessage(String command, String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"saltedfishxx"},"content":"        return new InvalidArgumentException(message, command).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"saltedfishxx"},"content":"     * Method to show error message if user is performing actions on empty tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of message","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"saltedfishxx"},"content":"    public String showEmptyTasksError(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"saltedfishxx"},"content":"        return new EmptyTasksException(input).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"saltedfishxx":151}},{"path":"src/main/java/helpers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package helpers;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.EmptyTasksException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.ErrorStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidTaskDescriptionException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidTimeFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"import tasks.Events;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"import tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":" * Represents Parser class that deals with processing user commands","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"public class Parser {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    private static final DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    protected final String cmd;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    protected final TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    protected String input;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    protected Message message;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    //TODO 1. Handle GUI exception | 2. Handle exit GUI when bye command","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"     * Constructor for Helpers.Commands to initalise the relevant parameters","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"     * @param cmd      The command entered","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"     * @param taskList The list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"     * @param storage  The storage class to perform read/write","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"    public Parser(String cmd, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"        this.message \u003d new Message();","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"     * Creates a task relating to ToDo.","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"    public String createToDo(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"        String taskDesc \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"            return new InvalidTaskDescriptionException(\"To-Do task\").toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"            Todo td \u003d new Todo(taskDesc, false);","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"            this.taskList.addTask(td);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"            this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"            return message.showAddTaskMessage(this.taskList, td);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"     * Creates a task relating to Deadline.","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"    public String createDeadline(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"        if (parts.length \u003d\u003d 1 || parts[1].isEmpty() || parts[1].isBlank()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"            return message.showArgumentErrorMessage(input.substring(9), \"/by\");","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"                String taskDesc \u003d parts[0].split(\" \", 2)[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parts[1], dateTimeFormat);","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"                Deadline dl \u003d new Deadline(taskDesc, false, by);","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"                this.taskList.addTask(dl);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"                this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"saltedfishxx"},"content":"                return message.showAddTaskMessage(this.taskList, dl);","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"saltedfishxx"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"saltedfishxx"},"content":"                return message.showInvalidTimeFormatErrorMessage(parts[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"saltedfishxx"},"content":"     * Creates a task relating to Events.","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"saltedfishxx"},"content":"    public String createEvent(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"saltedfishxx"},"content":"        String[] parts \u003d input.split(\"\\\\s+/from\\\\s+|\\\\s+/to\\\\s+\");","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"saltedfishxx"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"saltedfishxx"},"content":"            return message.showArgumentErrorMessage(input.substring(6), \"/from and /to\");","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"saltedfishxx"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"saltedfishxx"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"saltedfishxx"},"content":"                String taskDesc \u003d parts[0].split(\" \", 2)[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime afterFrom \u003d LocalDateTime.parse(parts[1], dateTimeFormat);","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime afterTo \u003d LocalDateTime.parse(parts[2], dateTimeFormat);","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"saltedfishxx"},"content":"                Events ev \u003d new Events(taskDesc, false, afterFrom, afterTo);","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"saltedfishxx"},"content":"                this.taskList.addTask(ev);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"saltedfishxx"},"content":"                this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"saltedfishxx"},"content":"                return message.showAddTaskMessage(this.taskList, ev);","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"saltedfishxx"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"saltedfishxx"},"content":"                return message.showInvalidTimeFormatErrorMessage(parts[1] + \" \" + parts[2]);","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":110,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":111,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":112,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":113,"author":{"gitId":"saltedfishxx"},"content":"     * Marks a task as uncompleted.","lastModifiedDate":"2023-08-20"},{"lineNumber":114,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":115,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":117,"author":{"gitId":"saltedfishxx"},"content":"    public String unmark(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"saltedfishxx"},"content":"            int index \u003d Integer.parseInt(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"saltedfishxx"},"content":"            if (index \u003c 0 || this.taskList.getListLength() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"saltedfishxx"},"content":"                return message.showEmptyTasksError(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"saltedfishxx"},"content":"            } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":123,"author":{"gitId":"saltedfishxx"},"content":"                try {","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"saltedfishxx"},"content":"                    Task task \u003d this.taskList.markTaskAsUnDone(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"saltedfishxx"},"content":"                    this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"saltedfishxx"},"content":"                    return message.showUnmarkDoneMessage(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"saltedfishxx"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"saltedfishxx"},"content":"                    return message.showInvalidIndexErrorMessage(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"saltedfishxx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"saltedfishxx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"saltedfishxx"},"content":"            return message.showInvalidCommandErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":136,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":137,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"saltedfishxx"},"content":"     * Marks a task as completed.","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":142,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":144,"author":{"gitId":"saltedfishxx"},"content":"    public String mark(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"saltedfishxx"},"content":"            int index \u003d Integer.parseInt(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"saltedfishxx"},"content":"            if (index \u003c 0 || this.taskList.getListLength() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"saltedfishxx"},"content":"                return message.showEmptyTasksError(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"saltedfishxx"},"content":"            } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":151,"author":{"gitId":"saltedfishxx"},"content":"                try {","lastModifiedDate":"2023-08-20"},{"lineNumber":152,"author":{"gitId":"saltedfishxx"},"content":"                    Task task \u003d this.taskList.markTaskAsDone(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"saltedfishxx"},"content":"                    this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"saltedfishxx"},"content":"                    return message.showMarkDoneMessage(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"saltedfishxx"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":157,"author":{"gitId":"saltedfishxx"},"content":"                    return message.showInvalidIndexErrorMessage(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"saltedfishxx"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":159,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":160,"author":{"gitId":"saltedfishxx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"saltedfishxx"},"content":"            return message.showInvalidCommandErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":164,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":165,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":166,"author":{"gitId":"saltedfishxx"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-20"},{"lineNumber":167,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":168,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":169,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":170,"author":{"gitId":"saltedfishxx"},"content":"    public String deleteTask(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"saltedfishxx"},"content":"            int index \u003d Integer.parseInt(input.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":173,"author":{"gitId":"saltedfishxx"},"content":"            if (index \u003c 0 || this.taskList.getListLength() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"saltedfishxx"},"content":"                return message.showEmptyTasksError(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":175,"author":{"gitId":"saltedfishxx"},"content":"            } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":176,"author":{"gitId":"saltedfishxx"},"content":"                try {","lastModifiedDate":"2023-08-20"},{"lineNumber":177,"author":{"gitId":"saltedfishxx"},"content":"                    Task task \u003d this.taskList.removeTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"saltedfishxx"},"content":"                    this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"saltedfishxx"},"content":"                    return message.showDeletedTaskMessage(this.taskList, task);","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"saltedfishxx"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":182,"author":{"gitId":"saltedfishxx"},"content":"                    return message.showInvalidIndexErrorMessage(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"saltedfishxx"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":184,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":185,"author":{"gitId":"saltedfishxx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"saltedfishxx"},"content":"            return message.showInvalidIndexErrorMessage(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":189,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":190,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"saltedfishxx"},"content":"     * Method to filter tasks based on user input","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"saltedfishxx"},"content":"     * @param input Regex input by user","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"saltedfishxx"},"content":"    public String findTasks(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":195,"author":{"gitId":"saltedfishxx"},"content":"        String regex \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"saltedfishxx"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"saltedfishxx"},"content":"            return message.showInvalidArgumentErrorMessage(\"find\", regex);","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"saltedfishxx"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"saltedfishxx"},"content":"            return message.showFilteredTaskList(this.taskList, regex);","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":204,"author":{"gitId":"saltedfishxx"},"content":"     * Execute the controllers.Duke\u0027s functions to process user\u0027s input.","lastModifiedDate":"2023-09-04"},{"lineNumber":205,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":206,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":207,"author":{"gitId":"saltedfishxx"},"content":"    public String execute(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":208,"author":{"gitId":"saltedfishxx"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-07"},{"lineNumber":209,"author":{"gitId":"saltedfishxx"},"content":"        CommandsList command \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":211,"author":{"gitId":"saltedfishxx"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":212,"author":{"gitId":"saltedfishxx"},"content":"                command \u003d CommandsList.valueOf(this.cmd.toUpperCase());","lastModifiedDate":"2023-08-20"},{"lineNumber":213,"author":{"gitId":"saltedfishxx"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":214,"author":{"gitId":"saltedfishxx"},"content":"                return message.showInvalidCommandErrorMessage(this.cmd);","lastModifiedDate":"2023-09-07"},{"lineNumber":215,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":216,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":217,"author":{"gitId":"saltedfishxx"},"content":"            switch (command) {","lastModifiedDate":"2023-08-20"},{"lineNumber":218,"author":{"gitId":"saltedfishxx"},"content":"            case LIST:","lastModifiedDate":"2023-08-20"},{"lineNumber":219,"author":{"gitId":"saltedfishxx"},"content":"                return message.showTaskList(this.taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":220,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":221,"author":{"gitId":"saltedfishxx"},"content":"            case TODO:","lastModifiedDate":"2023-08-20"},{"lineNumber":222,"author":{"gitId":"saltedfishxx"},"content":"                return createToDo(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":223,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":224,"author":{"gitId":"saltedfishxx"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-20"},{"lineNumber":225,"author":{"gitId":"saltedfishxx"},"content":"                return createDeadline(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":226,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":227,"author":{"gitId":"saltedfishxx"},"content":"            case EVENT:","lastModifiedDate":"2023-08-20"},{"lineNumber":228,"author":{"gitId":"saltedfishxx"},"content":"                return createEvent(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":229,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":230,"author":{"gitId":"saltedfishxx"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-20"},{"lineNumber":231,"author":{"gitId":"saltedfishxx"},"content":"                return unmark(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":232,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":233,"author":{"gitId":"saltedfishxx"},"content":"            case MARK:","lastModifiedDate":"2023-08-20"},{"lineNumber":234,"author":{"gitId":"saltedfishxx"},"content":"                return mark(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":235,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":236,"author":{"gitId":"saltedfishxx"},"content":"            case DELETE:","lastModifiedDate":"2023-08-20"},{"lineNumber":237,"author":{"gitId":"saltedfishxx"},"content":"                return deleteTask(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":238,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":239,"author":{"gitId":"saltedfishxx"},"content":"            case FIND:","lastModifiedDate":"2023-09-02"},{"lineNumber":240,"author":{"gitId":"saltedfishxx"},"content":"                return findTasks(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":241,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"saltedfishxx"},"content":"            case BYE:","lastModifiedDate":"2023-08-20"},{"lineNumber":243,"author":{"gitId":"saltedfishxx"},"content":"                return \"\\nBye! Hope to see you again soon, macho!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":244,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":245,"author":{"gitId":"saltedfishxx"},"content":"            default:","lastModifiedDate":"2023-08-20"},{"lineNumber":246,"author":{"gitId":"saltedfishxx"},"content":"                return \"Invalid command macho! Please try again!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":247,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":248,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":249,"author":{"gitId":"saltedfishxx"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":250,"author":{"gitId":"saltedfishxx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-20"},{"lineNumber":251,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":252,"author":{"gitId":"saltedfishxx"},"content":"        return \"Macho there is an error processing your message, please try again!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":253,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":254,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":255,"author":{"gitId":"saltedfishxx"},"content":"    private enum CommandsList {","lastModifiedDate":"2023-08-20"},{"lineNumber":256,"author":{"gitId":"saltedfishxx"},"content":"        LIST,","lastModifiedDate":"2023-08-20"},{"lineNumber":257,"author":{"gitId":"saltedfishxx"},"content":"        TODO,","lastModifiedDate":"2023-08-20"},{"lineNumber":258,"author":{"gitId":"saltedfishxx"},"content":"        MARK,","lastModifiedDate":"2023-08-20"},{"lineNumber":259,"author":{"gitId":"saltedfishxx"},"content":"        UNMARK,","lastModifiedDate":"2023-08-20"},{"lineNumber":260,"author":{"gitId":"saltedfishxx"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-20"},{"lineNumber":261,"author":{"gitId":"saltedfishxx"},"content":"        EVENT,","lastModifiedDate":"2023-08-20"},{"lineNumber":262,"author":{"gitId":"saltedfishxx"},"content":"        DELETE,","lastModifiedDate":"2023-08-20"},{"lineNumber":263,"author":{"gitId":"saltedfishxx"},"content":"        FIND,","lastModifiedDate":"2023-09-02"},{"lineNumber":264,"author":{"gitId":"saltedfishxx"},"content":"        BYE","lastModifiedDate":"2023-08-20"},{"lineNumber":265,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":266,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":267,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":268,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":268}},{"path":"src/main/java/helpers/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package helpers;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.ErrorStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"import tasks.Events;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"import tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":" * Represents Storage class that deals with processing read and write to data storage","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"public class Storage {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    private static final DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    private final String path;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor for Storage which initialize read/write","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"     * @param path File path","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"     * @throws ErrorStorageException exception to throw when there is storage loading error","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"    public Storage(String path) throws ErrorStorageException {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"        File file \u003d new File(this.path);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        File parentDirectory \u003d file.getParentFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"        if (!parentDirectory.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"            parentDirectory.mkdirs();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"                throw new ErrorStorageException(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"     * A method for reading the text file and processing into a list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"     * @return An arraylist of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"     * @throws ErrorStorageException","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"    public ArrayList\u003cTask\u003e read() throws ErrorStorageException {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"            File file \u003d new File(this.path);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"            FileReader reader \u003d new FileReader(file);","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"            String readLine;","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"            while ((readLine \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"                //E | 0 | project meeting | 2pm | 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"                String[] lines \u003d readLine.split(\" \\\\| \");","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"                //System.out.println(Arrays.toString(lines));","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"                String type \u003d lines[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"                    switch (type) {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"                        taskList.addTask(new Todo(lines[2], !lines[1].equals(\"0\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"                        taskList.addTask(new Deadline(lines[2], !lines[1].equals(\"0\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"                                LocalDateTime.parse(lines[3], dateTimeFormat)));","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"saltedfishxx"},"content":"                        taskList.addTask(new Events(lines[2], !lines[1].equals(\"0\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"saltedfishxx"},"content":"                                LocalDateTime.parse(lines[3], dateTimeFormat),","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"saltedfishxx"},"content":"                                LocalDateTime.parse(lines[4], dateTimeFormat)));","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"saltedfishxx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"saltedfishxx"},"content":"                    default:","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"saltedfishxx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"saltedfishxx"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"saltedfishxx"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"saltedfishxx"},"content":"                    e.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"saltedfishxx"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"saltedfishxx"},"content":"            reader.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"saltedfishxx"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"saltedfishxx"},"content":"            throw new ErrorStorageException(ex.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"saltedfishxx"},"content":"        return taskList.getTaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"saltedfishxx"},"content":"     * A method for writing the text file and processing list of tasks into text data","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"saltedfishxx"},"content":"     * @throws IOException Exception if there is error writing to the file","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"saltedfishxx"},"content":"    public void write(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"saltedfishxx"},"content":"            FileWriter writer \u003d new FileWriter(this.path, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"saltedfishxx"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"saltedfishxx"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"saltedfishxx"},"content":"                bufferedWriter.write(task.getData());","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"saltedfishxx"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"saltedfishxx"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"saltedfishxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"saltedfishxx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"saltedfishxx":122}},{"path":"src/main/java/helpers/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package helpers;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":" * Represents TaskList class that contains the list of tasks as well as CRUD operations","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"     * Empty constructor for no tasks input","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"     * Constructor with tasks in input","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"     * @param tasks List of tasks to initialise","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"     * Method to add a task into the list","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"     * @param task Task object, can be deadline, to-do or events","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"     * Method to remove a task from the list","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"     * @param index Element to remove the task","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"     * @return Task that was removed","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"     * Method to mark task as done","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"     * @param index Element to mark the task","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"     * @return Task that was modified","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"    public Task markTaskAsDone(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"        t.markedAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"        return t;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"     * Method to mark task as undone","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"     * @param index Element to unMark the task","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"     * @return Task that was modified","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"    public Task markTaskAsUnDone(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"        t.markedAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"        return t;","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"     * Method to get the number of tasks in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"     * @return Number of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"saltedfishxx"},"content":"    public int getListLength() {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"saltedfishxx"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"saltedfishxx"},"content":"     * Method to get the list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"saltedfishxx"},"content":"     * @return Tasklist","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"saltedfishxx"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"saltedfishxx"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"saltedfishxx"},"content":"     * Method to print the task list","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"saltedfishxx"},"content":"     * @return String representation on the list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"saltedfishxx"},"content":"    public String printTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"saltedfishxx"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"saltedfishxx"},"content":"            return \"No tasks recorded, macho!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"saltedfishxx"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"saltedfishxx"},"content":"        sb.append(\"Here are the list of tasks recorded: \\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"saltedfishxx"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"saltedfishxx"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"saltedfishxx"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"saltedfishxx"},"content":"            sb.append(index).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"saltedfishxx"},"content":"        return sb.toString().trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"saltedfishxx"},"content":"     * Method to filter the task list given user\u0027s string input","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"saltedfishxx"},"content":"     * @param regex Pattern to match in the task list","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"saltedfishxx"},"content":"     * @return Filtered task list","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"saltedfishxx"},"content":"    public String filterTaskList(String regex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"saltedfishxx"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"saltedfishxx"},"content":"        Pattern pattern \u003d Pattern.compile(regex, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"saltedfishxx"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"saltedfishxx"},"content":"            int index \u003d this.tasks.indexOf(t) + 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"saltedfishxx"},"content":"            Matcher matcher \u003d pattern.matcher(t.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"saltedfishxx"},"content":"            if (matcher.find()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"saltedfishxx"},"content":"                sb.append(index).append(\". \").append(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"saltedfishxx"},"content":"                if (index \u003c this.tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"saltedfishxx"},"content":"                    sb.append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"saltedfishxx"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"saltedfishxx"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"saltedfishxx":135}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":" * Adapted from Partial Solution provided by https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":" * A child class of Tasks to create tasks that need to be done before a specific date/time.","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":" * e.g., submit report by 2023-04-12 15:00.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    private static final DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor to create a deadline task","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"     * @param description Task description","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"     * @param isDone      Boolean if task is done/marked","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"     * @param by          Datetime of deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    public Deadline(String description, Boolean isDone, LocalDateTime by) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(dateTimeFormat) + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"    public String getData() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"        String marked \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        return \"D | \" + marked + \" | \" + this.taskDesc + \" | \" + this.by.format(dateTimeFormat);","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":38}},{"path":"src/main/java/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":" * Adapted from Partial Solution provided by https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":" * A child class of Tasks to create tasks that start at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":" * e.g., (a) team project meeting 2/10/2019 2-4pm (b) orientation week 4/10/2019 to 11/10/2019.","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    private static final DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    protected final LocalDateTime from;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    protected final LocalDateTime to;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor to create a Event task","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"     * @param description Task description","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"     * @param isDone      Boolean if task is done/marked","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"     * @param from        Datetime from of the event","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"     * @param to          Datetime to of the event","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    public Events(String description, Boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(dateTimeFormat)","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"                + \" to: \" + this.to.format(dateTimeFormat) + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"    public String getData() {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"        String marked \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"        return \"E | \" + marked + \" | \" + this.taskDesc + \" | \" + this.from.format(dateTimeFormat)","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"                + \" | \" + this.to.format(dateTimeFormat);","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":43}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" * Adapted from Partial Solution provided by https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":" * A Parent class of Tasks to create tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"public class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"    protected String taskDesc;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor to create a Event task","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"     * @param taskDesc Task description","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"     * @param isDone   Boolean if task is done/marked","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"    public Task(String taskDesc, boolean isDone) {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"     * Method to get the task description","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of task description","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    public String getTaskDesc() {","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"        return this.taskDesc;","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"     * Method to get the task done status","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"     * @return String representation if the task is done","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"        return this.isDone ? \"x\" : \" \";","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"     * Method to mark the task as done","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"     * @return Task object","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"    public Task markedAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"        return this;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"     * Method to mark the task as not done","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"     * @return Task object","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"    public Task markedAsUndone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"        return this;","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"     * Method to return the string representation of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"     * @return Task object","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.getTaskDesc();","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"     * Method to return the string representation of the task formatted","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"     * @return String of task","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"    public String getData() {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"        String marked \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"        return \" | \" + marked + \" | \" + this.taskDesc;","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"saltedfishxx":79}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" * Adapted from Partial Solution provided by https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":" * A child class of Tasks to create tasks without any date/time attached to it e.g., visit new theme park.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"     * Public constructor to create a todo task","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"     * @param description task description","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"     * @param isDone      boolean on whether task is done","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    public String getData() {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"        String marked \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"        return \"T | \" + marked + \" | \" + this.taskDesc;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":30}},{"path":"src/main/java/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.ErrorStorageException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"import ui.controllers.MainWindow;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    private Duke duke \u003d new Duke(\"/tasks.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    public Main() throws ErrorStorageException {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"            stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"saltedfishxx":39}},{"path":"src/main/java/ui/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package ui.controllers;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"    private void flip() {","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"        db.flip();","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"        return db;","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"saltedfishxx":61}},{"path":"src/main/java/ui/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package ui.controllers;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.ErrorStorageException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import helpers.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    public Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/machoduke.jpg\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing controllers.Duke\u0027s reply and","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"     * then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"        );","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"            System.exit(0);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"        String cmd \u003d input.split(\" \")[0].toUpperCase();","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"        Parser parser \u003d new Parser(cmd, duke.getTaskList(), duke.getStorage());","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"        return parser.execute(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"saltedfishxx":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"saltedfishxx":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"            fx:controller\u003d\"ui.controllers.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"saltedfishxx":23}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import helpers.Message;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidTimeFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":" * Test class for testing Deadline object and operations","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    private static DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"     * Unit test to check if user is able to mark Deadline Task as done","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    public void testDeadlineMarkDoneSuccess() {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"        Deadline deadline \u003d new Deadline(\"finish homework\", false,","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 23:59\", dateTimeFormat));","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(deadline.markedAsDone().toString(), \"[D][x] finish homework (by: 2023-09-01 23:59)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"     * Unit test to check if user is able to mark Deadline Task as not done","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"    public void testDeadlineUnmarkDoneSuccess() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        Deadline deadline \u003d new Deadline(\"finish homework\", false,","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 23:59\", dateTimeFormat));","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(deadline.markedAsUndone().toString(), \"[D][ ] finish homework (by: 2023-09-01 23:59)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"     * Unit test to check if program is able to throw a proper error on invalid date input","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"    public void testInvalidDeadlineException() {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"        Message message \u003d new Message();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"            Deadline deadline \u003d new Deadline(\"finish homework\", false,","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"                    LocalDateTime.parse(\"invalid date\", dateTimeFormat));","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"            assertEquals(\"Macho! The input time format of a \" + \"invalid date\"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"                            + \" is wrong, macho! Please enter in format \"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"                            + \"yyyy-MM-dd HH:mm, macho!\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"                            + \"____________________________________________________________\",","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"                    new InvalidTimeFormatException(\"invalid date\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"saltedfishxx":62}},{"path":"src/test/java/tasks/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import helpers.Message;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"import exceptions.InvalidTimeFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":" * Test class for testing Event object and operations","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"public class EventsTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    private static DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"     * Unit test to check if user is able to mark Event Task as done","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    public void testEventMarkDoneSuccess() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"        Events event \u003d new Events(\"internship talk\", false,","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 14:00\", dateTimeFormat),","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 16:00\", dateTimeFormat));","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(event.markedAsDone().toString(),","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"                \"[E][x] internship talk (from: 2023-09-01 14:00 to: 2023-09-01 16:00)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"     * Unit test to check if user is able to mark Event Task as not done","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"    public void testEventUnmarkDoneSuccess() {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"        Events event \u003d new Events(\"internship talk\", false,","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 14:00\", dateTimeFormat),","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 16:00\", dateTimeFormat));","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(event.markedAsUndone().toString(),","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"                \"[E][ ] internship talk (from: 2023-09-01 14:00 to: 2023-09-01 16:00)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"     * Unit test to check if program is able to throw a proper error on invalid date input","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"    public void testInvalidEventException() {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"        Message message \u003d new Message();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"            Events event \u003d new Events(\"internship talk\", false,","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"                    LocalDateTime.parse(\"invalid date\", dateTimeFormat),","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"                    LocalDateTime.parse(\"invalid date\", dateTimeFormat));","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"            assertEquals(\"Macho! The input time format of a \" + \"invalid date\"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"                            + \" is wrong, macho! Please enter in format \"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"                            + \"yyyy-MM-dd HH:mm, macho!\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"                            + \"____________________________________________________________\",","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"                    new InvalidTimeFormatException(\"invalid date\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"saltedfishxx":66}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"todo create task","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"deadline finish ip by monday","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"deadline finish ip /by monday","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"events attend talk from 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"event attend talk from 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"event attend talk /from 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"mark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"unmark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"delete 1","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"javac  -encoding UTF-8 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"java -classpath ..\\bin controllers.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"saltedfishxx":2,"-":19}}]
