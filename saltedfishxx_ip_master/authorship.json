[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"saltedfishxx":1,"-":41}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"import Exceptions.ErrorStorageException;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"import Exceptions.InvalidCommandException;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import Helpers.Parser;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import Helpers.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import Helpers.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import Helpers.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    private final String DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    public Duke (String filePath) throws ErrorStorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"        String projRoot \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"        String path \u003d projRoot + \"/\" + DIRECTORY + filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"            taskList \u003d new TaskList(this.storage.read());","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"        //Create buffered reader for user input","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"            ui.showStartLogo();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"            ui.showWelcome();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"            boolean isRunning \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"            //exits the echo commands when input contains \u0027bye\u0027","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"            while (isRunning) {","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"                String input \u003d ui.getCommand(br);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"                String cmd \u003d input.split(\" \")[0].toUpperCase();","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"                Parser parser \u003d new Parser(cmd, input, taskList, ui, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"                parser.execute();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"                if (cmd.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"        } catch (IOException | InvalidCommandException | ErrorStorageException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"    public static void main(String[] args) throws ErrorStorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"        new Duke(\"/tasks.txt\").run();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"saltedfishxx":56,"-":4}},{"path":"src/main/java/Exceptions/EmptyTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Exceptions;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where a collection of tasks is found to be empty","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" * or when index is not found inside the task elements.","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"public class EmptyTasksException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"    public EmptyTasksException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho! The number you entered is incorrect! The task list is empty\"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"                + \" or not part of the tasks, macho!\\n\" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":13}},{"path":"src/main/java/Exceptions/ErrorStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where there is an error loading text file data","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class ErrorStorageException extends Exception{","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"    public ErrorStorageException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho! There is an error loading existing storage of tasks list!\\n\" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"saltedfishxx":10}},{"path":"src/main/java/Exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Exceptions;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where input has invalid arguments.","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class InvalidArgumentException extends Exception{","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"    public InvalidArgumentException(String message, String cmd, String divider) {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Wrong argument \u0027\" + message + \"\u0027 provided, macho! Please use \" + cmd","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"                + \" for any deadline tasks, macho!\\n\" + divider);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":10}},{"path":"src/main/java/Exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Exceptions;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where input has invalid commands.","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho...I do not understand what this means. Please enter a correct command, macho!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"        + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":10}},{"path":"src/main/java/Exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Exceptions;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where input has invalid index entered.","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class InvalidIndexException extends Exception{","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"    public InvalidIndexException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho! The target you delete is out of the list or does not exist, please enter again macho!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"        + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":11}},{"path":"src/main/java/Exceptions/InvalidTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Exceptions;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where input argument has missing task description.","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class InvalidTaskDescriptionException extends Exception{","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"    public InvalidTaskDescriptionException(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho! The description of a \" + message + \" cannot be empty, macho!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":10}},{"path":"src/main/java/Exceptions/InvalidTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Custom exception class to handle cases where input date and time is in invalid format.","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"public class InvalidTimeFormatException extends Exception{","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"    public InvalidTimeFormatException(String message, String divider) {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"        super(\"Macho! The input time format of a \" + message + \" is wrong, macho! Please enter in format \" +","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"                \"yyyy-MM-dd HH:mm, macho!\\n\" + divider);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"saltedfishxx":10}},{"path":"src/main/java/Helpers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Helpers;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import Exceptions.*;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import Tasks.Events;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":" * Represents Parser class that deals with processing user commands","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"public class Parser {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    protected final String cmd;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    protected final TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"    protected final String input;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    private final static DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    protected Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"     * Constructor for Helpers.Commands to initalise the relevant parameters","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"     * @param cmd      The command entered","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"     * @param input    The whole user input","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"     * @param taskList The list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"     * @param ui       The ui to perform operations","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"     * @param storage  The storage class to perform read/write","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"    public Parser(String cmd, String input, TaskList taskList, Ui ui, Storage storage) throws ErrorStorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"     * Creates a task relating to ToDo.","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"     * @throws InvalidTaskDescriptionException if task description inside input is empty","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"    public void createToDo(String input) throws InvalidTaskDescriptionException {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"        String taskDesc \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"            throw new InvalidTaskDescriptionException(\"To-Do task\");","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"            Todo td \u003d new Todo(taskDesc, false);","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"            this.taskList.addTask(td);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"            this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"            ui.showAddTaskMessage(this.taskList, td);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"     * Creates a task relating to Deadline.","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"     * @throws InvalidArgumentException if input does not contain the correct /by argument","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"    public void createDeadline(String input) throws InvalidArgumentException, InvalidTimeFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"        if (parts.length \u003d\u003d 1 || parts[1].isEmpty() || parts[1].isBlank()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"            ui.showArgumentErrorMessage(input.substring(9), \"/by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"                String taskDesc \u003d parts[0].split(\" \", 2)[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parts[1], dateTimeFormat);","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"                Deadline dl \u003d new Deadline(taskDesc, false, by);","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"                this.taskList.addTask(dl);","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"                this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"                ui.showAddTaskMessage(this.taskList, dl);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"saltedfishxx"},"content":"                ui.showInvalidTimeFormatErrorMessage(parts[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"saltedfishxx"},"content":"     * Creates a task relating to Events.","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"saltedfishxx"},"content":"     * @throws InvalidArgumentException if input does not contain the correct /from and /to argument","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"saltedfishxx"},"content":"    public void createEvent(String input) throws InvalidArgumentException, InvalidTimeFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"saltedfishxx"},"content":"        String[] parts \u003d input.split(\"\\\\s+/from\\\\s+|\\\\s+/to\\\\s+\");","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"saltedfishxx"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"saltedfishxx"},"content":"            ui.showArgumentErrorMessage(input.substring(6), \"/from and /to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"saltedfishxx"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"saltedfishxx"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"saltedfishxx"},"content":"            String taskDesc \u003d parts[0].split(\" \", 2)[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"saltedfishxx"},"content":"            LocalDateTime afterFrom \u003d LocalDateTime.parse(parts[1], dateTimeFormat);","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"saltedfishxx"},"content":"            LocalDateTime afterTo \u003d LocalDateTime.parse(parts[2], dateTimeFormat);","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"saltedfishxx"},"content":"            Events ev \u003d new Events(taskDesc, false, afterFrom, afterTo);","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"saltedfishxx"},"content":"            this.taskList.addTask(ev);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"saltedfishxx"},"content":"            this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"saltedfishxx"},"content":"            ui.showAddTaskMessage(this.taskList, ev);","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"saltedfishxx"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"saltedfishxx"},"content":"                ui.showInvalidTimeFormatErrorMessage(parts[1] + \" \" + parts[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":110,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":111,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":112,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":113,"author":{"gitId":"saltedfishxx"},"content":"     * Marks a task as uncompleted.","lastModifiedDate":"2023-08-20"},{"lineNumber":114,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":115,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"saltedfishxx"},"content":"     * @throws EmptyTasksException   if list of tasks is empty.","lastModifiedDate":"2023-08-20"},{"lineNumber":117,"author":{"gitId":"saltedfishxx"},"content":"     * @throws InvalidIndexException if index does not match with indexes of task list","lastModifiedDate":"2023-08-20"},{"lineNumber":118,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":119,"author":{"gitId":"saltedfishxx"},"content":"    public void unmark(String input) throws EmptyTasksException, InvalidIndexException, InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"saltedfishxx"},"content":"            int index \u003d Integer.parseInt(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":122,"author":{"gitId":"saltedfishxx"},"content":"            if (index \u003c 0 || this.taskList.getListLength() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"saltedfishxx"},"content":"                throw new EmptyTasksException(input);","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"saltedfishxx"},"content":"            } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"saltedfishxx"},"content":"                try {","lastModifiedDate":"2023-08-20"},{"lineNumber":126,"author":{"gitId":"saltedfishxx"},"content":"                    Task task \u003d this.taskList.markTaskAsUnDone(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"saltedfishxx"},"content":"                    this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"saltedfishxx"},"content":"                    ui.showUnmarkDoneMessage(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"saltedfishxx"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":131,"author":{"gitId":"saltedfishxx"},"content":"                    ui.showInvalidIndexErrorMessage(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"saltedfishxx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":135,"author":{"gitId":"saltedfishxx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"saltedfishxx"},"content":"            ui.showInvalidCommandErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":142,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"saltedfishxx"},"content":"     * Marks a task as completed.","lastModifiedDate":"2023-08-20"},{"lineNumber":144,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":145,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":146,"author":{"gitId":"saltedfishxx"},"content":"     * @throws EmptyTasksException   if list of tasks is empty.","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"saltedfishxx"},"content":"     * @throws InvalidIndexException if index does not match with indexes of task list","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":149,"author":{"gitId":"saltedfishxx"},"content":"    public void mark(String input) throws EmptyTasksException, InvalidIndexException, InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"saltedfishxx"},"content":"            int index \u003d Integer.parseInt(input.split(\" \", 2)[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":152,"author":{"gitId":"saltedfishxx"},"content":"            if (index \u003c 0 || this.taskList.getListLength() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"saltedfishxx"},"content":"                ui.showEmptyTasksError(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"saltedfishxx"},"content":"            } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":156,"author":{"gitId":"saltedfishxx"},"content":"                try {","lastModifiedDate":"2023-08-20"},{"lineNumber":157,"author":{"gitId":"saltedfishxx"},"content":"                    Task task \u003d this.taskList.markTaskAsDone(index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"saltedfishxx"},"content":"                    this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"saltedfishxx"},"content":"                    ui.showMarkDoneMessage(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"saltedfishxx"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":162,"author":{"gitId":"saltedfishxx"},"content":"                    ui.showInvalidIndexErrorMessage(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"saltedfishxx"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":164,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":165,"author":{"gitId":"saltedfishxx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"saltedfishxx"},"content":"            ui.showInvalidCommandErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":169,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":170,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":171,"author":{"gitId":"saltedfishxx"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-20"},{"lineNumber":172,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":173,"author":{"gitId":"saltedfishxx"},"content":"     * @param input String of user input","lastModifiedDate":"2023-08-20"},{"lineNumber":174,"author":{"gitId":"saltedfishxx"},"content":"     * @throws EmptyTasksException   if list of tasks is empty.","lastModifiedDate":"2023-08-20"},{"lineNumber":175,"author":{"gitId":"saltedfishxx"},"content":"     * @throws InvalidIndexException if index does not match with indexes of task list","lastModifiedDate":"2023-08-20"},{"lineNumber":176,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":177,"author":{"gitId":"saltedfishxx"},"content":"    public void deleteTask(String input) throws InvalidIndexException, EmptyTasksException {","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"saltedfishxx"},"content":"        int index \u003d Integer.parseInt(input.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":179,"author":{"gitId":"saltedfishxx"},"content":"        if (index \u003c 0 || this.taskList.getListLength() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"saltedfishxx"},"content":"            throw new EmptyTasksException(input);","lastModifiedDate":"2023-08-20"},{"lineNumber":181,"author":{"gitId":"saltedfishxx"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":182,"author":{"gitId":"saltedfishxx"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":183,"author":{"gitId":"saltedfishxx"},"content":"                Task task \u003d this.taskList.removeTask(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"saltedfishxx"},"content":"                this.storage.write(this.taskList.getTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"saltedfishxx"},"content":"                ui.showDeletedTaskMessage(this.taskList, task);","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"saltedfishxx"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":188,"author":{"gitId":"saltedfishxx"},"content":"                ui.showInvalidIndexErrorMessage(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":190,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":191,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":192,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":193,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":194,"author":{"gitId":"saltedfishxx"},"content":"     * Execute the Duke\u0027s functions to process user\u0027s input.","lastModifiedDate":"2023-08-20"},{"lineNumber":195,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":196,"author":{"gitId":"saltedfishxx"},"content":"     * @throws InvalidCommandException if user enters an invalid command","lastModifiedDate":"2023-08-20"},{"lineNumber":197,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":198,"author":{"gitId":"saltedfishxx"},"content":"    public void execute() throws InvalidCommandException {","lastModifiedDate":"2023-08-26"},{"lineNumber":199,"author":{"gitId":"saltedfishxx"},"content":"        CommandsList command \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":201,"author":{"gitId":"saltedfishxx"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":202,"author":{"gitId":"saltedfishxx"},"content":"                command \u003d CommandsList.valueOf(this.cmd.toUpperCase());","lastModifiedDate":"2023-08-20"},{"lineNumber":203,"author":{"gitId":"saltedfishxx"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":204,"author":{"gitId":"saltedfishxx"},"content":"                ui.showInvalidCommandErrorMessage(this.cmd);","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":206,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":207,"author":{"gitId":"saltedfishxx"},"content":"            switch (command) {","lastModifiedDate":"2023-08-20"},{"lineNumber":208,"author":{"gitId":"saltedfishxx"},"content":"                case LIST:","lastModifiedDate":"2023-08-20"},{"lineNumber":209,"author":{"gitId":"saltedfishxx"},"content":"                    ui.showTaskList(this.taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"saltedfishxx"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":211,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":212,"author":{"gitId":"saltedfishxx"},"content":"                case TODO:","lastModifiedDate":"2023-08-20"},{"lineNumber":213,"author":{"gitId":"saltedfishxx"},"content":"                    createToDo(this.input);","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"saltedfishxx"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":215,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":216,"author":{"gitId":"saltedfishxx"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-20"},{"lineNumber":217,"author":{"gitId":"saltedfishxx"},"content":"                    createDeadline(this.input);","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"saltedfishxx"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":219,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":220,"author":{"gitId":"saltedfishxx"},"content":"                case EVENT:","lastModifiedDate":"2023-08-20"},{"lineNumber":221,"author":{"gitId":"saltedfishxx"},"content":"                    createEvent(this.input);","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"saltedfishxx"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":223,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":224,"author":{"gitId":"saltedfishxx"},"content":"                case UNMARK:","lastModifiedDate":"2023-08-20"},{"lineNumber":225,"author":{"gitId":"saltedfishxx"},"content":"                    unmark(this.input);","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"saltedfishxx"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":227,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":228,"author":{"gitId":"saltedfishxx"},"content":"                case MARK:","lastModifiedDate":"2023-08-20"},{"lineNumber":229,"author":{"gitId":"saltedfishxx"},"content":"                    mark(this.input);","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"saltedfishxx"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":231,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":232,"author":{"gitId":"saltedfishxx"},"content":"                case DELETE:","lastModifiedDate":"2023-08-20"},{"lineNumber":233,"author":{"gitId":"saltedfishxx"},"content":"                    deleteTask(this.input);","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"saltedfishxx"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":235,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":236,"author":{"gitId":"saltedfishxx"},"content":"                case BYE:","lastModifiedDate":"2023-08-20"},{"lineNumber":237,"author":{"gitId":"saltedfishxx"},"content":"                    ui.quit();","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"saltedfishxx"},"content":"                    System.out.println(\"\\nBye! Hope to see you again soon, macho!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":239,"author":{"gitId":"saltedfishxx"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":240,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":241,"author":{"gitId":"saltedfishxx"},"content":"                default:","lastModifiedDate":"2023-08-20"},{"lineNumber":242,"author":{"gitId":"saltedfishxx"},"content":"                    System.out.println(\"Invalid command macho! Please try again!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":243,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":244,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":245,"author":{"gitId":"saltedfishxx"},"content":"        } catch (InvalidArgumentException | EmptyTasksException | InvalidCommandException |","lastModifiedDate":"2023-08-20"},{"lineNumber":246,"author":{"gitId":"saltedfishxx"},"content":"                 InvalidTaskDescriptionException | InvalidIndexException | InvalidTimeFormatException |","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"saltedfishxx"},"content":"                NullPointerException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"saltedfishxx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-20"},{"lineNumber":249,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":250,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":251,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":252,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":253,"author":{"gitId":"saltedfishxx"},"content":"    private enum CommandsList {","lastModifiedDate":"2023-08-20"},{"lineNumber":254,"author":{"gitId":"saltedfishxx"},"content":"        LIST,","lastModifiedDate":"2023-08-20"},{"lineNumber":255,"author":{"gitId":"saltedfishxx"},"content":"        TODO,","lastModifiedDate":"2023-08-20"},{"lineNumber":256,"author":{"gitId":"saltedfishxx"},"content":"        MARK,","lastModifiedDate":"2023-08-20"},{"lineNumber":257,"author":{"gitId":"saltedfishxx"},"content":"        UNMARK,","lastModifiedDate":"2023-08-20"},{"lineNumber":258,"author":{"gitId":"saltedfishxx"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-20"},{"lineNumber":259,"author":{"gitId":"saltedfishxx"},"content":"        EVENT,","lastModifiedDate":"2023-08-20"},{"lineNumber":260,"author":{"gitId":"saltedfishxx"},"content":"        DELETE,","lastModifiedDate":"2023-08-20"},{"lineNumber":261,"author":{"gitId":"saltedfishxx"},"content":"        BYE","lastModifiedDate":"2023-08-20"},{"lineNumber":262,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":263,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":264,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":265,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":265}},{"path":"src/main/java/Helpers/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Helpers;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import Exceptions.ErrorStorageException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import Tasks.Events;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import java.io.*;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":" * Represents Storage class that deals with processing read and write to data storage","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"public class Storage {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    private final String path;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    private final static DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    public Storage(String path) throws ErrorStorageException {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"        File file \u003d new File(this.path);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"        File parentDirectory \u003d file.getParentFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"        if (!parentDirectory.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"            parentDirectory.mkdirs();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"                throw new ErrorStorageException(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"    public ArrayList\u003cTask\u003e read() throws ErrorStorageException {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"            File file \u003d new File(this.path);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"            FileReader reader \u003d new FileReader(file);","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"            String readLine;","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"            while ((readLine \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"                //E | 0 | project meeting | 2pm | 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"                String[] lines \u003d readLine.split(\" \\\\| \");","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"                //System.out.println(Arrays.toString(lines));","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"                String type \u003d lines[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"                    switch (type) {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"                        case \"T\":","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"                            taskList.addTask(new Todo(lines[2], !lines[1].equals(\"0\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"                        case \"D\":","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"                            taskList.addTask(new Deadline(lines[2], !lines[1].equals(\"0\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"                                    LocalDateTime.parse(lines[3], dateTimeFormat)));","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"                        case \"E\":","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"                            taskList.addTask(new Events(lines[2], !lines[1].equals(\"0\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"                                    LocalDateTime.parse(lines[3], dateTimeFormat),","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"                                    LocalDateTime.parse(lines[4], dateTimeFormat)));","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"                        default:","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"                    e.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"            reader.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"            throw new ErrorStorageException(ex.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"        return taskList.getTaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"saltedfishxx"},"content":"    public void write(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"saltedfishxx"},"content":"            FileWriter writer \u003d new FileWriter(this.path, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"saltedfishxx"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"saltedfishxx"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"saltedfishxx"},"content":"                bufferedWriter.write(task.getData());","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"saltedfishxx"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"saltedfishxx"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"saltedfishxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"saltedfishxx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"saltedfishxx":100}},{"path":"src/main/java/Helpers/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Helpers;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import Tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":" * Represents TaskList class that contains the list of tasks as well as CRUD operations","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"     * Empty constructor for no tasks input","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"     * Constructor with tasks in input","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"     * @param tasks list of tasks to initialise","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"    public Task markTaskAsDone(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"        t.markedAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"        return t;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"    public Task markTaskAsUnDone(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"        t.markedAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"        return t;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"    public int getListLength() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"    public String printTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"            return \"No tasks recorded, macho!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"        sb.append(\"Here are the list of tasks recorded: \\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"            sb.append(index).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"        return sb.toString().trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"saltedfishxx":71}},{"path":"src/main/java/Helpers/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Helpers;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import Exceptions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import Tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"    final boolean isDebug \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"    final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    public void showStartLogo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"        String logo \u003d isDebug ? \"\" :","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"                \"      ＼ﾌﾌ 　　      ム｀ヽ\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"                        \"    / ノ)　  A　 A 　  ）  ヽ\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"                        \"   / ｜　　( ´・ω・`)ノ⌒ ゝ_ノ\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"                        \"  /　ﾉ⌒ 7  ⌒ヽーく　 ＼　／\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"                        \"  丶＿ ノ ｡　　  ノ､　　|/\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"                        \"　　  `ヽ   `ー-\u0027_人`ーﾉ\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"                        \"　　　   丶   ￣ _人\u0027彡ﾉ\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER + \"\\nHello! I\u0027m MACHO-CATTO! Your personal chat-bot to make your \\nday macho!\"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"                + \"\\nWhat can I do for you today?\\n\" + DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"    public void quit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"        String endLogo \u003d isDebug ? \"\" :","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"                \"               ＿   ★★EVERYDAY★★\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"                        \"           ／     j     ★★ IS A  ★★\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"                        \"        ／     /ｰ\u0027          ★★ MACHO  ★★\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"                        \"     〈       ヽ               ★★ DAY!!!  ★★\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"                        \"           ､       ヽ ﾍ⌒ ヽﾌ\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"                        \"             〉       ´ ･ω )        ,-､、\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"                        \"           / ノ         ￣⌒ヽ　「　   〉\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"                        \"          ﾉ       \u0027 L          `ヽ.／   /\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"                        \"     ／    , \u0027           .ノ＼    ´    /\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"                        \"    (                ∠_       ヽ､＿,.\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"                        \"     ＼   (            ヽ \";","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(endLogo);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"    public String getCommand(BufferedReader br) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"        return br.readLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"    public void showMarkDoneMessage(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(\"I have marked this task as done per your request, macho!\\n\" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"    public void showUnmarkDoneMessage(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(\"I have marked this task as undone yet, per your request, macho!\\n\" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"    public void showDeletedTaskMessage(TaskList taskList, Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(\"I have deleted this task as done per your request, macho!\\n\" + task.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"                + \"\\nYou now have \" + taskList.getListLength() + \" tasks in the list, macho!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"    public void showAddTaskMessage(TaskList taskList, Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(\"Got it macho! I\u0027ve added this task:\\n\" + task + \"\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"                \"You now have \" + taskList.getListLength() + \" tasks in the list, macho!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(taskList.printTaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"saltedfishxx"},"content":"    public void showLoadingError() throws ErrorStorageException {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"saltedfishxx"},"content":"        throw new ErrorStorageException(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"saltedfishxx"},"content":"    public void showArgumentErrorMessage(String substring, String s) throws InvalidArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"saltedfishxx"},"content":"        throw new InvalidArgumentException(substring, s, DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"saltedfishxx"},"content":"    public void showInvalidTimeFormatErrorMessage(String part) throws InvalidTimeFormatException {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"saltedfishxx"},"content":"        throw new InvalidTimeFormatException(part, DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"saltedfishxx"},"content":"    public void showInvalidIndexErrorMessage(String input) throws InvalidIndexException {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"saltedfishxx"},"content":"        throw new InvalidIndexException(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"saltedfishxx"},"content":"    public void showInvalidCommandErrorMessage(String message) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"saltedfishxx"},"content":"        throw new InvalidCommandException(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"saltedfishxx"},"content":"    public void showEmptyTasksError(String input) throws EmptyTasksException {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"saltedfishxx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"saltedfishxx"},"content":"        throw new EmptyTasksException(DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"saltedfishxx"},"content":"    public String getDivider() {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"saltedfishxx"},"content":"        return DIVIDER;","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"saltedfishxx":118}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":" * Adapted from Partial Solution provided by https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":" * A child class of Tasks to create tasks that need to be done before a specific date/time.","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":" * e.g., submit report by 11/10/2019 5pm.","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    private final static DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"    public Deadline(String description, Boolean isDone, LocalDateTime by) {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(dateTimeFormat) + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    public String getData() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"        String marked \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"        return \"D | \" + marked + \" | \" + this.taskDesc + \" | \" + this.by.format(dateTimeFormat);","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":31}},{"path":"src/main/java/Tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":" * Adapted from Partial Solution provided by https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":" * A child class of Tasks to create tasks that start at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":" * e.g., (a) team project meeting 2/10/2019 2-4pm (b) orientation week 4/10/2019 to 11/10/2019.","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    protected final LocalDateTime from;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    protected final LocalDateTime to;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    private final static DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"    public Events(String description, Boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(dateTimeFormat)","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"                + \" to: \" + this.to.format(dateTimeFormat) + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"    public String getData() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"        String marked \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"        return \"E | \" + marked + \" | \" + this.taskDesc + \" | \" + this.from.format(dateTimeFormat)","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"                + \" | \" + this.to.format(dateTimeFormat);","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":35}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"public class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"    protected String taskDesc;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"    public Task (String taskDesc, boolean isDone) {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"    public String getTaskDesc() {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"        return this.taskDesc;","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"    public void setTaskDesc(String taskDesc) {","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"        return this.isDone ? \"x\" : \" \";","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    public Task markedAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"        return this;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    public Task markedAsUndone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"        return this;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.getTaskDesc();","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"    public String getData() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"        String marked \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"        return \" | \" + marked + \" | \" + this.taskDesc;","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"saltedfishxx":47}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":" * Adapted from Partial Solution provided by https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":" * A child class of Tasks to create tasks tasks without any date/time attached to it e.g., visit new theme park.","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    public String getData() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"        String marked \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"        return \"T | \" + marked + \" | \" + this.taskDesc;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":22}},{"path":"src/test/java/Tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import Exceptions.InvalidTimeFormatException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import Helpers.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    public static DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"    public void testDeadlineMarkDone_Success(){","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"        Deadline deadline \u003d new Deadline(\"finish homework\", false,","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 23:59\", dateTimeFormat));","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(deadline.markedAsDone().toString(),\"[D][x] finish homework (by: 2023-09-01 23:59)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    public void testDeadlineUnmarkDone_Success(){","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"        Deadline deadline \u003d new Deadline(\"finish homework\", false,","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 23:59\", dateTimeFormat));","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(deadline.markedAsUndone().toString(),\"[D][ ] finish homework (by: 2023-09-01 23:59)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"    public void testInvalidDeadline_Exception(){","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"            Deadline deadline \u003d new Deadline(\"finish homework\", false,","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"                    LocalDateTime.parse(\"invalid date\", dateTimeFormat));","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"            assertEquals(\"Macho! The input time format of a \" + \"invalid date\"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"                    + \" is wrong, macho! Please enter in format \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"                    \"yyyy-MM-dd HH:mm, macho!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"                    + \"____________________________________________________________\",","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"                    new InvalidTimeFormatException(\"invalid date\", ui.getDivider()).getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"saltedfishxx":48}},{"path":"src/test/java/Tasks/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package Tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import Exceptions.InvalidTimeFormatException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import Helpers.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"public class EventsTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    public static DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"    public void testEventMarkDone_Success(){","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"        Events event \u003d new Events(\"internship talk\", false,","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 14:00\", dateTimeFormat),","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 16:00\", dateTimeFormat));","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(event.markedAsDone().toString(),","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"                \"[E][x] internship talk (from: 2023-09-01 14:00 to: 2023-09-01 16:00)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    public void testEventUnmarkDone_Success(){","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"        Events event \u003d new Events(\"internship talk\", false,","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 14:00\", dateTimeFormat),","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"                LocalDateTime.parse(\"2023-09-01 16:00\", dateTimeFormat));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(event.markedAsUndone().toString(),","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"                \"[E][ ] internship talk (from: 2023-09-01 14:00 to: 2023-09-01 16:00)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"    public void testInvalidEvent_Exception(){","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"            Events event \u003d new Events(\"internship talk\", false,","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"                    LocalDateTime.parse(\"invalid date\", dateTimeFormat),","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"                    LocalDateTime.parse(\"invalid date\", dateTimeFormat));","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"            assertEquals(\"Macho! The input time format of a \" + \"invalid date\"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"                            + \" is wrong, macho! Please enter in format \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"                            \"yyyy-MM-dd HH:mm, macho!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"                            + \"____________________________________________________________\",","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"                    new InvalidTimeFormatException(\"invalid date\", ui.getDivider()).getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"saltedfishxx":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"todo create task","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"deadline finish ip by monday","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"deadline finish ip /by monday","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"events attend talk from 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"event attend talk from 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"event attend talk /from 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"mark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"unmark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"delete 1","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"saltedfishxx":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"javac  -encoding UTF-8 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"saltedfishxx":1,"-":20}}]
