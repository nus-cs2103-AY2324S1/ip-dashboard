[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"# duke.duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KamiliArsyad":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"KamiliArsyad"},"content":"checkstyle {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"KamiliArsyad"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"KamiliArsyad"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"KamiliArsyad"},"content":"mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"KamiliArsyad"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KamiliArsyad":9,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":" * The chat bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"     * All exceptions that arise when parsing user input.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"    public static class ParserException extends RuntimeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"        public ParserException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"            super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"     * Exceptions that arise when the user input is not a valid command.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"    public static class WrongCommandException extends ParserException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"        public WrongCommandException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"            super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"KamiliArsyad"},"content":"     * Exceptions that arise when the user input is not in the correct format.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"KamiliArsyad"},"content":"    public static class WrongFormatException extends ParserException {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"KamiliArsyad"},"content":"        public WrongFormatException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"KamiliArsyad"},"content":"            super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"KamiliArsyad"},"content":"     * Exceptions that arise when the file is corrupted.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"KamiliArsyad"},"content":"    public static class InvalidFileException extends RuntimeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"KamiliArsyad"},"content":"        public InvalidFileException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"KamiliArsyad"},"content":"            super(message);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"KamiliArsyad"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"KamiliArsyad"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"KamiliArsyad"},"content":"        ui.run();","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"KamiliArsyad":47,"-":1}},{"path":"src/main/java/duke/InputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"import duke.task.TaskStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"class InputHandler {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"    private final UI.OutputUI outputUI;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"    private final TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"    public InputHandler(UI.OutputUI outputUI) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"        this.outputUI \u003d outputUI;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"    // TODO: Implement a parser instead of hard coding if-elses here","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"    public void handleInput() {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"            isExit \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"            return;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"KamiliArsyad"},"content":"            System.out.println(taskStorage);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"KamiliArsyad"},"content":"            return;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"KamiliArsyad"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"KamiliArsyad"},"content":"            outputUI.echo(taskStorage.markAsDone(index));","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"KamiliArsyad"},"content":"            return;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"KamiliArsyad"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"KamiliArsyad"},"content":"            outputUI.echo(taskStorage.unmarkAsDone(index));","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"KamiliArsyad"},"content":"            return;","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"KamiliArsyad"},"content":"            String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"KamiliArsyad"},"content":"            outputUI.echo(taskStorage.find(keyword));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"KamiliArsyad"},"content":"            return;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"KamiliArsyad"},"content":"            int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"KamiliArsyad"},"content":"            outputUI.echo(taskStorage.delete(index));","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"KamiliArsyad"},"content":"            return;","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"KamiliArsyad"},"content":"        outputUI.echo(taskStorage.save(input));","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"KamiliArsyad"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"KamiliArsyad"},"content":"        return isExit;","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"KamiliArsyad":61}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":" * The Duke.UI class is the driver that runs the input handler and output handler.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"class UI {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"    private OutputUI outputUI;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"    private InputHandler inputHandler;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"    public UI() {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"        this.outputUI \u003d new OutputUI();","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"        this.inputHandler \u003d new InputHandler(outputUI);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"    public void run() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"            inputHandler.handleInput();","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"            isExit \u003d inputHandler.isExit();","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"        outputUI.bye();","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"KamiliArsyad"},"content":"     * Handles all output to the user. This was initially in the main Duke.Duke class and was moved","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"KamiliArsyad"},"content":"     * here after the Duke.UI class was made. Ideally this is integrated into the Duke.UI class not as an inner","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"KamiliArsyad"},"content":"     * class but on second thought, it is fine as is because it kinda makes it neater to","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"KamiliArsyad"},"content":"     * separate the output from the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"KamiliArsyad"},"content":"    static class OutputUI {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"KamiliArsyad"},"content":"        public OutputUI() {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"KamiliArsyad"},"content":"            // Greeting","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"KamiliArsyad"},"content":"            greet();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"KamiliArsyad"},"content":"        public void greet() {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"KamiliArsyad"},"content":"            printer(\"Hello! I\u0027m Meowies\\n    What can I do for you?\");","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"KamiliArsyad"},"content":"        public void bye() {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"KamiliArsyad"},"content":"            printer(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"KamiliArsyad"},"content":"        public void echo(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"KamiliArsyad"},"content":"            printer(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"KamiliArsyad"},"content":"        private void printer(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"KamiliArsyad"},"content":"            System.out.println(\"    ------------------------------------------\");","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"KamiliArsyad"},"content":"            System.out.println(\"    \" + input);","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"KamiliArsyad"},"content":"            System.out.println(\"    ------------------------------------------\");","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"KamiliArsyad":55}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":" * A task with a deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"public final class DeadlineTask extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"    private LocalDate dateEnd;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"     * Creates a deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"     * @param task The input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"     * @throws Duke.WrongFormatException If the input string is in the wrong format.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"    public DeadlineTask(String task) throws Duke.WrongFormatException {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"        String description \u003d getDescription(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"            throw new Duke.WrongFormatException(\"Whopsie daisies! I don\u0027t understand that format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"KamiliArsyad"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"KamiliArsyad"},"content":"     * Creates a deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"KamiliArsyad"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"KamiliArsyad"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"KamiliArsyad"},"content":"     * @param dateEnd The date of the deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"KamiliArsyad"},"content":"    public DeadlineTask(boolean isDone, String description, String dateEnd) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"KamiliArsyad"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"KamiliArsyad"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"KamiliArsyad"},"content":"        this.dateEnd \u003d LocalDate.parse(dateEnd);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"KamiliArsyad"},"content":"    protected String getTaskTypeString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"KamiliArsyad"},"content":"        return squareBracketWrapper(\"D\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"KamiliArsyad"},"content":"    protected String saveToFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"KamiliArsyad"},"content":"        return \"DEADLINE | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + dateEnd;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"KamiliArsyad"},"content":"    protected String getDescription(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"KamiliArsyad"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"KamiliArsyad"},"content":"        String[] split \u003d input.split(\" \", 2)[1].split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"KamiliArsyad"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"KamiliArsyad"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"KamiliArsyad"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"KamiliArsyad"},"content":"            this.dateEnd \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"KamiliArsyad"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"KamiliArsyad"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"KamiliArsyad"},"content":"        return split[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"KamiliArsyad"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"KamiliArsyad"},"content":"        return getTaskTypeString() + squareBracketWrapper(isDone ? \"X\" : \" \") + \" \" + description","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"KamiliArsyad"},"content":"                + \" (by: \" + dateEnd.format(formatter) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"KamiliArsyad":75}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":" * An event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"public final class EventTask extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"    private LocalDate dateStart;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"    private LocalDate dateEnd;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"     * Creates an event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"     * @param task The input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"     * @throws Duke.WrongFormatException If the input string is in the wrong format.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"    public EventTask(String task) throws Duke.WrongFormatException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"        String description \u003d getDescription(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"            throw new Duke.WrongFormatException(\"Whopsie daisies! I don\u0027t understand that format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"KamiliArsyad"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"KamiliArsyad"},"content":"     * Creates an event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"KamiliArsyad"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"KamiliArsyad"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"KamiliArsyad"},"content":"     * @param dateStart The start date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"KamiliArsyad"},"content":"     * @param dateEnd The end date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"KamiliArsyad"},"content":"    public EventTask(boolean isDone, String description, String dateStart, String dateEnd) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"KamiliArsyad"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"KamiliArsyad"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"KamiliArsyad"},"content":"        this.dateStart \u003d LocalDate.parse(dateStart);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"KamiliArsyad"},"content":"        this.dateEnd \u003d LocalDate.parse(dateEnd);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"KamiliArsyad"},"content":"    protected String getTaskTypeString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"KamiliArsyad"},"content":"        return squareBracketWrapper(\"E\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"KamiliArsyad"},"content":"    protected String saveToFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"KamiliArsyad"},"content":"        return \"EVENT | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + dateStart + \" | \" + dateEnd;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"KamiliArsyad"},"content":"    protected String getDescription(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"KamiliArsyad"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"KamiliArsyad"},"content":"        String[] split \u003d input.split(\" \", 2)[1].split(\" /from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"KamiliArsyad"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"KamiliArsyad"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"KamiliArsyad"},"content":"        String[] split2 \u003d split[1].split(\" /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"KamiliArsyad"},"content":"        if (split2.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"KamiliArsyad"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"KamiliArsyad"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"KamiliArsyad"},"content":"            this.dateStart \u003d LocalDate.parse(split2[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"KamiliArsyad"},"content":"            this.dateEnd \u003d LocalDate.parse(split2[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"KamiliArsyad"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"KamiliArsyad"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"KamiliArsyad"},"content":"        return split[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"KamiliArsyad"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"KamiliArsyad"},"content":"        return getTaskTypeString() + squareBracketWrapper(isDone ? \"X\" : \" \") + \" \" + description","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"KamiliArsyad"},"content":"                + \" (from: \" + dateStart.format(formatter) + \" to: \" + dateEnd.format(formatter) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"KamiliArsyad":83}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"    protected final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"    public static Task createTask(String task) throws Duke.WrongCommandException, Duke.WrongFormatException {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"        TaskType taskType \u003d getTaskType(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"        if (taskType \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"            throw new Duke.WrongCommandException(\"Whopsie daisies! I don\u0027t understand that command!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"        case TODO:","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"            return new TodoTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"            return new DeadlineTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"KamiliArsyad"},"content":"        case EVENT:","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"KamiliArsyad"},"content":"            return new EventTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"KamiliArsyad"},"content":"        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"KamiliArsyad"},"content":"            return null;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"KamiliArsyad"},"content":"    public static Task loadTask(String fileTask) throws Duke.WrongFormatException, Duke.InvalidFileException {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"KamiliArsyad"},"content":"        String[] taskDetails \u003d fileTask.split(\" \\\\| \");","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"KamiliArsyad"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"KamiliArsyad"},"content":"            TaskType taskType \u003d TaskType.valueOf(taskDetails[0]);","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"KamiliArsyad"},"content":"            boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"KamiliArsyad"},"content":"            String description \u003d taskDetails[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"KamiliArsyad"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"KamiliArsyad"},"content":"            case TODO:","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"KamiliArsyad"},"content":"                return new TodoTask(isDone, description);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"KamiliArsyad"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"KamiliArsyad"},"content":"                return new DeadlineTask(isDone, description, taskDetails[3]);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"KamiliArsyad"},"content":"            case EVENT:","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"KamiliArsyad"},"content":"                return new EventTask(isDone, description, taskDetails[3], taskDetails[4]);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"KamiliArsyad"},"content":"            default:","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"KamiliArsyad"},"content":"                return null;","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"KamiliArsyad"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"KamiliArsyad"},"content":"        } catch (NullPointerException | IllegalArgumentException | DateTimeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"KamiliArsyad"},"content":"            throw new Duke.InvalidFileException(\"File is corrupted!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"KamiliArsyad"},"content":"    protected static TaskType getTaskType(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"KamiliArsyad"},"content":"            return TaskType.TODO;","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"KamiliArsyad"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"KamiliArsyad"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"KamiliArsyad"},"content":"        return null;","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"KamiliArsyad"},"content":"    protected static String squareBracketWrapper(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"KamiliArsyad"},"content":"        return \"[\" + input + \"]\";","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"KamiliArsyad"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"KamiliArsyad"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"KamiliArsyad"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"KamiliArsyad"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"KamiliArsyad"},"content":"    protected abstract String getTaskTypeString();","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"KamiliArsyad"},"content":"    protected abstract String getDescription(String input);","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"KamiliArsyad"},"content":"    protected abstract String saveToFileString();","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"KamiliArsyad"},"content":"    enum TaskType {","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"KamiliArsyad"},"content":"        TODO,","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"KamiliArsyad"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"KamiliArsyad"},"content":"        EVENT","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"KamiliArsyad":92}},{"path":"src/main/java/duke/task/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":" * Duke.TaskStorage class is used to store all the tasks in the list. It also has the capability of saving the tasks to","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":" * a file and loading the tasks from a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":" * The task list class and the storage class are not separated because I disagree with the idea of having a separate","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":" * storage class in this project since the storage class is not reusable and is tightly coupled with the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"public class TaskStorage {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"    private final int size \u003d 100;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"    private final String filePath \u003d \"data/meowies.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(size);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"    private final File file;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"KamiliArsyad"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"KamiliArsyad"},"content":"    public TaskStorage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"KamiliArsyad"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"KamiliArsyad"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"KamiliArsyad"},"content":"            this.loadFromFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"KamiliArsyad"},"content":"        } catch (FileNotFoundException | Duke.WrongFormatException | Duke.InvalidFileException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"KamiliArsyad"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"KamiliArsyad"},"content":"                this.file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"KamiliArsyad"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"KamiliArsyad"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"KamiliArsyad"},"content":"                System.out.println(ex.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"KamiliArsyad"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"KamiliArsyad"},"content":"     * Clean constructor for testing.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"KamiliArsyad"},"content":"     * @param isTest Whether the program is running in test mode.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"KamiliArsyad"},"content":"    public TaskStorage(boolean isTest) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"KamiliArsyad"},"content":"        String newFilePath \u003d \"data/meowies_test.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"KamiliArsyad"},"content":"        this.file \u003d new File(newFilePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"KamiliArsyad"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"KamiliArsyad"},"content":"            this.loadFromFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"KamiliArsyad"},"content":"        } catch (FileNotFoundException | Duke.WrongFormatException | Duke.InvalidFileException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"KamiliArsyad"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"KamiliArsyad"},"content":"                this.file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"KamiliArsyad"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"KamiliArsyad"},"content":"            } catch (Exception ex) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"KamiliArsyad"},"content":"                System.out.println(ex.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"KamiliArsyad"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"KamiliArsyad"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"KamiliArsyad"},"content":"     * @param input The input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"KamiliArsyad"},"content":"     * @return The output string.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"KamiliArsyad"},"content":"    public String save(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"KamiliArsyad"},"content":"        Task task;","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"KamiliArsyad"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"KamiliArsyad"},"content":"            task \u003d Task.createTask(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"KamiliArsyad"},"content":"        } catch (Duke.WrongCommandException | Duke.WrongFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"KamiliArsyad"},"content":"            return e.getMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"KamiliArsyad"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"KamiliArsyad"},"content":"        this.saveToFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"KamiliArsyad"},"content":"        return \"added: \" + task;","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"KamiliArsyad"},"content":"     * Mark a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"KamiliArsyad"},"content":"     * @param index The index of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"KamiliArsyad"},"content":"     * @return The output string.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"KamiliArsyad"},"content":"    public String markAsDone(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"KamiliArsyad"},"content":"        this.tasks.get(index).markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"KamiliArsyad"},"content":"        this.saveToFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"KamiliArsyad"},"content":"        return \"Nice! I\u0027ve meowrked this task as done:\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"KamiliArsyad"},"content":"                + \"    \" + this.tasks.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"KamiliArsyad"},"content":"     * Unmark a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"KamiliArsyad"},"content":"     * @param index The index of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"KamiliArsyad"},"content":"     * @return The output string.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"KamiliArsyad"},"content":"    public String unmarkAsDone(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"KamiliArsyad"},"content":"        this.tasks.get(index).unmarkAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"KamiliArsyad"},"content":"        this.saveToFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"KamiliArsyad"},"content":"        return \"Oh meow! I\u0027ve marked this task as undone :( :\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"KamiliArsyad"},"content":"                + \"    \" + this.tasks.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"KamiliArsyad"},"content":"     * Delete a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"KamiliArsyad"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"KamiliArsyad"},"content":"     * @return The output string.","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"KamiliArsyad"},"content":"    public String delete(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"KamiliArsyad"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"KamiliArsyad"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"KamiliArsyad"},"content":"        this.saveToFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"KamiliArsyad"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"KamiliArsyad"},"content":"                + \"    \" + task + \"\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"KamiliArsyad"},"content":"                + \"    \" + \"Now you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"KamiliArsyad"},"content":"     * Find tasks that contain the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"KamiliArsyad"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"KamiliArsyad"},"content":"     * @return The list of tasks that contain the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"KamiliArsyad"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"KamiliArsyad"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"KamiliArsyad"},"content":"        int num \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"KamiliArsyad"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"KamiliArsyad"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"KamiliArsyad"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"KamiliArsyad"},"content":"                continue;","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"KamiliArsyad"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"KamiliArsyad"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"KamiliArsyad"},"content":"                num++;","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"KamiliArsyad"},"content":"                sb.append(num).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"KamiliArsyad"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"KamiliArsyad"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"KamiliArsyad"},"content":"    private void saveToFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"KamiliArsyad"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"KamiliArsyad"},"content":"            java.io.FileWriter fw \u003d new java.io.FileWriter(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"KamiliArsyad"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"KamiliArsyad"},"content":"                fw.write(task.saveToFileString() + \"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"KamiliArsyad"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"KamiliArsyad"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"KamiliArsyad"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"KamiliArsyad"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"KamiliArsyad"},"content":"    private void loadFromFile() throws FileNotFoundException, Duke.WrongFormatException, Duke.InvalidFileException {","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"KamiliArsyad"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"KamiliArsyad"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"KamiliArsyad"},"content":"            String fileTask \u003d sc.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"KamiliArsyad"},"content":"            Task task \u003d Task.loadTask(fileTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"KamiliArsyad"},"content":"            this.tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"KamiliArsyad"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"KamiliArsyad"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"KamiliArsyad"},"content":"        int num \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"KamiliArsyad"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"KamiliArsyad"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"KamiliArsyad"},"content":"                continue;","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"KamiliArsyad"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"KamiliArsyad"},"content":"            num++;","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"KamiliArsyad"},"content":"            sb.append(num).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"KamiliArsyad"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"KamiliArsyad":178}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":" * A task that needs to be done.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"public final class TodoTask extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"     * Creates a todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"     * @param task The input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"     * @throws Duke.WrongFormatException If the input string is in the wrong format.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"    public TodoTask(String task) throws Duke.WrongFormatException {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"        String description \u003d getDescription(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"            throw new Duke.WrongFormatException(\"Whopsie daisies! I don\u0027t understand that format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"     * Creates a todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"KamiliArsyad"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"KamiliArsyad"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"KamiliArsyad"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"KamiliArsyad"},"content":"    public TodoTask(boolean isDone, String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"KamiliArsyad"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"KamiliArsyad"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"KamiliArsyad"},"content":"    protected String getTaskTypeString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"KamiliArsyad"},"content":"        return squareBracketWrapper(\"T\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"KamiliArsyad"},"content":"    protected String saveToFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"KamiliArsyad"},"content":"        return \"TODO | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"KamiliArsyad"},"content":"    protected String getDescription(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"KamiliArsyad"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"KamiliArsyad"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"KamiliArsyad"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"KamiliArsyad"},"content":"        return input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"KamiliArsyad"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"KamiliArsyad"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"KamiliArsyad"},"content":"        return getTaskTypeString() + squareBracketWrapper(isDone ? \"X\" : \" \") + \" \" + description;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"KamiliArsyad":54}},{"path":"src/test/java/duke/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"        assertEquals(\"[D][ ] return book (by: Sep 6 2019)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"                new DeadlineTask(false, \"return book\", \"2019-09-06\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"        assertEquals(\"[D][X] return book (by: Sep 6 2019)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"                new DeadlineTask(true, \"return book\", \"2019-09-06\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(false, \"return book\", \"2019-09-06\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"        DeadlineTask deadlineTask2 \u003d new DeadlineTask(true, \"return book\", \"2019-09-06\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"        deadlineTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"        assertEquals(deadlineTask2.toString(), deadlineTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"KamiliArsyad":25}},{"path":"src/test/java/duke/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"public class EventTaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"        assertEquals(\"[E][ ] return book (from: Sep 6 2019 to: Sep 6 2019)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"                new EventTask(false, \"return book\", \"2019-09-06\", \"2019-09-06\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"        assertEquals(\"[E][X] return book (from: Sep 6 2019 to: Sep 6 2019)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"                new EventTask(true, \"return book\", \"2019-09-06\", \"2019-09-06\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"        EventTask eventTask \u003d new EventTask(false, \"return book\", \"2019-09-06\", \"2019-09-06\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"        EventTask eventTask2 \u003d new EventTask(true, \"return book\", \"2019-09-06\", \"2019-09-06\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"        eventTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"        assertEquals(eventTask2.toString(), eventTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"KamiliArsyad":25}},{"path":"src/test/java/duke/TaskStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"import duke.task.TaskStorage;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"public class TaskStorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"    public void testFind() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"        taskStorage.save(\"todo read book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"        taskStorage.save(\"deadline return book /by 2019-09-06\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"        assertEquals(\"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"                + \"1. [T][ ] read book\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"                + \"2. [D][ ] return book (by: Sep 6 2019)\\n\",","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"                taskStorage.find(\"book\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"KamiliArsyad":20}},{"path":"src/test/java/duke/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"public class TodoTaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"        assertEquals(\"[T][ ] return book\", new TodoTask(false, \"return book\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"        assertEquals(\"[T][X] return book\", new TodoTask(true, \"return book\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"        TodoTask todoTask \u003d new TodoTask(false, \"return book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"        TodoTask todoTask2 \u003d new TodoTask(true, \"return book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"        todoTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"        assertEquals(todoTask2.toString(), todoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"KamiliArsyad"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"KamiliArsyad":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KamiliArsyad"},"content":"todo meow","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"KamiliArsyad"},"content":"deadline meowing the meowies until meow meow /by 2 Past Meow","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"KamiliArsyad"},"content":"event celebrating meowcracy /from Meownday /to Meownesday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"KamiliArsyad"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"KamiliArsyad"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"KamiliArsyad"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"KamiliArsyad"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"KamiliArsyad"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"KamiliArsyad"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"KamiliArsyad"},"content":"bleh","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"KamiliArsyad"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"KamiliArsyad"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"KamiliArsyad"},"content":"deadline meow","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"KamiliArsyad"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"KamiliArsyad"},"content":"event meowies /from 2 Past Meow","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"KamiliArsyad"},"content":"event meowies /from 2 Past Meow /to 2 Past Meow","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"KamiliArsyad"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"delete 1","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"KamiliArsyad"},"content":"delete 2","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"KamiliArsyad"},"content":"todo hello meowies","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"KamiliArsyad"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"KamiliArsyad"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"KamiliArsyad":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KamiliArsyad"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KamiliArsyad":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"KamiliArsyad"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT \u003e /dev/null 2\u003e\u00261","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KamiliArsyad":1,"-":37}}]
