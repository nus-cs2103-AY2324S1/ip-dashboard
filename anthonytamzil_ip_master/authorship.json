[{"path":"data/chatter.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"D, true, do, tmr","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"E, false, help, now, tmr","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"T, true, return book","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"T, false, die","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"anthonytamzil":4}},{"path":"src/main/java/Chatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":" * Represents Chatter the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":" * @author Anthony Tamzil","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":" * @version CS2103T Individual Project AY2023/24 Semester 1","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"public class Chatter {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"    private static ListOfTasks tasks \u003d new ListOfTasks();","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"     * Prints greeting message.","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"-----------------------\");","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"Hello! I\u0027m Chatter\");","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"How can i help you today?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"-----------------------\");","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"     * Adds todo task to the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"     * @param input The user input with the description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"    private static void addTodo(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"            if (input.length() \u003c 6) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"                throw new ChatterException(\"â˜¹ OOPS!!! The description of a todo cannot be empty!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"            tasks.addTask(new ToDo(input.substring(5)), false);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"        } catch(ChatterException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"     * Adds deadline task to the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"     * @param input The user input with the description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"    private static void addDeadline(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"            int deadlineIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"anthonytamzil"},"content":"            if (deadlineIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"anthonytamzil"},"content":"                throw new ChatterException(\"Please add a \u0027/by\u0027 statement with the deadline.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"anthonytamzil"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"anthonytamzil"},"content":"            tasks.addTask(new Deadline(input.substring(9, deadlineIndex - 1),","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"anthonytamzil"},"content":"                    input.substring(deadlineIndex + 4)), false);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"anthonytamzil"},"content":"        } catch(ChatterException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"anthonytamzil"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"Please enter a valid description or deadline.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"anthonytamzil"},"content":"     * Adds event task to the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"anthonytamzil"},"content":"     * @param input The user input with the description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"anthonytamzil"},"content":"    private static void addEvent(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"anthonytamzil"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"anthonytamzil"},"content":"            int startIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"anthonytamzil"},"content":"            if (startIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"anthonytamzil"},"content":"                throw new ChatterException(\"Please add a \u0027/from\u0027 statement with the start time / date.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"anthonytamzil"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"anthonytamzil"},"content":"            int endIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"anthonytamzil"},"content":"            if (endIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"anthonytamzil"},"content":"                throw new ChatterException(\"Please add a \u0027/to\u0027 statement with the end time / date.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"anthonytamzil"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"anthonytamzil"},"content":"            tasks.addTask(new Event(input.substring(6, startIndex - 1),","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"anthonytamzil"},"content":"                    input.substring(startIndex + 6, endIndex - 1),","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"anthonytamzil"},"content":"                    input.substring(endIndex + 4)), false);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"anthonytamzil"},"content":"        } catch(ChatterException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"anthonytamzil"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"Please enter a valid description and start / end time.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"anthonytamzil"},"content":"     * Check the user\u0027s commands and calls the appropriate methods according","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"anthonytamzil"},"content":"     * to the commands.","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"anthonytamzil"},"content":"    private static void run() {","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"anthonytamzil"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"anthonytamzil"},"content":"        greet();","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"anthonytamzil"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"anthonytamzil"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"-----------------------\");","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"anthonytamzil"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"anthonytamzil"},"content":"                tasks.listTasks();","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"anthonytamzil"},"content":"            } else if (userInput.startsWith(\"mark\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"anthonytamzil"},"content":"                tasks.markTaskAsDone(Character.getNumericValue(userInput.charAt(5)), false);","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"anthonytamzil"},"content":"            } else if (userInput.startsWith(\"unmark\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"anthonytamzil"},"content":"                tasks.markTaskAsNotDone(Character.getNumericValue(userInput.charAt(7)));","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"anthonytamzil"},"content":"            } else if (userInput.startsWith(\"delete\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"anthonytamzil"},"content":"                tasks.delete(Character.getNumericValue(userInput.charAt(7)));","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"anthonytamzil"},"content":"            } else if (userInput.startsWith(\"todo\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"anthonytamzil"},"content":"                addTodo(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"anthonytamzil"},"content":"            } else if (userInput.startsWith(\"deadline\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"anthonytamzil"},"content":"                addDeadline(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"anthonytamzil"},"content":"            } else if (userInput.startsWith(\"event\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"anthonytamzil"},"content":"                addEvent(userInput);","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"anthonytamzil"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"anthonytamzil"},"content":"                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"anthonytamzil"},"content":"                System.out.println(\"Please enter a valid command!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"anthonytamzil"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"-----------------------\");","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"anthonytamzil"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"anthonytamzil"},"content":"        exit();","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"anthonytamzil"},"content":"     * Prints exit message.","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"anthonytamzil"},"content":"    private static void exit() {","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"-----------------------\");","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"anthonytamzil"},"content":"     * Creates new directory and file for data storage if they do not exist.","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"anthonytamzil"},"content":"     * @throws IOException Error thrown is file cannot be created.","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"anthonytamzil"},"content":"    public static void readFile() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"anthonytamzil"},"content":"        File f \u003d new File(\"./data/chatter.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"anthonytamzil"},"content":"        Path path \u003d Paths.get(\"./data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"anthonytamzil"},"content":"        Files.createDirectories(path);","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"anthonytamzil"},"content":"        f.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"anthonytamzil"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"anthonytamzil"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"anthonytamzil"},"content":"            String[] input \u003d s.nextLine().split(\", \");","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"anthonytamzil"},"content":"            switch (input[0]) {","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"anthonytamzil"},"content":"            case(\"D\"):","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"anthonytamzil"},"content":"                tasks.addTask(new Deadline(input[2], input[3]), true);","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"anthonytamzil"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"anthonytamzil"},"content":"            case(\"T\"):","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"anthonytamzil"},"content":"                tasks.addTask(new ToDo(input[2]), true);","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"anthonytamzil"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"anthonytamzil"},"content":"            default:","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"anthonytamzil"},"content":"                tasks.addTask(new Event(input[2], input[3], input[4]), true);","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"anthonytamzil"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"anthonytamzil"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"anthonytamzil"},"content":"            if (Boolean.parseBoolean(input[1])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"anthonytamzil"},"content":"                tasks.markTaskAsDone(tasks.getNumOfTasks(), true);","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"anthonytamzil"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"anthonytamzil"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"anthonytamzil"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"anthonytamzil"},"content":"            readFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"anthonytamzil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"anthonytamzil"},"content":"        run();","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"anthonytamzil":181}},{"path":"src/main/java/ChatterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":" * Represents an exception that will be thrown by the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":" * @author Anthony Tamzil","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":" * @version CS2103T Individual Project AY2023/24 Semester 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"public class ChatterException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"     * A constructor to initialize the ChatterException class.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"     * @param message Error message to be displayed.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"    public ChatterException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"anthonytamzil":16}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":" * @author Anthony Tamzil","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":" * @version CS2103T Individual Project AY2023/24 Semester 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"    /** A string indicating deadline of task */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"     * A constructor to initialize the Deadline class.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the string representation of the Deadline that will","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"     * be displayed to the user in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"     * @return The string representation of the Deadline object.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the string representation of the task to be stored in a local file.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"     * @return The storage string representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"        return \"D, \" + isDone + \", \" + description + \", \" + by;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"anthonytamzil":41}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":" * Represents a task that has a start and end time.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":" * @author Anthony Tamzil","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":" * @version CS2103T Individual Project AY2023/24 Semester 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"    /** A string indicating start date / time of task */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"    protected String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"    /** A string indicating end date / time of task */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"    protected String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"     * A constructor to initialize the Event class.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"     * @param start Start time of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"     * @param end End time of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the string representation of the Event that will","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"     * be displayed to the user in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"     * @return The string representation of the Event object.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the string representation of the task to be stored in a local file.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"     * @return The storage string representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"        return \"E, \" + this.isDone + \", \" + this.description + \", \" + this.start + \", \" + this.end;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"anthonytamzil":45}},{"path":"src/main/java/ListOfTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":" * @author Anthony Tamzil","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":" * @version CS2103T Individual Project AY2023/24 Semester 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"public class ListOfTasks {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"    private int numOfTasks \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"     * A constructor to initialize the ListOfTasks class.","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"    public ListOfTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"     * Adds a Task object to the list of Tasks.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"    public void addTask(Task task, boolean isReadFromFile) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"        list.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"        numOfTasks++;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"        if (!isReadFromFile) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"                FileWriter fw \u003d new FileWriter(\"./data/chatter.txt\", true);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"                fw.write(\"\\n\" + task.toStorageString());","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"                fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"                System.out.println(\"Got error\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"Got it. I have added this task to do:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"You now have \" + numOfTasks + \" task(s) in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"     * Marks specific Task in list as completed.","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"     * @param taskNumber Number of task in list to be mark as completed.","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"    public void markTaskAsDone(int taskNumber, boolean isReadFromFile) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"anthonytamzil"},"content":"        Task completedTask \u003d list.get(taskNumber - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"anthonytamzil"},"content":"        completedTask.markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"anthonytamzil"},"content":"        if (!isReadFromFile) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"anthonytamzil"},"content":"            saveFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"Good job! I\u0027ve marked this task as completed:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"  \" + completedTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"anthonytamzil"},"content":"     * Deletes specific Task in list.","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"anthonytamzil"},"content":"     * @param taskNumber Number of task in list to be deleted.","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"anthonytamzil"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"anthonytamzil"},"content":"        numOfTasks--;","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"Noted! I have removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"  \" + list.get(taskNumber - 1).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"You now have \" + numOfTasks + \" task(s) in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"anthonytamzil"},"content":"        list.remove(taskNumber - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"anthonytamzil"},"content":"        saveFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"anthonytamzil"},"content":"     * Marks specific Task in list as uncompleted.","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"anthonytamzil"},"content":"     * @param taskNumber Number of task in list to be mark as uncompleted.","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"anthonytamzil"},"content":"    public void markTaskAsNotDone(int taskNumber) {","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"anthonytamzil"},"content":"        Task unmarkedTask \u003d list.get(taskNumber - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"anthonytamzil"},"content":"        unmarkedTask.markAsNotDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"anthonytamzil"},"content":"        saveFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"OK! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"  \" + unmarkedTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"anthonytamzil"},"content":"     * Prints out list of tasks to display to the user.","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"anthonytamzil"},"content":"    public void listTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"anthonytamzil"},"content":"        System.out.println(\"These are all the task(s) in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"anthonytamzil"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"  \" + (i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"anthonytamzil"},"content":"     * Returns number of tasks in the list","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"anthonytamzil"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"anthonytamzil"},"content":"        return this.numOfTasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"anthonytamzil"},"content":"    public void saveFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"anthonytamzil"},"content":"        ArrayList\u003cTask\u003e listOfStorageStrings \u003d list;","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"anthonytamzil"},"content":"        StringBuilder storageString \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"anthonytamzil"},"content":"        listOfStorageStrings.forEach((Task::toStorageString));","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"anthonytamzil"},"content":"        for (Task listOfStorageString : listOfStorageStrings) {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"anthonytamzil"},"content":"            storageString.append(listOfStorageString.toStorageString()).append(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"anthonytamzil"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"anthonytamzil"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/chatter.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"anthonytamzil"},"content":"            fw.write(storageString.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"anthonytamzil"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"anthonytamzil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"anthonytamzil"},"content":"            System.out.println(\"Got error\");","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"anthonytamzil":128}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":" * Represents a singular general task.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":" * @author Anthony Tamzil","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":" * @version CS2103T Individual Project AY2023/24 Semester 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"    /** A string description of the Task object. */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"    /** A boolean status of whether the Task is done. */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"     * A constructor to initialize the Task class.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the string description of the Task.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"     * @return The string description of Task.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"        return this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the string representation of the Task that will","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"     * be displayed to the user in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"     * @return The string representation of the Task.","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"     * Changes isDone boolean to true, marking task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"     * Changes isDone boolean to true, marking task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"anthonytamzil"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"anthonytamzil"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"anthonytamzil"},"content":"     * Returns string representation of the status of the Task.","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"anthonytamzil"},"content":"     * @return The string representation of the status.","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"anthonytamzil"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"anthonytamzil"},"content":"        return isDone","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"                ? \"[X] \"","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"anthonytamzil"},"content":"                : \"[ ] \";","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the string representation of the task to be stored in a local file.","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"anthonytamzil"},"content":"     * @return The storage string representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"anthonytamzil"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"anthonytamzil":74}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":" * Represents a task without any date or time attached to it.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":" * @author Anthony Tamzil","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":" * @version CS2103T Individual Project AY2023/24 Semester 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"     * A constructor to initialize the ToDo class.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the string representation of the ToDo that will","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"     * be displayed to the user in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"     * @return The string representation of the ToDo object.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the string representation of the task to be stored in a local file.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"     * @return The storage string representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"        return \"T, \" + isDone + \", \" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"anthonytamzil":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"event /from","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"event /from /to","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"deadline /by","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"anthonytamzil":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"java -classpath ..\\bin Chatter \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anthonytamzil":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"java -classpath ../bin Chatter \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anthonytamzil":1,"-":37}}]
