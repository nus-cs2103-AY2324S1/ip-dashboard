[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"    private static String TYPE \u003d \"[D]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"    public Deadline(String task, String deadline) throws DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"        super(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"        return date.isEqual(this.deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"        return this.TYPE + super.toString() + \" (by: \" + this.deadline.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"import java.util.Map;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"    private static final String CHAT_BOT_NAME \u003d \"Genos\";","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"    private static final HashMap\u003cString, Command\u003e commandMap \u003d new HashMap\u003c\u003e(","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"            Map.of(\"todo\", Command.TODO, \"event\", Command.EVENT, \"mark\", Command.MARK,","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"                    \"unmark\", Command.UNMARK, \"list\", Command.LIST, \"bye\", Command.EXIT,","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"                    \"deadline\", Command.DEADLINE, \"delete\", Command.DELETE)","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    );","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"    private enum Command {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"        MARK, UNMARK, LIST, EXIT, TODO, DEADLINE, EVENT, INVALID, DELETE","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    public Duke() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"        System.out.println(\"Hello I\u0027m \" + Duke.CHAT_BOT_NAME);","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"        System.out.println(\"Please type your command below, I will store what you said\");","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"        System.out.println(\"Usage: \\\"list\\\" to see the list of text stored, \\\"bye\\\" to exit\");","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"        System.out.println(\"\\\"mark [number]\\\" to mark task no. [number] to be done, \"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"                + \"\\\"unmark [number]\\\" to mark it as undone\");","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"        System.out.println(\"\\\"todo [description]\\\" to add todo, \\\"event [description] /from \"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"                + \"[date] /to [date]\\\"\"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"                + \" to add event, \\\"deadline [description] /by [date]\\\" to add deadline\");","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"    private void converse() {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"            String text \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"            if (text.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(\"Sorry, empty command is not supported\");","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"                continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"            Command cmd \u003d textToCommand(text);","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"            // non tasks command.","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"            if (cmd \u003d\u003d Command.EXIT) {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(\"    Goodbye, Hope to see you again soon.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"                return;","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"            } else if (cmd \u003d\u003d Command.LIST) {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"                // if command also includes the date, list the tasks on that date","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"                if (text.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"                        this.findTasksOnDate(LocalDate.parse(text.split(\" \")[1]));","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"                        System.out.println(\"Wrong date format! Please use yyyy-mm-dd format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"cmHuang777"},"content":"                    this.listTasks();","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"                continue;","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"            } else if (cmd \u003d\u003d Command.INVALID) {","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(\"    Command given is invalid! You must start with a \"","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"                        + \"todo/event/deadline to add tasks, \"","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"                        + \"or list/mark/unmark/bye for other purposes\");","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"                continue; // retype commands","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"            // adding tasks or marking tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"                if (text.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"                    throw new RuntimeException(\"    Description cannot be empty!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"                Task task;","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"                switch (cmd) {","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"                    case MARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"cmHuang777"},"content":"                        int num \u003d Integer.parseInt(text.split(\" \")[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"                        // index out of bounds error will be caught below","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"cmHuang777"},"content":"                        task \u003d this.tasks.get(num - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"                        task.doTask();","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"                        System.out.println(\"    I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"cmHuang777"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"cmHuang777"},"content":"                        int num2 \u003d Integer.parseInt(text.split(\" \")[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"cmHuang777"},"content":"                        // index out of bounds error will be caught below","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"cmHuang777"},"content":"                        task \u003d this.tasks.get(num2 - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"                        task.undoTask();","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"                        System.out.println(\"    I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"cmHuang777"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"cmHuang777"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"cmHuang777"},"content":"                        int num3 \u003d Integer.parseInt(text.split(\" \")[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"cmHuang777"},"content":"                        task \u003d this.tasks.remove(num3);","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"                        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"cmHuang777"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"cmHuang777"},"content":"                    case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"                        String description \u003d text.substring(5);","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"                        if (description.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"                            throw new RuntimeException(\"Description of todo cannot be empty\");","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"cmHuang777"},"content":"                        task \u003d new Todo(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"cmHuang777"},"content":"                        this.tasks.add(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"cmHuang777"},"content":"                        System.out.println(\"    Added Todo to the list of tasks:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"cmHuang777"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"cmHuang777"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"cmHuang777"},"content":"                        String[] parts \u003d (text.substring(6)).split(\"/\");","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"cmHuang777"},"content":"                        if (parts.length !\u003d 3 || !parts[1].startsWith(\"from \") ||","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"cmHuang777"},"content":"                                !parts[2].startsWith(\"to \")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"cmHuang777"},"content":"                            throw new RuntimeException(\"    Invalid format for adding an event! \"","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"cmHuang777"},"content":"                                    + \"Please enter in this format:\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"cmHuang777"},"content":"                                    + \"event [description] /from [date] /to [date]\");","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"cmHuang777"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"cmHuang777"},"content":"                        String fromTime \u003d parts[1].split(\" \")[1]; // remove the \"from \"","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"cmHuang777"},"content":"                        String toTime \u003d parts[2].split(\" \")[1];  // remove the \"to \"","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"cmHuang777"},"content":"                        task \u003d new Event(parts[0], fromTime, toTime);","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"cmHuang777"},"content":"                        this.tasks.add(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"cmHuang777"},"content":"                        System.out.println(\"    Added Event to the list of tasks:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"cmHuang777"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"cmHuang777"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"cmHuang777"},"content":"                        String[] parts2 \u003d (text.substring(9)).split(\"/\");","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"cmHuang777"},"content":"                        if (parts2.length !\u003d 2 || !parts2[1].startsWith(\"by \")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"cmHuang777"},"content":"                            throw new RuntimeException(\"    Invalid format for adding a deadline! \"","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"cmHuang777"},"content":"                                    + \"Please enter in this format:\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"cmHuang777"},"content":"                                    + \"deadline [description] /by [date]\");","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"cmHuang777"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"cmHuang777"},"content":"                        String by \u003d parts2[1].substring(3); // remove the \"by \"","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"cmHuang777"},"content":"                        task \u003d new Deadline(parts2[0], by);","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"cmHuang777"},"content":"                        this.tasks.add(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"cmHuang777"},"content":"                        System.out.println(\"    Added Deadline to the list of tasks:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"cmHuang777"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"cmHuang777"},"content":"                    default:","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"cmHuang777"},"content":"                        throw new RuntimeException(\"    There seems to be some error here\");","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"cmHuang777"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(\"    \" + task.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(\"    You currently have \" + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"cmHuang777"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(\"    Invalid task number. Please enter a valid number to mark/unmark\");","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"cmHuang777"},"content":"            } catch (IndexOutOfBoundsException e) {  // for when task number is out of bounds","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(\"    The task number you are trying to mark/unmark/delete \"","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"cmHuang777"},"content":"                        + \"does not exist yet.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"cmHuang777"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(\"Wrong date format! Please use yyyy-mm-dd format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"cmHuang777"},"content":"            } catch (RuntimeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"cmHuang777"},"content":"            // if it reaches here, there must be a change in tasks","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"cmHuang777"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"cmHuang777"},"content":"                this.saveToDisk();","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"cmHuang777"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(\"Something went wrong while trying to save the tasks to the disk!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":159,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":160,"author":{"gitId":"cmHuang777"},"content":"    private void listTasks() {","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"cmHuang777"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"cmHuang777"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + this.tasks.get(i));","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":165,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"cmHuang777"},"content":"    private Command textToCommand(String text) {","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"cmHuang777"},"content":"        String cmd \u003d text.split(\" \")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"cmHuang777"},"content":"        return Duke.commandMap.getOrDefault(cmd, Command.INVALID);","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"cmHuang777"},"content":"    private void saveToDisk() throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"cmHuang777"},"content":"        // create a new directory if it does not exist yet","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"cmHuang777"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":174,"author":{"gitId":"cmHuang777"},"content":"            new File(\"./data\").mkdir();","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"cmHuang777"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"cmHuang777"},"content":"            // error in creating the directory","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"cmHuang777"},"content":"            System.out.println(\"There was an error creating the diretory when trying to save tasks\");","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"cmHuang777"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"cmHuang777"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":181,"author":{"gitId":"cmHuang777"},"content":"            content.append(task.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":182,"author":{"gitId":"cmHuang777"},"content":"            content.append(System.lineSeparator());","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":184,"author":{"gitId":"cmHuang777"},"content":"        FileWriter fw \u003d new FileWriter(\"data/tasks.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":185,"author":{"gitId":"cmHuang777"},"content":"        fw.write(content.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":186,"author":{"gitId":"cmHuang777"},"content":"        fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":187,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":188,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":189,"author":{"gitId":"cmHuang777"},"content":"    // takes in date input and prints the list of tasks on that date","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"cmHuang777"},"content":"    // No todos will be printed, since there is no dates","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"cmHuang777"},"content":"    // Events will be printed only if the input date is within the date range of Event","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"cmHuang777"},"content":"    // Deadline will be printed if the deadline is the same as date input","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"cmHuang777"},"content":"    private void findTasksOnDate(LocalDate date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"cmHuang777"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"cmHuang777"},"content":"            if (this.tasks.get(i).isOnDate(date)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"cmHuang777"},"content":"                System.out.println(\"    \" + (i + 1) + \". \" + this.tasks.get(i));","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":202,"author":{"gitId":"cmHuang777"},"content":"        Duke bot \u003d new Duke();","lastModifiedDate":"2023-08-21"},{"lineNumber":203,"author":{"gitId":"cmHuang777"},"content":"        Duke.greet();","lastModifiedDate":"2023-08-22"},{"lineNumber":204,"author":{"gitId":"cmHuang777"},"content":"        bot.converse();","lastModifiedDate":"2023-08-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cmHuang777":202,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"    private static String TYPE \u003d \"[E]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"    protected LocalDate fromTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"    protected LocalDate toTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"    public Event(String task, String fromTime, String toTime) throws DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"        super(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"        this.fromTime \u003d LocalDate.parse(fromTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"        this.toTime \u003d LocalDate.parse(toTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"        return (date.isAfter(this.fromTime) || date.isEqual(this.fromTime))","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"                \u0026\u0026 (date.isBefore(this.toTime) || date.isEqual(this.toTime));","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"        return this.TYPE + super.toString() + \" (from: \"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"                + this.fromTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"                + \" to: \" + this.toTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":31}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"    protected final String task;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"    protected boolean done;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"    protected Task(String task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"    public void doTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    public void undoTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    public abstract boolean isOnDate(LocalDate date);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"        String mark \u003d done ? \"X\" : \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"        return String.format(\"[%s] %s\", mark, this.task);","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"    private static String TYPE \u003d \"[T]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"        super(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"        return this.TYPE + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"deadline return book /by 2023-09-01","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"event project meeting /from 2023-09-01 /to 2023-09-01","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"abcd","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"event abcd","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"event abcd from","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"event abcd /from","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"event abcd /from /to","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"event abcd /from asdf to","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"event abcd /from asdf /to","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"event abcd /from 2023-09-01 /to 2023-09-01","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"deadline abcd","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"deadline abcd by","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"deadline abcd /by","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"deadline abcd /by 2023-09-01","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"delete","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"delete abc","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"delete 123","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"delete 4","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":32}},{"path":"text-ui-test/result.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"Comparing files ACTUAL.TXT and EXPECTED.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"FC: no differences encountered","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003e result.txt","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":1,"-":20}}]
