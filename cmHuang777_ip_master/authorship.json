[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"public class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"    private static final HashMap\u003cString, Cmd\u003e COMMAND_MAP \u003d new HashMap\u003c\u003e(","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"            Map.of(\"todo\", Cmd.TODO, \"event\", Cmd.EVENT, \"mark\", Cmd.MARK,","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"                    \"unmark\", Cmd.UNMARK, \"list\", Cmd.LIST, \"bye\", Cmd.EXIT,","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"                    \"deadline\", Cmd.DEADLINE, \"delete\", Cmd.DELETE)","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"    );","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"    private enum Cmd {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"        MARK, UNMARK, LIST, EXIT, TODO, DEADLINE, EVENT, INVALID, DELETE","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"    private String date1;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"    private String date2;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    private String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"    private Cmd action;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    public Command(ArrayList\u003cString\u003e parts) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"        this.action \u003d COMMAND_MAP.getOrDefault(parts.get(0), Cmd.INVALID);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"        if (parts.size() \u003e 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"            description \u003d parts.get(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"        if (parts.size() \u003e 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"            this.date1 \u003d parts.get(2);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"        if (parts.size() \u003e 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"            this.date2 \u003d parts.get(3);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"    // returns whether this command is to exit, if not continue to carry out the required command","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"    // and return false","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"        switch (this.action) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"        case INVALID:","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"            throw new DukeException(\"Command given is invalid! You must start with a \"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"                    + \"todo/event/deadline to add tasks, \"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"                    + \"or list/mark/unmark/bye for other purposes\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"        case EXIT:","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"        case LIST:","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"            if (this.description !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"                // description field can only be used when we try to list tasks on certain date","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"                try {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"                    String content \u003d tasks.findTasksOnDate(LocalDate.parse(description));","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"                    ui.display(content);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"                    throw new DukeException(\"Wrong date format! Please use yyyy-mm-dd format\");","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"                ui.display(tasks.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"        // tasks related commands below","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"        case MARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"cmHuang777"},"content":"            if (this.description \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"You must enter a number to indicate the task to \"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"                        + \"mark\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"                task \u003d tasks.doTask(Integer.parseInt(this.description) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"Invalid task number. Please enter a valid number to \"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"                        + \"mark/unmark\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"The task number you are trying to mark \"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"                        + \"does not exist yet.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"            ui.display(\"    I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"            ui.display(\"    \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"            if (this.description \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"You must enter a number to indicate the task to \"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"cmHuang777"},"content":"                        + \"unmark\");","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"cmHuang777"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"cmHuang777"},"content":"                task \u003d tasks.undoTask(Integer.parseInt(this.description) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"cmHuang777"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"Invalid task number. Please enter a valid number to \"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"cmHuang777"},"content":"                        + \"mark/unmark\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"cmHuang777"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"The task number you are trying to unmark \"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"cmHuang777"},"content":"                        + \"does not exist yet.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"cmHuang777"},"content":"            ui.display(\"    I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"cmHuang777"},"content":"            ui.display(\"    \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"cmHuang777"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"cmHuang777"},"content":"        case DELETE:","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"cmHuang777"},"content":"            if (this.description \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"You must enter a number to indicate the task to \"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"cmHuang777"},"content":"                        + \"delete\");","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"cmHuang777"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"cmHuang777"},"content":"                task \u003d tasks.deleteTask(Integer.parseInt(this.description) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"cmHuang777"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"Invalid task number. Please enter a valid number to \"","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"cmHuang777"},"content":"                        + \"mark/unmark\");","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"cmHuang777"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"The task number you are trying to delete \"","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"cmHuang777"},"content":"                        + \"does not exist yet.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"cmHuang777"},"content":"            ui.display(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"cmHuang777"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"cmHuang777"},"content":"        case TODO:","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"cmHuang777"},"content":"            if (this.description \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"Description of todo cannot be empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"cmHuang777"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"cmHuang777"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"cmHuang777"},"content":"            ui.display(\"    Added Todo to the list of tasks:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"cmHuang777"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"cmHuang777"},"content":"        case EVENT:","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"cmHuang777"},"content":"            if (this.description \u003d\u003d null || this.date1 \u003d\u003d null || this.date2 \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"Invalid format for adding an event! \"","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"cmHuang777"},"content":"                        + \"Please enter in this format:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"cmHuang777"},"content":"                        + \"event [description] /from [date] /to [date]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"cmHuang777"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"cmHuang777"},"content":"                task \u003d new Event(this.description, this.date1, this.date2);","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"cmHuang777"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"Wrong date format! Please use yyyy-mm-dd format\");","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"cmHuang777"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"cmHuang777"},"content":"            ui.display(\"    Added Event to the list of tasks:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"cmHuang777"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"cmHuang777"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"cmHuang777"},"content":"            if (this.description \u003d\u003d null || this.date1 \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"Invalid format for adding a deadline! \"","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"cmHuang777"},"content":"                        + \"Please enter in this format:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"cmHuang777"},"content":"                        + \"deadline [description] /by [date]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"cmHuang777"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"cmHuang777"},"content":"                task \u003d new Deadline(this.description, this.date1);","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"cmHuang777"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"Wrong date format! Please use yyyy-mm-dd format\");","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"cmHuang777"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"cmHuang777"},"content":"            ui.display(\"    Added Deadline to the list of tasks:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"cmHuang777"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"cmHuang777"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"cmHuang777"},"content":"            throw new DukeException(\"There seems to be some error here\");","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"cmHuang777"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"cmHuang777"},"content":"            throw new DukeException(\"There might be an error somewhere. The task was not \"","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"cmHuang777"},"content":"                    + \"extracted properly.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"cmHuang777"},"content":"        ui.display(\"    \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"cmHuang777"},"content":"        ui.display(\"    You currently have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"cmHuang777"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"cmHuang777"},"content":"            storage.save(tasks.saveToStorage());","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"cmHuang777"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"cmHuang777"},"content":"            throw new DukeException(","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"cmHuang777"},"content":"                    \"Something went wrong while trying to save the tasks to the disk!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"cmHuang777"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cmHuang777":167}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"    private static final String TYPE \u003d \"[D]\";","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"    public Deadline(String task, String deadline) throws DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"        super(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"        return date.isEqual(this.deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"        return \"Deadline | \" + super.toSaveFormat() + \" | \" + this.deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"        return Deadline.TYPE + super.toString() + \" (by: \" + this.deadline.format(","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"        this.ui.greet();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"                // ui reads in one line of input","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"                String text \u003d ui.readCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"                if (text.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"                    throw new DukeException(\"Sorry, empty command is not supported\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"                Command c \u003d Parser.parse(text);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"                isExit \u003d c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"            } finally {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"        ui.goodBye();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"        Duke bot \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"        bot.run();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cmHuang777":37,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"        super(msg);","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cmHuang777":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"    private static final String TYPE \u003d \"[E]\";","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"    protected LocalDate fromTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"    protected LocalDate toTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"    public Event(String task, String fromTime, String toTime) throws DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"        super(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"        this.fromTime \u003d LocalDate.parse(fromTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"        this.toTime \u003d LocalDate.parse(toTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"        return (date.isAfter(this.fromTime) || date.isEqual(this.fromTime))","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"                \u0026\u0026 (date.isBefore(this.toTime) || date.isEqual(this.toTime));","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"        return \"Event | \" + super.toSaveFormat() + \" | \" + this.fromTime + \" | \" + this.toTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"        return Event.TYPE + super.toString() + \" (from: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"                + this.fromTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"                + \" to: \" + this.toTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":36}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"// deals with making sense of user command","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"    public Parser() {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"    // takes in a line of text, split into different parts and covert them to a task","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"    public static Command parse(String text) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"        String[] parts \u003d text.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"        // add first action string","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"        result.add(parts[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"        // continue parsing if there are more valid words, such as description, dates","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"        if (parts.length \u003e\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"            parts \u003d parts[1].split(\" /\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"            // add description","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"            result.add(parts[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"        if (parts.length \u003e\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"            // if able to reach here, the command must be for deadline or Event","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"            // attempt to split the string after description","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"            // but only need to split the /from and /to in case of event","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"            parts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"                // it must be for Event","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"                // Event has /from for first string, need to remove it","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"                result.add(parts[0].substring(5));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"                result.add(parts[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"                // it must be for deadline which only has /by","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"                // need to remove the by","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"                parts \u003d parts[0].split(\"by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"                if (parts.length \u003e\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"                    result.add(parts[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"        return new Command(result);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"    public static Task parseTask(String[] parts) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"            if (taskType.equals(\"Event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"                return new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"            } else if (taskType.equals(\"Todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"                return new Todo(parts[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"            } else if (taskType.equals(\"Deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"                return new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"                throw new DukeException(\"Wrong storing format in storage\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"            throw new DukeException(\"Wrong storing format in storage\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cmHuang777":62}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"// deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"    private final File file;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"    // finds the file at filePath, creates the file if is not already there","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"        boolean isNewDir \u003d this.file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"            boolean isNewFile \u003d this.file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"            throw new DukeException(\"Error creating new file to store the task list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"                tasks.add(Parser.parseTask(parts));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"            System.out.println(\"Error while loading tasks from storage\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    public void save(String content) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"        fw.write(content);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cmHuang777":44}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"    protected final String task;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"    protected boolean done;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"    protected Task(String task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"    public void doTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    public void undoTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    public abstract boolean isOnDate(LocalDate date);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    // returns \"done | task description\", can be added with task type for subtypes","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"        return (this.done ? 1 : 0) + \" | \" + this.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"        String mark \u003d done ? \"X\" : \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"        return String.format(\"[%s] %s\", mark, this.task);","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":34}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"// contains the tasks list, it has operations to add/delete tasks in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"    // add task in parameter into the arraylist of tasks in this instance","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    // delete the task at index taskNum of the arraylist of tasks in this instance","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"    // return the deleted task if successfully deleted","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"    public Task deleteTask(int taskNum) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"        return this.tasks.remove(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"    // mark task at index taskNum as done","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    // returns false if index out of bounds else true.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"    public Task doTask(int taskNum) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"        Task task \u003d this.tasks.get(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"        task.doTask();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"    // mark task at index taskNum as not done","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"    // returns false if index out of bounds else true.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"    public Task undoTask(int taskNum) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"        Task task \u003d this.tasks.get(taskNum);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"        task.undoTask();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"    public String saveToStorage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"            content.append(task.toSaveFormat());","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"            content.append(System.lineSeparator());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"        return content.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"cmHuang777"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"cmHuang777"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"cmHuang777"},"content":"            sb.append(\"    \" + (i + 1) + \". \" + this.tasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"cmHuang777"},"content":"            if (i !\u003d this.tasks.size() - 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"cmHuang777"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"cmHuang777"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"cmHuang777"},"content":"    // takes in date input and output the list of tasks on that date (in the form of","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"cmHuang777"},"content":"    // taskList\u0027s toString())","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"cmHuang777"},"content":"    // No todos will be printed, since there is no dates","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"cmHuang777"},"content":"    // Events will be printed only if the input date is within the date range of Event","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"cmHuang777"},"content":"    // Deadline will be printed if the deadline is the same as date input","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"cmHuang777"},"content":"    public String findTasksOnDate(LocalDate date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"cmHuang777"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"cmHuang777"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"cmHuang777"},"content":"            if (this.tasks.get(i).isOnDate(date)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"cmHuang777"},"content":"                sb.append(\"    \" + (i + 1) + \". \" + this.tasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"cmHuang777"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"cmHuang777"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"cmHuang777"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"cmHuang777"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cmHuang777":80}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"    private static final String TYPE \u003d \"[T]\";","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"    public Todo(String task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"        super(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"        return \"Todo | \" + super.toSaveFormat();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"        return Todo.TYPE + super.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":25}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"// deals with interactions with the user","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"    private static final String CHAT_BOT_NAME \u003d \"Genos\";","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"    private final Scanner in;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"        this.out \u003d System.out;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"    public void greet() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"        String msg \u003d \"Hello I\u0027m \" + Ui.CHAT_BOT_NAME + \".\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"                + \"Please type your command below, I will store what you said\" + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"                + \"Usage: \\\"list\\\" to see the list of text stored, \\\"bye\\\" to exit\" + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"                + \"\\\"mark [number]\\\" to mark task no. [number] to be done, \"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"                + \"\\\"unmark [number]\\\" to mark it as undone\" + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"                + \"\\\"todo [description]\\\" to add todo, \\\"event [description] /from [date] /to [date]\\\" \"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"                + \"to add event,\" + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"                + \"\\\"deadline [description] /by [date]\\\" to add deadline\";","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"        out.println(msg);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"    public void goodBye() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"        out.println(\"    Goodbye, Hope to see you again soon.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"        out.println(\"--------------------------------------------\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cmHuang777"},"content":"    public void showError(String msg) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cmHuang777"},"content":"        out.println(\"There was an error: \" + msg);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cmHuang777"},"content":"    // takes the line of user input until the next line character is given.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cmHuang777"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cmHuang777"},"content":"        return in.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cmHuang777"},"content":"    public void display(String msg) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"cmHuang777"},"content":"        out.println(msg);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cmHuang777"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cmHuang777"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cmHuang777":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"cmHuang777"},"content":"deadline return book /by 2023-09-01","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"cmHuang777"},"content":"event project meeting /from 2023-09-01 /to 2023-09-01","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"cmHuang777"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cmHuang777"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cmHuang777"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"cmHuang777"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"cmHuang777"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"cmHuang777"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"cmHuang777"},"content":"abcd","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"cmHuang777"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"cmHuang777"},"content":"event abcd","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"cmHuang777"},"content":"event abcd from","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"cmHuang777"},"content":"event abcd /from","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"cmHuang777"},"content":"event abcd /from /to","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"cmHuang777"},"content":"event abcd /from asdf to","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"cmHuang777"},"content":"event abcd /from asdf /to","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"cmHuang777"},"content":"event abcd /from 2023-09-01 /to 2023-09-01","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"cmHuang777"},"content":"deadline abcd","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"cmHuang777"},"content":"deadline abcd by","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"cmHuang777"},"content":"deadline abcd /by","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"cmHuang777"},"content":"deadline abcd /by 2023-09-01","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"cmHuang777"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"cmHuang777"},"content":"delete","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"cmHuang777"},"content":"delete abc","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"cmHuang777"},"content":"delete 123","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"cmHuang777"},"content":"delete 4","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"cmHuang777"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"cmHuang777"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":32}},{"path":"text-ui-test/result.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cmHuang777"},"content":"Comparing files ACTUAL.TXT and EXPECTED.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"cmHuang777"},"content":"FC: no differences encountered","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"cmHuang777"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"cmHuang777"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003e result.txt","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cmHuang777":1,"-":20}}]
