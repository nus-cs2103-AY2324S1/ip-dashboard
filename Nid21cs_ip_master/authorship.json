[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"# Duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nid21cs":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Nid21cs"},"content":"    mainClass.set(\"Duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"Nid21cs"},"content":"repositories {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Nid21cs"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Nid21cs"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Nid21cs"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nid21cs":10,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"T|0|balls","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"T|0|sell book","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"T|0|eat book","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":"D|0|return book |2/12/2019 1800","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Nid21cs":4}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":" * The Deadline class represents a deadline task for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":" * It extends the SingleTask class and provides additional methods specific to deadline tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Nid21cs"},"content":"public class Deadline extends SingleTask {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":"    String formattedTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":"    LocalDateTime DueBy;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":"    String unformattedTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"     * Constructs a new Deadline object with the given description and deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"     * @param description the description of the Deadline task","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Nid21cs"},"content":"     * @param deadline the deadline of the Deadline task in the format \"dd/MM/yyyy HHmm\"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Nid21cs"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Nid21cs"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Nid21cs"},"content":"        this.unformattedTime \u003d deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Nid21cs"},"content":"        String[] parts \u003d deadline.split(\"[/ ]\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Nid21cs"},"content":"        int day \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Nid21cs"},"content":"        int month \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Nid21cs"},"content":"        int year \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Nid21cs"},"content":"        int hour \u003d Integer.parseInt(parts[3].substring(0, 2));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Nid21cs"},"content":"        int minute \u003d Integer.parseInt(parts[3].substring(2));","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Nid21cs"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Nid21cs"},"content":"        this.DueBy \u003d dateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Nid21cs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Nid21cs"},"content":"        String formattedDateTime \u003d dateTime.format(formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Nid21cs"},"content":"        this.formattedTime \u003d formattedDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Nid21cs"},"content":"     * Marks the task as done and displays a message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Nid21cs"},"content":"    public void mark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Nid21cs"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(\"Ok boy i mark for you already \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Nid21cs"},"content":"                \"[\" +this.getStatusIcon() +\"] \" + this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Nid21cs"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the status icon of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Nid21cs"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Nid21cs"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Nid21cs"},"content":"     * Unmarks the task as done and displays a message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Nid21cs"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Nid21cs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(\"Ok boy I unmark for you already \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Nid21cs"},"content":"                \"[\" +this.getStatusIcon() +\"] \" + this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task when it is added to a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task when it is added","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"Nid21cs"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"Nid21cs"},"content":"        return \"OK DONE ALR added your Deadline ah:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Nid21cs"},"content":"                \"[D][\" + getStatusIcon() + \"] \" + this.description +\"(by: \"+ this.formattedTime + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task for displaying in a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task in a list","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"Nid21cs"},"content":"    public String listString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"Nid21cs"},"content":"        return \". [D][\" + getStatusIcon() + \"] \" + this.description +\"(by: \"+ this.formattedTime + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task when it is removed from a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task when it is removed","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"Nid21cs"},"content":"    public String remove() {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"Nid21cs"},"content":"        return \"OK DONE ALR removed your Deadline ah:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"Nid21cs"},"content":"                \"[D][\" + getStatusIcon() + \"] \" + this.description +\"(by: \"+ this.formattedTime + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task in a save file","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Nid21cs"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Nid21cs"},"content":"        return \"D|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.description + \"|\" + this.unformattedTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Nid21cs":101}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":" * The Duke class represents the main class for the Duke chat-bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":" * It contains the main method and handles the initialization of the chat-bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"     * Constructs a new Duke object and initializes the chat-bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"    public Duke() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(\"Hello! I\u0027m Auntie Maggie \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Nid21cs"},"content":"                \"\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Nid21cs"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Nid21cs"},"content":"        File dataDir \u003d new File(\"./data\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Nid21cs"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Nid21cs"},"content":"            dataDir.mkdir();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Nid21cs"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Nid21cs"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Nid21cs"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Nid21cs"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Nid21cs"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Nid21cs"},"content":"        ui.getInput(tasks, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Nid21cs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Nid21cs"},"content":"        new Duke();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Nid21cs":34,"-":3}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":" * The DukeException class represents an exception that can be thrown by the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":" * It extends the Exception class and provides a custom message to display to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":"    String message;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":"     * Constructs a new DukeException object with the given message.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":"     * @param message the message to display to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Nid21cs"},"content":"     * Returns the message of the exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the message of the exception","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Nid21cs"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Nid21cs"},"content":"        return this.message;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Nid21cs":25}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":" * The Event class represents an event task for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":" * It extends the SingleTask class and provides additional methods specific to event tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":"public class Event extends SingleTask {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":"    private String from;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":"    private String to;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":"     * Constructs a new Event object with the given description, start time, and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":"     * @param description the description of the Event task","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"     * @param from the start time of the Event","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"     * @param to the end time of the Event","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Nid21cs"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Nid21cs"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Nid21cs"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Nid21cs"},"content":"     * Marks the task as done and displays a message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Nid21cs"},"content":"    public void mark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Nid21cs"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(\"Ok boy i mark for you already \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Nid21cs"},"content":"                \"[\" +this.getStatusIcon() +\"] \" + this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Nid21cs"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the status icon of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Nid21cs"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Nid21cs"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Nid21cs"},"content":"     * Unmarks the task as done and displays a message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Nid21cs"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Nid21cs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(\"Ok boy I unmark for you already \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Nid21cs"},"content":"                \"[\" +this.getStatusIcon() +\"] \" + this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task when it is added to a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task when it is added","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Nid21cs"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Nid21cs"},"content":"        return \"OK DONE ALR added your Event ah:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Nid21cs"},"content":"                \"[E][\" + getStatusIcon() + \"] \" + this.description +\"(from: \"+ this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task for displaying in a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task in a list","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Nid21cs"},"content":"    public String listString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Nid21cs"},"content":"        return \". [E][\" + getStatusIcon() + \"] \" + this.description +\"(from: \"+ this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task when it is removed from the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task when it is removed","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"Nid21cs"},"content":"    public String remove() {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"Nid21cs"},"content":"        return \"OK DONE ALR removed your Event ah:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"Nid21cs"},"content":"                \"[E][\" + getStatusIcon() + \"] \" + this.description +\"(from: \"+ this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task in a save file","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Nid21cs"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Nid21cs"},"content":"        return \"E|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.description + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Nid21cs":88}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":" * The Parser class represents the parser for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":" * It provides methods to parse user input and execute commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":"    public Parser() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":"     * Parses the given user input and executes the corresponding command.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":"     * @param s the user input to parse","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"     * @param taskList the TaskList object to store and manage tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"     * @throws DukeException if there is an error parsing the user input","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"    public void parse(String s, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Nid21cs"},"content":"        if (s.matches(\".*\\\\bdelete\\\\b.*\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Nid21cs"},"content":"            String[] parts \u003d s.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Nid21cs"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Nid21cs"},"content":"                throw new DukeException(\"Boy ah need to know which one u want delete eh.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Nid21cs"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Nid21cs"},"content":"            int number \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Nid21cs"},"content":"            taskList.deleteTask(number);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Nid21cs"},"content":"            System.out.println(String.format(\"Got %d task in list boy\", taskList.taskList.size()));","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Nid21cs"},"content":"        } else if (s.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Nid21cs"},"content":"            taskList.list();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Nid21cs"},"content":"        } else if (s.matches(\".*\\\\bmark\\\\b.*\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Nid21cs"},"content":"            String[] parts \u003d s.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Nid21cs"},"content":"            int number \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Nid21cs"},"content":"            taskList.mark(number);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Nid21cs"},"content":"        } else if (s.matches(\".*\\\\bunmark\\\\b.*\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Nid21cs"},"content":"            String[] parts \u003d s.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Nid21cs"},"content":"            int number \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Nid21cs"},"content":"            taskList.unmark(number);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Nid21cs"},"content":"        } else if (s.matches(\".*\\\\bfind\\\\b.*\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Nid21cs"},"content":"            String[] parts \u003d s.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Nid21cs"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Nid21cs"},"content":"                throw new DukeException(\"Boy ah need to know which one u want delete eh.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Nid21cs"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Nid21cs"},"content":"            String keyword \u003d parts[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Nid21cs"},"content":"            taskList.find(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Nid21cs"},"content":"        } else if (s.matches(\"(?i)^\\\\s*(todo|event|deadline)\\\\b.*\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Nid21cs"},"content":"            String[] parts \u003d s.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Nid21cs"},"content":"            String TypeOfEvent \u003d parts[0].toLowerCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Nid21cs"},"content":"            switch (TypeOfEvent) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Nid21cs"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Nid21cs"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Nid21cs"},"content":"                        throw new DukeException(\"Boy ah todo need description eh.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Nid21cs"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Nid21cs"},"content":"                    String content \u003d parts[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Nid21cs"},"content":"                    taskList.createToDo(content);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Nid21cs"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Nid21cs"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Nid21cs"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Nid21cs"},"content":"                        throw new DukeException(\"Boy need to know when the deadline is eh.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Nid21cs"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Nid21cs"},"content":"                    String[] part \u003d parts[1].split(\"/by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Nid21cs"},"content":"                    if (part.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Nid21cs"},"content":"                        throw new DukeException(\"BOY AH The deadline need to write a /by time!!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Nid21cs"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Nid21cs"},"content":"                    taskList.createDeadline(part[0], part[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Nid21cs"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Nid21cs"},"content":"                case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Nid21cs"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Nid21cs"},"content":"                        throw new DukeException(\"Boy need to know the event description eh.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Nid21cs"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Nid21cs"},"content":"                    String[] strarray \u003d parts[1].split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Nid21cs"},"content":"                    if (strarray.length \u003c 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Nid21cs"},"content":"                        throw new DukeException(\"BOY!! The event command need /from and /to times.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Nid21cs"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Nid21cs"},"content":"                    String from \u003d strarray[1].replace(\"from\", \"\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Nid21cs"},"content":"                    String to \u003d strarray[2].replace(\"to\", \"\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Nid21cs"},"content":"                    taskList.createEvent(strarray[0], from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Nid21cs"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Nid21cs"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Nid21cs"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Nid21cs"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Nid21cs"},"content":"            throw new DukeException(\"Boy idk what you saying eh must tell me todo or deadline or event :(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Nid21cs":82}},{"path":"src/main/java/Duke/SingleTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":" * The SingleTask class represents a single task for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":" * It is an abstract class that provides a common interface for different types of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":"public abstract class SingleTask {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":"    protected  String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":"    protected Boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Nid21cs"},"content":"    public SingleTask(String s) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":"        this.description \u003d s;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"    public abstract void mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"    public abstract String getStatusIcon();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Nid21cs"},"content":"    public abstract void unmark();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Nid21cs"},"content":"    public abstract String listString();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Nid21cs"},"content":"    public abstract String remove ();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Nid21cs"},"content":"    public abstract String toSaveString();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Nid21cs":23}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Nid21cs"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":" * The Storage class represents the storage for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":" * It provides methods to save and load tasks from a file so tasks are not lost when bot is closed.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"    private String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Nid21cs"},"content":"     * Constructs a new Storage object with the given file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Nid21cs"},"content":"     * @param filePath the file path to save and load tasks from","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Nid21cs"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Nid21cs"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Nid21cs"},"content":"     * Saves the given list of tasks to the file specified by the file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Nid21cs"},"content":"     * @param taskList an ArrayList of SingleTask objects representing the list of tasks to save","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Nid21cs"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Nid21cs"},"content":"    public void saveTasks(ArrayList\u003cSingleTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Nid21cs"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Nid21cs"},"content":"        for (SingleTask task : taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Nid21cs"},"content":"            fw.write(task.toSaveString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Nid21cs"},"content":"        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Nid21cs"},"content":"     * Loads a list of tasks from the file specified by the file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Nid21cs"},"content":"     * @return an ArrayList of SingleTask objects representing the list of tasks loaded from the file","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Nid21cs"},"content":"     * @throws IOException if there is an error reading from the file","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Nid21cs"},"content":"     * @throws DukeException if there is an error parsing the data in the file","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Nid21cs"},"content":"    public ArrayList\u003cSingleTask\u003e loadTasks() throws IOException, DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Nid21cs"},"content":"        ArrayList\u003cSingleTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Nid21cs"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Nid21cs"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Nid21cs"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Nid21cs"},"content":"            return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Nid21cs"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Nid21cs"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Nid21cs"},"content":"            String s \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Nid21cs"},"content":"            String[] parts \u003d s.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Nid21cs"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Nid21cs"},"content":"            boolean isDone \u003d Integer.parseInt(parts[1]) \u003d\u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Nid21cs"},"content":"            System.out.println();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Nid21cs"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Nid21cs"},"content":"            SingleTask task;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Nid21cs"},"content":"            switch (type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Nid21cs"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Nid21cs"},"content":"                    task \u003d new ToDo(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Nid21cs"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Nid21cs"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Nid21cs"},"content":"                    String by \u003d parts[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Nid21cs"},"content":"                    task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Nid21cs"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Nid21cs"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Nid21cs"},"content":"                    String from \u003d parts[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Nid21cs"},"content":"                    String to \u003d parts[4];","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Nid21cs"},"content":"                    task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Nid21cs"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Nid21cs"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Nid21cs"},"content":"                    throw new DukeException(\"Invalid task type in save file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Nid21cs"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Nid21cs"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Nid21cs"},"content":"                task.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Nid21cs"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Nid21cs"},"content":"            taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Nid21cs"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Nid21cs":83}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":" * The TaskList class represents a list of tasks for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":" * It provides methods to manage and manipulate the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Nid21cs"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":"    ArrayList\u003cSingleTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"     * Constructs a new TaskList object with an empty list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Nid21cs"},"content":"     * Constructs a new TaskList object with the given stored list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Nid21cs"},"content":"     * @param taskList an ArrayList of SingleTask objects representing the list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Nid21cs"},"content":"    public TaskList(ArrayList\u003cSingleTask\u003e taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Nid21cs"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Nid21cs"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Nid21cs"},"content":"     * @param TaskNumber the index of the task to delete (1-based indexing)","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Nid21cs"},"content":"     * @throws DukeException if the given index is out of bounds","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Nid21cs"},"content":"    public void deleteTask(int TaskNumber) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Nid21cs"},"content":"        if (TaskNumber - 1 \u003e\u003d  this.taskList.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Nid21cs"},"content":"            throw new DukeException(\"Boy ah cannot delete a task you dont have eh.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Nid21cs"},"content":"        SingleTask task \u003d this.taskList.get(TaskNumber - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(task.remove());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Nid21cs"},"content":"        this.taskList.remove(TaskNumber - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Nid21cs"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Nid21cs"},"content":"    public void list() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Nid21cs"},"content":"        if (this.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Nid21cs"},"content":"            System.out.println(\"No tasks here ah boy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Nid21cs"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Nid21cs"},"content":"            System.out.println(\"Here are your tasks ah boy:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Nid21cs"},"content":"            for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Nid21cs"},"content":"                SingleTask task \u003d this.taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Nid21cs"},"content":"                System.out.println((i + 1) + task.listString());","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Nid21cs"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Nid21cs"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Nid21cs"},"content":"     * @param TaskNumber the index of the task to mark as done (1-based indexing)","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Nid21cs"},"content":"     * @throws DukeException if the given index is out of bounds","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Nid21cs"},"content":"    public void mark(int TaskNumber) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Nid21cs"},"content":"        if (TaskNumber - 1 \u003e\u003d  this.taskList.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Nid21cs"},"content":"            throw new DukeException(\"Boy ah cannot mark a task you dont have eh.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Nid21cs"},"content":"        SingleTask task \u003d this.taskList.get(TaskNumber - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Nid21cs"},"content":"        task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Nid21cs"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Nid21cs"},"content":"     * @param TaskNumber the index of the task to unmark as done (1-based indexing)","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Nid21cs"},"content":"     * @throws DukeException if the given index is out of bounds","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Nid21cs"},"content":"    public void unmark(int TaskNumber) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Nid21cs"},"content":"        if (TaskNumber - 1 \u003e\u003d  this.taskList.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Nid21cs"},"content":"            throw new DukeException(\"Boy ah cannot unmark a task you dont have eh.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Nid21cs"},"content":"        SingleTask task \u003d this.taskList.get(TaskNumber - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Nid21cs"},"content":"        task.unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Nid21cs"},"content":"     * Creates a new ToDo task and adds it to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Nid21cs"},"content":"     * @param content the description of the ToDo task","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Nid21cs"},"content":"    public void createToDo(String content) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Nid21cs"},"content":"        SingleTask taskT \u003d new ToDo(content);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Nid21cs"},"content":"        this.taskList.add(taskT);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(taskT.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(String.format(\"Got %d task in list boy\", taskList.size()));","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Nid21cs"},"content":"     * Creates a new Deadline task and adds it to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Nid21cs"},"content":"     * @param description the description of the Deadline task","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Nid21cs"},"content":"     * @param deadline the deadline of the Deadline task","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Nid21cs"},"content":"    public void createDeadline(String description, String deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Nid21cs"},"content":"        SingleTask taskD \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Nid21cs"},"content":"        taskList.add(taskD);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(taskD.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(String.format(\"Got %d task in list boy\", taskList.size()));","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Nid21cs"},"content":"     * Creates a new Event task and adds it to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Nid21cs"},"content":"     * @param description the description of the Event","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Nid21cs"},"content":"     * @param from the start time of the Event","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Nid21cs"},"content":"     * @param to the end time of the Event","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Nid21cs"},"content":"    public void createEvent(String description, String from, String to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Nid21cs"},"content":"        SingleTask taskE \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Nid21cs"},"content":"        taskList.add(taskE);","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(taskE.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(String.format(\"Got %d task in list boy\", taskList.size()));","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"Nid21cs"},"content":"     * Finds and displays tasks that contain a given keyword in their description.","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"Nid21cs"},"content":"     * @param keyWord the keyword to search for in the descriptions of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Nid21cs"},"content":"    public void find(String keyWord) {","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"Nid21cs"},"content":"        if (this.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"Nid21cs"},"content":"            System.out.println(\"Boy ah got no tasks how to find anything??\");","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"Nid21cs"},"content":"        String msg \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"Nid21cs"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"Nid21cs"},"content":"        for (SingleTask task : this.taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"Nid21cs"},"content":"            if (task.description.contains(keyWord)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"Nid21cs"},"content":"                msg +\u003d i + task.listString() + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"Nid21cs"},"content":"                i++;","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"Nid21cs"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Nid21cs":137}},{"path":"src/main/java/Duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":" * The ToDo class represents a to-do task for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":" * It extends the SingleTask class and provides additional methods specific to to-do tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":"public class ToDo extends SingleTask {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":"    public ToDo(String s) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":"        super(s);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":"     * Marks the task as done and displays a message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"    public void mark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(\"Ok boy i mark for you already \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Nid21cs"},"content":"                \"[\" +this.getStatusIcon() +\"] \" + this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Nid21cs"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the status icon of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Nid21cs"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Nid21cs"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Nid21cs"},"content":"     * Unmarks the task as done and displays a message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Nid21cs"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Nid21cs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Nid21cs"},"content":"        System.out.println(\"Ok boy I unmark for you already \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Nid21cs"},"content":"                \"[\" +this.getStatusIcon() +\"] \" + this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task when it is added to a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task when it is added","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Nid21cs"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Nid21cs"},"content":"        return \"OK DONE ALR added your todo ah:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Nid21cs"},"content":"                \"[T]\" + \"[\" +this.getStatusIcon() +\"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task for displaying in a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task in a list","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Nid21cs"},"content":"    public String listString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Nid21cs"},"content":"        return \". [T]\" + \"[\" +this.getStatusIcon() +\"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task when it is removed from a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task when it is removed","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Nid21cs"},"content":"    public String remove() {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Nid21cs"},"content":"        return \"OK DONE ALR removed your todo ah:\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Nid21cs"},"content":"                \"[T]\" + \"[\" +this.getStatusIcon() +\"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Nid21cs"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Nid21cs"},"content":"     * @return a string representing the task in a save file","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Nid21cs"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Nid21cs"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Nid21cs"},"content":"        return \"T|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + description;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Nid21cs":76}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":" * The Ui class represents the user interface for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":" * It handles user input and displays messages to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Nid21cs"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Nid21cs"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Nid21cs"},"content":"     * Gets user input from the command line and processes it using a Parser object.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Nid21cs"},"content":"     * @param tasks the TaskList object to store and manage tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Nid21cs"},"content":"     * @param storage the Storage object to save and load tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Nid21cs"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Nid21cs"},"content":"    public void getInput(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Nid21cs"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Nid21cs"},"content":"        String s \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Nid21cs"},"content":"        while (!s.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Nid21cs"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Nid21cs"},"content":"                parser.parse(s, tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Nid21cs"},"content":"                s \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Nid21cs"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Nid21cs"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Nid21cs"},"content":"                s \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Nid21cs"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Nid21cs"},"content":"        if (s.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Nid21cs"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Nid21cs"},"content":"                storage.saveTasks(tasks.taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Nid21cs"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Nid21cs"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Nid21cs"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Nid21cs"},"content":"            System.out.println(\"Bye! Auntie maggie see you later!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Nid21cs"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Nid21cs":47}},{"path":"src/test/java/Duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"package Duke;  //same package as the class being tested","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Nid21cs"},"content":"public class DukeTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Nid21cs"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Nid21cs"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Nid21cs"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Nid21cs"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Nid21cs"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Nid21cs"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Nid21cs"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Nid21cs"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Nid21cs"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Nid21cs":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nid21cs"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Nid21cs"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Nid21cs"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Nid21cs"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Nid21cs"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Nid21cs":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Nid21cs"},"content":"## convert to UNIX format","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nid21cs":1,"-":37}}]
