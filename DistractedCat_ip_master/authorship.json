[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    testImplementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    mainClass.set(\"com.mimi.main.Mimi\")","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    archiveBaseName \u003d \"Mimi\"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DistractedCat":10,"-":40}},{"path":"src/main/java/com/mimi/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":" * A representation of the abstract idea of Commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    public abstract void execute();","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    public abstract void uiResponse(Ui ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * Checks if the command given is the command to exit.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * @return returns true if the command is the exit command and false otherwise","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":27}},{"path":"src/main/java/com/mimi/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" * Representation of the deadline Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    private boolean isCompleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    private String taskName;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime deadlineTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the deadline Command","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * @param isCompleteCommand true if the given input has all the necessary components.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     * @param taskName the string representation of the deadline task name.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * @param deadlineTime the deadline time of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     * @param storage A Storage instance that stores the previous tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData A ReadWriteData instance that access and writes data to the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    public DeadlineCommand(boolean isCompleteCommand, String taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"                       LocalDateTime deadlineTime, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        this.isCompleteCommand \u003d isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        //first check if the command is complete and if the time format is correct.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand || this.deadlineTime \u003d\u003d LocalDateTime.MIN) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"        Deadline deadline \u003d new Deadline(this.taskName, this.deadlineTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        this.storage.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData.write(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteDeadlineCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"        } else if (this.deadlineTime \u003d\u003d LocalDateTime.MIN) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"            ui.wrongTimeFormat();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        ui.separator();","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":69}},{"path":"src/main/java/com/mimi/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Delete Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    private boolean isCompleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the delete command.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     * @param isCompleteCommand true if the input has all the necessary components.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber the position that the task is stored in the Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage that stores the previous tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData an instance of ReadWriteData that writes and accesses items in the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    public DeleteCommand(boolean isCompleteCommand, int taskNumber, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"        this.isCompleteCommand \u003d isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        if (this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"            this.storage.delete(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"            readWriteData.updateFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteDeleteCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        ui.separator();","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":53}},{"path":"src/main/java/com/mimi/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Event Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    private boolean isCompleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    private String eventName;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the event Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * @param isCompleteCommand true if the input given had all the necessary fields.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     * @param eventName The string representation of the name of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * @param startTime The start time of the event","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     * @param endTime The end time of the event","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     * @param storage A Storage instance that stores the previous tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData A ReadWriteData instance that helps access and write data to the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    public EventCommand(boolean isCompleteCommand, String eventName, LocalDateTime startTime,","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"                        LocalDateTime endTime, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        this.isCompleteCommand \u003d isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand || this.startTime \u003d\u003d LocalDateTime.MIN || this.endTime \u003d\u003d LocalDateTime.MIN) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        Event event \u003d new Event(this.eventName, this.startTime, this.endTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        this.storage.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData.write(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteEventCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        } else if (this.startTime \u003d\u003d LocalDateTime.MIN || this.endTime \u003d\u003d LocalDateTime.MIN) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"            ui.wrongTimeFormat();","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"        ui.separator();","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":70}},{"path":"src/main/java/com/mimi/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Exit Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    public void execute() { }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"        ui.exitMessage();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     * Checks if the command given is the command to exit.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * @return returns true if the command is the exit command and false otherwise","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":32}},{"path":"src/main/java/com/mimi/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * Representation of the find Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"    private String searchTerm;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the find command without any search terms.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    public FindCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the find Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * @param searchTerm the string that is used to find matching descriptions in Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    public FindCommand(String searchTerm, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        if (searchTerm !\u003d null \u0026\u0026 !searchTerm.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"            this.storage.search(searchTerm);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"        if (this.searchTerm \u003d\u003d null || this.searchTerm.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteSearchCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"        ui.separator();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"DistractedCat":44}},{"path":"src/main/java/com/mimi/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * Representation of Invalid Commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    public void execute() { }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"        ui.invalidTaskMessage();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":24}},{"path":"src/main/java/com/mimi/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * Representation of the List Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the List Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    public ListCommand(Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        this.storage.listItems();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        ui.separator();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":37}},{"path":"src/main/java/com/mimi/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Mark Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private boolean isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private int taskNumber;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the mark Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * @param isCompleteCommand true if the input has all the necessary components.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber the index of the task that is stored in Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData an instance of ReadWriteData.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    public MarkCommand(boolean isCompleteCommand, int taskNumber, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        this.isCompleteCommand \u003d isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        if (this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"            this.storage.mark(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"            readWriteData.updateFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteMarkCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        ui.separator();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":58}},{"path":"src/main/java/com/mimi/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * Representation of the todo Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    private String taskTodo;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the Todo Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * @param taskTodo String representation of the task to be done.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData an instance of ReadWriteData.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    public TodoCommand(String taskTodo, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"        this.taskTodo \u003d taskTodo;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        Todo todo \u003d new Todo(taskTodo);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        storage.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        readWriteData.write(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"        ui.separator();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":48}},{"path":"src/main/java/com/mimi/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * Representation of the un-mark Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    private boolean isCompleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the un-mark Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     * @param isCompleteCommand true if the input has all the necessary components.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber the index of the task in the Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData an instance of ReadWriteData.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    public UnmarkCommand(boolean isCompleteCommand, int taskNumber, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"        this.isCompleteCommand \u003d isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        if (this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"            storage.unmark(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"            readWriteData.updateFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteUnmarkCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        ui.separator();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":56}},{"path":"src/main/java/com/mimi/main/InvalidTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":" * An exception representing invalid tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"public class InvalidTask extends Exception{","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"DistractedCat":8}},{"path":"src/main/java/com/mimi/main/Mimi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" * The main class of the Mimi program.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"public class Mimi {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the Mimi bot.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * @param directory the directory for the data to be stored in","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * @param dataPath the path for the data to be stored in","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    public Mimi(String directory, String dataPath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d new Storage(this.ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        File directoryFile \u003d new File(directory);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        File dataFile \u003d new File(dataPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"            //checks if the directory and the file are created. If not, create it.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"            if (directoryFile.mkdir()) { }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"            if (dataFile.createNewFile()) { }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"            this.readWriteData \u003d new ReadWriteData(dataFile, this.storage, this.ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"            this.ui.showLoadingError();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"     * Runs the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData.initialise();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"        this.ui.welcomeMessage();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        Scanner inputReader \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        while (true) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"            String input \u003d inputReader.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"            ui.separator();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"            Parser parser \u003d new Parser(input, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"            Command c \u003d parser.parse();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"            c.execute();","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"            c.uiResponse(this.ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"            if (c.isExit()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"        String directory \u003d \"./data/\";","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"        String dataPath \u003d \"./data/Mimi.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"        new Mimi(directory, dataPath).run();","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":80}},{"path":"src/main/java/com/mimi/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.DeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.EventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.ExitCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.FindCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.InvalidCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.TodoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":" * A class that takes given inputs from the user and interprets it for a Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    private String input;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    private enum ValidCommands {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        bye, list, mark, unmark, delete, todo, deadline, event, find","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of Parser","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"     * @param input the string input to be interpreted","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of the Storage class","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData an instance of the ReadWriteData class","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    public Parser(String input, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"     * Parses the given string input and returns the appropriate command","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"     * @return a Command instance represented by the given input","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"    public Command parse() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        boolean isValidCommand \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        String cmd \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        if (cmd.contains(\" \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"            int i \u003d cmd.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"            cmd \u003d cmd.substring(0, i);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"        //TODO: make sure commands handle the case where there are no spaces present","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        //check if this is a valid command","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"        for (ValidCommands v: ValidCommands.values()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"            if (cmd.equals(v.toString())) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"                isValidCommand \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"        if (isValidCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"            switch (cmd) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"            case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"                return new ListCommand(this.storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"                return markCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"                return unmarkCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"                return deleteCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"                return todoCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"                return deadlineCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"            case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"                return eventCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"            case \"find\":","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"                return findCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"            default:","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"        return new InvalidCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"    private Command findCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"        String taskDescription \u003d input;","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"        //first remove the find keyword","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"        if (!taskDescription.contains(\" \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"            return new FindCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d taskDescription.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"        taskDescription \u003d taskDescription.substring(i + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"        return new FindCommand(taskDescription, this.storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"    private Command eventCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"        //first remove the event keyword","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d temp.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"        temp \u003d temp.substring(i + 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"        //check if the task has specified a start and end time","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"        if (!temp.contains(\"/from\") || !temp.contains(\"/to\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"            return new EventCommand(false, \"\", LocalDateTime.MIN,","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.MIN, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"        //next isolate the task name","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"        int j \u003d temp.indexOf(\"/from\");","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"        String taskName \u003d temp.substring(0, j - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"        //next isolate the start date","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"        int k \u003d temp.indexOf(\"/to\");","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"        String startDate \u003d temp.substring(j + 6, k - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"        //next isolate the end date","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"        String endDate \u003d temp.substring(k + 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(startDate, Parser.FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(endDate, Parser.FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"            return new EventCommand(true, taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"                    startTime, endTime, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"            return new EventCommand(true, taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.MIN, LocalDateTime.MIN, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"    private Command deadlineCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"        //first remove the deadline keyword","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d temp.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"        temp \u003d temp.substring(i + 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"        //check if the task has specified a deadline time","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"        if (!temp.contains(\"/by\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"            return new DeadlineCommand(false, \"\",","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.MIN, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"DistractedCat"},"content":"        //next isolate the deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"DistractedCat"},"content":"        int j \u003d temp.indexOf(\"/by\");","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"DistractedCat"},"content":"        String deadline \u003d temp.substring(j + 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"        //next isolate the taskName","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"DistractedCat"},"content":"        String taskName \u003d temp.substring(0, j - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"DistractedCat"},"content":"            LocalDateTime localDateTime \u003d LocalDateTime.parse(deadline, Parser.FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"            return new DeadlineCommand(true, taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"DistractedCat"},"content":"                    localDateTime, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"DistractedCat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"DistractedCat"},"content":"            return new DeadlineCommand(true, taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.MIN, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"DistractedCat"},"content":"    private Command deleteCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"DistractedCat"},"content":"            int taskNumber \u003d Integer.parseInt(temp.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"DistractedCat"},"content":"            return new DeleteCommand(true, taskNumber, this.storage, this.readWriteData);","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"DistractedCat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"DistractedCat"},"content":"            return new DeleteCommand(false, -1, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"DistractedCat"},"content":"    private Command unmarkCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"DistractedCat"},"content":"            int taskNumber \u003d Integer.parseInt(temp.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"DistractedCat"},"content":"            return new UnmarkCommand(true, taskNumber, this.storage, this.readWriteData);","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"DistractedCat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"DistractedCat"},"content":"            return new UnmarkCommand(false, -1, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"DistractedCat"},"content":"    private Command markCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"DistractedCat"},"content":"            int taskNumber \u003d Integer.parseInt(temp.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"DistractedCat"},"content":"            return new MarkCommand(true, taskNumber, this.storage, this.readWriteData);","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"DistractedCat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"DistractedCat"},"content":"            return new MarkCommand(false, -1, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"DistractedCat"},"content":"    private Command todoCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d temp.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"DistractedCat"},"content":"        temp \u003d temp.substring(i + 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"DistractedCat"},"content":"        return new TodoCommand(temp, storage, readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":240}},{"path":"src/main/java/com/mimi/main/ReadWriteData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":" * A class that reads from and writes data to the hard drive.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"public class ReadWriteData {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    private File dataFile;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    private Storage previousCommands;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * creates a new instance of ReadWriteData","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     * @param datafile The file to be read/written into","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     * @param previousCommands an instance of Storage that keeps track of what tasks have been recorded","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     * @param ui the Ui responsible for displaying messages","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    public ReadWriteData(File datafile, Storage previousCommands, Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        this.dataFile \u003d datafile;","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        this.previousCommands \u003d previousCommands;","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"     * Initialises the storage by reading data previously stored in the hard drive.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    public void initialise() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"            Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"                String task \u003d fileReader.nextLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"                if (task.equals(\"\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"                    continue;","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"                int i \u003d task.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"                String taskCode \u003d task.substring(0, i);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"                String taskWithoutCode \u003d task.substring(i + 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"                int j \u003d taskWithoutCode.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"                String isCompletedTask \u003d taskWithoutCode.substring(0, j);","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"                String taskDescription \u003d taskWithoutCode.substring(j + 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"                switch(taskCode) {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"                case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"                    initialiseTodo(isCompletedTask.equals(\"X\"), taskDescription);","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"                case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"                    initialiseDeadline(isCompletedTask.equals(\"X\"), taskDescription);","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"                case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"                    initialiseEvent(isCompletedTask.equals(\"X\"), taskDescription);","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"                default:","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"            fileReader.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"            ui.unableToLoadFromMemory();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"    private void initialiseTodo(boolean isCompletedTask, String taskDescription) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"        Task newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"        previousCommands.addWithoutPrinting(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"        if (isCompletedTask) {","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"            newTask.toggleDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"    private void initialiseDeadline(boolean isCompletedTask, String taskDescription) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d taskDescription.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"        int j \u003d taskDescription.indexOf(\u0027)\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"        String taskName \u003d taskDescription.substring(0, i - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"        String deadline \u003d taskDescription.substring(i + 5, j);","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"            Task newTask \u003d new Deadline(taskName, LocalDateTime.parse(deadline, Parser.FORMATTER));","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"            previousCommands.addWithoutPrinting(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"            if (isCompletedTask) {","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"                newTask.toggleDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"            ui.unableToLoadFromMemory();","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"    private void initialiseEvent(boolean isCompletedTask, String taskDescription) {","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d taskDescription.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"        int j \u003d taskDescription.indexOf(\u0027)\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"        int k \u003d taskDescription.indexOf(\"to:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"        String taskName \u003d taskDescription.substring(0, i - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"        String startTime \u003d taskDescription.substring(i + 7, k - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"        String endTime \u003d taskDescription.substring(k + 4, j);","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"            Task newTask \u003d new Event(taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.parse(startTime, Parser.FORMATTER),","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.parse(endTime, Parser.FORMATTER)","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"            );","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"            previousCommands.addWithoutPrinting(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"            if (isCompletedTask) {","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"                newTask.toggleDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"            ui.unableToLoadFromMemory();","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"     * Writes a given task into the hard drive.","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"     * @param task a Task instance that to be written into the hard drive","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"    public void write(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.dataFile, true);","lastModifiedDate":"2023-08-26"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"            String message \u003d String.format(\"%s|%s|%s\",","lastModifiedDate":"2023-08-26"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"                    task.eventCode(), task.getStatusIcon(), task.writeFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"            fileWriter.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"            fileWriter.write(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"            System.out.println(\"Error occured when writing to file: \" + e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"     * Updates the File to reflect any changes in the status of the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"    public void updateFile() {","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"        this.dataFile.delete();","lastModifiedDate":"2023-08-26"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"            if (this.dataFile.createNewFile()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"                this.previousCommands.updateAll(this);","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"            ui.errorWhenUpdatingFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"DistractedCat":174}},{"path":"src/main/java/com/mimi/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * A class which represents the tasks previously executed and their status.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"public class Storage {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private ArrayList\u003cTask\u003e previousCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the Storage","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * @param ui the Ui needed for the ui responses","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    public Storage(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     * Adds a task to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * @param task the given Task to be added to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        this.previousCommands.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        ui.addTaskMessage(task, previousCommands.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"     * Adds a task without any ui response. This is used during initialisation","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"     * when data is read from the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"     * @param task the Task to be added to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    public void addWithoutPrinting(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        this.previousCommands.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"     * Lists out all the items in the storage in the order that they were added.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"    public void listItems() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"        for (int i \u003d 0; i \u003c this.previousCommands.size(); ++i) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"            Task task \u003d this.previousCommands.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"            ui.listTask(i + 1, task);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"     * Marks the task represented with the given number.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber an integer that denotes the position of the task to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"    public void mark(int taskNumber) {","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        if (taskNumber \u003e previousCommands.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"            ui.markUnmarkDeleteWrongTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        Task task \u003d previousCommands.get(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"        if (task.isDone()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"            ui.taskAlreadyMarkedAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"        task.toggleDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"        ui.markTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"     * Un-marks the task represented with the given number.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber an integer that denotes the position of the task to be un-marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"    public void unmark(int taskNumber) {","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"        if (taskNumber \u003e previousCommands.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"            ui.markUnmarkDeleteWrongTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        Task task \u003d previousCommands.get(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"            ui.taskAlreadyUnmarked();","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"        task.toggleDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"        ui.unmarkTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"     * Deletes the task represented with the given number from the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber an integer that denotes the position of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"        if (taskNumber \u003e previousCommands.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"            ui.markUnmarkDeleteWrongTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"        Task task \u003d previousCommands.get(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"        previousCommands.remove(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"        ui.deleteTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"     * Updates the hard disk with all the current tasks in the storage along with their status.","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"     * @param writer an instance of ReadWriteData to write the information to the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"    public void updateAll(ReadWriteData writer) {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"        for (Task task: this.previousCommands) {","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"            writer.write(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"     * Searches the previous tasks with the given string.","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"     * @param searchTerm The string that should match descriptions from previous tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"    public void search(String searchTerm) {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"        for (Task task: this.previousCommands) {","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"            //convert both strings to lower case to ignore casing","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"            if (task.toString().toLowerCase()","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"                .contains(searchTerm.toLowerCase())) {","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"                ui.returnSearchTerm(task, index);","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"                index++;","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"            ui.noSearchResults();","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"DistractedCat":147}},{"path":"src/main/java/com/mimi/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * A class that is responsible for the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"    private static final String LINE \u003d \"_________________________________________________\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when there is a loading error.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"Failed to load... Please try again!\\n\" + LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * Displays a welcome message when the program starts up.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"                        LINE","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"                        + \"Hello! I\u0027m Mimi.\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"                        + \"What can I do for you?\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"                        + LINE","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user exits.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    public void exitMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"                \"Bye. Hope to see you again soon!\\n\" + LINE","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the task given is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    public void invalidTaskMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry but I don\u0027t know what that means :-(\\n\" + LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"     * Displays a simple line to distinguish the next command.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"    public void separator() {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives a mark command without specifying the task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteMarkCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"Sorry, you must specify a task number to be marked!\\n\" + LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives an un-mark command without specifying the task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteUnmarkCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"Sorry, you must specify a task number to be unmarked!\\n\" + LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives a delete command without specifying the task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteDeleteCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"Sorry, you must specify a task number to be deleted!\\n\" + LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives a deadline command without specifying the","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"     * deadline time.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteDeadlineCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"Sorry, you must specify a time for when the deadline is due!\\n\" + LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives the wrong time format in the input.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"    public void wrongTimeFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"                \"OOPS!! Looks like your time format is wrong, make sure to use \"","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"                        + \"this format: DD/MM/YYYY HHmm.\\nExample is 30/05/2023 2100.\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives an event command without specifying the","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"     * start or end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteEventCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"Sorry, you must specify a start time and an end time for the event!\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"     * Displays a confirmation message when a task is added successfully.","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"     * @param task The task added to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"     * @param size The size of the storage containing previous tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"    public void addTaskMessage(Task task, int size) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"                String.format(\"Got it. I\u0027ve added this task: %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"                        task.toString(), size)","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"     * Displays every task previously stored.","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"     * @param index the index of the task in the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"     * @param task the task to be displayed.","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"    public void listTask(int index, Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"                String.format(\"%d. %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"                        index, task.toString() + \"\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"                )","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user tries to access a task in storage that does not","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"     * yet exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"    public void markUnmarkDeleteWrongTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"☹ OOPS!!! Such a task does not exist!\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user tries to mark a task that has already been completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"    public void taskAlreadyMarkedAsDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"That task has already been marked as done!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message to confirm that a task is marked as done successfully.","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"     * @param task the task to be marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"                String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"                        \"Nice! I\u0027ve marked this task as done: %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"                        task.toString()","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"                )","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user tries to un-mark a task that is not complete.","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"    public void taskAlreadyUnmarked() {","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"That task has already been marked as not done!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user successfully marks a task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"     * @param task the task to be un-marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"                String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"                        \"Ok, I\u0027ve marked this task as not done yet: %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"                        task.toString()","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"                )","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user successfully deletes a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"DistractedCat"},"content":"     * @param task the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"DistractedCat"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(String.format(\"Noted. I\u0027ve removed this task: %s\", task.toString()));","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when there is an error loading data from the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"    public void unableToLoadFromMemory() {","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"Error while initialising: unable to load from memory.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when there is an error writing data into the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"DistractedCat"},"content":"    public void errorWhenUpdatingFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"Error when updating file.\\n\" + LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"DistractedCat"},"content":"     * Displays the task that matches the description given by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"DistractedCat"},"content":"     * @param task the task displayed","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"DistractedCat"},"content":"     * @param index the count of the task number being displayed.","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"DistractedCat"},"content":"    public void returnSearchTerm(Task task, int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"DistractedCat"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"DistractedCat"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(String.format(","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"DistractedCat"},"content":"                \"%d. %s\", index, task.toString()));","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when there are no results that matches the user\u0027s query.","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"DistractedCat"},"content":"    public void noSearchResults() {","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"OOPS!!! There are no search results for your query.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user tries to search for tasks without","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"DistractedCat"},"content":"     * giving a search term.","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteSearchCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"DistractedCat"},"content":"        System.out.println(\"You must enter a search term!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":224}},{"path":"src/main/java/com/mimi/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Deadline Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime deadlineTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the deadline Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"     * @param taskName the string representation of the task name.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     * @param deadlineTime the deadline time of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    public Deadline(String taskName, LocalDateTime deadlineTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"        super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * Returns the string representation of the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents what kind of task this is.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    public String eventCode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        return \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"                this.eventCode(),","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"                this.taskName(),","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"                this.taskEndTime()","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"     * A string representation of the end time of the task, if any.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"     * @return a formatted string that shows the end time of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"    public String taskEndTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        //format : MMM dd yyyy HH:mm ({dayOfWeek})","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"                \"%s %s (%s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"                this.deadlineTime.getMonth().toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"                this.deadlineTime.format(formatter),","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"                this.deadlineTime.getDayOfWeek()","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"                );","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"     * A string that is used to store the task content into the hard drive","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"     * @return string representation of the task for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"    public String writeFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"%s (by: %s)\", this.taskName(), this.deadlineTime.format(formatter));","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":69}},{"path":"src/main/java/com/mimi/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     * @param taskName the string representation of the event name.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     * @param startTime the start time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * @param endTime the end time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    public Event(String taskName, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"        super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     * Returns the string representation of the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents what kind of task this is.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    public String eventCode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        return \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"[%s][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"                this.eventCode(),","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"                this.taskName(),","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"                this.taskStartTime(),","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"                this.taskEndTime()","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"     * A string representation of the start time of the task, if any.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"     * @return a formatted string that shows the start time of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"    public String taskStartTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        //format : MMM dd yyyy HH:mm ({dayOfWeek})","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"                \"%s %s (%s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"                this.startTime.getMonth().toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"                this.startTime.format(formatter),","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"                this.startTime.getDayOfWeek()","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"     * A string representation of the end time of the task, if any.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"     * @return a formatted string that shows the end time of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"    public String taskEndTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"        //format : MMM dd yyyy HH:mm ({dayOfWeek})","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"                \"%s %s (%s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"                this.endTime.getMonth().toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"                this.endTime.format(formatter),","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"                this.endTime.getDayOfWeek()","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"     * A string that is used to store the task content into the hard drive","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"     * @return string representation of the task for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"    public String writeFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"%s (from: %s to: %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"                this.taskName(),","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"                this.startTime.format(formatter),","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"                this.endTime.format(formatter));","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":94}},{"path":"src/main/java/com/mimi/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":" * The parent class of all Tasks. Represents some basic information common to all Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"    private String taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of a Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"     * @param taskName the string representation of the task name.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    Task(String taskName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * Toggles the task between marked done or not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    public void toggleDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     * Returns the string representation of the task status.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents the status of the task based on whether it has been marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"        return this.isDone ? \"X\" : \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if the task is done and false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"     * @return a boolean value that represents if the task is done.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"     * Returns the string representation of the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents what kind of task this is.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"    public String eventCode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"     * Gives a string representation of the task name.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents the task name.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    public String taskName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"        return this.taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"     * A string representation of the start time of the task, if any.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"     * @return a formatted string that shows the start time of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"    public String taskStartTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"     * A string representation of the end time of the task, if any.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"     * @return a formatted string that shows the end time of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    public String taskEndTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"     * A string that is used to store the task content into the hard drive","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"     * @return string representation of the task for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"    public String writeFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"        return this.taskName();","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":84}},{"path":"src/main/java/com/mimi/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Todo Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the Todo Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"     * @param taskName the string representation of the task name.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"        super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * Returns the string representation of the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents what kind of task this is.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    public String eventCode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"        return \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"[%s][%s] %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"                this.eventCode(),","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"                this.taskName());","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":35}},{"path":"src/test/java/com.mimi/main/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import org.junit.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    public void deadlineEventCodeTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"        Deadline deadline \u003d new Deadline(\"test\", LocalDateTime.MIN);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(\"D\", deadline.eventCode());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"DistractedCat":20}},{"path":"src/test/java/com.mimi/main/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    public void eventCodeTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"        Todo todo \u003d new Todo(\"taskName\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(\"T\", todo.eventCode());","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    public void toStringTaskIncompleteTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(\"[T][] test\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    public void toStringTaskCompleteTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        todo.toggleDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(\"[T][X] test\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"DistractedCat":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"event exam /from today /to tomorrow","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"DistractedCat":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"REM run the program, feed commands from task.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"java -classpath ..\\bin Mimi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DistractedCat":2,"-":19}}]
