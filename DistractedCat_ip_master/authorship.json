[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    testImplementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    mainClass.set(\"com.mimi.main.Launcher\")","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"    archiveBaseName \u003d \"Mimi\"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"    archiveFileName \u003d \u0027Mimi.jar\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DistractedCat":27,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"Mimi is a simple task manager that helps you keep track of your tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"**Testing Instructions**","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"1. Download the release v0.2.","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"2. Save the jar file into an empty folder.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"3. In the terminal, navigate to the saved folder and run it using java -jar Mimi.jar","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"### Notes about formatting","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"Parameters that need to be entered by the user is in ALL_CAPS. ","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"  e.g `todo TASK_NAME` can be used as `todo homework` where homework is supplied as a parameter.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"Errors in formatting such as wrong types (e.g string where a number is expected), missing parameters, will result in a message displayed prompting you to try again.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"Commands such as `list` and `remind` which do not expect any parameters will ignore additional arguments supplied. E.g `list this_is_redundant` will be the same as `list`.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"All tasks will be displayed in the following format: `[TASK_CODE][STATUS] TASK_DESCRIPTION`","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"  TASK_CODE will be one of the following:","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"  - T: Todo","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"  - D: Deadine","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"  - E: Event","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"  STATUS will be one of the following:","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"  - X: Task is marked as completed","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"  -   : Task is not completed","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"  TASK_DESCRIPTION shows a description of the task such as its name, and deadline(s).","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"### List of all features","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"- todo","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"- deadline","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"- event","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"- list","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"- mark","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"- unmark","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"- delete","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"- remind","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"- find","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"- bye","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"## Add a Todo: `todo`","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"Adds a task to be done using a given TASK_NAME.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"### Usages:","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"- Format: `todo TASK_NAME`","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"- Example: `todo homework`","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"## Add a Deadline: `deadline`","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"Adds a task to be done using a given TASK_NAME and a DEADLINE.","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"**Notes: the format for the deadline must be given in DD/MM/YYYY HHmm exactly. Any deviation from this will prompt you to try again.**","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"**You will also not be allowed to add a deadline that is earlier than the current time. This will prompt you to try again.**","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"### Usages:","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"- Format: `deadline TASK_NAME /by DEADLINE","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"- Example: `deadline homework /by 23/09/2023 0000`","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"## Add a Event: `event`","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"Adds a event using a given TASK_NAME, a START_TIME and an END_TIME.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"**Notes: the format for the start and end time must be given in DD/MM/YYYY HHmm exactly. Any deviation from this will prompt you to try again.**","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"**You will also not be allowed to add a start time that is earlier than the current time. You will also not be allowed to add an end time that is earlier than the start time. These will also prompt you to try again.**","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"### Usages:","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"- Format: `event TASK_NAME /from START_TIME /to END_TIME`","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"- Example: `event play ball /from 23/09/2023 1500 /to 23/09/2023 1700`","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"## List all tasks: `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"Lists all the tasks that you have previously added. This command takes no additional parameters.","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"### Usages:","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"- Example: `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"## Mark a task: `mark`","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"Marks a task as done using a given INDEX that is a number. You can access the index using `list`.","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"### Usages:","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"- Format: `mark INDEX`","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"- Example: `mark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"## Mark as task as not done: `unmark`","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"Marks a task as not done using a given INDEX that is a number. You can access the index using `list`.","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"### Usages:","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"- Format: `unmark INDEX`","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"- Example: `unmark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"## Delete a task: `delete`","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"Deletes a task using a given INDEX that is a number. **This action is irreversible**","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"### Usages:","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"- Format: `delete INDEX`","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"- Example: `delete 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"## Send a reminder: `remind`","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"Gives a reminder for tasks that are due in less than a week. Also gives a reminder on tasks that are currently overdue. This command takes no additional parameters.","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"**Note: Upon initialisation, the user will be sent a reminder automatically. However you can still manually call for a reminder using `remind`**","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"### Usages:","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"- Example: `remind`","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"## Find tasks: `find`","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"Finds all tasks that match a given PROMPT. ","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"### Usages:","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"- Format: `find PROMPT`","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"- Example: `find homework`","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"## Exit the program: `bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"Exits the programme after 3 seconds.","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"### Usages:","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"Example: `bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"DistractedCat":112,"-":15}},{"path":"src/main/java/com/mimi/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":" * A representation of the abstract idea of Commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    public abstract void execute();","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    public abstract void uiResponse(Ui ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     * Checks if the command given is the command to exit.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     * @return returns true if the command is the exit command and false otherwise","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":30}},{"path":"src/main/java/com/mimi/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" * Representation of the deadline Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    private boolean isCompleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    private String taskName;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime deadlineTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the deadline Command.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * @param isCompleteCommand true if the given input has all the necessary components.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     * @param taskName the string representation of the deadline task name.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     * @param deadlineTime the deadline time of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     * @param storage A Storage instance that stores the previous tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData A ReadWriteData instance that access and writes data to the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    public DeadlineCommand(boolean isCompleteCommand, String taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"                       LocalDateTime deadlineTime, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"        this.isCompleteCommand \u003d isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"        //first check if the command is complete and if the time format is correct.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand || this.deadlineTime \u003d\u003d LocalDateTime.MIN","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"            || this.isOverdue() || this.taskName.isBlank()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        Deadline deadline \u003d new Deadline(this.taskName, this.deadlineTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        this.storage.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData.write(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteDeadlineCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        } else if (this.deadlineTime \u003d\u003d LocalDateTime.MIN) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"            ui.wrongTimeFormat();","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"        } else if (this.isOverdue()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"            ui.displayOverdue();","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"        } else if (this.taskName.isBlank()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteInformation();","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    private boolean isOverdue() {","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"        return this.deadlineTime.isBefore(currentTime);","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":81}},{"path":"src/main/java/com/mimi/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Delete Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private boolean isCompleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the delete command.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * @param isCompleteCommand true if the input has all the necessary components.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber the position that the task is stored in the Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage that stores the previous tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData an instance of ReadWriteData that writes and accesses items in the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    public DeleteCommand(boolean isCompleteCommand, int taskNumber, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        this.isCompleteCommand \u003d isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"        if (this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"            this.storage.delete(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"            readWriteData.updateFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteDeleteCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":55}},{"path":"src/main/java/com/mimi/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Event Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    private boolean isCompleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    private String eventName;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the event Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * @param isCompleteCommand true if the input given had all the necessary fields.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     * @param eventName The string representation of the name of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     * @param startTime The start time of the event","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     * @param endTime The end time of the event","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     * @param storage A Storage instance that stores the previous tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData A ReadWriteData instance that helps access and write data to the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    public EventCommand(boolean isCompleteCommand, String eventName, LocalDateTime startTime,","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"                        LocalDateTime endTime, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        this.isCompleteCommand \u003d isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand || this.startTime \u003d\u003d LocalDateTime.MIN","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"                || this.endTime \u003d\u003d LocalDateTime.MIN || this.isOverdue()","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"                || this.eventName.isBlank() || !this.isValid()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        Event event \u003d new Event(this.eventName, this.startTime, this.endTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        this.storage.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData.write(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteEventCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"        } else if (this.startTime \u003d\u003d LocalDateTime.MIN || this.endTime \u003d\u003d LocalDateTime.MIN) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"            ui.wrongTimeFormat();","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"        } else if (this.isOverdue()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"            ui.displayOverdue();","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"        } else if (this.eventName.isBlank()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteInformation();","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"        } else if (!this.isValid()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"            ui.invalidEventTime();","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"    private boolean isOverdue() {","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"        return this.startTime.isBefore(currentTime);","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"    private boolean isValid() {","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"        return this.startTime.isBefore(this.endTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":89}},{"path":"src/main/java/com/mimi/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Exit Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    public void execute() { }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"        ui.exitMessage();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * Checks if the command given is the command to exit.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     * @return returns true if the command is the exit command and false otherwise","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":34}},{"path":"src/main/java/com/mimi/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * Representation of the find Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    private String searchTerm;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the find command without any search terms.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    public FindCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the find Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * @param searchTerm the string that is used to find matching descriptions in Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    public FindCommand(String searchTerm, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        if (searchTerm !\u003d null \u0026\u0026 !searchTerm.isBlank()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"            this.storage.search(searchTerm);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        if (this.searchTerm \u003d\u003d null || this.searchTerm.isBlank()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteSearchCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"DistractedCat":45}},{"path":"src/main/java/com/mimi/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * Representation of Invalid Commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    public void execute() { }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"        ui.invalidTaskMessage();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":26}},{"path":"src/main/java/com/mimi/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * Representation of the List Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the List Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    public ListCommand(Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        this.storage.listItems();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) { }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":38}},{"path":"src/main/java/com/mimi/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Mark Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private boolean isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    private int taskNumber;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the mark Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * @param isCompleteCommand true if the input has all the necessary components.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber the index of the task that is stored in Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData an instance of ReadWriteData.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    public MarkCommand(boolean isCompleteCommand, int taskNumber, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"        this.isCompleteCommand \u003d isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        if (this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"            this.storage.mark(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"            readWriteData.updateFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteMarkCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":59}},{"path":"src/main/java/com/mimi/commands/RemindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Remind Command.","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"     * Creates a new instance of the Remind Command.","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage.","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    public RemindCommand(Storage storage) {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"        storage.remind();","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) { }","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"DistractedCat":30}},{"path":"src/main/java/com/mimi/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * Representation of the todo Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private String taskTodo;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the Todo Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * @param taskTodo String representation of the task to be done.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData an instance of ReadWriteData.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    public TodoCommand(String taskTodo, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"        this.taskTodo \u003d taskTodo;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        if (this.taskTodo.isBlank()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"        Todo todo \u003d new Todo(taskTodo);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        storage.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"        readWriteData.write(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        if (this.taskTodo.isBlank()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteInformation();","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":57}},{"path":"src/main/java/com/mimi/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.ReadWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * Representation of the un-mark Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private boolean isCompleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the un-mark Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * @param isCompleteCommand true if the input has all the necessary components.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber the index of the task in the Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of Storage","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData an instance of ReadWriteData.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    public UnmarkCommand(boolean isCompleteCommand, int taskNumber, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        this.isCompleteCommand \u003d isCompleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"     * Executes the given command.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"        if (this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"            storage.unmark(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"            readWriteData.updateFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"     * Calls the ui to give the appropriate response based on the type of command.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"     * @param ui Ui class instance","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    public void uiResponse(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        if (!this.isCompleteCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"            ui.incompleteUnmarkCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":58}},{"path":"src/main/java/com/mimi/main/DataCallback.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":" * An interface used to send data between the Ui and classes that implement this interface.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"@FunctionalInterface","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"public interface DataCallback {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"    void onDataReceived(String data);","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"DistractedCat":11}},{"path":"src/main/java/com/mimi/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * A class that contains the entry point of the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"        Application.launch(Mimi.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"DistractedCat":15}},{"path":"src/main/java/com/mimi/main/Mimi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":" * The main class of the Mimi program.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"public class Mimi extends Application implements DataCallback {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    private Stage window;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     * Default constructor.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    public Mimi() {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"     * Runs the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    public void run() throws MimiException {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData.initialise();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        this.ui.initialise();","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        this.storage.remind();","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"     * Receives data from the Ui and processes it.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"     * @param input the string that the user enters.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"    public void onDataReceived(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        Parser parser \u003d new Parser(input, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        Command c \u003d parser.parse();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        assert c !\u003d null : \"Command is null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        c.execute();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"        c.uiResponse(this.ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"        if (c.isExit()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"            closeWindow();","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"    private void closeWindow() {","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"            delay.setOnFinished(event -\u003e this.window.close());","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"            delay.play();","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"        } catch (IllegalStateException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"            ui.unableToClose();","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"     * Starts the program.","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"     * @param stage the primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"        String directory \u003d \"./data/\";","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"        String dataPath \u003d \"./data/Mimi.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"        this.window \u003d stage;","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        this.ui \u003d new Ui(stage, this);","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d new Storage(this.ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"        File directoryFile \u003d new File(directory);","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"        File dataFile \u003d new File(dataPath);","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"            //checks if the directory and the file are created. If not, create it.","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"            if (directoryFile.mkdir()) { }","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"            if (dataFile.createNewFile()) { }","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"            this.readWriteData \u003d new ReadWriteData(dataFile, this.storage, this.ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"            this.ui.showLoadingError();","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"            run();","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"        } catch (MimiException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":111}},{"path":"src/main/java/com/mimi/main/MimiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":" * An exception representing an error running the Mimi programme.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"public class MimiException extends Exception{","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"DistractedCat":9}},{"path":"src/main/java/com/mimi/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.DeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.EventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.ExitCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.FindCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.InvalidCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.RemindCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.TodoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.commands.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":" * A class that takes given inputs from the user and interprets it for a Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    private String input;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    private ReadWriteData readWriteData;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    private enum ValidCommands {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"        bye, list, mark, unmark, delete, todo, deadline, event, find, remind","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of Parser.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"     * @param input the string input to be interpreted","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"     * @param storage an instance of the Storage class","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"     * @param readWriteData an instance of the ReadWriteData class","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    public Parser(String input, Storage storage, ReadWriteData readWriteData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        this.readWriteData \u003d readWriteData;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"     * Parses the given string input and returns the appropriate command.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"     * @return a Command instance represented by the given input","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"    public Command parse() {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        boolean isValidCommand \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"        String cmd \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"        if (cmd.contains(\" \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"            int i \u003d cmd.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"            cmd \u003d cmd.substring(0, i);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        //TODO: make sure commands handle the case where there are no spaces present","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"        //check if this is a valid command","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"        for (ValidCommands v: ValidCommands.values()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"            if (cmd.equals(v.toString())) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"                isValidCommand \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"        if (isValidCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"            return makeCommand(cmd);","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"        return new InvalidCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"    private Command makeCommand(String cmd) {","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"        switch (cmd) {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"            return new ListCommand(this.storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"            return markCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"            return unmarkCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"            return deleteCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"            return todoCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"            return deadlineCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"            return eventCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"        case \"find\":","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"            return findCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"        case \"remind\":","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"            return new RemindCommand(this.storage);","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"    private Command findCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"        String taskDescription \u003d input;","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"        //first remove the find keyword","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"        if (!taskDescription.contains(\" \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"            return new FindCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d taskDescription.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"        taskDescription \u003d taskDescription.substring(i + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"        return new FindCommand(taskDescription, this.storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"    private Command eventCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"        //first remove the event keyword","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d temp.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"        temp \u003d createSubString(temp, i + 1, -2);","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"        //check if the task has specified a start and end time","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"        if (!temp.contains(\"/from\") || !temp.contains(\"/to\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"            return new EventCommand(false, \"\", LocalDateTime.MIN,","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.MIN, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"        //next isolate the task name","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"        int j \u003d temp.indexOf(\"/from\");","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"        String taskName \u003d createSubString(temp, 0, j - 1);","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"        //next isolate the start date","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"        int k \u003d temp.indexOf(\"/to\");","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"        String startDate \u003d createSubString(temp, j + 6, k - 1);","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"        //next isolate the end date","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"        String endDate \u003d createSubString(temp, k + 4, -2);","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"DistractedCat"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(startDate, Parser.FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(endDate, Parser.FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"            return new EventCommand(true, taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"                    startTime, endTime, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"            return new EventCommand(true, taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.MIN, LocalDateTime.MIN, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"    private Command deadlineCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"DistractedCat"},"content":"        //first remove the deadline keyword","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d temp.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"DistractedCat"},"content":"        temp \u003d createSubString(temp, i + 1, -2);","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"DistractedCat"},"content":"        //check if the task has specified a deadline time","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"        if (!temp.contains(\"/by\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"DistractedCat"},"content":"            return new DeadlineCommand(false, \"\",","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.MIN, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"        //next isolate the deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"DistractedCat"},"content":"        int j \u003d temp.indexOf(\"/by\");","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"DistractedCat"},"content":"        String deadline \u003d createSubString(temp, j + 4, -2);","lastModifiedDate":"2023-09-19"},{"lineNumber":188,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"DistractedCat"},"content":"        //next isolate the taskName","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"        String taskName \u003d createSubString(temp, 0, j - 1);","lastModifiedDate":"2023-09-19"},{"lineNumber":191,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"DistractedCat"},"content":"            LocalDateTime localDateTime \u003d LocalDateTime.parse(deadline, Parser.FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"DistractedCat"},"content":"            return new DeadlineCommand(true, taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"DistractedCat"},"content":"                    localDateTime, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"DistractedCat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"DistractedCat"},"content":"            return new DeadlineCommand(true, taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.MIN, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"DistractedCat"},"content":"    private Command deleteCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"DistractedCat"},"content":"            int taskNumber \u003d Integer.parseInt(temp.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"DistractedCat"},"content":"            return new DeleteCommand(true, taskNumber, this.storage, this.readWriteData);","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"DistractedCat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"DistractedCat"},"content":"            return new DeleteCommand(false, -1, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"DistractedCat"},"content":"    private Command unmarkCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"DistractedCat"},"content":"            int taskNumber \u003d Integer.parseInt(temp.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"DistractedCat"},"content":"            return new UnmarkCommand(true, taskNumber, this.storage, this.readWriteData);","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"DistractedCat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"DistractedCat"},"content":"            return new UnmarkCommand(false, -1, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"DistractedCat"},"content":"    private Command markCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"DistractedCat"},"content":"            int taskNumber \u003d Integer.parseInt(temp.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"DistractedCat"},"content":"            return new MarkCommand(true, taskNumber, this.storage, this.readWriteData);","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"DistractedCat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"DistractedCat"},"content":"            return new MarkCommand(false, -1, this.storage, this.readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"DistractedCat"},"content":"    private Command todoCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"DistractedCat"},"content":"        String temp \u003d input;","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d temp.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-29"},{"lineNumber":242,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"DistractedCat"},"content":"        temp \u003d createSubString(temp, i + 1, -2);","lastModifiedDate":"2023-09-19"},{"lineNumber":244,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"DistractedCat"},"content":"        return new TodoCommand(temp, storage, readWriteData);","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"DistractedCat"},"content":"    private String createSubString(String string, int start, int end) {","lastModifiedDate":"2023-09-19"},{"lineNumber":249,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":250,"author":{"gitId":"DistractedCat"},"content":"            return end \u003d\u003d -2","lastModifiedDate":"2023-09-19"},{"lineNumber":251,"author":{"gitId":"DistractedCat"},"content":"                    ? string.substring(start)","lastModifiedDate":"2023-09-19"},{"lineNumber":252,"author":{"gitId":"DistractedCat"},"content":"                    : string.substring(start, end);","lastModifiedDate":"2023-09-19"},{"lineNumber":253,"author":{"gitId":"DistractedCat"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":254,"author":{"gitId":"DistractedCat"},"content":"            return \"\";","lastModifiedDate":"2023-09-19"},{"lineNumber":255,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":256,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":257,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":258,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":258}},{"path":"src/main/java/com/mimi/main/ReadWriteData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":" * A class that reads from and writes data to the hard drive.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"public class ReadWriteData {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    private File dataFile;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    private Storage previousCommands;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     * creates a new instance of ReadWriteData.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     * @param datafile The file to be read/written into","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     * @param previousCommands an instance of Storage that keeps track of what tasks have been recorded","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     * @param ui the Ui responsible for displaying messages","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    public ReadWriteData(File datafile, Storage previousCommands, Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        this.dataFile \u003d datafile;","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        this.previousCommands \u003d previousCommands;","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"     * Initialises the storage by reading data previously stored in the hard drive.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    public void initialise() {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"            readData();","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"            ui.unableToLoadFromMemory();","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    private void readData() throws FileNotFoundException {","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"            String task \u003d fileReader.nextLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"            if (task.equals(\"\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"                continue;","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"            int i \u003d task.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"            String taskCode \u003d task.substring(0, i);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"            String taskWithoutCode \u003d task.substring(i + 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"            int j \u003d taskWithoutCode.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"            String isCompletedTask \u003d taskWithoutCode.substring(0, j);","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"            String taskDescription \u003d taskWithoutCode.substring(j + 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"            considerTaskCode(taskCode, isCompletedTask, taskDescription);","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"        fileReader.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"    private void considerTaskCode(String taskCode, String isCompletedTask, String taskDescription) {","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"        switch (taskCode) {","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"        case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"            initialiseTodo(isCompletedTask.equals(\"X\"), taskDescription);","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"            break;","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"        case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"            initialiseDeadline(isCompletedTask.equals(\"X\"), taskDescription);","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"            break;","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"        case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"            initialiseEvent(isCompletedTask.equals(\"X\"), taskDescription);","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"            break;","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"    private void initialiseTodo(boolean isCompletedTask, String taskDescription) {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"        Task newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"        previousCommands.addWithoutPrinting(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"        if (isCompletedTask) {","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"            newTask.toggleDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"    private void initialiseDeadline(boolean isCompletedTask, String taskDescription) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d taskDescription.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"        int j \u003d taskDescription.indexOf(\u0027)\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"        String taskName \u003d taskDescription.substring(0, i - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"        String deadline \u003d taskDescription.substring(i + 5, j);","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"            Task newTask \u003d new Deadline(taskName, LocalDateTime.parse(deadline, Parser.FORMATTER));","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"            previousCommands.addWithoutPrinting(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"            if (isCompletedTask) {","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"                newTask.toggleDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"            ui.unableToLoadFromMemory();","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"    private void initialiseEvent(boolean isCompletedTask, String taskDescription) {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"        int i \u003d taskDescription.indexOf(\u0027(\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"        int j \u003d taskDescription.indexOf(\u0027)\u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"        int k \u003d taskDescription.indexOf(\"to:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"        String taskName \u003d taskDescription.substring(0, i - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"        String startTime \u003d taskDescription.substring(i + 7, k - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"        String endTime \u003d taskDescription.substring(k + 4, j);","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"            Task newTask \u003d new Event(taskName,","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.parse(startTime, Parser.FORMATTER),","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"                    LocalDateTime.parse(endTime, Parser.FORMATTER)","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"            );","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"            previousCommands.addWithoutPrinting(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"            if (isCompletedTask) {","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"                newTask.toggleDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"            ui.unableToLoadFromMemory();","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"     * Writes a given task into the hard drive.","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"     * @param task a Task instance that to be written into the hard drive","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"    public void write(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"DistractedCat"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.dataFile, true);","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"DistractedCat"},"content":"            String message \u003d String.format(\"%s|%s|%s\",","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"                    task.eventCode(), task.getStatusIcon(), task.writeFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"            fileWriter.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"            fileWriter.write(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"            System.out.println(\"Error occured when writing to file: \" + e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"     * Updates the File to reflect any changes in the status of the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"DistractedCat"},"content":"    public void updateFile() {","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"DistractedCat"},"content":"        this.dataFile.delete();","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"DistractedCat"},"content":"            if (this.dataFile.createNewFile()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"                this.previousCommands.updateAll(this);","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"DistractedCat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"DistractedCat"},"content":"            ui.errorWhenUpdatingFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"DistractedCat":186}},{"path":"src/main/java/com/mimi/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * A class which represents the tasks previously executed and their status.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"public class Storage {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    private ArrayList\u003cTask\u003e previousCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the Storage","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * @param ui the Ui needed for the ui responses","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    public Storage(Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"     * Adds a task to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     * @param task the given Task to be added to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        if (checkEquals(task)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"            ui.addSameTaskMessage();","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        this.previousCommands.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        assert this.previousCommands.contains(task) : \"Task failed to be added!\";","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"        ui.addTaskMessage(task, previousCommands.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    private boolean checkEquals(Task task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        for (Task previousTasks: this.previousCommands) {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"            if (previousTasks.equals(task)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"                return true;","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        return false;","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"     * Adds a task without any ui response. This is used during initialisation.","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"     * @param task the Task to be added to the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"    public void addWithoutPrinting(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"        this.previousCommands.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"        assert this.previousCommands.contains(task) : \"Task failed to be added!\";","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"     * Lists out all the items in the storage in the order that they were added.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"    public void listItems() {","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"        String result \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"        for (int i \u003d 0; i \u003c this.previousCommands.size(); ++i) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"            Task task \u003d this.previousCommands.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"            result +\u003d ui.listTask(i + 1, task);","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"        ui.showResponse(result);","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"     * Marks the task represented with the given number.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber an integer that denotes the position of the task to be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"    public void mark(int taskNumber) {","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        if (taskNumber \u003e previousCommands.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"            ui.markUnmarkDeleteWrongTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"        Task task \u003d previousCommands.get(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"        if (task.isDone()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"            ui.taskAlreadyMarkedAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"        task.toggleDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"        ui.markTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"        assert task.getStatusIcon().equals(\"X\") : \"Not marked properly!\";","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"     * Un-marks the task represented with the given number.","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber an integer that denotes the position of the task to be un-marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"    public void unmark(int taskNumber) {","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"        if (taskNumber \u003e previousCommands.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"            ui.markUnmarkDeleteWrongTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"        Task task \u003d previousCommands.get(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"            ui.taskAlreadyUnmarked();","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"        task.toggleDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"        ui.unmarkTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"     * Deletes the task represented with the given number from the storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"     * @param taskNumber an integer that denotes the position of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"        if (taskNumber \u003e previousCommands.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"            ui.markUnmarkDeleteWrongTask();","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"        Task task \u003d previousCommands.get(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"        previousCommands.remove(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"        ui.deleteTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"     * Updates the hard disk with all the current tasks in the storage along with their status.","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"     * @param writer an instance of ReadWriteData to write the information to the hard disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"    public void updateAll(ReadWriteData writer) {","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"        for (Task task: this.previousCommands) {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"            writer.write(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"     * Searches the previous tasks with the given string.","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"     * @param searchTerm The string that should match descriptions from previous tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"    public void search(String searchTerm) {","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"        for (Task task: this.previousCommands) {","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"            //convert both strings to lower case to ignore casing","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"            if (task.toString().toLowerCase()","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"                .contains(searchTerm.toLowerCase())) {","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"DistractedCat"},"content":"                result +\u003d ui.returnSearchTerm(task, index);","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"DistractedCat"},"content":"                index++;","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"DistractedCat"},"content":"            ui.noSearchResults();","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"        ui.showResponse(result);","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"DistractedCat"},"content":"     * Sends a reminder by listing out the tasks that are happening in less than a week.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"DistractedCat"},"content":"    public void remind() {","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"DistractedCat"},"content":"        String result \u003d \"Here\u0027s a reminder that these tasks are due/happening \"","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"DistractedCat"},"content":"                + \"in less than a week:\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"DistractedCat"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"DistractedCat"},"content":"        for (Task task: this.previousCommands) {","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"DistractedCat"},"content":"            if (task.isUrgent()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"DistractedCat"},"content":"                result +\u003d ui.listTask(counter, task);","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"DistractedCat"},"content":"                counter++;","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":202,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"DistractedCat"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":205,"author":{"gitId":"DistractedCat"},"content":"            ui.showAllTasksNonUrgent(this.checkOverdue());","lastModifiedDate":"2023-09-12"},{"lineNumber":206,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"DistractedCat"},"content":"        ui.showResponse(result + this.checkOverdue());","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"DistractedCat"},"content":"    private String checkOverdue() {","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"DistractedCat"},"content":"        String result \u003d \"\\nMeow! It also seems these tasks are overdue:\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"DistractedCat"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":216,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"DistractedCat"},"content":"        for (Task task: this.previousCommands) {","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"DistractedCat"},"content":"            if (task.isOverdue()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"DistractedCat"},"content":"                result +\u003d ui.listTask(counter, task);","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"DistractedCat"},"content":"                counter++;","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"DistractedCat"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"DistractedCat"},"content":"            return \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":227,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"DistractedCat"},"content":"        return result;","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"DistractedCat":230}},{"path":"src/main/java/com/mimi/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Deadline Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime deadlineTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the deadline Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * @param taskName the string representation of the task name.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     * @param deadlineTime the deadline time of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    public Deadline(String taskName, LocalDateTime deadlineTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"        super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     * Returns the string representation of the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents what kind of task this is.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    public String eventCode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        return \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"[%s][%s] %s\\nby: %s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"                this.eventCode(),","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"                this.taskName(),","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"                this.taskEndTime()","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"     * A string representation of the end time of the task, if any.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"     * @return a formatted string that shows the end time of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    public String taskEndTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        //format : MMM dd yyyy HH:mm ({dayOfWeek})","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"                \"%s %s (%s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"                this.deadlineTime.getMonth().toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"                this.deadlineTime.format(formatter),","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"                this.deadlineTime.getDayOfWeek()","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"                );","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"     * A string that is used to store the task content into the hard drive.","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"     * @return string representation of the task for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"    public String writeFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"%s (by: %s)\", this.taskName(), this.deadlineTime.format(formatter));","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"    public boolean isUrgent() {","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"        long daysBetween \u003d ChronoUnit.DAYS.between(currentTime, this.deadlineTime);","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"        return daysBetween \u003c 7 \u0026\u0026 !isOverdue();","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        return this.deadlineTime.isBefore(currentTime);","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"    public boolean equals(Object task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"        if (!(task instanceof Deadline)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"            return false;","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"        Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"        return this.taskName().equals(deadline.taskName())","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"                \u0026\u0026 this.deadlineTime.equals(deadline.deadlineTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":104}},{"path":"src/main/java/com/mimi/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     * @param taskName the string representation of the event name.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * @param startTime the start time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     * @param endTime the end time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    public Event(String taskName, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"        super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     * Returns the string representation of the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents what kind of task this is.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    public String eventCode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"        return \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"[%s][%s] %s\\nfrom: %s\\nto: %s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"                this.eventCode(),","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"                this.taskName(),","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"                this.taskStartTime(),","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"                this.taskEndTime()","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"     * A string representation of the start time of the task, if any.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"     * @return a formatted string that shows the start time of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"    public String taskStartTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"        //format : MMM dd yyyy HH:mm ({dayOfWeek})","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"                \"%s %s (%s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"                this.startTime.getMonth().toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"                this.startTime.format(formatter),","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"                this.startTime.getDayOfWeek()","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"     * A string representation of the end time of the task, if any.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"     * @return a formatted string that shows the end time of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    public String taskEndTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        //format : MMM dd yyyy HH:mm ({dayOfWeek})","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"                \"%s %s (%s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"                this.endTime.getMonth().toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"                this.endTime.format(formatter),","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"                this.endTime.getDayOfWeek()","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"     * A string that is used to store the task content into the hard drive.","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"     * @return string representation of the task for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"    public String writeFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"%s (from: %s to: %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"                this.taskName(),","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"                this.startTime.format(formatter),","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"                this.endTime.format(formatter));","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"    public boolean isUrgent() {","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"        long daysBetween \u003d ChronoUnit.DAYS.between(currentTime, this.startTime);","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"        return daysBetween \u003c 7 \u0026\u0026 !isOverdue();","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"        return this.startTime.isBefore(currentTime);","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"    public boolean equals(Object task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"        if (!(task instanceof Event)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"            return false;","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"        Event event \u003d (Event) task;","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"        return this.taskName().equals(event.taskName())","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"                \u0026\u0026 this.startTime.equals(event.startTime)","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"                \u0026\u0026 this.endTime.equals(event.endTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":130}},{"path":"src/main/java/com/mimi/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":" * The parent class of all Tasks. Represents some basic information common to all Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"    private String taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of a Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"     * @param taskName the string representation of the task name.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    Task(String taskName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     * Toggles the task between marked done or not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    public void toggleDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     * Returns the string representation of the task status.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents the status of the task based on whether it has been marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        return this.isDone ? \"X\" : \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if the task is done and false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"     * @return a boolean value that represents if the task is done.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"     * Returns the string representation of the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents what kind of task this is.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"    public String eventCode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"     * Gives a string representation of the task name.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents the task name.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"    public String taskName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"        return this.taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"     * A string representation of the start time of the task, if any.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"     * @return a formatted string that shows the start time of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"    public String taskStartTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"     * A string representation of the end time of the task, if any.","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"     * @return a formatted string that shows the end time of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"    public String taskEndTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"     * A string that is used to store the task content into the hard drive.","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"     * @return string representation of the task for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"    public String writeFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        return this.taskName();","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"     * Checks if the task is urgent by seeing if it is due in less than a week.","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"     * @return a boolean value indicating if the task is due/happening in less than a week.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"    public boolean isUrgent() {","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"        return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"     * Checks if the given task is already overdue.","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"     * @return A boolean value indicating if the task is already overdue.","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"        return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":110}},{"path":"src/main/java/com/mimi/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":" * Representation of the Todo Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of the Todo Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"     * @param taskName the string representation of the task name.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"        super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * Returns the string representation of the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * @return a string that represents what kind of task this is.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    public String eventCode() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        return \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"[%s][%s] %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"                this.eventCode(),","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"                this.taskName());","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    public boolean equals(Object task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        if (!(task instanceof Todo)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"            return false;","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        Todo todo \u003d (Todo) task;","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        return this.taskName().equals(todo.taskName());","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"DistractedCat":50}},{"path":"src/main/java/com/mimi/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":" * A container that represents messages being created.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    private Label label;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    private DialogBox(Label label, ImageView displayPicture) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"        this.label \u003d label;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        this.displayPicture \u003d displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        Circle clip \u003d new Circle(50, 55, 45);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        this.setSpacing(10);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        this.setPadding(new Insets(0, 0, 15, 0));","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        this.label.setWrapText(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"        this.label.setLineSpacing(5);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        this.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        this.getChildren().addAll(this.label, displayPicture);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of DialogBox representing the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"     * @param label represents the text to be displayed in the dialog box.","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"     * @param displayPicture represents the user icon.","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"     * @return an instance of DialogBox.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    public static DialogBox userDialogBox(Label label, ImageView displayPicture) {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"        DialogBox temp \u003d new DialogBox(label, displayPicture);","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"        BackgroundFill bf \u003d new BackgroundFill(Color.CORNFLOWERBLUE, new CornerRadii(1), null);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        temp.setBackground(new Background(bf));","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"        temp.label.setFont(Font.font(\"Verdana\", FontWeight.BOLD, 10));","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"        return temp;","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"     * Creates an instance of DialogBox representing the bot.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"     * @param label represents the text to be displayed in the dialog box.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"     * @param displayPicture represents Mimi\u0027s icon.","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"     * @return an instance of DialogBox.","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    public static DialogBox mimiDialogBox(Label label, ImageView displayPicture) {","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"        DialogBox temp \u003d new DialogBox(label, displayPicture);","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"        BackgroundFill bf \u003d new BackgroundFill(Color.SPRINGGREEN, new CornerRadii(1), null);","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"        temp.setBackground(new Background(bf));","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"        temp.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"        return temp;","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"        this.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"DistractedCat":93}},{"path":"src/main/java/com/mimi/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.main.DataCallback;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":" * A class that is responsible for the user interface.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"public class Ui {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    private final DataCallback viewModel;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    private Stage window;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    private TextField userInputField;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    private Image mimi \u003d new Image(this.getClass().getResourceAsStream(\"/images/Mimi.jpg\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"     * Creates a new instance of the Ui.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"     * @param window the Stage for the program to run in.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"     * @param viewModel an implemented class for DataCallBack to receive the aata from the ui.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"    public Ui(Stage window, DataCallback viewModel) {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        this.window \u003d window;","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        this.viewModel \u003d viewModel;","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"     * Displays the given string on the stage.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"     * @param s The input string.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"    public void showResponse(String s) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        Label mimiText \u003d getDialogLabel(s);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        dialogContainer.getChildren().add(DialogBox.mimiDialogBox(mimiText,","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"                new ImageView(this.mimi)));","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when there is a loading error.","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Failed to load... Please try again!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"     * Displays a welcome message when the program starts up.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"        this.showResponse(\"Meow! I\u0027m Mimi.\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user exits.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"    public void exitMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        this.showResponse(\"Meow! Going to sleep in 3 seconds...\");","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the task given is invalid.","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"    public void invalidTaskMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Meow!!! I\u0027m sorry but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives a mark command without specifying the task number.","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteMarkCommand() {","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Sorry, you must specify a task number to be marked!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives an un-mark command without specifying the task number.","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteUnmarkCommand() {","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Sorry, you must specify a task number to be unmarked!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives a delete command without specifying the task number.","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteDeleteCommand() {","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Sorry, you must specify a task number to be deleted!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives a deadline command without specifying the","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"     * deadline time.","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteDeadlineCommand() {","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Sorry, you must specify a time for when the deadline is due!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives the wrong time format in the input.","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"    public void wrongTimeFormat() {","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Meow!! Looks like your time format is wrong, make sure to use \"","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"                + \"this format: DD/MM/YYYY HHmm.\\nExample is 30/05/2023 2100.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user gives an event command without specifying the","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"     * start or end time.","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteEventCommand() {","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Sorry, you must specify a start time and an end time for the event!\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"     * Displays a confirmation message when a task is added successfully.","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"     * @param task The task added to the storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"     * @param size The size of the storage containing previous tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"    public void addTaskMessage(Task task, int size) {","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"        showResponse(String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"                task.toString(), size));","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"     * Displays every task previously stored.","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"     * @param index the index of the task in the storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"     * @param task the task to be displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"    public String listTask(int index, Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"        return String.format(\"%d. %s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"                index, task.toString()) + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user tries to access a task in storage that does not","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"     * yet exist.","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"    public void markUnmarkDeleteWrongTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Meow!!! Such a task does not exist!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user tries to mark a task that has already been completed.","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"    public void taskAlreadyMarkedAsDone() {","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"That task has already been marked as done!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message to confirm that a task is marked as done successfully.","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"     * @param task the task to be marked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"DistractedCat"},"content":"        showResponse(String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"DistractedCat"},"content":"                \"Nice! I\u0027ve marked this task as done: %s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"DistractedCat"},"content":"                task.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"DistractedCat"},"content":"        ));","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user tries to un-mark a task that is not complete.","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"DistractedCat"},"content":"    public void taskAlreadyUnmarked() {","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"That task has already been marked as not done!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user successfully marks a task as not done.","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":191,"author":{"gitId":"DistractedCat"},"content":"     * @param task the task to be un-marked.","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"DistractedCat"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"DistractedCat"},"content":"        showResponse(","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"DistractedCat"},"content":"                String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"DistractedCat"},"content":"                        \"Ok, I\u0027ve marked this task as not done yet:\\n%s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"DistractedCat"},"content":"                        task.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"DistractedCat"},"content":"                )","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"DistractedCat"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user successfully deletes a task.","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"DistractedCat"},"content":"     * @param task the task to be deleted.","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"DistractedCat"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"DistractedCat"},"content":"        showResponse(String.format(\"Noted. I\u0027ve removed this task:\\n%s\", task.toString()));","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when there is an error loading data from the hard disk.","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"DistractedCat"},"content":"    public void unableToLoadFromMemory() {","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Error while initialising: unable to load from memory.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when there is an error writing data into the hard disk.","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"DistractedCat"},"content":"    public void errorWhenUpdatingFile() {","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Error when updating file.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"DistractedCat"},"content":"     * Displays the task that matches the description given by the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":227,"author":{"gitId":"DistractedCat"},"content":"     * @param task the task displayed","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"DistractedCat"},"content":"     * @param index the count of the task number being displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"DistractedCat"},"content":"    public String returnSearchTerm(Task task, int index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"DistractedCat"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":233,"author":{"gitId":"DistractedCat"},"content":"            return \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"DistractedCat"},"content":"                    + String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"DistractedCat"},"content":"                    \"%d. %s\", index, task.toString())","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"DistractedCat"},"content":"                    + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"DistractedCat"},"content":"        return String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"DistractedCat"},"content":"                \"%d. %s\", index, task.toString()) + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when there are no results that matches the user\u0027s query.","lastModifiedDate":"2023-09-05"},{"lineNumber":245,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":246,"author":{"gitId":"DistractedCat"},"content":"    public void noSearchResults() {","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Meow!!! There are no search results for your query.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":248,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":249,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":251,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message when the user tries to search for tasks without","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"DistractedCat"},"content":"     * giving a search term.","lastModifiedDate":"2023-09-05"},{"lineNumber":253,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteSearchCommand() {","lastModifiedDate":"2023-09-05"},{"lineNumber":255,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"You must enter a search term!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":258,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":259,"author":{"gitId":"DistractedCat"},"content":"     * Initialises the Ui.","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"DistractedCat"},"content":"    public void initialise() {","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"DistractedCat"},"content":"        this.configureWindow();","lastModifiedDate":"2023-09-21"},{"lineNumber":263,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":264,"author":{"gitId":"DistractedCat"},"content":"        this.scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"DistractedCat"},"content":"        this.dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"DistractedCat"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-05"},{"lineNumber":268,"author":{"gitId":"DistractedCat"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"DistractedCat"},"content":"        this.configureScrollPane();","lastModifiedDate":"2023-09-21"},{"lineNumber":271,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":272,"author":{"gitId":"DistractedCat"},"content":"        this.userInputField \u003d new TextField();","lastModifiedDate":"2023-09-21"},{"lineNumber":273,"author":{"gitId":"DistractedCat"},"content":"        this.userInputField.setMinWidth(350);","lastModifiedDate":"2023-09-21"},{"lineNumber":274,"author":{"gitId":"DistractedCat"},"content":"        this.sendButton \u003d new Button(\"SEND\");","lastModifiedDate":"2023-09-21"},{"lineNumber":275,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":276,"author":{"gitId":"DistractedCat"},"content":"        this.configureButton();","lastModifiedDate":"2023-09-21"},{"lineNumber":277,"author":{"gitId":"DistractedCat"},"content":"        this.configureUserInputField();","lastModifiedDate":"2023-09-21"},{"lineNumber":278,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":279,"author":{"gitId":"DistractedCat"},"content":"        AnchorPane mainLayout \u003d createAnchorPane();","lastModifiedDate":"2023-09-21"},{"lineNumber":280,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":281,"author":{"gitId":"DistractedCat"},"content":"        window.setScene(new Scene(mainLayout));","lastModifiedDate":"2023-09-21"},{"lineNumber":282,"author":{"gitId":"DistractedCat"},"content":"        window.show();","lastModifiedDate":"2023-09-21"},{"lineNumber":283,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":284,"author":{"gitId":"DistractedCat"},"content":"        this.welcomeMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":285,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":286,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":287,"author":{"gitId":"DistractedCat"},"content":"    private void configureScrollPane() {","lastModifiedDate":"2023-09-21"},{"lineNumber":288,"author":{"gitId":"DistractedCat"},"content":"        this.scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-05"},{"lineNumber":289,"author":{"gitId":"DistractedCat"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-05"},{"lineNumber":290,"author":{"gitId":"DistractedCat"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"DistractedCat"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-05"},{"lineNumber":292,"author":{"gitId":"DistractedCat"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"DistractedCat"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":294,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":295,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"DistractedCat"},"content":"    private void configureWindow() {","lastModifiedDate":"2023-09-21"},{"lineNumber":297,"author":{"gitId":"DistractedCat"},"content":"        this.window.setTitle(\"Mimi\");","lastModifiedDate":"2023-09-21"},{"lineNumber":298,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"DistractedCat"},"content":"        window.setResizable(false);","lastModifiedDate":"2023-09-21"},{"lineNumber":300,"author":{"gitId":"DistractedCat"},"content":"        window.setMinHeight(600.0);","lastModifiedDate":"2023-09-21"},{"lineNumber":301,"author":{"gitId":"DistractedCat"},"content":"        window.setMinWidth(400.0);","lastModifiedDate":"2023-09-21"},{"lineNumber":302,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":303,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":304,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":305,"author":{"gitId":"DistractedCat"},"content":"    private AnchorPane createAnchorPane() {","lastModifiedDate":"2023-09-21"},{"lineNumber":306,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":307,"author":{"gitId":"DistractedCat"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"DistractedCat"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInputField, sendButton);","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"DistractedCat"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":311,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":312,"author":{"gitId":"DistractedCat"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":313,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":314,"author":{"gitId":"DistractedCat"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":315,"author":{"gitId":"DistractedCat"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":316,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":317,"author":{"gitId":"DistractedCat"},"content":"        AnchorPane.setLeftAnchor(userInputField , 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":318,"author":{"gitId":"DistractedCat"},"content":"        AnchorPane.setBottomAnchor(userInputField, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":319,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":320,"author":{"gitId":"DistractedCat"},"content":"        return mainLayout;","lastModifiedDate":"2023-09-21"},{"lineNumber":321,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":322,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":323,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":324,"author":{"gitId":"DistractedCat"},"content":"    private void configureUserInputField() {","lastModifiedDate":"2023-09-05"},{"lineNumber":325,"author":{"gitId":"DistractedCat"},"content":"        this.userInputField.setOnAction(","lastModifiedDate":"2023-09-05"},{"lineNumber":326,"author":{"gitId":"DistractedCat"},"content":"                e -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":327,"author":{"gitId":"DistractedCat"},"content":"                    if (!userInputField.getText().isBlank()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":328,"author":{"gitId":"DistractedCat"},"content":"                        Label userText \u003d getDialogLabel(userInputField.getText());","lastModifiedDate":"2023-09-05"},{"lineNumber":329,"author":{"gitId":"DistractedCat"},"content":"                        dialogContainer.getChildren().add(DialogBox.userDialogBox(userText,","lastModifiedDate":"2023-09-05"},{"lineNumber":330,"author":{"gitId":"DistractedCat"},"content":"                                new ImageView(this.user)));","lastModifiedDate":"2023-09-05"},{"lineNumber":331,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":332,"author":{"gitId":"DistractedCat"},"content":"                        viewModel.onDataReceived(userInputField.getText());","lastModifiedDate":"2023-09-05"},{"lineNumber":333,"author":{"gitId":"DistractedCat"},"content":"                        userInputField.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"DistractedCat"},"content":"                    } else { }","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"DistractedCat"},"content":"                });","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":338,"author":{"gitId":"DistractedCat"},"content":"    private void configureButton() {","lastModifiedDate":"2023-09-05"},{"lineNumber":339,"author":{"gitId":"DistractedCat"},"content":"        this.sendButton.setOnMouseClicked(","lastModifiedDate":"2023-09-05"},{"lineNumber":340,"author":{"gitId":"DistractedCat"},"content":"                e -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"DistractedCat"},"content":"                    if (!userInputField.getText().isBlank()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":342,"author":{"gitId":"DistractedCat"},"content":"                        Label userText \u003d getDialogLabel(userInputField.getText());","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"DistractedCat"},"content":"                        dialogContainer.getChildren().add(DialogBox.userDialogBox(userText,","lastModifiedDate":"2023-09-05"},{"lineNumber":344,"author":{"gitId":"DistractedCat"},"content":"                                new ImageView(this.user)));","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":346,"author":{"gitId":"DistractedCat"},"content":"                        viewModel.onDataReceived(userInputField.getText());","lastModifiedDate":"2023-09-05"},{"lineNumber":347,"author":{"gitId":"DistractedCat"},"content":"                        userInputField.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":348,"author":{"gitId":"DistractedCat"},"content":"                    } else { }","lastModifiedDate":"2023-09-05"},{"lineNumber":349,"author":{"gitId":"DistractedCat"},"content":"                });","lastModifiedDate":"2023-09-05"},{"lineNumber":350,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":351,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":352,"author":{"gitId":"DistractedCat"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-05"},{"lineNumber":353,"author":{"gitId":"DistractedCat"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":354,"author":{"gitId":"DistractedCat"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":356,"author":{"gitId":"DistractedCat"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-05"},{"lineNumber":357,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":358,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":359,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":360,"author":{"gitId":"DistractedCat"},"content":"     * Displays an error message if the user tries to add a task that is overdue.","lastModifiedDate":"2023-09-12"},{"lineNumber":361,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":362,"author":{"gitId":"DistractedCat"},"content":"    public void displayOverdue() {","lastModifiedDate":"2023-09-12"},{"lineNumber":363,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Sorry, you cannot input a task that is already overdue!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":364,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":365,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":366,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":367,"author":{"gitId":"DistractedCat"},"content":"     * Displays a message if there are no tasks that are due soon.","lastModifiedDate":"2023-09-19"},{"lineNumber":368,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":369,"author":{"gitId":"DistractedCat"},"content":"    public void showAllTasksNonUrgent(String overdueTasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":370,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Meow! You have no tasks due/happening soon!\\n\" + overdueTasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":371,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":372,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":373,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":374,"author":{"gitId":"DistractedCat"},"content":"     * Displays an error message if the user inputs an empty string for some information.","lastModifiedDate":"2023-09-19"},{"lineNumber":375,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":376,"author":{"gitId":"DistractedCat"},"content":"    public void incompleteInformation() {","lastModifiedDate":"2023-09-19"},{"lineNumber":377,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Meow! Looks like you did not fill in the name of the task.\"","lastModifiedDate":"2023-09-19"},{"lineNumber":378,"author":{"gitId":"DistractedCat"},"content":"                + \" Please try again!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":379,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":380,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":381,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":382,"author":{"gitId":"DistractedCat"},"content":"     * Displays an error message if the user inputs the event end time to be before the start time.","lastModifiedDate":"2023-09-20"},{"lineNumber":383,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":384,"author":{"gitId":"DistractedCat"},"content":"    public void invalidEventTime() {","lastModifiedDate":"2023-09-20"},{"lineNumber":385,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Meow! You cannot set the end time of the event to be before the start time!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":386,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":387,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":388,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":389,"author":{"gitId":"DistractedCat"},"content":"     * Displays an error message if the user inputs a task that already exists.","lastModifiedDate":"2023-09-20"},{"lineNumber":390,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":391,"author":{"gitId":"DistractedCat"},"content":"    public void addSameTaskMessage() {","lastModifiedDate":"2023-09-20"},{"lineNumber":392,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Meow! You cannot add a task that is completely identical to a previous task!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":393,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":394,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":395,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":396,"author":{"gitId":"DistractedCat"},"content":"     * Displays an error message if the exit command does not work.","lastModifiedDate":"2023-09-20"},{"lineNumber":397,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":398,"author":{"gitId":"DistractedCat"},"content":"    public void unableToClose() {","lastModifiedDate":"2023-09-20"},{"lineNumber":399,"author":{"gitId":"DistractedCat"},"content":"        showResponse(\"Meow! There is an error in closing, maybe try \"","lastModifiedDate":"2023-09-20"},{"lineNumber":400,"author":{"gitId":"DistractedCat"},"content":"                + \"clicking the exit button on the top right!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":401,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":402,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"DistractedCat":402}},{"path":"src/test/java/com.mimi/main/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import org.junit.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    public void deadlineEventCodeTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"        Deadline deadline \u003d new Deadline(\"test\", LocalDateTime.MIN);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(\"D\", deadline.eventCode());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"DistractedCat":20}},{"path":"src/test/java/com.mimi/main/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package com.mimi.main;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import com.mimi.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    public void eventCodeTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"        Todo todo \u003d new Todo(\"taskName\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(\"T\", todo.eventCode());","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    public void toStringTaskIncompleteTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(\"[T][] test\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    public void toStringTaskCompleteTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        todo.toggleDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(\"[T][X] test\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"DistractedCat":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"event exam /from today /to tomorrow","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"DistractedCat":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"REM run the program, feed commands from task.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"java -classpath ..\\bin Mimi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DistractedCat":2,"-":19}}]
