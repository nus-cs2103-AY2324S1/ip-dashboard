[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"waseemingly":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"javafx {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"    modules \u003d [ \u0027javafx.controls\u0027,\u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"    mainClassName \u003d \u0027duke.Launcher\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"    mainClass.set(\"duke.Main\")","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"waseemingly":26,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"T | 0 | homework","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"D | 1 | assignment | 2023-09-22T23:59","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"T | 0 | cycling","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"E | 0 | Graduation Ceremony | 2023-12-12T00:00 | 2023-12-13T23:59","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"T | 1 | hello","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"waseemingly":5}},{"path":"docs/index.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"---","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"# Duke","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"# Duke","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"---","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"Duke is a *Personal Assistant Chatbot that helps a person to keep track of various things., optimized for use via a Command Line Interface* (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"## Quick start","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/waseemingly/ip/releases).","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Task Manager.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar duke.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"   ![Ui](Ui.png)","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"    * `list` : Lists all tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"    * `deadline CS2103T Assignment /by 22/9/2023 2359` : Adds a deadline task named `CS2103T Assignment` to the Task list with the stated deadline.","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"    * `mark 2` : Marks the 2nd task shown in the current list as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"    * `delete 3` : Deletes the 3rd task shown in the current list.","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"    * `find todo` : Finds all todo tasks in your list.","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"    * `bye` : Exits the app.","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"  e.g. in `todo n/NAME`, `NAME` is a parameter which can be used as `add n/homework`.","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list`, `bye`) will  not be ignored.\u003cbr\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"  e.g. if the command specifies `list 123`, it will not be interpreted as `list`.","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"waseemingly"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"waseemingly"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"waseemingly"},"content":"Format: `add NAME`","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"waseemingly"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"waseemingly"},"content":"* `todo homework`","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"waseemingly"},"content":"* `todo wash the dishes`","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"waseemingly"},"content":"### Adding a deadline task : `deadline`","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"waseemingly"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"waseemingly"},"content":"Format: `deadline NAME /by DDMMYYYY HHMM`","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"waseemingly"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"waseemingly"},"content":"*  `deadline CS2103T Assignment /by 27/9/2023 2359`","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"waseemingly"},"content":"*  `deadline group project /by 1/11/2023 0123`","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"waseemingly"},"content":"### Adding an event task : `event`","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"waseemingly"},"content":"Adds an event task to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"waseemingly"},"content":"Format: `event NAME /from DDMMYYYY HHMM /to DDMMYYYY HHMM`","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"waseemingly"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"waseemingly"},"content":"*  `event Dad\u0027s birthday /from 17/8/2023 0000 /to 17/8/2023 2359`","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"waseemingly"},"content":"*  `event Graduation Ceremony /from 12/12/2023 0000 /to 13/12/2023 2359`","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"waseemingly"},"content":"### Listing all persons : `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"waseemingly"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"waseemingly"},"content":"Format: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"waseemingly"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"waseemingly"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"waseemingly"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"waseemingly"},"content":"* The search is case-insensitive. e.g. `cycling` will match `Cycling`","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"waseemingly"},"content":"* The order of the keywords matters. e.g. `wash dishes` will not match `dishes wash`","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"waseemingly"},"content":"* Only the name is searched.","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"waseemingly"},"content":"* Finds task even if the keyword matches the item only partially e.g. `cyc` will match `cycling`","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"waseemingly"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"waseemingly"},"content":"* `find homework` returns `homework` and `Math Homework`","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"waseemingly"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"waseemingly"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":113,"author":{"gitId":"waseemingly"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":115,"author":{"gitId":"waseemingly"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"waseemingly"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"waseemingly"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"waseemingly"},"content":"Examples:","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"waseemingly"},"content":"* `list` followed by `delete 2` deletes the 2nd task in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"waseemingly"},"content":"### Marking a task as done : `mark`","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"waseemingly"},"content":"Marks the specified task as done from the task list","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"waseemingly"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"waseemingly"},"content":"* Marks the test at the specified `INDEX` as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"waseemingly"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"waseemingly"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"waseemingly"},"content":"### Marking a task as not done : `unmark`","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"waseemingly"},"content":"Marks the specified task as not done from the task list","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"waseemingly"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"waseemingly"},"content":"* Marks the test at the specified `INDEX` as not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"waseemingly"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"waseemingly"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"waseemingly"},"content":"### Exiting the program : `bye`","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"waseemingly"},"content":"Exits the program.","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"waseemingly"},"content":"Format: `bye`","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"waseemingly"},"content":"### Saving the data","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"waseemingly"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"waseemingly"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"waseemingly"},"content":"## Command summary","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":155,"author":{"gitId":"waseemingly"},"content":"| Action       | Format, Examples                                                                                                           |","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"waseemingly"},"content":"|--------------|----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"waseemingly"},"content":"| **Todo**     | `todo NAME` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`  |","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"waseemingly"},"content":"| **Deadline** | `deadline NAME /by DDMMYYYY HHMM`\u003cbr\u003e e.g., `deadline group project /by 1/11/2023 0123`                                    |","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"waseemingly"},"content":"| **Event**    | `event NAME /from DDMMYYYY HHMM /to DDMMYYYY HHMM`\u003cbr\u003e e.g.,`event Dad\u0027s birthday /from 17/8/2023 0000 /to 17/8/2023 2359` |","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"waseemingly"},"content":"| **Delete**   | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                        |","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"waseemingly"},"content":"| **Mark**     | `mark INDEX`\u003cbr\u003e e.g., `mark 2`                                                                                            |","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"waseemingly"},"content":"| **Unmark**   | `unmark INDEX`\u003cbr\u003e e.g., `unmark 2`                                                                                        |","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"waseemingly"},"content":"| **Find**     | `find KEYWORD`\u003cbr\u003e e.g., `find homework`                                                                                   |","lastModifiedDate":"2023-09-19"},{"lineNumber":164,"author":{"gitId":"waseemingly"},"content":"| **List**     | `list`                                                                                                                     |","lastModifiedDate":"2023-09-19"},{"lineNumber":165,"author":{"gitId":"waseemingly"},"content":"| **Bye**      | `bye`                                                                                                                      |","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"waseemingly":150,"-":15}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":" * Represents a Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"     * Creates a new Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"     * @param description The description or name of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"     * @param by The date and time by which the task should be completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"     * Returns a string representation of the task for user display.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"     * @return A string representing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"     * Returns a string representation of the task for saving to file.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"     * @return A string representing the task in a format suitable for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"        return \"D\" + super.toFileString() + \" | \" + by;","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"waseemingly":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"     * Constructor to create a dialog box with given text and image.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"     * @param img  The image to be used as the speaker\u0027s avatar.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"        dialog.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"        this.setMaxWidth(USE_PREF_SIZE);","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"    private void flip() {","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"waseemingly"},"content":"     * Factory method to create a user dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"waseemingly"},"content":"     * @param text The text spoken by the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"waseemingly"},"content":"     * @param img  The user\u0027s avatar.","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"waseemingly"},"content":"     * @return A DialogBox with the user\u0027s avatar and text.","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"waseemingly"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"waseemingly"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"waseemingly"},"content":"     * Factory method to create a Duke dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"waseemingly"},"content":"     * This dialog box has Duke\u0027s avatar on the left and the text on the right.","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"waseemingly"},"content":"     * @param text The text spoken by Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"waseemingly"},"content":"     * @param img  Duke\u0027s avatar.","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"waseemingly"},"content":"     * @return A DialogBox with Duke\u0027s avatar and text.","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"waseemingly"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"waseemingly"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"waseemingly"},"content":"        db.flip();","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"waseemingly"},"content":"        return db;","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"waseemingly":84}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":" * The main Duke application class representing the chatbot.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":" * It initializes the application components, including the GUI, and handles interactions with the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"     * Default constructor for the Duke class.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"     * Initializes the user interface, storage mechanism, and task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"    public Duke() {","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"            tasks \u003d new TaskList(); // start with an empty list if the file doesn\u0027t exist","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"     * The main entry point for the JavaFX application.","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"waseemingly"},"content":"     * This method sets up the GUI elements and the initial visual appearance for the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"waseemingly"},"content":"     * @param stage The primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"waseemingly"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"waseemingly"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"waseemingly"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"waseemingly"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"waseemingly"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"waseemingly"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"waseemingly"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"waseemingly"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"waseemingly"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"waseemingly"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"waseemingly"},"content":"        stage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"waseemingly"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"waseemingly"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"waseemingly"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"waseemingly"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"waseemingly"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"waseemingly"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"waseemingly"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"waseemingly"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"waseemingly"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"waseemingly"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"waseemingly"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"waseemingly"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"waseemingly"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"waseemingly"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"waseemingly"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"waseemingly"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"waseemingly"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"waseemingly"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"waseemingly"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"waseemingly"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"waseemingly"},"content":"        String welcomeMessage \u003d Ui.showWelcome();","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"waseemingly"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, duke));","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"waseemingly"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"waseemingly"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"waseemingly"},"content":"     * Handles user\u0027s command input, processes the command, and displays the result in the dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"waseemingly"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"waseemingly"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"waseemingly"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"waseemingly"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"waseemingly"},"content":"                DialogBox.getUserDialog(input, user),","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"waseemingly"},"content":"                DialogBox.getDukeDialog(response, duke)","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"waseemingly"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"waseemingly"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"waseemingly"},"content":"     * Processes the user\u0027s command input and returns a response.","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"waseemingly"},"content":"     * This method takes in the user\u0027s command, parses it, and executes the appropriate command.","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"waseemingly"},"content":"     * If there are any issues, it handles them gracefully by returning an error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"waseemingly"},"content":"     * @param input The user\u0027s command input string.","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"waseemingly"},"content":"     * @return The response after processing the command.","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"waseemingly"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"waseemingly"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"waseemingly"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"waseemingly"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"waseemingly"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":149,"author":{"gitId":"waseemingly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"waseemingly"},"content":"            return \"Error saving or loading tasks: \" + e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"waseemingly"},"content":"     * The main method for launching the Duke chatbot application.","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"waseemingly"},"content":"     * This method launches the JavaFX application.","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"waseemingly"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"waseemingly"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"waseemingly"},"content":"        launch(args);","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"waseemingly":163}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":" * Represents exceptions specific to the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"     * @param message The detail message. The detail message is saved for later retrieval by the","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"     *      {@link #getMessage()} method.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"waseemingly":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":" * Each event has a description, start time, and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"     * Constructs an Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"     * Returns a string representation of the event suitable for user display.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     * @return A string representation of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"     * Returns a string representation of the event suitable for saving to file.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"     * @return A string representation of the event for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"        return \"E\" + super.toFileString() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"waseemingly":49}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"public class Launcher {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"waseemingly":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     * The main entry point for the JavaFX application.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     * It sets up the main chat interface and displays it to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"     * @param stage The primary stage/window of the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"            stage.setResizable(true);","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"            stage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"waseemingly":39}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import static duke.Ui.showWelcome;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":" * Controller for the MainWindow of the Duke chatbot application.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":" * Provides the layout for the user input and chat dialogs and handles user interactions.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/max.jpeg\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lewis.jpeg\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"     * Initializes the main chat window.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"     * Sets the welcome message if Duke has been initialized.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"        if (duke !\u003d null) { // Ensure duke is initialized.","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"            String welcomeMessage \u003d showWelcome();","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"     * Assigns a Duke instance to this controller.","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"     * @param d The Duke instance to be used.","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"        postInitialize();","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"        dialogContainer.autosize();","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"waseemingly"},"content":"     * Displays Duke\u0027s welcome message post initialization.","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"waseemingly"},"content":"    private void postInitialize() {","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"        String welcomeMessage \u003d Ui.showWelcome();","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"waseemingly"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"waseemingly"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"waseemingly"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"waseemingly"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"waseemingly"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"waseemingly"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"waseemingly"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"waseemingly"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"waseemingly"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"waseemingly"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"waseemingly"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"waseemingly"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"waseemingly":81}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":" * Provides utilities for parsing user inputs into commands for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     * Parses the given user input string into a Command object.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"     * This method recognizes various command keywords and constructs the appropriate command object.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"     * @param userInput The raw input string from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"     * @return The appropriate Command object based on the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"     * @throws DukeException If the user input is not recognized or improperly formatted.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"        assert userInput !\u003d null : \"User input should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"        if (\"bye\".equalsIgnoreCase(userInput)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"        } else if (\"list\".equalsIgnoreCase(userInput)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"            String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"            assert parts.length \u003e 1 : \"Expected a task number after \u0027mark\u0027\";","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"                int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"                return new MarkCommand(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"                throw new DukeException(\"Please provide a valid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"            String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"            assert parts.length \u003e 1 : \"Expected a task number after \u0027unmark\u0027\";","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"                int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"                return new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"                throw new DukeException(\"Please provide a valid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"            String description \u003d userInput.substring(4).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"            return new TodoCommand(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"waseemingly"},"content":"            String content \u003d userInput.substring(8).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"waseemingly"},"content":"            int index \u003d content.indexOf(\"/by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"waseemingly"},"content":"                throw new DukeException(\"Please use \u0027/by\u0027 to specify the deadline time.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"waseemingly"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"waseemingly"},"content":"                String description \u003d content.substring(0, index).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"waseemingly"},"content":"                String by \u003d content.substring(index + 4).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"waseemingly"},"content":"                return new DeadlineCommand(description, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"waseemingly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"waseemingly"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"waseemingly"},"content":"            String content \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"waseemingly"},"content":"            String[] parts \u003d content.split(\"/from | /to \");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"waseemingly"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"waseemingly"},"content":"                throw new DukeException(\"Please use the format: event [description] /from [start time] /to [end time]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"waseemingly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"waseemingly"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"waseemingly"},"content":"            String from \u003d parts[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"waseemingly"},"content":"            String to \u003d parts[2].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"waseemingly"},"content":"            return new EventCommand(description, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"waseemingly"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"waseemingly"},"content":"            String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"waseemingly"},"content":"            assert parts.length \u003e 1 : \"Expected a task number after \u0027delete\u0027\";","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"waseemingly"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"waseemingly"},"content":"                int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"waseemingly"},"content":"                return new DeleteCommand(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"waseemingly"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"waseemingly"},"content":"                throw new DukeException(\"Please provide a valid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"waseemingly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"waseemingly"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"waseemingly"},"content":"            String keyword \u003d userInput.substring(4).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"waseemingly"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"waseemingly"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"waseemingly"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":97}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":" * Represents a storage system to handle reading and writing tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"    private String directoryPath;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"    private String fileName;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"     * Initializes a new instance of the Storage class.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"     * @param filePath The path to the file used for storing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"        this.directoryPath \u003d file.getParent();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"        this.fileName \u003d file.getName();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"     * Saves the tasks into the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"     * @throws IOException If there\u0027s an issue writing to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"        // Ensure the directory exists","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"        // Create file instance","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"                writer.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"waseemingly"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"waseemingly"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"waseemingly"},"content":"     * @throws FileNotFoundException If the file doesn\u0027t exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"waseemingly"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"waseemingly"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"waseemingly"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"waseemingly"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"waseemingly"},"content":"            return tasks; // return empty list if file doesn\u0027t exist","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"waseemingly"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"waseemingly"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"waseemingly"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"waseemingly"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"waseemingly"},"content":"                if (parts[0].equals(\"T\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"waseemingly"},"content":"                    Todo todo \u003d new Todo(parts[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"waseemingly"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"waseemingly"},"content":"                        todo.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"waseemingly"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"waseemingly"},"content":"                    tasks.add(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"waseemingly"},"content":"                } else if (parts[0].equals(\"D\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"waseemingly"},"content":"                    LocalDateTime dateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"waseemingly"},"content":"                    DateTimeFormatter defaultFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"waseemingly"},"content":"                    DateTimeFormatter isoFormatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"waseemingly"},"content":"                    try {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"waseemingly"},"content":"                        dateTime \u003d LocalDateTime.parse(parts[3], defaultFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"waseemingly"},"content":"                    } catch (DateTimeParseException e1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"waseemingly"},"content":"                        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"waseemingly"},"content":"                            dateTime \u003d LocalDateTime.parse(parts[3], isoFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"waseemingly"},"content":"                        } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"waseemingly"},"content":"                            System.out.println(\"Error parsing date-time from saved data: \" + parts[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"waseemingly"},"content":"                            continue; // Skip to the next loop iteration if date parsing fails","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"waseemingly"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"waseemingly"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"waseemingly"},"content":"                    Deadline deadline \u003d new Deadline(parts[2], dateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"waseemingly"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"waseemingly"},"content":"                        deadline.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"waseemingly"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"waseemingly"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"waseemingly"},"content":"                } else if (parts[0].equals(\"E\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"waseemingly"},"content":"                    LocalDateTime dateTimeFrom;","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"waseemingly"},"content":"                    LocalDateTime dateTimeTo;","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"waseemingly"},"content":"                    DateTimeFormatter defaultFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"waseemingly"},"content":"                    DateTimeFormatter isoFormat \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"waseemingly"},"content":"                    try {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"waseemingly"},"content":"                        dateTimeFrom \u003d LocalDateTime.parse(parts[3], defaultFormat);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"waseemingly"},"content":"                    } catch (DateTimeParseException e1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"waseemingly"},"content":"                        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"waseemingly"},"content":"                            dateTimeFrom \u003d LocalDateTime.parse(parts[3], isoFormat);","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"waseemingly"},"content":"                        } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"waseemingly"},"content":"                            System.out.println(\"Error parsing start date-time from saved data: \" + parts[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"waseemingly"},"content":"                            continue; // Skip to the next loop iteration if date parsing fails","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"waseemingly"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"waseemingly"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"waseemingly"},"content":"                    try {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"waseemingly"},"content":"                        dateTimeTo \u003d LocalDateTime.parse(parts[4], defaultFormat);","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"waseemingly"},"content":"                    } catch (DateTimeParseException e1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"waseemingly"},"content":"                        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"waseemingly"},"content":"                            dateTimeTo \u003d LocalDateTime.parse(parts[4], isoFormat);","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"waseemingly"},"content":"                        } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"waseemingly"},"content":"                            System.out.println(\"Error parsing end date-time from saved data: \" + parts[4]);","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"waseemingly"},"content":"                            continue; // Skip to the next loop iteration if date parsing fails","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"waseemingly"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"waseemingly"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"waseemingly"},"content":"                    Event event \u003d new Event(parts[2], dateTimeFrom, dateTimeTo);","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"waseemingly"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"waseemingly"},"content":"                        event.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"waseemingly"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"waseemingly"},"content":"                    tasks.add(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"waseemingly"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"waseemingly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"waseemingly"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":143}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"     * Initializes a new instance of the Task class with the specified description.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     * Gets the status icon of the task. Returns \u0027X\u0027 if the task is done, and \u0027 \u0027 otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     * Gets the number icon of the task. Returns \u00271\u0027 if the task is done, and \u00270\u0027 otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"     * @return The number icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"    public String getNumberIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"     * Returns a string representation of the task with its status icon and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"waseemingly"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"waseemingly"},"content":"     * Returns a formatted string representation of the task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"waseemingly"},"content":"     * @return A formatted string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"waseemingly"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"waseemingly"},"content":"        return \" | \" + getNumberIcon() + \" | \" + description;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"waseemingly":72}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"     * Initializes an empty task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     * Initializes the task list with the given tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"        assert task !\u003d null : \"Task to be added cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"     * Retrieves a task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Task index out of range\";","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Task index out of range\";","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"waseemingly"},"content":"     * Retrieves the number of tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"waseemingly"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"waseemingly"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"waseemingly"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"waseemingly"},"content":"     * Returns an iterator over the elements in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"waseemingly"},"content":"     * @return An iterator over the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"waseemingly"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"waseemingly"},"content":"        return tasks.iterator();","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"waseemingly"},"content":"     * Finds and returns a list of tasks that contain the specified keyword","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"waseemingly"},"content":"     * in their descriptions.","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"waseemingly"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"waseemingly"},"content":"     * @return A list of tasks that contain the keyword.","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"waseemingly"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"waseemingly"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.trim().isEmpty() : \"Keyword cannot be null or empty\";","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"waseemingly"},"content":"        keyword \u003d keyword.trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"waseemingly"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"waseemingly"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"waseemingly"},"content":"            if (task.description.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"waseemingly"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"waseemingly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"waseemingly"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":95}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":" * A Todo task is a task without any date/time attached to it.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"     * Creates a new Todo task with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     * @return A string representing the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"     * Returns a string representation of the Todo task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     * @return A string suitable for storing the Todo task in a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"waseemingly":37}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":" * Represents the User Interface (UI) of the duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":" * This class handles all interactions with the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"     * Initializes a new Ui instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"     * Displays the welcome message when the program starts.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    public static String showWelcome() {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"               + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"               + \"What can I do for you?\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"               + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"     * Displays the goodbye message when the program ends.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"    public String showGoodbye() {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"                + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"     * Displays an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"    public String showError(String message) {","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"                + \"☹ OOPS!!! \" + message + \"\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"     * Displays a loading error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"        showError(\"There was an error loading saved tasks.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"waseemingly"},"content":"     * Displays a message surrounded by lines.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"waseemingly"},"content":"    public String printMessage(String message) {","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"waseemingly"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"waseemingly"},"content":"                + message + \"\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"waseemingly"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"waseemingly"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"waseemingly"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"waseemingly"},"content":"    public String showTasksList(TaskList tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"waseemingly"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"waseemingly"},"content":"        builder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"waseemingly"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"waseemingly"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"waseemingly"},"content":"            builder.append(i + 1).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"waseemingly"},"content":"        return builder.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"waseemingly"},"content":"     * Displays a message indicating a task has been added.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"waseemingly"},"content":"     * @param task        The task that was added.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"waseemingly"},"content":"     * @param totalTasks  The total number of tasks after adding.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"waseemingly"},"content":"    public String showAddedTask(Task task, int totalTasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"waseemingly"},"content":"        assert task !\u003d null : \"Task to be added cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"waseemingly"},"content":"        assert totalTasks \u003e\u003d 0 : \"Total tasks count cannot be negative\";","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"waseemingly"},"content":"        return printMessage(\"Got it. I\u0027ve added this task:\\n  \" + task","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"waseemingly"},"content":"                + \"\\nNow you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"waseemingly"},"content":"     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"waseemingly"},"content":"     * @param task        The task that was deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"waseemingly"},"content":"     * @param totalTasks  The total number of tasks after deletion.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"waseemingly"},"content":"    public String showDeletedTask(Task task, int totalTasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"waseemingly"},"content":"        assert task !\u003d null : \"Task to be deleted cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"waseemingly"},"content":"        assert totalTasks \u003e\u003d 0 : \"Total tasks count cannot be negative\";","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"waseemingly"},"content":"        return printMessage(\"Noted. I\u0027ve removed this task:\\n  \" + task","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"waseemingly"},"content":"                + \"\\nNow you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"waseemingly"},"content":"     * Displays an error message related to task saving.","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"waseemingly"},"content":"     * @param errorMessage The specific error message regarding saving.","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"waseemingly"},"content":"    public String showSavingError(String errorMessage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"waseemingly"},"content":"        return \"Error saving tasks: \" + errorMessage + \"\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"waseemingly"},"content":"     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"waseemingly"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"waseemingly"},"content":"    public String showTaskMarked(Task task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"waseemingly"},"content":"        assert task !\u003d null : \"Task to be marked cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":128,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"waseemingly"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"waseemingly"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"waseemingly"},"content":"                + \"  [\" + task.getStatusIcon() + \"] \" + task.description + \"\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"waseemingly"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"waseemingly"},"content":"     * Displays a message indicating a task has been marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"waseemingly"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"waseemingly"},"content":"    public String showTaskUnmarked(Task task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"waseemingly"},"content":"        assert task !\u003d null : \"Task to be unmarked cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"waseemingly"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"waseemingly"},"content":"                + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"waseemingly"},"content":"                + \"  [\" + task.getStatusIcon() + \"] \" + task.description + \"\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"waseemingly"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"waseemingly"},"content":"     * Displays the tasks that match the provided keyword.","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"waseemingly"},"content":"     * @param matchingTasks A list of tasks that match the keyword.","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"waseemingly"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"waseemingly"},"content":"        assert matchingTasks !\u003d null : \"List of matching tasks cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":157,"author":{"gitId":"waseemingly"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"waseemingly"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"waseemingly"},"content":"            return printMessage(\"No tasks match your search.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"waseemingly"},"content":"        builder.append(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"waseemingly"},"content":"        builder.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"waseemingly"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"waseemingly"},"content":"            Task task \u003d matchingTasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"waseemingly"},"content":"            builder.append(i + 1).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"waseemingly"},"content":"        builder.append(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":170,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"waseemingly"},"content":"        return builder.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":173}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":" * Represents a command to terminate the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"     * Executes the bye command, which terminates the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"     * @param tasks   The task list that contains the list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"     * @param ui      The UI of the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"     * @param storage The storage that stores task list data.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"        Platform.exit();","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":25}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":" * Represents an abstract command that can be executed by Duke.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":" * All specific command types (e.g., AddTaskCommand, DeleteTaskCommand)","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":" * should inherit from this class and implement the execute method.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     * Executes the specific command with respect to the provided task list,","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     * user interface, and storage handler.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"     * @param tasks   The list of tasks to operate on.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"     * @param ui      The UI instance to communicate with the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"     * @param storage The storage instance to read/write to the data file.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"     * @throws DukeException If there\u0027s a problem specific to Duke\u0027s operation.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"     * @throws IOException   If there\u0027s a problem accessing or modifying the data file.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":29}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"import duke.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    private String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"    private String by;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"     * Constructs a new DeadlineCommand object with the given description and deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     * @param by The deadline of the task in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"     * Executes the deadline command, which attempts to create a new Deadline task","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     * and adds it to the given task list. It also updates the storage with the new task.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"     * @param tasks   The task list that contains the list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"     * @param ui      The UI of the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"     * @param storage The storage that stores task list data.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"     * @throws DukeException If there is an error with the input or format of the deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"     * @throws IOException   If there is an error saving the tasks to storage.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"        if (description.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"            throw new DukeException(\"☹ OOPS!!! The description or deadline of a task cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"        Deadline newDeadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"            newDeadline \u003d new Deadline(description, dateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"            storage.saveTasks(tasks); // Save the updated tasks to file","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"            return ui.showAddedTask(newDeadline, tasks.size()); // Return the message about the added task","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"            throw new DukeException(\"Invalid date-time format! Please use d/M/yyyy HHmm format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"            return ui.showSavingError(e.getMessage()); // Return the error message","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":58}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import duke.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"     * Constructs a new DeleteCommand object with the given task number.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"     * @param taskNumber The index (1-based) of the task to be deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"     * Executes the delete command, which attempts to remove a task from the given task list","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"     * based on the provided task number. It also updates the storage after deletion.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"     * @param tasks   The task list that contains the list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"     * @param ui      The UI of the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"     * @param storage The storage that stores task list data.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"     * @throws DukeException If the task number is invalid or out of bounds.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     * @throws IOException   If there is an error saving the updated task list to storage.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"            throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"        Task deletedTask \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"        tasks.delete(taskNumber - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"            storage.saveTasks(tasks); // Save the updated tasks to file","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"            return ui.showSavingError(e.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"        return ui.showDeletedTask(deletedTask, tasks.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":49}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"import duke.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":" * Represents a command to add an event to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    private String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"    private String from;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"    private String to;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     * Constructs a new EventCommand object with the given description, start and end time.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"     * @param from Start time of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"     * @param to End time of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"     * Executes the event command, which attempts to create a new event task with the","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"     * provided description, start and end time, and add it to the given task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"     * It also updates the storage after addition.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"     * @param tasks   The task list that contains the list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"     * @param ui      The UI of the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"     * @param storage The storage that stores task list data.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"     * @throws DukeException If the description, start, or end time is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"     * @throws IOException   If there is an error saving the updated task list to storage.","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"        if (description.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"            throw new DukeException(\"☹ OOPS!!! The description, start, or end time of an event cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"        Event newEvent;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"            LocalDateTime dateTimeFrom \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"            LocalDateTime dateTimeTo \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"            newEvent \u003d new Event(description, dateTimeFrom, dateTimeTo);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"            storage.saveTasks(tasks); // Save the updated tasks to file","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"waseemingly"},"content":"            return ui.showAddedTask(newEvent, tasks.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"waseemingly"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"waseemingly"},"content":"            throw new DukeException(\"Invalid date-time format! Please use d/M/yyyy HHmm format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"waseemingly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"waseemingly"},"content":"            return ui.showSavingError(e.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":63}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import duke.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":" * Represents a command that finds tasks containing a specific keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":" * This command will search through the task list for tasks that contain","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":" * the keyword in their description and display the matching tasks to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    private String keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"     * Constructs a new FindCommand object.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     * @param keyword The keyword to search for within the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"     * Executes the find command by searching the task list for tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"     * that contain the specified keyword in their description.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"     * @param tasks   The list of tasks to search within.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     * @param ui      The UI object to interact with the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     * @param storage The storage object to read/write tasks from/to the data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"     * @throws DukeException If any issue occurs during the operation.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasksByKeyword(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"        return ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":39}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":" * Represents a command that lists all tasks currently in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":" * When executed, it will return a formatted string that displays all tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":" * present in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"     * Executes the list command by calling the UI\u0027s method to display","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"     * the list of tasks currently in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     * @param ui      The UI object to interact with the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     * @param storage The storage object to read/write tasks from/to the data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"        return ui.showTasksList(tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import duke.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":" * Represents a command that marks a task as done in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":" * When executed, it will set the specified task\u0027s status to done","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":" * and update the storage accordingly.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    /** The index of the task in the task list to be marked as done. */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"     * Initializes a new instance of the MarkCommand class.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     * @param taskNumber The index of the task to be marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"     * Executes the mark command by marking the specified task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"     * This command will update both the in-memory task list and the","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"     * stored data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"     * @param ui      The UI object to interact with the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"     * @param storage The storage object to read/write tasks from/to the data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"     * @throws DukeException If the specified task number is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"     * @throws IOException   If there\u0027s an error saving the tasks to the data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"            Task task \u003d tasks.get(taskNumber - 1); // arrays are 0-based, so subtract 1","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"            task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"            storage.saveTasks(tasks); // Save the updated tasks to file","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"            return ui.showTaskMarked(task);","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":48}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import duke.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":" * Represents a command to create a new Todo task.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":" * This command, when executed, will add a new Todo task to the task list and","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":" * persistently store the updated list to a data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    /** The description or detail of the Todo task. */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"    private String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"     * Initializes a new instance of the TodoCommand class.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"     * Executes the Todo command by creating a new Todo task and adding it to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"     * This command will update both the in-memory task list and the stored data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     * @param ui      The UI object used to communicate with the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"     * @param storage The storage object responsible for reading from and writing tasks to the data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"     * @throws DukeException If the description of the todo is empty.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"     * @throws IOException   If there\u0027s an error when saving the tasks to the data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"            storage.saveTasks(tasks); // Save the updated tasks to file","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"            return ui.showSavingError(e.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"        return ui.showAddedTask(newTodo, tasks.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":53}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import duke.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":" * Represents a command to unmark a specific task as undone.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":" * This command, when executed, will unmark a task from the task list as undone","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":" * and persistently store the updated list to a data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    /** The number or index of the task to be unmarked. */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"     * Initializes a new instance of the UnmarkCommand class.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"     * @param taskNumber The index or number of the task to be unmarked.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"     * Executes the Unmark command by changing the status of a task to undone.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"     * This command will update both the in-memory task list and the stored data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"     * @param ui      The UI object used to communicate with the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"     * @param storage The storage object responsible for reading from and writing tasks to the data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"     * @throws DukeException If the provided task number is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"     * @throws IOException   If there\u0027s an error when saving the tasks to the data file.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"            return ui.showTaskUnmarked(task);","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"waseemingly":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"waseemingly":19}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"    private final String testFilePath \u003d \"data/testTasks.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"    @AfterEach","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    public void tearDown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"        File file \u003d new File(testFilePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"waseemingly"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"waseemingly"},"content":"            file.delete();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"waseemingly"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"waseemingly"},"content":"    public void testSaveTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"waseemingly"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"waseemingly"},"content":"        taskList.add(new Todo(\"read book\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"waseemingly"},"content":"        assertDoesNotThrow(() -\u003e storage.saveTasks(taskList));","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"waseemingly"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"waseemingly"},"content":"    public void testLoadTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"waseemingly"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"waseemingly"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"waseemingly"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"waseemingly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"waseemingly"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"waseemingly"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"waseemingly"},"content":"            assertNotNull(loadedTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"waseemingly"},"content":"            assertEquals(1, loadedTasks.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"waseemingly"},"content":"            assertEquals(todo.toString(), loadedTasks.get(0).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"waseemingly"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"waseemingly"},"content":"            fail(\"Should not have thrown any exception.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"waseemingly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":55}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"    public void testUnmarkAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"waseemingly"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"waseemingly"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"waseemingly"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":23}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"package duke;  //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"waseemingly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"waseemingly"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"waseemingly"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"waseemingly"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"waseemingly"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"waseemingly"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"waseemingly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"waseemingly"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"waseemingly"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"waseemingly"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"waseemingly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"waseemingly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"waseemingly":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"waseemingly"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"waseemingly":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"waseemingly"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"waseemingly":1,"-":20}}]
