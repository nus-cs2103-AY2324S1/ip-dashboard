[{"path":"HelpList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"Here are the list of commands you can use:","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"1. todo \u003ctask name\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"2. deadline \u003ctask name\u003e /by \u003cdate\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"3. event \u003ctask name\u003e /at \u003cdate\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"4. list","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"5. mark \u003ctask number\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"6. unmark \u003ctask number\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"7. delete \u003ctask number\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"8. find \u003ckeyword\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"9. bye","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"To have examples for the different commands, please type help \u003ccommand number\u003e.","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"Thank you for using DukeKing, We aim to improve everyone productivity!","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":12}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"    mainClass.set(\"duke.gui.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"    archiveFileName.set(\"duke.jar\")","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"    destinationDir \u003d file(\"${rootDir}/docs\")","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhanyang01":25,"-":38}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"// fixing DukeException based on my understanding of exceptions 27/8/23","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":" * The main file that the application runs","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"    protected Ui helper;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    protected TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the main file, takes in the filePath that","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * allow the bot to store the file with the saved taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * at a known place to be retrieved later","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * Contains the UI, Storage and taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     * @param filePath the path in the application that contains the file","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        this.helper \u003d new Ui(\"DukeKing\");","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"            helper.noFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"     * Main method, create a duke object with the filepath and run it","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"     * @param args takes in the arguments for the respective commands","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"     *             from the user","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"        new Duke(\"./dataTasks.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"     * Runs the application, contains a scanner object to read the inputs","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"     * given by the user and will continue to loop after each command until a","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"     * \"bye\" command is given by the user to end the program","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"    public void run() {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"        Ui.welcome();","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"        // setting up","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"        String string \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"        assert string !\u003d null : \"string should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"        // looping in the program","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"            // end the program","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"                helper.printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"                Command command \u003d Parser.parse(string);","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"                command.execute(tasks, helper, storage);","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"zhanyang01"},"content":"            } catch (Throwable e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"zhanyang01"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"zhanyang01"},"content":"            } finally {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"                helper.printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"zhanyang01"},"content":"                string \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"        // end the program","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"zhanyang01"},"content":"        sc.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"zhanyang01"},"content":"        helper.bye();","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"zhanyang01"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"zhanyang01"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"zhanyang01"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"zhanyang01"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"zhanyang01"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"zhanyang01"},"content":"            try {","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"zhanyang01"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"zhanyang01"},"content":"                output \u003d command.execute(tasks, helper, storage);","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"zhanyang01"},"content":"            } catch (Throwable e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"zhanyang01"},"content":"                return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"zhanyang01"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"zhanyang01":93,"-":1}},{"path":"src/main/java/duke/FormatterDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":" * To format the date that the bot understand to what the user wants","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":" * will add more possible ways in the future","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"public enum FormatterDate {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    basicInput(DateTimeFormatter.ISO_LOCAL_DATE),","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"    slashInput(\"dd/MM/yyyy\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    basicOutput(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    public DateTimeFormatter formatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"     * This takes in a string pattern and will convert the string pattern","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"     * to the formatter required","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * @param pattern string to be taken in","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"    FormatterDate(String pattern) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"        this.formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"     * This takes in a formatter","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"     * @param formatter formatter that is taken in","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"    FormatterDate(DateTimeFormatter formatter) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"        this.formatter \u003d formatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhanyang01":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.AddTaskCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.DetailedHelpCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.HelpCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"import duke.exception.WrongMarkException;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":" * Describes the actions taken by the bot when commands is given","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * Describes the action taken","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     * @param command  User command","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     * @param taskList Takes in a taskList to add/delete/change details","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"     *                 in the taskList from done to not done and vice","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"     *                 versa","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"     * @param helper   Takes in the bot interaction with the user","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"     * @param storage  Takes in the storage to store the taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"     *                 of the particular user after the user wants to end","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"     *                 the program of the bot","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"     * @return a boolean that allow the main application to end the program","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"     *         when a particular command \"bye\" is given from the user","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"     * @throws WrongMarkException      if asked to mark a marked file or unmark a","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"     *                                 file","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"     *                                 that is not marked","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"     * @throws UnknownCommandException if asked commands that the bot do not","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"     *                                 understand","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"    public static Command parse(String command) throws WrongMarkException, UnknownCommandException {","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"        int taskNumber \u003d 0;","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"        Command commandGiven \u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"        String[] splittedCommand \u003d command.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"        String commandType \u003d splittedCommand[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"            case \"help\":","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"                if (splittedCommand.length \u003e 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"                    int helpNumber \u003d Integer.parseInt(splittedCommand[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"                    commandGiven \u003d new DetailedHelpCommand(helpNumber);","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"                } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"                    commandGiven \u003d new HelpCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"                }","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"                commandGiven \u003d new ByeCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"            case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"                String keyword \u003d splittedCommand[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"                commandGiven \u003d new FindCommand(keyword);","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"            case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"                commandGiven \u003d new ListCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"                taskNumber \u003d Integer.parseInt(splittedCommand[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"                commandGiven \u003d new MarkCommand(taskNumber);","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"zhanyang01"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"zhanyang01"},"content":"                taskNumber \u003d Integer.parseInt(splittedCommand[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"zhanyang01"},"content":"                commandGiven \u003d new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"zhanyang01"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"                taskNumber \u003d Integer.parseInt(splittedCommand[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"                commandGiven \u003d new DeleteCommand(taskNumber);","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"zhanyang01"},"content":"            default:","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"zhanyang01"},"content":"                commandGiven \u003d new AddTaskCommand(command);","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"zhanyang01"},"content":"        return commandGiven;","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhanyang01":80}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":" * Implements a storage class to allow the bot to be able to save tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"    private String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    private File file;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"    private FileReader fr;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"    private Scanner sc;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the storage class","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"     * @param filePath","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"     * @throws IOException if file is not found or created","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(\"Creation of File in process, please be patient\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"        this.fr \u003d new FileReader(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"     * Describes the process of saving the taskList into a file","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"     * @param taskList Takes in the original taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"     * @throws IOException if there is no file for the contents in the taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"     *                     to be recorded","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"    // solution for save adapted from asdfghjkxd","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"    // Storage.java write method","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"        assert tasks !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"            fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"        fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"     * Allows the contents from the file to be loaded","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"     * @return a scanner to read the contents form the file","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"    public Scanner load() {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"        if (sc !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"            return sc;","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"            sc \u003d new Scanner(fr);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"            return sc;","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhanyang01":68}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.io.File;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":" * Describes the various possible interaction the bot has when you command","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":" * it to do a specific task","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"public class Ui {","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    public String name;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    public Ui(String name) {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     * Describes what the bot say when you start it","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    public static String welcome() {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        String name \u003d \"DukeKing\";","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        String welcome \u003d \"Hello! I\u0027m \" + name + \"\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"        welcome +\u003d \"For new users, type help to see the list of commands you can use.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(welcome);","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"        return welcome;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"     * Describes what the bot say when you end the program","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"    public String bye() {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"     * Prints a line to segregate between user and bot replies","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"    public void printLine() {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(\"_\".repeat(40));","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"     * Describes what the bot say when you mark a task successfully","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"     * @param task Take in the task to be marked","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"    public String markTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"        String markingTask \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d String.format(\"%s\\n%s\", markingTask, task);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"     * Describes what the bot say when you unmark a task successfully","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"     * @param task Take in the task to be unmarked","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"zhanyang01"},"content":"    public String unMarkTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"zhanyang01"},"content":"        String markingTask \u003d \"Nice! I have unmarked the task :\";","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d String.format(\"%s\\n%s\", markingTask, task);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"zhanyang01"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"zhanyang01"},"content":"     * Describes what the bot say when task is deleted successfully","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"zhanyang01"},"content":"     * @param list       Take in the taskList to delete the task from it","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"zhanyang01"},"content":"     * @param taskNumber Take in the task to be deleted from the taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"zhanyang01"},"content":"    public String deleteTask(TaskList tasks, int taskNumber) {","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"zhanyang01"},"content":"        assert taskNumber \u003e 0 : \"taskNumber should be more than 0\";","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"zhanyang01"},"content":"        String deletingTask \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"zhanyang01"},"content":"        int taskInArray \u003d tasks.size() - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"zhanyang01"},"content":"        assert taskNumber \u003c\u003d taskInArray : \"task should be in the list\";","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"zhanyang01"},"content":"        Task removedTask \u003d tasks.deleteTask(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"zhanyang01"},"content":"        String numberOfTask \u003d \"Now you have \" + taskInArray + \" tasks in the list.\";","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d String.format(\"%s\\n  %s\\n%s\", deletingTask, removedTask, numberOfTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"zhanyang01"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"zhanyang01"},"content":"     * Describes what the bot say when you successfully adds in a task","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"zhanyang01"},"content":"     * @param task Take in the task to be added","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"zhanyang01"},"content":"     * @param list Takes in the TaskList that the task is added to","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"zhanyang01"},"content":"    public String addTask(Task task, TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"zhanyang01"},"content":"        assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"zhanyang01"},"content":"        assert tasks !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"zhanyang01"},"content":"        String addingTask \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"zhanyang01"},"content":"        String numberOfTask \u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d String.format(\"%s\\n  %s\\n%s\", addingTask, task, numberOfTask);","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"zhanyang01"},"content":"        printLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"zhanyang01"},"content":"     * Describes the case without a file the required to save the tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"zhanyang01"},"content":"    public String noFile() {","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"zhanyang01"},"content":"        printLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(\"OOPS!!! There is no file to load.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"zhanyang01"},"content":"        return \"OOPS!!! There is no file to load.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"zhanyang01"},"content":"    public String findTask(String keyword, TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"zhanyang01"},"content":"        assert keyword !\u003d null : \"keyword should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"zhanyang01"},"content":"        assert tasks !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"zhanyang01"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"zhanyang01"},"content":"        output +\u003d tasks.findTaskFromTaskList(keyword);","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"zhanyang01"},"content":"    public String helpList() throws FileNotFoundException {","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"zhanyang01"},"content":"        printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"zhanyang01"},"content":"        File file \u003d new File(\"./HelpList.txt\");","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"zhanyang01"},"content":"        Scanner sc \u003d new Scanner(new FileReader(file));","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"zhanyang01"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"zhanyang01"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(line);","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"zhanyang01"},"content":"            output +\u003d line + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"zhanyang01"},"content":"    public String detailedHelp(int helpNumber) {","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"zhanyang01"},"content":"        String correctExample \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"zhanyang01"},"content":"        switch (helpNumber) {","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"zhanyang01"},"content":"            case 1:","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d \"todo \u003ctask name\u003e : add a todo task to the list\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"zhanyang01"},"content":"                correctExample +\u003d \"Example: todo read book\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d correctExample;","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"zhanyang01"},"content":"            case 2:","lastModifiedDate":"2023-09-12"},{"lineNumber":154,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d \"deadline \u003ctask name\u003e /by \u003cend time\u003e : add a deadline task to the list\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"zhanyang01"},"content":"                correctExample +\u003d \"Example: deadline return book /by 2pm\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d correctExample;","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"zhanyang01"},"content":"            case 3:","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d \"event \u003ctask name\u003e /from \u003cstart time\u003e /to \u003cend time\u003e : add an event task to the list\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"zhanyang01"},"content":"                correctExample +\u003d \"Example: event project meeting /from 2pm /to 4pm\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d correctExample;","lastModifiedDate":"2023-09-12"},{"lineNumber":162,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"zhanyang01"},"content":"            case 4:","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d \"list : list out all the tasks in the list\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":165,"author":{"gitId":"zhanyang01"},"content":"                correctExample +\u003d \"Example: list\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":166,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d correctExample;","lastModifiedDate":"2023-09-12"},{"lineNumber":167,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":168,"author":{"gitId":"zhanyang01"},"content":"            case 5:","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d \"mark \u003ctask number\u003e : mark the task as done\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"zhanyang01"},"content":"                correctExample +\u003d \"Example: mark 1\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d correctExample;","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"zhanyang01"},"content":"            case 6:","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d \"unmark \u003ctask number\u003e : unmark the task as done\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"zhanyang01"},"content":"                correctExample +\u003d \"Example: unmark 1\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d correctExample;","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"zhanyang01"},"content":"            case 7:","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d \"delete \u003ctask number\u003e : delete the task from the list\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":180,"author":{"gitId":"zhanyang01"},"content":"                correctExample +\u003d \"Example: delete 1\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d correctExample;","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"zhanyang01"},"content":"            case 8:","lastModifiedDate":"2023-09-12"},{"lineNumber":184,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d \"find \u003ckeyword\u003e : find the task with the keyword\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"zhanyang01"},"content":"                correctExample +\u003d \"Example: find book\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d correctExample;","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"zhanyang01"},"content":"            case 9:","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d \"bye : end the program\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"zhanyang01"},"content":"                correctExample +\u003d \"Correct: bye\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d correctExample;","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"zhanyang01"},"content":"            default:","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d \"Please enter a valid number from 1 to 9\";","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"zhanyang01":199}},{"path":"src/main/java/duke/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.exception.EmptyDetailsOfTaskError;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"    private String command;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the AddTaskCommand object","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    public AddTaskCommand(String command) {","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     * Execute the AddTaskCommand and returns a string","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"            throws EmptyDetailsOfTaskError, UnknownCommandException {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"            Task currentTask \u003d Task.createTask(command);","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"            tasks.addTask(currentTask);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"            output +\u003d ui.addTask(currentTask, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"        } catch (EmptyDetailsOfTaskError e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"            output +\u003d e.getMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"            output +\u003d e.getMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":43}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the ByeCommand object","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * Execute the ByeCommand and returns a string","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"            output \u003d \"OOPS!!! There is no file to save.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(\"OOPS!!! There is no file to save.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"        output +\u003d ui.bye();","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":36}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":" * List of all possible commands, used the idea of enums to list","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":" * all the possible commands","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    boolean isExit;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the Commands abstract class","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"    public Command() {","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     * Checks if the command is to exit the program","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     * @return a boolean, true if it is to exit the program and false if it is not","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        return this.isExit;","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"     * Execute command based on the command given","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"     * @param tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"     * @param ui","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"     * @param storage","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"     * @return a String that is the output of the command","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"     * @throws Throwable","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws Throwable;","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":40}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the DeleteCommand object","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * Execute the DeleteCommand and returns a string","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        output +\u003d ui.deleteTask(tasks, taskNumber);","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":29}},{"path":"src/main/java/duke/commands/DetailedHelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"public class DetailedHelpCommand extends HelpCommand {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"    private int helpNumber;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"     * Constructor for DetailedHelpCommand object","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"    public DetailedHelpCommand(int helpNumber) {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"        this.helpNumber \u003d helpNumber;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * Executes the command to print out the sample data for the user to learn","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        output +\u003d ui.detailedHelp(helpNumber);","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":29}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"    private String keyword;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the FindCommand object","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * Execute the FindCommand and returns a string","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        output +\u003d ui.findTask(keyword, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":29}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"     * Constructor for HelpCommand object","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    public HelpCommand() {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * Executes the command to print out the help message","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws FileNotFoundException {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"        return ui.helpList();","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":27}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the ListCommand object","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"     * Execute the ListCommand and returns a string","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"        ui.printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"        output +\u003d tasks.printList();","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":28}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.exception.WrongMarkException;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the MarkCommand object","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * Execute the MarkCommand and returns a string","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws WrongMarkException {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"            if (!task.isItDone()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"                task.setAsDone();","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d ui.markTask(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"            } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"                ui.printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"                throw new WrongMarkException(\"This task is already done.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"            ui.printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"            output +\u003d \"OOPS!!! Must choose something to mark.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(\"OOPS!!! Must choose something to mark.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"            ui.printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"            output +\u003d \"OOPS!!! You chose air.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(\"OOPS!!! You chose air.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":48}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.commands;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.exception.WrongMarkException;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the UnMarkCommand object","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * Execute the UnMarkCommand and returns a string","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws WrongMarkException {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"            if (task.isItDone()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"                task.setAsUndone();","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d ui.unMarkTask(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"            } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"                ui.printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"                throw new WrongMarkException(\"This task is not done yet.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"            ui.printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"            output +\u003d \"OOPS!!! Must choose something to unmark.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(\"OOPS!!! Must choose something to unmark.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"            ui.printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"            output +\u003d \"OOPS!!! You chose air.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(\"OOPS!!! You chose air.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":48}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.exception;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":" * Exceptions of Duke object, errors which duke is likely to encounter and what","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":" * is done","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":" * to catch and deal with the errors","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"public class DukeException extends Throwable {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the duke class","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"     * @param message is the message that the bot returns when encountering the","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"     *                error","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * Message given by the bot when encountering them","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     * @return a string containing the messgae","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"        return String.format(\"OOPS!!! %s\", super.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zhanyang01":30}},{"path":"src/main/java/duke/exception/EmptyDetailsOfTaskError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.exception;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":" * Subclass of dukeException","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":" *","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"public class EmptyDetailsOfTaskError extends DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the EmptyDetailsOfTaskError","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"     * @param message is the message given by the bot when encountering","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"     *                the error in which the task do not have","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"     *                any details","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"    public EmptyDetailsOfTaskError(String message) {","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"        super(message);","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":18}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.exception;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":" * Subclass of dukeException","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":" *","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the UnknownCommandException used to allow the bot","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"     * to catch error when a random command is given","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"     * @param message is the message given when random commands are given","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"        super(message);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"zhanyang01":17}},{"path":"src/main/java/duke/exception/WrongMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.exception;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":" * Subclass of the DukeException class","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":" *","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"public class WrongMarkException extends DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the WrongMarkException class, used to deal with","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"     * errors when command is given to mark a marked task and unmark a task","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"     * that is not marked yet","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"     * @param message is the message given when you mark a task that is not","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"     *                marked yet","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    public WrongMarkException(String message) {","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"        super(message);","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":19}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":" * the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"     * right.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"zhanyang01":63}},{"path":"src/main/java/duke/gui/DukeKing.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"public class DukeKing extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    private Duke duke \u003d new Duke(\"dataTasks.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeKing.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"            stage.setTitle(\"DukeKing\");","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"zhanyang01":34}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"        Application.launch(DukeKing.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"zhanyang01":9}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"                DialogBox.getDukeDialog(Ui.welcome(), dukeImage));","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"        if (response.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"            delay.play();","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"zhanyang01":65}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import duke.FormatterDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":" * is a subclass of the task object","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    protected String end;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of deadLine","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"     * @param description is the name of the deadline","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * @param originalEnd is the end date of the deadline","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"    public Deadlines(String description, String originalEnd) {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"        super(description);","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"        this.end \u003d originalEnd;","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"        this.date \u003d Task.convertDatePlease(originalEnd);","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"            DateTimeFormatter stringFormatter \u003d FormatterDate.basicOutput.formatter;","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"            this.end \u003d date.format(stringFormatter);","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"     * String of the deadLine object","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"     * @return a string","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"    public String toString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"        return String.format(","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"                \"| D |%s (by: %s)\", super.toString(), end);","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":41}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import duke.FormatterDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":" * a subclass of a task object","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    protected String start;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    protected String end;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the event class","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * @param description   is the description of the event","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * @param originalStart is the start date of the event","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     * @param originalEnd   is the end date of the event","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"    public Events(String description, String originalStart, String originalEnd) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        this.start \u003d originalStart;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        this.startDate \u003d Task.convertDatePlease(originalStart);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"        this.end \u003d originalEnd;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"        this.endDate \u003d Task.convertDatePlease(originalEnd);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"            DateTimeFormatter stringFormatter \u003d FormatterDate.basicOutput.formatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"            this.start \u003d startDate.format(stringFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"        if (endDate !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"            DateTimeFormatter stringFormatter \u003d FormatterDate.basicOutput.formatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"            this.end \u003d endDate.format(stringFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"     * string of the event object","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"     * @return a string","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"        return String.format(","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"                \"| E |%s (from: %s to: %s)\", super.toString(), start, end);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zhanyang01":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import duke.FormatterDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import duke.exception.EmptyDetailsOfTaskError;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":" * SuperClass of task to be implemented such as todo, deadLine and event","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"     * Constructor of the task object","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * @param description is the details of the task given","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"     * Checks if the task is done","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"     * @return a boolean, true if it is done and false if it is not done","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"    public boolean isItDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"        return isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"     * Gets the status icons that is recorded in the taskList when the","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"     * task is done","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"     * @return a String which is \"x\" if it is done and \" \" if it is not done","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"        return (isDone ? \"x\" : \" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"     * Changes a task to be done","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"    public void setAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"     * Changes a task to be not done","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"    public void setAsUndone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"     * To create a task without letting classes at higher level know the type of","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"     * task to be created, basically making use of polymorphism.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"     * @param description takes in a string which is the details of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"     * @return a Task","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"     * @throws EmptyDetailsOfTaskError is thrown when there is no description","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"zhanyang01"},"content":"     *                                 for the task","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"zhanyang01"},"content":"     * @throws UnknownCommandException is thrown when the command is not","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"zhanyang01"},"content":"     *                                 recognised by the user","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"zhanyang01"},"content":"    public static Task createTask(String description) throws EmptyDetailsOfTaskError, UnknownCommandException {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"        assert description !\u003d null : \"description should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"        String[] splittedDescription \u003d description.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"        String commandName \u003d splittedDescription[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"zhanyang01"},"content":"        boolean isTodo \u003d commandName.equals(\"todo\");","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"zhanyang01"},"content":"        boolean isDeadline \u003d commandName.equals(\"deadline\");","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"zhanyang01"},"content":"        boolean isEvent \u003d commandName.equals(\"event\");","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"zhanyang01"},"content":"        boolean isTask \u003d isTodo || isDeadline || isEvent;","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"zhanyang01"},"content":"        boolean isInvalidTask \u003d isTask \u0026\u0026 splittedDescription.length \u003d\u003d 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"zhanyang01"},"content":"        boolean isValidTodo \u003d isTodo \u0026\u0026 splittedDescription.length !\u003d 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"zhanyang01"},"content":"        boolean notEmptyDeadline \u003d isDeadline \u0026\u0026 splittedDescription.length !\u003d 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"zhanyang01"},"content":"        boolean notEmptyEvent \u003d isEvent \u0026\u0026 splittedDescription.length !\u003d 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"zhanyang01"},"content":"        if (isValidTodo) {","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"zhanyang01"},"content":"            String taskDescription \u003d splittedDescription[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"zhanyang01"},"content":"            return new Todo(taskDescription);","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"zhanyang01"},"content":"        } else if (notEmptyDeadline) {","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"zhanyang01"},"content":"            String[] splittedTask \u003d splittedDescription[1].split(\" /by \");","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"zhanyang01"},"content":"            if (splittedTask.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"zhanyang01"},"content":"                throw new EmptyDetailsOfTaskError(\"The end of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"zhanyang01"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"zhanyang01"},"content":"            String taskName \u003d splittedTask[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"zhanyang01"},"content":"            String end \u003d splittedTask[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"zhanyang01"},"content":"            return new Deadlines(taskName, end);","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"zhanyang01"},"content":"        } else if (notEmptyEvent) {","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"zhanyang01"},"content":"            String[] splitStart \u003d splittedDescription[1].split(\" /from \");","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"zhanyang01"},"content":"            if (splitStart.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"zhanyang01"},"content":"                throw new EmptyDetailsOfTaskError(\"The start of a event cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"zhanyang01"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"zhanyang01"},"content":"            String[] splitEnd \u003d splitStart[1].split(\" /to \");","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"zhanyang01"},"content":"            if (splitEnd.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"zhanyang01"},"content":"                throw new EmptyDetailsOfTaskError(\"The end of a event cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"zhanyang01"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"zhanyang01"},"content":"            String taskName \u003d splitStart[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"zhanyang01"},"content":"            String start \u003d splitEnd[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"zhanyang01"},"content":"            String end \u003d splitEnd[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"zhanyang01"},"content":"            return new Events(taskName, start, end);","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"zhanyang01"},"content":"        } else if (isInvalidTask) {","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"zhanyang01"},"content":"            throw new EmptyDetailsOfTaskError(\"The description of a \" + commandName + \" cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"zhanyang01"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"zhanyang01"},"content":"            throw new UnknownCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-C\");","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"zhanyang01"},"content":"     * Takes in the string of the task that is saved in the previously","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"zhanyang01"},"content":"     * saved file and returns a task to be added back into the taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"zhanyang01"},"content":"     * @param data is the string of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"zhanyang01"},"content":"     * @return a Task to be added into the taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"zhanyang01"},"content":"    public static Task createTaskFromSavedData(String data) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"zhanyang01"},"content":"        assert data !\u003d null : \"data should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"zhanyang01"},"content":"        String taskType \u003d data.substring(2, 3);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"zhanyang01"},"content":"        String taskStatus \u003d data.substring(6, 7);","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"zhanyang01"},"content":"        String taskDescription \u003d data.substring(10);","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"zhanyang01"},"content":"        Task currentTask \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"zhanyang01"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"zhanyang01"},"content":"            currentTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"zhanyang01"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"zhanyang01"},"content":"            String[] splittedData \u003d taskDescription.split(Pattern.quote(\" (by: \"));","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"zhanyang01"},"content":"            String taskEnd \u003d splittedData[1].replace(\")\", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"zhanyang01"},"content":"            currentTask \u003d new Deadlines(splittedData[0], taskEnd);","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"zhanyang01"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"zhanyang01"},"content":"            String[] splittedData \u003d taskDescription.split(Pattern.quote(\" (from: \"));","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"zhanyang01"},"content":"            String[] splittedDetails \u003d splittedData[1].split(Pattern.quote(\" to: \"));","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"zhanyang01"},"content":"            String taskStart \u003d splittedDetails[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"zhanyang01"},"content":"            String taskEnd \u003d splittedDetails[1].replace(\")\", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"zhanyang01"},"content":"            currentTask \u003d new Events(splittedData[0], taskStart, taskEnd);","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"zhanyang01"},"content":"        if (taskStatus.equals(\"x\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"zhanyang01"},"content":"            currentTask.setAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"zhanyang01"},"content":"        return currentTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"zhanyang01"},"content":"     * Converts the date in the string format to a date in","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"zhanyang01"},"content":"     * the localDate format","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"zhanyang01"},"content":"     * @param sDate is the string of the date","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"zhanyang01"},"content":"     * @return a localDate object","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"zhanyang01"},"content":"    public static LocalDate convertDatePlease(String sDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"zhanyang01"},"content":"        // @@author-zhanyang01-reused","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"zhanyang01"},"content":"        // Reused from m1oojv DateTimeParser.java, LocalDateTime method","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"zhanyang01"},"content":"        // reuse with minor modifications","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"zhanyang01"},"content":"        for (FormatterDate formatterDate : FormatterDate.values()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"zhanyang01"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"zhanyang01"},"content":"                return LocalDate.parse(sDate, formatterDate.formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"zhanyang01"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"zhanyang01"},"content":"                continue;","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"zhanyang01"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(\"Why is it invalid??!!??!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"zhanyang01"},"content":"        return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // @@author","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * toString of a task, basically the string of the task object","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * ","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @return a string of the task object","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return String.format(\" %s | %s\", getStatusIcon(), description);","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zhanyang01":167,"-":13}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":" * TaskList to store all the tasks required for the particular user","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"     * Constructor when taskList is first initially created","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"     * TaskList when the user is not using the bot for the first time","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * Used to start the bot back with the saved data","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * @param sc is used to read the contents in the saved file","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     *           so that the user is able to continue changing","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     *           the taskList such as adding, removing and editing task details","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    public TaskList(Scanner sc) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        super();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"            Task task \u003d Task.createTaskFromSavedData(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"            this.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"     * Add a task into the taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"     * @param task is the task to be added","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"        assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"        this.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"     * Removes a task from a taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"     * @param taskNumber is the order of the task that is in the","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"     *                   taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"     * @return the task to be deleted","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"    public Task deleteTask(int taskNumber) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"        assert taskNumber \u003e 0 : \"taskNumber should be more than 0\";","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"        return this.remove(taskNumber - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"     * Prints out the current taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"    public String printList() {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"        for (int length \u003d 1; length \u003c this.size() + 1; length +\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"            output +\u003d length + \".\" + this.get(length - 1) + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(length + \".\" + this.get(length - 1));","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"zhanyang01"},"content":"    public String findTaskFromTaskList(String keyword) {","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"        assert keyword !\u003d null : \"keyword should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"zhanyang01"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"        for (Task task : this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"zhanyang01"},"content":"                output +\u003d count + \": \" + task + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"zhanyang01"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"zhanyang01"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"zhanyang01"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"zhanyang01":81}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":" * Todo is a subclass of a Task","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":" * Takes in the description and returns a todo","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"        super(description);","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"     * toString method to return the todo object in a string","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"     * @return string for todo","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    public String toString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"        return String.format(\"| T |%s\", super.toString());","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"zhanyang01":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"zhanyang01":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"public class DukeTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"zhanyang01":4}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"        @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"        public void toString_testStringConverstion_correctResult() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"                assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"                                \"| D |   | study cs2103 (by: Dec 01 2023)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"                                new Deadlines(","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"                                                \"study cs2103\", \"2023-12-01\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"                assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"                                \"| D |   | study cs2100 (by: Nov 30 2023)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"                                new Deadlines(","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"                                                \"study cs2100\", \"30/11/2023\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"zhanyang01":21}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.task.Events;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"public class EventTest {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"        @Test","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"        public void toString_testStringConverstion_correctResult() {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"                assertEquals(","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"                                \"| E |   | study cs2103 (from: Aug 14 2023 to: Dec 01 2023)\",","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"                                new Events(","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"                                                \"study cs2103\", \"2023-08-14\", \"2023-12-01\").toString());","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"                assertEquals(","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"                                \"| E |   | play computer games (from: Aug 25 2020 to: Aug 26 2020)\",","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"                                new Events(","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"                                                \"play computer games\", \"25/08/2020\", \"26/08/2020\").toString());","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"zhanyang01":21}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package duke.task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"        @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"        public void toString_testStringConverstion_correctResult() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"                assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"                                \"| T |   | study cs2103\",","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"                                new Todo(","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"                                                \"study cs2103\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"                assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"                                \"| T |   | play computer games\",","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"                                new Todo(","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"                                                \"play computer games\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"zhanyang01":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"hello","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"deadline return book /by 06/06/2023","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"event project meeting /from 08/06/2023 /to 08/06/2023","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"todo join sports club","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"mark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"delete 4","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zhanyang01":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\tasks\\*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\exceptions\\*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhanyang01":4,"-":19}}]
