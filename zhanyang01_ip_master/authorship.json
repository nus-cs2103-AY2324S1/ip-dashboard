[{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"    protected String end;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"    public Deadlines(String description, String end) {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"        return String.format(","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"                \"[D]%s (by: %s)\"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"                , super.toString()","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"                , end","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"        );","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zhanyang01":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"// do not know how to use DukeException as of 22/8/2023","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"    public enum Activity {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"        bye, list, mark, unmark, todo, deadline, event, delete,","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"        // welcome message","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"        String line \u003d \"_\".repeat(40);","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"        String name \u003d \"DukeKing\";","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"        String welcome \u003d \"\\nHello! I\u0027m \" + name + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(line + welcome + \"\\n\" + line);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"        // setting up","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"        String string \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"        //looping in the program","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"            // end the program","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"            if (string.equals(Activity.bye.name())) {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"                // reading the list","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"            } else if (string.equals(Activity.list.name())) {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"                    System.out.println(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"                    printList(list);","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"                // marking the task to the list","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"            } else if (string.startsWith(Activity.mark.name())) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"                    String[] splittedInput \u003d string.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"                    int taskNumber \u003d Integer.parseInt(splittedInput[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"                    if (!list.get(taskNumber - 1).isDone) {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"                        list.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"                        String markingTask \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"                        output \u003d String.format(\"%s\\n%s\\n%s\", line, markingTask, list.get(taskNumber - 1));","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"                        System.out.println(output);","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"                    } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"                        output \u003d String.format(\"%s\\n%s\\n%s\", line, \"This task is already done\");","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"                        System.out.println(output);","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"                    System.out.println(line + \"\\nOOPS!!! Must choose something to unmark.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"                    System.out.println(line + \"\\nOOPS!!! You chose air.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"                // unmarking the task from the list","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"            } else if (string.startsWith(Activity.unmark.name())) {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"                    String[] splittedInput \u003d string.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"                    int taskNumber \u003d Integer.parseInt(splittedInput[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"                    if (list.get(taskNumber - 1).isDone) {","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"                        list.get(taskNumber - 1).markAsUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"                        String unMarkingTask \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"                        output \u003d String.format(\"%s\\n%s\\n%s\", line, unMarkingTask, list.get(taskNumber - 1));","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"                        System.out.println(output);","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"                    } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"                        output \u003d String.format(\"%s\\n%s\\n%s\", line, \"This task is not done yet\");","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"                        System.out.println(output);","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"                    System.out.println(line + \"\\nOOPS!!! Must choose something to unmark.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"zhanyang01"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"zhanyang01"},"content":"                    System.out.println(line + \"\\nOOPS!!! You chose air.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"zhanyang01"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"                // if task is a todo","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"zhanyang01"},"content":"            } else if (string.startsWith(Activity.todo.name())) {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"                String addingTask \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"                int noOfTask \u003d list.size() + 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"                String numberOfTask \u003d \"Now you have \" + noOfTask + \" tasks in the list.\";","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"zhanyang01"},"content":"                String[] splittedInput \u003d string.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"zhanyang01"},"content":"                if (splittedInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"zhanyang01"},"content":"                    System.out.println(line + \"\\nOOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"zhanyang01"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"zhanyang01"},"content":"                    String task \u003d string.replace(\"todo \", \"\");","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"zhanyang01"},"content":"                    Task currentTask \u003d new Todo(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"zhanyang01"},"content":"                    list.add(currentTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"zhanyang01"},"content":"                    output \u003d String.format(\"%s\\n%s\\n  %s\\n%s\", line, addingTask, currentTask, numberOfTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"zhanyang01"},"content":"                    System.out.println(output);","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"zhanyang01"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"zhanyang01"},"content":"                // if task is a dateline","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"zhanyang01"},"content":"            } else if (string.startsWith(Activity.deadline.name())) {","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"zhanyang01"},"content":"                String addingTask \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"zhanyang01"},"content":"                int noOfTask \u003d list.size() + 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"zhanyang01"},"content":"                String numberOfTask \u003d \"Now you have \" + noOfTask + \" tasks in the list.\";","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"zhanyang01"},"content":"                String[] splittedInput \u003d string.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"zhanyang01"},"content":"                if (splittedInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"zhanyang01"},"content":"                    System.out.println(line + \"\\nOOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"zhanyang01"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"zhanyang01"},"content":"                    String task \u003d string.replace(\"deadline \", \"\");","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"zhanyang01"},"content":"                    String[] splittedTask \u003d task.split(\" /by \");","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"zhanyang01"},"content":"                    if (splittedTask.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"zhanyang01"},"content":"                        System.out.println(line + \"\\nOOPS!!! The deadline of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"zhanyang01"},"content":"                    } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"zhanyang01"},"content":"                        String taskName \u003d splittedTask[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"zhanyang01"},"content":"                        String end \u003d splittedTask[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"zhanyang01"},"content":"                        Task currentTask \u003d new Deadlines(taskName, end);","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"zhanyang01"},"content":"                        list.add(currentTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"zhanyang01"},"content":"                        output \u003d String.format(\"%s\\n%s\\n  %s\\n%s\", line, addingTask, currentTask, numberOfTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"zhanyang01"},"content":"                        System.out.println(output);","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"zhanyang01"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"zhanyang01"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"zhanyang01"},"content":"                // if task is an event","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"zhanyang01"},"content":"            } else if (string.startsWith(Activity.event.name())) {","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"zhanyang01"},"content":"                String addingTask \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"zhanyang01"},"content":"                int noOfTask \u003d list.size() + 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"zhanyang01"},"content":"                String numberOfTask \u003d \"Now you have \" + noOfTask + \" tasks in the list.\";","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"zhanyang01"},"content":"                String[] splittedInput \u003d string.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"zhanyang01"},"content":"                if (splittedInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"zhanyang01"},"content":"                    System.out.println(line + \"\\nOOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"zhanyang01"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"zhanyang01"},"content":"                    String task \u003d string.replace(\"event \", \"\");","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"zhanyang01"},"content":"                    String[] splitStart \u003d task.split(\" /from \");","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"zhanyang01"},"content":"                    if (splitStart.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"zhanyang01"},"content":"                        System.out.println(line + \"\\nOOPS!!! The start of a event cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"zhanyang01"},"content":"                    } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"zhanyang01"},"content":"                        String taskName \u003d splitStart[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"zhanyang01"},"content":"                        String[] splitEnd \u003d splitStart[1].split(\" /to \");","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"zhanyang01"},"content":"                        if (splitEnd.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"zhanyang01"},"content":"                            System.out.println(line + \"\\nOOPS!!! The end of a event cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"zhanyang01"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"zhanyang01"},"content":"                            String start \u003d splitEnd[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"zhanyang01"},"content":"                            String end \u003d splitEnd[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"zhanyang01"},"content":"                            Task currentTask \u003d new Events(taskName, start, end);","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"zhanyang01"},"content":"                            list.add(currentTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"zhanyang01"},"content":"                            output \u003d String.format(\"%s\\n%s\\n  %s\\n%s\", line, addingTask, currentTask, numberOfTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"zhanyang01"},"content":"                            System.out.println(output);","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"zhanyang01"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"zhanyang01"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"zhanyang01"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"zhanyang01"},"content":"            } else if (string.startsWith(Activity.delete.name())) {","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"zhanyang01"},"content":"                String[] splittedInput \u003d string.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"zhanyang01"},"content":"                int taskNumber \u003d Integer.parseInt(splittedInput[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"zhanyang01"},"content":"                System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"zhanyang01"},"content":"                deleteTask(list, taskNumber);","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"zhanyang01"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"zhanyang01"},"content":"                System.out.println(line + \"\\nOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-C\");","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"zhanyang01"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"zhanyang01"},"content":"            string \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(line + \"\\nBye. Hope to see you again soon!\" + \"\\n\" + line);","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"zhanyang01"},"content":"    public static void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"zhanyang01"},"content":"        for (int length \u003d 1; length \u003c list.size() + 1; length +\u003d 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"zhanyang01"},"content":"            System.out.println(length + \".\" + list.get(length - 1));","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"zhanyang01"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e list, int taskNumber) {","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"zhanyang01"},"content":"        String deletingTask \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"zhanyang01"},"content":"        int taskInArray \u003d list.size() - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"zhanyang01"},"content":"        Task removedTask \u003d list.remove(taskNumber - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"zhanyang01"},"content":"        String numberOfTask \u003d \"Now you have \" + taskInArray + \" tasks in the list.\";","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"zhanyang01"},"content":"        String output \u003d String.format(\"%s\\n  %s\\n%s\", deletingTask, removedTask, numberOfTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"zhanyang01"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhanyang01":160,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zhanyang01":5}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"    protected String start;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"    protected String end;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"    public Events(String description, String start, String end) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"        return String.format(","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"                \"[E]%s (from: %s to: %s)\"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"                , super.toString()","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"                , start","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"                , end","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"        );","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zhanyang01":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"        return (isDone ? \"x\" : \" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zhanyang01":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zhanyang01":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"hello","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"todo join sports club","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"mark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"delete 4","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zhanyang01":15}}]
