[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"lyuanww"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"lyuanww"},"content":"checkstyle {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"lyuanww"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lyuanww":20,"-":42}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"        double width \u003d displayPicture.getFitWidth();","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lyuanww"},"content":"        double height \u003d displayPicture.getFitHeight();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lyuanww"},"content":"        Circle clip \u003d new Circle(width / 2, height / 2, width/2);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"lyuanww"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"lyuanww"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lyuanww"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lyuanww"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"lyuanww"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"lyuanww"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"lyuanww"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"lyuanww"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"lyuanww"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"lyuanww"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"lyuanww"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"lyuanww"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lyuanww":69}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Parser;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":" * Duke is a task management application that allows users to manage tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":" * by adding, marking as done, deleting, and listing tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"    private final String name;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"     * @param name     The name of the Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"     * @param filePath The path to the file used for storing tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"    public Duke(String name, String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"        storage.loadTasks(this.taskList, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"     * Runs the Duke application, handling user input and commands.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"        this.ui.clearOutput();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"        assert this.ui.getOutput().equals(\"\") : \"Output should be empty before processing input\";","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"        Command command \u003d Parser.processInputIntoCommand(input, this.ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"            command.execute(this.taskList, this.storage, this.ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lyuanww"},"content":"        return this.ui.getOutput();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"lyuanww"},"content":"     * Returns the name of the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"lyuanww"},"content":"     * @return The name of the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"lyuanww"},"content":"    public String getName() {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lyuanww"},"content":"        return this.name;","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lyuanww":53,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":" * Represents an exception specific to Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"     * Constructs a DukeException object.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lyuanww":16}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lyuanww":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"    private Duke duke \u003d new Duke(\"Duke\", \"data/duke.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lyuanww":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"                DialogBox.getDukeDialog(\"Hello!\\nHow can I help you?\" , dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lyuanww"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"lyuanww"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"lyuanww"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"lyuanww"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"lyuanww"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"lyuanww"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lyuanww"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lyuanww"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"lyuanww"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"lyuanww"},"content":"        if (response.equals(\"\\nBye. Hope to see you again soon!\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"lyuanww"},"content":"            PauseTransition wait \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"lyuanww"},"content":"            wait.setOnFinished((e) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"lyuanww"},"content":"                Stage stage \u003d (Stage) sendButton.getScene().getWindow();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"lyuanww"},"content":"                stage.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"lyuanww"},"content":"            });","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"lyuanww"},"content":"            wait.play();","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"lyuanww"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lyuanww":69}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.command;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" * Represents a command to add a new task to the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"     * Creates a new AddCommand with the specified task description.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     * @param taskDescription The description of the task to be added.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"    public AddCommand(String taskDescription) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"        taskList.addTask(this.taskDescription, storage, ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lyuanww":27}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.command;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" * Represents a command that can be executed by the Duke application.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"     * Executes the command with the provided TaskList, Storage, and Ui objects.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"     * @param taskList The TaskList containing the task data.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"     * @param storage  The Storage object responsible for saving and loading data.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     * @param ui       The Ui object responsible for user interface interactions.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"    public abstract void execute(TaskList taskList, Storage storage, Ui ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lyuanww":20}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.command;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"     * Creates a new DeleteCommand with the specified task number.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     * @param taskNumber The number of the task to be deleted.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"        taskList.deleteTask(this.taskNumber, storage, ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lyuanww":27}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"        ui.printMessage(\"\\nBye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lyuanww":13}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.command;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" * Represents a command to find tasks that match a given keyword in the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"     * Creates a new FindCommand with the specified keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"        taskList.findTasks(this.keyword, ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lyuanww":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.command;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"        taskList.showAllTasks(ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lyuanww":16}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.command;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"     * Creates a new MarkCommand with the specified task number.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"     * @param taskNumber The number of the task to be marked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"        taskList.markTaskAsDone(this.taskNumber, storage, ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lyuanww":26}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.command;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" * Represents a command to unmark a task as done in the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"     * Creates a new UnmarkCommand with the specified task number.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"     * @param taskNumber The number of the task to be unmarked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"        taskList.unmarkTaskAsDone(this.taskNumber, storage, ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lyuanww":26}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.DateParser;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     * @param by   The deadline of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"        this.by \u003d DateParser.convertStringToDateTime(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"     * Converts the Deadline object to its string representation.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"     * @return The string representation of the Deadline object.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateParser.convertDateTimeToString(this.by) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"     * Converts the Deadline object to a formatted string for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"     * @return The formatted string for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"    public String convertTaskToStorageFormat() {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"        return \"D | \" + (super.getIsDone() ? \"1\" : \"0\") + \" | \" + super.getName() + \" | \"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"                + DateParser.convertDateTimeToString(this.by);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lyuanww":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.DateParser;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" * Represents an event task with a specified start and end time.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"     * Constructs an Event object.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     * @param name The name or description of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"     * @param to   The end time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"        this.from \u003d DateParser.convertStringToDateTime(from);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"        this.to \u003d DateParser.convertStringToDateTime(to);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"     * Converts the Event object to its string representation.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"     * @return The string representation of the Event object.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + DateParser.convertDateTimeToString(this.from) + \" to: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"                + DateParser.convertDateTimeToString(this.to) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"     * Converts the Event object to a formatted string for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"     * @return The formatted string for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"    public String convertTaskToStorageFormat() {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"lyuanww"},"content":"        return \"E | \" + (super.getIsDone() ? \"1\" : \"0\") + \" | \" + super.getName() + \" | \"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"lyuanww"},"content":"                + DateParser.convertDateTimeToString(this.from) + \" | \" + DateParser.convertDateTimeToString(this.to);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lyuanww":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":" * Represents a task that can be marked as done or undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"    private final String name;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"     * Constructs a Task object with a specified name.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"     * Marks the task as done and optionally displays a message.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"     * @param willDisplayMessage Whether to display a message indicating the task was marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"    public void markAsDone(boolean willDisplayMessage, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"        if (willDisplayMessage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage(\"\\nNice! I\u0027ve marked this task as done:\\n  \" + this + \"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"     * Unmarks the task as done and optionally displays a message.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"     * @param willDisplayMessage Whether to display a message indicating the task was marked as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"    public void unmarkAsDone(boolean willDisplayMessage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"        if (willDisplayMessage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"            System.out.println(\"\\nNice! I\u0027ve unmarked this task as done:\\n  \" + this + \"\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"lyuanww"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"lyuanww"},"content":"        char markDone \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"lyuanww"},"content":"        return \"[\" + markDone + \"] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"lyuanww"},"content":"    public String getName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"lyuanww"},"content":"        return this.name;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"lyuanww"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"lyuanww"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"lyuanww"},"content":"     * Converts the task into a formatted string for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"lyuanww"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"lyuanww"},"content":"    public abstract String convertTaskToStorageFormat();","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lyuanww":68}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" * Represents a list of tasks and provides methods to manage tasks within the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"     * Adds a task to the list based on the task description.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"     * @param storage         The storage handler to save the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"     * @param ui              The user interface for displaying messages.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"    public void addTask(String taskDescription, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"        Task task;","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"        String[] taskInformation \u003d taskDescription.split(\" /\");","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"        String taskName \u003d taskInformation[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"        if (taskInformation.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"            task \u003d new ToDo(taskName);","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"        } else if (taskInformation.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"            task \u003d new Deadline(taskName, taskInformation[1].replace(\"by \", \"\"));","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"        } else if (taskInformation.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"            task \u003d new Event(taskName, taskInformation[1].replace(\"from \", \"\"), taskInformation[2].replace(\"to \", \"\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage(\"Invalid task format\");","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"        storage.saveTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n  \" + task + \"\\nNow you have \" + this.tasks.size()","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"                + \" task(s) in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"lyuanww"},"content":"     * Adds a task directly to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"lyuanww"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"lyuanww"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"lyuanww"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"lyuanww"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"lyuanww"},"content":"     * Deletes a task from the list based on the task number.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"lyuanww"},"content":"     * @param taskNumber The number of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"lyuanww"},"content":"     * @param storage    The storage handler to remove the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"lyuanww"},"content":"     * @param ui         The user interface for displaying messages.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"lyuanww"},"content":"    public void deleteTask(int taskNumber, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"lyuanww"},"content":"        if (taskNumber \u003e this.tasks.size() || taskNumber \u003c 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage(\"Task number does not exist\");","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"lyuanww"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"lyuanww"},"content":"        Task task \u003d this.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"lyuanww"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"lyuanww"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"lyuanww"},"content":"        storage.deleteTask(taskNumber, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"lyuanww"},"content":"        ui.printMessage(\"Noted. I\u0027ve removed this task:\\n  \" + task + \"\\nNow you have \" + this.tasks.size()","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"lyuanww"},"content":"                + \" task(s) in the list.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"lyuanww"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"lyuanww"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"lyuanww"},"content":"    public void showAllTasks(Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"lyuanww"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage(\"You have no tasks in your list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"lyuanww"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"lyuanww"},"content":"        ui.printMessage(\"\\nHere are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"lyuanww"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage( (i+1)  + \".\" + this.tasks.get(i) + \"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"lyuanww"},"content":"        ui.printMessage(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"lyuanww"},"content":"     * Marks a task as done based on the task number.","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"lyuanww"},"content":"     * @param taskNumber The number of the task to be marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"lyuanww"},"content":"     * @param storage    The storage handler to update the task status.","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"lyuanww"},"content":"     * @param ui         The user interface for displaying messages.","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"lyuanww"},"content":"    public void markTaskAsDone(int taskNumber, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"lyuanww"},"content":"        if (taskNumber \u003e this.tasks.size() || taskNumber \u003c 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage(\"Task number does not exist\");","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"lyuanww"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"lyuanww"},"content":"        Task task \u003d this.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"lyuanww"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"lyuanww"},"content":"        task.markAsDone(true, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"lyuanww"},"content":"        storage.modifyTask(taskNumber, task);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"lyuanww"},"content":"     * Marks a task as not done (undone) based on the task number.","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"lyuanww"},"content":"     * @param taskNumber The number of the task to be marked as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"lyuanww"},"content":"     * @param storage    The storage handler to update the task status.","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"lyuanww"},"content":"     * @param ui         The user interface for displaying messages.","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"lyuanww"},"content":"    public void unmarkTaskAsDone(int taskNumber, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"lyuanww"},"content":"        if (taskNumber \u003e this.tasks.size() || taskNumber \u003c 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage(\"Task number does not exist\");","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"lyuanww"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"lyuanww"},"content":"        Task task \u003d this.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"lyuanww"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"lyuanww"},"content":"        task.unmarkAsDone(true);","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"lyuanww"},"content":"        storage.modifyTask(taskNumber, task);","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"lyuanww"},"content":"     * Finds tasks that match a given keyword and displays them.","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"lyuanww"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"lyuanww"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"lyuanww"},"content":"    public void findTasks(String keyword, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"lyuanww"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"lyuanww"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"lyuanww"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"lyuanww"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"lyuanww"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"lyuanww"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"lyuanww"},"content":"            System.out.println();","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage(\"No matching tasks found.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"lyuanww"},"content":"            return;","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"lyuanww"},"content":"        ui.printMessage(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"lyuanww"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage(i + 1 + \".\" + foundTasks.get(i));","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"lyuanww"},"content":"        ui.printMessage(\"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"lyuanww"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"lyuanww"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"lyuanww"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"lyuanww"},"content":"        return this.tasks.get(taskNumber);","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"lyuanww":169}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":" * Represents a task without any specific due date or time.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"     * Constructs a ToDo object.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     * Converts the ToDo object to its string representation.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"     * @return The string representation of the ToDo object.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"     * Converts the ToDo object to a formatted string for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"     * @return The formatted string for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"    public String convertTaskToStorageFormat() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"        return \"T | \" + (super.getIsDone() ? \"1\" : \"0\") + \" | \" + super.getName();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lyuanww":34}},{"path":"src/main/java/duke/utility/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.utility;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" * A utility class for parsing and formatting date and time strings.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"public class DateParser {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"     * Converts a date and time string to a LocalDateTime object.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"     * @param datetime The date and time string to be converted.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"    public static LocalDateTime convertStringToDateTime(String datetime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"            return LocalDateTime.parse(datetime, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"            System.out.println(\"Invalid date format. Please enter in the format 01-01-2001 01:01\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"     * Converts a LocalDateTime object to a formatted date and time string.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"     * @param datetime The LocalDateTime object to be converted.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"     * @return A formatted date and time string.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"    public static String convertDateTimeToString(LocalDateTime datetime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"        return datetime.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lyuanww":39}},{"path":"src/main/java/duke/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.utility;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":" * A utility class for parsing and validating user commands in the Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"     * Processes user input into a corresponding command object.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"     * @param input The user\u0027s input as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"     * @param ui    The user interface for displaying messages.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"     * @return A command object based on the user\u0027s input, or null if input is invalid.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    public static Command processInputIntoCommand(String input, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"        String command \u003d inputArr[0];","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"            switch (command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"            case \"list\":","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"                return new ListCommand();","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"                int markTaskNumber \u003d Parser.parseInt(inputArr[1]);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"                return new MarkCommand(markTaskNumber);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"                int unmarkTaskNumber \u003d Parser.parseInt(inputArr[1]);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"                return new UnmarkCommand(unmarkTaskNumber);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"                String todoDescription \u003d Parser.validateToDoCommand(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"                return new AddCommand(todoDescription);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"                String deadlineDescription \u003d Parser.validateDeadlineCommand(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lyuanww"},"content":"                return new AddCommand(deadlineDescription);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lyuanww"},"content":"            case \"event\":","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"                String eventDescription \u003d Parser.validateEventCommand(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lyuanww"},"content":"                return new AddCommand(eventDescription);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"lyuanww"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lyuanww"},"content":"                int deleteTaskNumber \u003d Parser.parseInt(inputArr[1]);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"lyuanww"},"content":"                return new DeleteCommand(deleteTaskNumber);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lyuanww"},"content":"            case \"find\":","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lyuanww"},"content":"                String keyword \u003d input.replace(\"find\", \"\").trim();","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lyuanww"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"lyuanww"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"lyuanww"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"lyuanww"},"content":"            default:","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"lyuanww"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"lyuanww"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"lyuanww"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"lyuanww"},"content":"        return null;","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"lyuanww"},"content":"     * Validates and extracts the description from a todo command.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"lyuanww"},"content":"     * @param input The user input containing the todo command.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"lyuanww"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"lyuanww"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"lyuanww"},"content":"    public static String validateToDoCommand(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"lyuanww"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"lyuanww"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"lyuanww"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"lyuanww"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"lyuanww"},"content":"        return input.replace(\"todo\", \"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"lyuanww"},"content":"     * Validates and extracts the description and deadline from a deadline command.","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"lyuanww"},"content":"     * @param input The user input containing the deadline command.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"lyuanww"},"content":"     * @return The description of the deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"lyuanww"},"content":"     * @throws DukeException If the format is invalid or the description is empty.","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"lyuanww"},"content":"    public static String validateDeadlineCommand(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"lyuanww"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"lyuanww"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"lyuanww"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"lyuanww"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"lyuanww"},"content":"        String[] description \u003d input.replace(\"deadline\", \"\").trim().split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"lyuanww"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"lyuanww"},"content":"        if (description.length \u003e 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"lyuanww"},"content":"            for (int i \u003d 0; i \u003c description.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"lyuanww"},"content":"                if (description[i].equals(\"/by\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"lyuanww"},"content":"                    index \u003d i;","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"lyuanww"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"lyuanww"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"lyuanww"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"lyuanww"},"content":"        if (index \u003d\u003d -1 || index \u003d\u003d 0 || index \u003d\u003d description.length - 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"lyuanww"},"content":"            throw new DukeException(\"☹ OOPS!!! The format of a deadline is invalid. \"","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"lyuanww"},"content":"                    + \"Format: deadline \u003ctask name\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"lyuanww"},"content":"        return input.replace(\"deadline\", \"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"lyuanww"},"content":"     * Validates and extracts the description and event timing from an event command.","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"lyuanww"},"content":"     * @param input The user input containing the event command.","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"lyuanww"},"content":"     * @return The description of the event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"lyuanww"},"content":"     * @throws DukeException If the format is invalid or the description is empty.","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"lyuanww"},"content":"    public static String validateEventCommand(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"lyuanww"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"lyuanww"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"lyuanww"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"lyuanww"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"lyuanww"},"content":"        String[] description \u003d input.replace(\"event\", \"\").trim().split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"lyuanww"},"content":"        int fromIndex \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"lyuanww"},"content":"        int toIndex \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"lyuanww"},"content":"        if (description.length \u003e 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"lyuanww"},"content":"            for (int i \u003d 0; i \u003c description.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"lyuanww"},"content":"                if (description[i].equals(\"/from\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"lyuanww"},"content":"                    fromIndex \u003d i;","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"lyuanww"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"lyuanww"},"content":"                if (description[i].equals(\"/to\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"lyuanww"},"content":"                    toIndex \u003d i;","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"lyuanww"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"lyuanww"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"lyuanww"},"content":"        boolean isFromIndexBeforeToIndex \u003d fromIndex \u003c toIndex;","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"lyuanww"},"content":"        boolean isFromIndexValid \u003d fromIndex !\u003d -1 \u0026\u0026 fromIndex !\u003d 0 \u0026\u0026 fromIndex !\u003d description.length - 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"lyuanww"},"content":"        boolean isToIndexValid \u003d toIndex !\u003d -1 \u0026\u0026 toIndex !\u003d 0 \u0026\u0026 toIndex !\u003d description.length - 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"lyuanww"},"content":"        if (!isFromIndexBeforeToIndex || !isFromIndexValid || !isToIndexValid) {","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"lyuanww"},"content":"            throw new DukeException(\"☹ OOPS!!! The format of a event is invalid. Format: event \u003ctask name\u003e \"","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"lyuanww"},"content":"                    + \"/from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"lyuanww"},"content":"        return input.replace(\"event\", \"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"lyuanww"},"content":"     * Parses an integer from a string.","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"lyuanww"},"content":"     * @param input The string to be parsed.","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"lyuanww"},"content":"     * @return The parsed integer, or -1 if parsing fails.","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"lyuanww"},"content":"    public static int parseInt(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"lyuanww"},"content":"            return Integer.parseInt(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"lyuanww"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"lyuanww"},"content":"            System.out.println(\"☹ OOPS!!! Please enter a valid number\");","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"lyuanww"},"content":"            return -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lyuanww":168}},{"path":"src/main/java/duke/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.utility;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":" * A class responsible for loading and saving tasks from and to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"     * @param filePath The path to the file used for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"    private static boolean isValidTaskType(String taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"        return taskType.equals(\"T\") || taskType.equals(\"D\") || taskType.equals(\"E\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"    private static boolean isValidDoneFlag(String doneFlag) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"        return doneFlag.equals(\"0\") || doneFlag.equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"    private static boolean isValidTaskFormat(String taskType, int taskFormatLength) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"        return (taskType.equals(\"T\") \u0026\u0026 taskFormatLength \u003d\u003d 3) || (taskType.equals(\"D\") \u0026\u0026 taskFormatLength \u003d\u003d 4)","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"lyuanww"},"content":"                || (taskType.equals(\"E\") \u0026\u0026 taskFormatLength \u003d\u003d 5);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"lyuanww"},"content":"     * Loads tasks from the file and adds them to the provided TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"lyuanww"},"content":"     * @param taskList The TaskList to which tasks should be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"lyuanww"},"content":"    public void loadTasks(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"lyuanww"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"lyuanww"},"content":"            System.out.println(\"Loading tasks...\");","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"lyuanww"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"lyuanww"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"lyuanww"},"content":"                System.out.println(\"No existing duke.txt found. File created!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"lyuanww"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"lyuanww"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"lyuanww"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"lyuanww"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"lyuanww"},"content":"                validateString(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"lyuanww"},"content":"                Task task \u003d convertStringIntoTask(line, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"lyuanww"},"content":"                taskList.addTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"lyuanww"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"lyuanww"},"content":"            reader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"lyuanww"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"lyuanww"},"content":"            System.out.println(\"An error has occured during file creation. Plese check duke.txt in the data folder\");","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"lyuanww"},"content":"            System.exit(1);","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"lyuanww"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"lyuanww"},"content":"            System.out.println(\"An error has occured during file loading. Plese check duke.txt in the data folder\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"lyuanww"},"content":"            System.exit(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"lyuanww"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"lyuanww"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"lyuanww"},"content":"            System.exit(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"lyuanww"},"content":"        System.out.println(\"Tasks loaded successfully!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"lyuanww"},"content":"     * Converts a data string into a Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"lyuanww"},"content":"     * @param dataString The string containing task data.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"lyuanww"},"content":"     * @return The parsed Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"lyuanww"},"content":"     * @throws DukeException If parsing encounters an error.","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"lyuanww"},"content":"    public Task convertStringIntoTask(String dataString, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"lyuanww"},"content":"        String[] dataArr \u003d dataString.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"lyuanww"},"content":"        String taskType \u003d dataArr[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"lyuanww"},"content":"        boolean isDone \u003d dataArr[1].equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"lyuanww"},"content":"        String taskName \u003d dataArr[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"lyuanww"},"content":"        Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"lyuanww"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"lyuanww"},"content":"        case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"lyuanww"},"content":"            task \u003d new ToDo(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"lyuanww"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"lyuanww"},"content":"        case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"lyuanww"},"content":"            task \u003d new Deadline(taskName, dataArr[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"lyuanww"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"lyuanww"},"content":"        case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"lyuanww"},"content":"            task \u003d new Event(taskName, dataArr[3], dataArr[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"lyuanww"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"lyuanww"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"lyuanww"},"content":"            throw new DukeException(\"Unexpected error\");","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"lyuanww"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"lyuanww"},"content":"            task.markAsDone(false, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"lyuanww"},"content":"        return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"lyuanww"},"content":"     * Validates a data string to ensure its format is correct.","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"lyuanww"},"content":"     * @param dataString The string to be validated.","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"lyuanww"},"content":"     * @throws DukeException If the format is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"lyuanww"},"content":"    public void validateString(String dataString) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"lyuanww"},"content":"        String[] dataArr \u003d dataString.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"lyuanww"},"content":"        int dataLength \u003d dataArr.length;","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"lyuanww"},"content":"        String taskType \u003d dataArr[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"lyuanww"},"content":"        String doneFlag \u003d dataArr[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"lyuanww"},"content":"        if (!isValidTaskType(taskType)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"lyuanww"},"content":"            throw new DukeException(\"Invalid task type\");","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"lyuanww"},"content":"        if (!isValidDoneFlag(doneFlag)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"lyuanww"},"content":"            throw new DukeException(\"Invalid done flag\");","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"lyuanww"},"content":"        if (!isValidTaskFormat(taskType, dataLength)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"lyuanww"},"content":"            throw new DukeException(\"Invalid task format\");","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"lyuanww"},"content":"     * Saves a task to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"lyuanww"},"content":"     * @param task The task to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"lyuanww"},"content":"    public void saveTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"lyuanww"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"lyuanww"},"content":"            java.io.FileWriter fileWriter \u003d new java.io.FileWriter(file, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"lyuanww"},"content":"            fileWriter.write(task.convertTaskToStorageFormat() + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"lyuanww"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"lyuanww"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"lyuanww"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"lyuanww"},"content":"            System.exit(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"lyuanww"},"content":"     * Modifies an existing task in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"lyuanww"},"content":"     * @param taskNumber The index of the task to be modified.","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"lyuanww"},"content":"     * @param newTask    The new task to replace the existing task.","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"lyuanww"},"content":"    public void modifyTask(int taskNumber, Task newTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"lyuanww"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"lyuanww"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"lyuanww"},"content":"            StringBuilder newContents \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"lyuanww"},"content":"            int count \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"lyuanww"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"lyuanww"},"content":"                String dataString \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"lyuanww"},"content":"                if (count \u003d\u003d taskNumber - 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"lyuanww"},"content":"                    newContents.append(newTask.convertTaskToStorageFormat() + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"lyuanww"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"lyuanww"},"content":"                    newContents.append(dataString + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"lyuanww"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"lyuanww"},"content":"                count++;","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"lyuanww"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"lyuanww"},"content":"            scanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"lyuanww"},"content":"            FileWriter fileWriter \u003d new FileWriter(file, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"lyuanww"},"content":"            fileWriter.write(newContents.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"lyuanww"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"lyuanww"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"lyuanww"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"lyuanww"},"content":"            System.exit(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"lyuanww"},"content":"     * Deletes a task from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"lyuanww"},"content":"     * @param taskNumber The index of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"lyuanww"},"content":"    public void deleteTask(int taskNumber, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"lyuanww"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"lyuanww"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"lyuanww"},"content":"            StringBuilder newContents \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"lyuanww"},"content":"            int count \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"lyuanww"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"lyuanww"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"lyuanww"},"content":"                if (count !\u003d taskNumber - 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"lyuanww"},"content":"                    newContents.append(line + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"lyuanww"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"lyuanww"},"content":"                count++;","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"lyuanww"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"lyuanww"},"content":"            FileWriter fileWriter \u003d new FileWriter(file, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"lyuanww"},"content":"            fileWriter.write(newContents.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"lyuanww"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"lyuanww"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"lyuanww"},"content":"            ui.printMessage(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":215,"author":{"gitId":"lyuanww"},"content":"            System.exit(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"lyuanww":220}},{"path":"src/main/java/duke/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.utility;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":" * Handles interaction with the user by providing input and displaying messages.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"    private StringBuilder output;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"        this.output \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"     * Returns the next line of input from the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"     * @return The next line of input from the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"    public String getOutput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"        return this.output.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"     * Clears the output.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"    public void clearOutput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"        this.output \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"     * Prints a message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"        this.output.append(message);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lyuanww":43}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets\u003d\"@dialogBox.css\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lyuanww":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"lyuanww":19}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"import duke.utility.StorageStub;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"    public void setUp() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"        taskList.addTask(\"Buy groceries /by 06-03-2007 13:44\", new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"        assertEquals(1, taskList.getTaskListSize());","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"        taskList.addTask(\"Buy groceries /by 06-03-2007 13:44\", new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"        taskList.deleteTask(1, new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"        assertEquals(0, taskList.getTaskListSize());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"    public void testShowAllTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"        taskList.addTask(\"Buy groceries /by 06-03-2007 13:44\", new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"        taskList.addTask(\"Read book /from 02-09-2022 11:00 /to 02-09-2022 12:00\", new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"        taskList.addTask(\"Go for a walk\", new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"        assertEquals(3, taskList.getTaskListSize());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"        taskList.showAllTasks(ui);","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"        String expectedOutput \u003d \"\\nHere are the tasks in your list:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"                + \"1.[D][ ] Buy groceries (by: 06-03-2007 13:44)\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"                + \"2.[E][ ] Read book (from: 02-09-2022 11:00 to: 02-09-2022 12:00)\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"lyuanww"},"content":"                + \"3.[T][ ] Go for a walk\\n\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"lyuanww"},"content":"        assertEquals(expectedOutput, ui.getOutput());","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"lyuanww"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"lyuanww"},"content":"    public void testMarkTaskAsDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"lyuanww"},"content":"        taskList.addTask(\"Buy groceries /by 06-03-2007 13:44\", new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"lyuanww"},"content":"        taskList.markTaskAsDone(1, new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"lyuanww"},"content":"        assertEquals(true, taskList.getTask(0).getIsDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"lyuanww"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"lyuanww"},"content":"    public void testUnmarkTaskAsDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"lyuanww"},"content":"        taskList.addTask(\"Buy groceries /by 06-03-2007 13:44\", new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"lyuanww"},"content":"        taskList.markTaskAsDone(1, new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"lyuanww"},"content":"        taskList.unmarkTaskAsDone(1, new StorageStub(), new Ui());","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"lyuanww"},"content":"        assertEquals(false, taskList.getTask(0).getIsDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lyuanww":62}},{"path":"src/test/java/duke/utility/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.utility;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"    public void testValidateToDoCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"            String result \u003d Parser.validateToDoCommand(\"todo Buy groceries\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"            assertEquals(\" Buy groceries\", result);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"            fail(\"Unexpected DukeException thrown.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"            Parser.validateToDoCommand(\"todo\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"        });","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"    public void testValidateDeadlineCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"lyuanww"},"content":"            String result \u003d Parser.validateDeadlineCommand(\"deadline Submit report /by 2023-09-01\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"lyuanww"},"content":"            assertEquals(\" Submit report /by 2023-09-01\", result);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"lyuanww"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"lyuanww"},"content":"            fail(\"Unexpected DukeException thrown.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"lyuanww"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"lyuanww"},"content":"            Parser.validateDeadlineCommand(\"deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"lyuanww"},"content":"        });","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"lyuanww"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"lyuanww"},"content":"            Parser.validateDeadlineCommand(\"deadline Submit report /by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"lyuanww"},"content":"        });","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"lyuanww"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"lyuanww"},"content":"            Parser.validateDeadlineCommand(\"deadline Submit report /by2023-09-01\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"lyuanww"},"content":"        });","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"lyuanww"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"lyuanww"},"content":"    public void testValidateEventCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"lyuanww"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"lyuanww"},"content":"            String result \u003d Parser.validateEventCommand(\"event Birthday party /from 2023-09-01 /to 2023-09-02\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"lyuanww"},"content":"            assertEquals(\" Birthday party /from 2023-09-01 /to 2023-09-02\", result);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"lyuanww"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"lyuanww"},"content":"            fail(\"Unexpected DukeException thrown.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"lyuanww"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"lyuanww"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"lyuanww"},"content":"            Parser.validateEventCommand(\"event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"lyuanww"},"content":"        });","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"lyuanww"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"lyuanww"},"content":"            Parser.validateEventCommand(\"event Birthday party /from\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"lyuanww"},"content":"        });","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"lyuanww"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"lyuanww"},"content":"            Parser.validateEventCommand(\"event Birthday party /from 2023-09-01 /to\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"lyuanww"},"content":"        });","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"lyuanww"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"lyuanww"},"content":"            Parser.validateEventCommand(\"event Birthday party /from 2023-09-01 /to 2023-09-02 /from\");","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"lyuanww"},"content":"        });","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"lyuanww"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"lyuanww"},"content":"    public void testParseInt() {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"lyuanww"},"content":"        assertEquals(42, Parser.parseInt(\"42\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"lyuanww"},"content":"        assertEquals(-1, Parser.parseInt(\"not_a_number\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lyuanww":82}},{"path":"src/test/java/duke/utility/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"package duke.utility;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":" * A stub class extending Storage for testing purposes.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":" * This class overrides the saveTask method to do nothing.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"lyuanww"},"content":"     * Creates a new StorageStub with a default file path.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"lyuanww"},"content":"    public StorageStub() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"lyuanww"},"content":"        super(\"data/duke.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"lyuanww"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"lyuanww"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"lyuanww"},"content":"     * Overrides the saveTask method to do nothing.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"lyuanww"},"content":"     * This method is used for testing and does not save tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"lyuanww"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"lyuanww"},"content":"     * @param task The task to be saved (not saved in this stub implementation).","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"lyuanww"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"lyuanww"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"lyuanww"},"content":"    public void saveTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lyuanww"},"content":"        // do nothing","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"lyuanww"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"lyuanww"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lyuanww":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lyuanww"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"lyuanww"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"lyuanww"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"lyuanww"},"content":"todo join sports club","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"lyuanww"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"lyuanww"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lyuanww"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"lyuanww"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"lyuanww"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lyuanww":9}}]
