[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"    mainClass.set(\"glub.Launcher\")","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"    archiveFileName \u003d \u0027glub.jar\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"javafx {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 , \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dylkaw":27,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"# User Guide for Glub","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"Glub is a desktop app for managing tasks in the form of a chat interface.","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"\u003e **NOTE:**","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"\u003e Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"\u003e e.g. in `todo TASK_DESCRIPTION`, `TASK_DESCRIPTION` is a parameter which can be used as `todo homework`","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"### Adding a todo : `todo`","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"Add a todo to your list of tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"**Format:** `todo TASK_DESCRIPTION`","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"**Examples:**","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"* `todo run`","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"### Adding a deadline : `deadline`","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"Add a deadline to your list of tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"**Format:** `deadline DEADLINE_DESCRIPTION /by DATE`","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"* `DATE` must be in **dd-MM-yyyy HHmm** format","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"**Examples:**","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"* `deadline individual project /by 22-09-2023 2359`","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"* `deadline graduate /by 01-01-2026 2359`","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"### Adding an event : `event`","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"Add a deadline to your list of tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"**Format:** `event EVENT_DESCRIPTION /from START_DATE /to END_DATE`","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"* `START_DATE` and `END_DATE` must be in **dd-MM-yyyy HHmm** format","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"**Example:**","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"* `event orientation camp /from 01-08-2023 0900 /to 06-09-2023 1000`","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"* `event party /from 11-11-2023 1900 /to 12-11-2023 0300`","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"### Listing all tasks : `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"Shows a list of all tasks added.","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"**Format:** `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"### Finding a task : `find`","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"Finds a task which contains the search pattern.","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"**Format:** `find SEARCH_PATTERN`","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"**Examples:**","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"* `find run`","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"* `find party`","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"### Deleting a task : `delete`","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"**Format:** `delete TASK_INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"* Deletes the task at the specified `TASK_INDEX`. The `TASK_INDEX` corresponds to the index number shown in the displayed list.","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"* `TASK_INDEX` **must be a positive integer** 1, 2, 3...","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"**Examples:**","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"* `delete 1`","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"* `delete 2`","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"### Marking a task as complete : `mark`","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"Marks a task from the list as complete.","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"**Format:** `mark TASK_INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"* Marks the task at the specified `TASK_INDEX`. The `TASK_INDEX`  corresponds to the index number shown in the displayed list.","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"* `TASK_INDEX` **must be a positive integer** 1, 2, 3...","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"**Examples:**","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"* `mark 1`","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"* `mark 2`","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"### Marking a task as incomplete : `unmark`","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"Marks a task from the list as incomplete.","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"**Format:** `unmark TASK_INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"* Marks the task at the specified `TASK_INDEX`. The `TASK_INDEX`  corresponds to the index number shown in the displayed list.","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"* `TASK_INDEX` **must be a positive integer** 1, 2, 3...","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"**Examples:**","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"* `unmark 1`","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"* `unmark 2`","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"### Tagging a task : `tag`","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"Add a tag to a task in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"**Format:** `tag TASK_INDEX TAG`","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"* Tags the task at the specified `TASK_INDEX` with the `TAG` provided.","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"* `TASK_INDEX` **must be a positive integer** 1, 2, 3...","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"**Examples:**","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"* `tag 1 important`","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"* `tag 2 low priority`","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"dylkaw":82,"-":14}},{"path":"src/main/java/glub/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"    public static DialogBox getGlubDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"dylkaw":61}},{"path":"src/main/java/glub/Glub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import glub.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":" * A task management chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"public class Glub {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"    /** Tasklist of the Glub object. */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    /** Parser of the Glub object. */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"     * Creates a Glub object with a Storage object to initialise the chatbot.","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"     * @param storage The required storage object.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    public Glub(Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"            this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"        } catch (GlubException ex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"            Ui.printError(ex.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"        this.parser \u003d new Parser(taskList, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        String response;","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"            response \u003d this.parser.parse(userInput);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        } catch (GlubException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"            response \u003d Ui.printError(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"        return response;","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"dylkaw":40}},{"path":"src/main/java/glub/GlubException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":" * Exception for unintended inputs or behaviour.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"public class GlubException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"    public GlubException(String msg) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"        super(msg);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"dylkaw":10}},{"path":"src/main/java/glub/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"dylkaw":12}},{"path":"src/main/java/glub/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":" * A GUI for Glub using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"    private Glub glub \u003d new Glub(new Storage(\"tasks.txt\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGlub(glub);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"            stage.setTitle(\"glub\");","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"dylkaw":32}},{"path":"src/main/java/glub/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    private Glub glub;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"        String greeting \u003d \"Hello! I\u0027m Glub!\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"                DialogBox.getGlubDialog(greeting, dukeImage)","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        );","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"    public void setGlub(Glub g) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        glub \u003d g;","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        String response \u003d glub.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"                DialogBox.getGlubDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"dylkaw":55}},{"path":"src/main/java/glub/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import glub.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":" * Parser that handles user inputs.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"    /** Tasklist associated to parser. */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"    /** Storage associated to parser. */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"    private final String UNKNOWN_ERROR_MSG \u003d \"OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"            + \"The available commands are: \\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"            + \"list\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"            + \"mark TASK_INDEX\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"            + \"unmark TASK_INDEX\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"            + \"delete TASK_INDEX\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"            + \"tag TASK_INDEX TAG\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"            + \"todo TASK_DESCRIPTION\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"            + \"deadline TASK_DESCRIPTION /by DATETIME\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"            + \"event TASK_DESCRIPTION /by START_DATETIME /to END_DATETIME\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"            + \"find SEARCH_PATTERN\";","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"     * Initialises Parser object.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"     * @param taskList TaskList with all tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"     * @param storage Storage object which saves tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    public Parser(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"     * Listens to user input and executes the corresponding command.","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"    public String parse(String input) throws GlubException {","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        String args \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"        String[] parsedCommand \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"        String command \u003d parsedCommand[0];","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"        if (parsedCommand.length \u003e 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"            args \u003d parsedCommand[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"        switch (command) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"            return Ui.sayGoodbye();","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"        case \"list\":","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"            return Ui.printListMsg(this.taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"            return taskList.mark(Integer.parseInt(args));","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"            return taskList.unmark(Integer.parseInt(args));","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"            return taskList.deleteTask(Integer.parseInt(args));","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        case \"tag\":","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"            return taskList.tagTask(args);","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"        case \"event\":","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"            taskList.addTask(args, command, false, \" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"            storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"            return Ui.printAddMsg(taskList.getTaskList());","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"        case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"            return Ui.printFindMsg(taskList, args);","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        default:","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"            throw new GlubException(UNKNOWN_ERROR_MSG);","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"dylkaw":71}},{"path":"src/main/java/glub/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import glub.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":" * Storage handles the reading of existing tasks and saving of new tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"    /** File path of existing stored task list. */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"    private String taskListPath;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"     * Initialises storage object.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"     * @param taskListPath Path of file containing task lists to be read.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    public Storage(String taskListPath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"        this.taskListPath \u003d taskListPath;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"        assert taskListPath !\u003d null : \"taskListPath should not be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"     * Reads tasks from file. Creates file if one does not already exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"     * @return Task details.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"     * @throws GlubException If file creation fails.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"    public ArrayList\u003cString\u003e getTaskDetails() throws GlubException {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        File taskFile \u003d new File(this.taskListPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"        ArrayList\u003cString\u003e taskDetails \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"            taskFile.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"            Scanner scanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"                String task \u003d scanner.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"                taskDetails.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"            scanner.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"            throw new GlubException(\"Task list not found!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"            throw new GlubException(\"Task list file creation failed!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"        return taskDetails;","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"     * Saves tasks into a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"     * @param taskList List of tasks to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"            FileWriter writer \u003d new FileWriter(\"tasks.txt\", false);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"                writer.write(taskList.get(i).toSaveFormat());","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"            writer.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"            Ui.printError(\"Saving tasks failed.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"dylkaw":68}},{"path":"src/main/java/glub/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import glub.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import glub.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":" * Ui handles all messages that the user will see.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"     * Displays welcome message.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"    public static String greet() {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"        return \"Hello! I\u0027m Glub!\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"     * Displays farewell message.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    public static String sayGoodbye() {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"        return \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"     * Displays message indicating that a task has been added to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"     * @param taskList Task list which task has been added to.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    public static String printAddMsg(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"                + String.format(\" \\t%s%n\", taskList.get(size - 1))","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"                + String.format(\"Now you have %d %s in the list.\", size, size \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"     * Displays message indicating that a task has been deleted from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"     * @param taskList Task list which task has been deleted from.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"     * @param deleted Task that has been deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"    public static String printDeleteMsg(ArrayList\u003cTask\u003e taskList, Task deleted) {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"                + String.format(\"\\t%s%n\", deleted)","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"                + String.format(\"Now you have %d %s in the list.\", size, size \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"     * Displays all tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"     * @param taskList Task list containing all the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"    public static String printListMsg(TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"        return \"Here are the tasks in your list:\\n\" + taskList.showList();","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"     * Displays message indicating that a task has been marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"     * @param task Task that has been marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"    public static String printMarkMsg(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + String.format(\"\\t%s\", task);","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"     * Displays message indicating that a task has been unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"     * @param task Task that has been unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"    public static String printUnmarkMsg(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"        return \"Ok, I\u0027ve marked this task as not done yet:\\n\" + String.format(\"\\t%s\", task);","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"    public static String printTagMsg(Task task, String tag) {","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"        return String.format(\"Ok, I\u0027ve tagged this task #%s:\\n\\t%s\", tag, task);","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"     * Prints tasks that match to the search string.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"     * @param taskList List of tasks to be searched.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"     * @param searchString String tasks should match.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"    public static String printFindMsg(TaskList taskList, String searchString) {","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"        String displayedTasks \u003d taskList.findTasks(searchString);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"        if (displayedTasks.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"            return \"Oops, no tasks match your search :-(\";","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"            return \"Here are the matching tasks in your list:\\n\" + displayedTasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"     * Displays error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"     * @param msg Message to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"    public static String printError(String msg) {","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"        return msg;","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"dylkaw":100}},{"path":"src/main/java/glub/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":" * Abstraction of a deadline task.","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"     * Constructor for deadline with tag.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"     * @param task Task description.","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"     * @param isDone Task status.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"     * @param tag Task tag.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"     * @param deadline Date and time of deadline.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"    public Deadline(String task, boolean isDone, String tag, LocalDateTime deadline) {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"        super(task, isDone, tag);","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"        return \"D|\" + super.toSaveFormat() + String.format(\"|%s\\n\", super.getSaveDateTime(deadline));","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"                + String.format(\"(by: %s) %s\", super.getDisplayDateTime(deadline), super.getTag());","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"dylkaw":33}},{"path":"src/main/java/glub/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":" * Abstraction of an event that the user can create.","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"     * Constructor for the event with tag.","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"     * @param task Task description.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"     * @param isDone Task status.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"     * @param tag Task tag.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"     * @param start Start of event.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"     * @param end End of event.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    public Event(String task, boolean isDone, String tag, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"        super(task, isDone, tag);","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"        return \"E|\" + super.toSaveFormat()","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"                + String.format(\"|%s|%s\\n\", super.getSaveDateTime(start), super.getSaveDateTime(end));","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"                + String.format(\"(from: %s to: %s) %s\",","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"                super.getDisplayDateTime(start), super.getDisplayDateTime(end), super.getTag());","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"dylkaw":38}},{"path":"src/main/java/glub/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":" * Task for user to be reminded of.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"    /** Name of task to be completed. */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"    private String task;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    /** Status of task. */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"    private String tag \u003d \" \";","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"     * Constructor of a task with a tag.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"     * @param task Task description.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"     * @param isDone Task status.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"     * @param tag Task tag.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    public Task(String task, boolean isDone, String tag) {","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"     * Converts LocalDateTime object into dd MMM yyyy HH:mm format for display.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"     * @param dateTime LocalDateTime object.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"     * @return Date in dd MMM yyyy HH:mm format.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"    public String getDisplayDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"        return dateTime.format(format);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"     * Converts LocalDateTime object into dd-MM-yyyy HHmm format for saving.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"     * @param dateTime LocalDateTime object.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"     * @return Date in dd-MM-yyyy HHmm format.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"    public String getSaveDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"        return dateTime.format(format);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"     * Gets the icon corresponding to the status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"     * @return Marked or unmarked icon/","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"    public String getDoneIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"    public String getTag() {","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        return tag.equals(\" \") ? tag : \"#\" + tag;","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"    public void setUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"    public void setTag(String tag) {","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"     * Checks if task contains the specified search string.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"     * @param searchString String to be checked against.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"     * @return Boolean whether task contains search string.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"    public boolean checkMatch(String searchString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"        return this.task.toLowerCase().contains(searchString);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"     * Gets the task in a string to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"     * @return String to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"        return String.format(\"%s|%s|%s\", getDoneIcon(), task, tag);","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"     * Gets the task string to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"     * @return Task string to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"        return String.format(\"[%s]%s\", getDoneIcon(), task);","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"dylkaw":96}},{"path":"src/main/java/glub/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import glub.GlubException;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import glub.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import glub.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":" * Task list that contains all tasks and reads or writes from a storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"     * Initialises TaskList object and loads tasks from storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"     * @param storage Storage object which task list loads tasks from.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"     * @throws GlubException If loading of tasks fails.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    public TaskList(Storage storage) throws GlubException {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"        loadTasks();","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"     * Adds tasks from storage into task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"     * @throws GlubException If loading fails.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"    public void loadTasks() throws GlubException {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        ArrayList\u003cString\u003e taskDetails \u003d storage.getTaskDetails();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"        for (int i \u003d 0; i \u003c taskDetails.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"            String task \u003d taskDetails.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"            String[] data \u003d task.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"            String tag \u003d data[3];","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"            boolean isDone \u003d data[1].equals(\"X\");","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"            switch (data[0]) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"            case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"                addTask(String.format(\"%s\", data[2]), \"todo\", isDone, tag);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"            case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"                addTask(String.format(\"%s /by %s\", data[2], data[4]),","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"                        \"deadline\", isDone, tag);","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"            case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"                addTask(String.format(\"%s /from %s /to %s\", data[2], data[4], data[5]),","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"                        \"event\", isDone, tag);","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"            default:","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"        storage.saveTasks(this.taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"     * Parses dateString into required date format for tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"     * @param dateString Input date string.","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"     * @param taskType Type of task to process date for.","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"     * @return Array containing dates.","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"     * @throws GlubException If task is invalid.","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"    public LocalDateTime[] parseTaskDateTime(String dateString, String taskType) throws GlubException {","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"        LocalDateTime[] dateTimes \u003d new LocalDateTime[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"        if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"            String deadline \u003d dateString.split(\" \", 2)[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadline, dateTimeFormat);","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"            dateTimes[0] \u003d deadlineDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"        } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"            String[] startParts \u003d dateString.split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"            String start \u003d startParts[1] + \" \" + startParts[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"            String[] endParts \u003d dateString.split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"            String end \u003d endParts[1] + \" \" + endParts[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"            LocalDateTime startDateTime \u003d LocalDateTime.parse(start, dateTimeFormat);","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"            LocalDateTime endDateTime \u003d LocalDateTime.parse(end, dateTimeFormat);","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"            dateTimes[0] \u003d startDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"            dateTimes[1] \u003d endDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"            throw new GlubException(\"Invalid task!\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"        return dateTimes;","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"     * Adds task into task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"     * @param task Description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"     * @param isDone Status of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"     * @throws GlubException If input is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"    public void addTask(String task, String taskType, boolean isDone, String tag) throws GlubException {","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"        assert taskType !\u003d null : \"taskType should not be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"dylkaw"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"dylkaw"},"content":"            throw new GlubException(String.format(\"OOPS!! The description of a %s cannot be empty.\\n\", taskType));","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"dylkaw"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"dylkaw"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"            taskList.add(new ToDo(task, isDone, tag));","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"dylkaw"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"dylkaw"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"dylkaw"},"content":"            String[] deadlinePortions \u003d task.split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"dylkaw"},"content":"            String deadlineDesc \u003d deadlinePortions[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"dylkaw"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"                LocalDateTime deadlineDateTime \u003d parseTaskDateTime(deadlinePortions[1], \"deadline\")[0];","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"dylkaw"},"content":"                taskList.add(new Deadline(deadlineDesc, isDone, tag, deadlineDateTime));","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"dylkaw"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"dylkaw"},"content":"                throw new GlubException(\"OOPS!! Please provide a deadline for your deadline task.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"dylkaw"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"dylkaw"},"content":"                throw new GlubException(\"Invalid deadline format! Please ensure it is in dd-MM-yyyy HHmm format!\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"dylkaw"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"dylkaw"},"content":"        case \"event\":","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"dylkaw"},"content":"            String[] eventPortions \u003d task.split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"dylkaw"},"content":"            String eventDesc \u003d eventPortions[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"                LocalDateTime[] dateTimes \u003d parseTaskDateTime(eventPortions[1], \"event\");","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"                LocalDateTime startDateTime \u003d dateTimes[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"                LocalDateTime endDateTime \u003d dateTimes[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"                taskList.add(new Event(eventDesc, isDone, tag, startDateTime, endDateTime));","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"dylkaw"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"                throw new GlubException(\"OOPS!! Ensure that your event has a start and end!\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"dylkaw"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"dylkaw"},"content":"                throw new GlubException(","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"dylkaw"},"content":"                        \"Invalid start/end format! Please ensure they are in dd-MM-yyyy HHmm format!\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"dylkaw"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"dylkaw"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"dylkaw"},"content":"        default:","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"dylkaw"},"content":"            throw new GlubException(\"Oops! Task not recognised!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":138,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"dylkaw"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"dylkaw"},"content":"     * @param taskNum Index of task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"dylkaw"},"content":"     * @throws GlubException If taskNum indicated is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"dylkaw"},"content":"    public String deleteTask(int taskNum) throws GlubException {","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"dylkaw"},"content":"        Task deleted;","lastModifiedDate":"2023-09-09"},{"lineNumber":148,"author":{"gitId":"dylkaw"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"dylkaw"},"content":"            deleted \u003d taskList.remove(taskNum - 1);","lastModifiedDate":"2023-09-09"},{"lineNumber":150,"author":{"gitId":"dylkaw"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"dylkaw"},"content":"            throw new GlubException(String.format(\"OOPS!! Task %d does not exist!\\n\", taskNum));","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"dylkaw"},"content":"        storage.saveTasks(this.taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"dylkaw"},"content":"        return Ui.printDeleteMsg(taskList, deleted);","lastModifiedDate":"2023-09-09"},{"lineNumber":155,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"     * Displays all tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"     * @return String of all tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"dylkaw"},"content":"    public String showList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"dylkaw"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"            list.append(String.format(\" %d. %s\\n\", i + 1, taskList.get(i)));","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"dylkaw"},"content":"        return list.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":168,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"dylkaw"},"content":"     * Marks a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"dylkaw"},"content":"     * @param taskNum Index of task to be marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"dylkaw"},"content":"    public String mark(int taskNum) {","lastModifiedDate":"2023-09-09"},{"lineNumber":174,"author":{"gitId":"dylkaw"},"content":"        Task task \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"dylkaw"},"content":"        task.setDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"dylkaw"},"content":"        storage.saveTasks(this.taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"dylkaw"},"content":"        return Ui.printMarkMsg(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":178,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"dylkaw"},"content":"     * Unmarks a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"dylkaw"},"content":"     * @param taskNum Index of task to be unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"dylkaw"},"content":"    public String unmark(int taskNum) {","lastModifiedDate":"2023-09-09"},{"lineNumber":185,"author":{"gitId":"dylkaw"},"content":"        Task task \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":186,"author":{"gitId":"dylkaw"},"content":"        task.setUndone();","lastModifiedDate":"2023-08-28"},{"lineNumber":187,"author":{"gitId":"dylkaw"},"content":"        storage.saveTasks(this.taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":188,"author":{"gitId":"dylkaw"},"content":"        return Ui.printUnmarkMsg(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":189,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":190,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"dylkaw"},"content":"     * Tags a task in the task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"dylkaw"},"content":"     * @param args String containing the task index and tag.","lastModifiedDate":"2023-09-19"},{"lineNumber":194,"author":{"gitId":"dylkaw"},"content":"     * @return Tag UI message.","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"dylkaw"},"content":"     * @throws GlubException If index supplied is invalid.","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"dylkaw"},"content":"    public String tagTask(String args) throws GlubException {","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"dylkaw"},"content":"        Task task;","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"dylkaw"},"content":"        int taskNum \u003d -1;","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"dylkaw"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":201,"author":{"gitId":"dylkaw"},"content":"            String[] argComponents \u003d args.split(\"\", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"dylkaw"},"content":"            taskNum \u003d Integer.parseInt(argComponents[0]);","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"dylkaw"},"content":"            String tag \u003d argComponents[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"dylkaw"},"content":"            task \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":205,"author":{"gitId":"dylkaw"},"content":"            task.setTag(tag);","lastModifiedDate":"2023-09-13"},{"lineNumber":206,"author":{"gitId":"dylkaw"},"content":"            storage.saveTasks(this.taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":207,"author":{"gitId":"dylkaw"},"content":"            return Ui.printTagMsg(task, tag);","lastModifiedDate":"2023-09-13"},{"lineNumber":208,"author":{"gitId":"dylkaw"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-09-13"},{"lineNumber":209,"author":{"gitId":"dylkaw"},"content":"            throw new GlubException(String.format(\"OOPS!! Task %d does not exist!\\n\", taskNum));","lastModifiedDate":"2023-09-13"},{"lineNumber":210,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":211,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":212,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":213,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"dylkaw"},"content":"     * Finds all tasks matching search string.","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"dylkaw"},"content":"     * @param searchString String to be matched to tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"dylkaw"},"content":"     * @return String representation of matching tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"dylkaw"},"content":"    public String findTasks(String searchString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"dylkaw"},"content":"        StringBuilder matchingTasks \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"dylkaw"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"dylkaw"},"content":"            if (taskList.get(i).checkMatch(searchString)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"dylkaw"},"content":"                matchingTasks.append(String.format(\"\\t%d. %s\\n\", i + 1, taskList.get(i)));","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"dylkaw"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"dylkaw"},"content":"        return matchingTasks.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"dylkaw":227}},{"path":"src/main/java/glub/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":" * Abstraction of a todo event.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"    public ToDo(String task, boolean isDone, String tag) {","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"        super(task, isDone, tag);","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"        return \"T|\" + super.toSaveFormat() + \"\\n\";","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"        return \"[T]\" + super.toString() + \" \" + super.getTag();","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"dylkaw":19}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"dylkaw":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"glub.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"dylkaw":19}},{"path":"src/test/java/glub/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub.task;  //same package as the class being tested","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import glub.Glub;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import glub.GlubException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import glub.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"    public void addTask_emptyTask_exceptionThrown(){","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"            new TaskList(new Storage(\"dummystorage.txt\")).addTask(\"\", TaskType.TODO, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"        } catch (GlubException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"            assertEquals(\"OOPS!! The description of a TODO cannot be empty.\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    public void addTask_noDeadline_exceptionThrown(){","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"            new TaskList(new Storage(\"dummystorage.txt\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"                    .addTask(\"run\", TaskType.DEADLINE, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"    } catch (GlubException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"        assertEquals(\"OOPS!! Please provide a deadline for your deadline task.\\n\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"dylkaw":32}},{"path":"src/test/java/glub/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package glub.task; //same package as the class being tested","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import glub.Glub;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import glub.GlubException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import glub.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"    public void toSaveFormat_success(){","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"        assertEquals(\"T|X|run far\\n\", new ToDo(\"run far\", true).toSaveFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"dylkaw":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"todo run","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"delete 1","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"bye","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"dylkaw":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dylkaw":1,"-":33}}]
