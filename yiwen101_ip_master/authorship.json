[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"checkstyle {","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"checkstyleMain {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"    source \u0027src/main/java\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"yiwen101"},"content":"    mainClass.set(\u0027duke.Launcher\u0027)","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"yiwen101"},"content":"javafx {","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"yiwen101"},"content":"    version \u003d \u002717.0.2\u0027","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"yiwen101"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 , \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"yiwen101"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":43,"yiwen101":30}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.command.AddTagCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.command.FindTagCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"import duke.command.UntagCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.builder.DeadlineBuilder;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.builder.EventBuilder;","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.builder.TodoBuilder;","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"import duke.ui.Invoker;","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":" * The main class of the application that interacts with the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"public class Duke {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"    private static final String FINISH_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Doctor101\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"    private final Invoker invoker;","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"     * Constructor for Duke.Initializes the invoker with commands.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    public Duke() {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"        this.invoker \u003d new Invoker();","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"list\", new ListCommand());","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"mark\", new MarkCommand());","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"unmark\", new UnmarkCommand());","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"todo\", new AddTaskCommand(new TodoBuilder()));","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"deadline\", new AddTaskCommand(new DeadlineBuilder()));","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"event\", new AddTaskCommand(new EventBuilder()));","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"delete\", new DeleteCommand());","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"find\", new FindCommand());","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"tag\", new AddTagCommand());","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"untag\", new UntagCommand());","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"yiwen101"},"content":"        invoker.setCommand(\"findtag\", new FindTagCommand());","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"yiwen101"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"yiwen101"},"content":"        return WELCOME_MESSAGE;","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"yiwen101"},"content":"    public static String getFinishMessage() {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"yiwen101"},"content":"        return FINISH_MESSAGE;","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"yiwen101"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"yiwen101"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"yiwen101"},"content":"            return FINISH_MESSAGE;","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"yiwen101"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"yiwen101"},"content":"            try {","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"yiwen101"},"content":"                return invoker.execute(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"yiwen101"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"yiwen101"},"content":"                return e.getMessage();","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"yiwen101"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"yiwen101":59}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"public class Launcher {","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"yiwen101":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"            stage.show();","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"yiwen101":29}},{"path":"src/main/java/duke/command/AddTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.data.storage.Store;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":" * Represents a command that interpret the user input string and mark a task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"public class AddTagCommand implements Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"mark {index}\".","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"        Pattern pattern \u003d Pattern.compile(\"tag \\\\d+ \\\\w+\");","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"        if (!pattern.matcher(input).matches()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: tag \u003cindex\u003e \u003ctag\u003e\");","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        Store s \u003d Store.getInstance();","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"        s.addTagToTaskAtIndex(index, input.split(\" \")[2]);","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        return \"Added tag to task: \\n\" + s.getTask(index).toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"yiwen101":28}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.data.storage.Store;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.builder.Builder;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":" * Represents a command that interpret the user input string and add a task to the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"public class AddTaskCommand implements Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    protected Builder\u003cTask\u003e taskBuilder;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"    public AddTaskCommand(Builder\u003cTask\u003e taskBuilder) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"        this.taskBuilder \u003d taskBuilder;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user that contains the task details.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        Store s \u003d Store.getInstance();","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"        Task task \u003d taskBuilder.buildFromString(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"            return \"Invalid input!\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"        s.addTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"        return \"Got it. I’ve added this task:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"                + task + \"\\nNow you have \" + s.getTaskCount() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":34}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":" * Represents a command that interpret the user input string and execute the requirement.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"public interface Command {","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) throws DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"yiwen101":10}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.data.storage.Store;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":" * Represents a command that interpret the user input string and delete a task from the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"delete {index}\".","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        Pattern pattern \u003d Pattern.compile(\"delete \\\\d+\");","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        if (!pattern.matcher(input).matches()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: delete \u003cindex\u003e\");","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"        Store s \u003d Store.getInstance();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"        if (s.hasTaskAtIndex(index)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"            Task t \u003d s.getTask(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"            s.deleteTask(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + t;","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"index out of bounds\");","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":37}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.data.storage.Store;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":" * Represents a command that interpret the user input string and find tasks that contain the keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    private final Store s \u003d Store.getInstance();","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"     * Finds tasks that contain the keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"find {keyword}\".","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"        Pattern pattern \u003d Pattern.compile(\"find .+\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        if (!pattern.matcher(input).matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: find \u003ckeyword\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"        return \"Here are the matching tasks in your list:\\n\" + s.find(keyword);","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"yiwen101":29}},{"path":"src/main/java/duke/command/FindTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.data.storage.Store;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":" * Represents a command that interpret the user input string and find tasks that contain the keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"public class FindTagCommand implements Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    private final Store s \u003d Store.getInstance();","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"     * Finds tasks that contain the keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"find {keyword}\".","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"        Pattern pattern \u003d Pattern.compile(\"findtag .+\");","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        if (!pattern.matcher(input).matches()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: find \u003ckeyword\u003e\");","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        String tag \u003d input.split(\" \")[1];","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"        return \"Here are the matching tasks in your list:\\n\" + s.findTasksWithTag(tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"yiwen101":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.data.storage.Store;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":" * Represents a command that interpret the user input string and list all tasks in the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user, which should be \"list\".","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"        Store s \u003d Store.getInstance();","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"        return \"Here are the tasks in your list:\\n\" + s;","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":19}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.data.storage.Store;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":" * Represents a command that interpret the user input string and mark a task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"mark {index}\".","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"        Pattern pattern \u003d Pattern.compile(\"mark \\\\d+\");","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"        if (!pattern.matcher(input).matches()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: mark \u003cindex\u003e\");","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        Store s \u003d Store.getInstance();","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"        s.mark(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + s.getTask(index);","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":29}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.data.storage.Store;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":" * Represents a command that interpret the user input string and mark a task as not done.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"unmark {index}\".","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"        Pattern pattern \u003d Pattern.compile(\"unmark \\\\d+\");","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"        if (!pattern.matcher(input).matches()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: unmark \u003cindex\u003e\");","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"        Store s \u003d Store.getInstance();","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        s.unmark(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"        return \"Nice! I\u0027ve marked this task as not done:\\n\" + s.getTask(index);","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":30}},{"path":"src/main/java/duke/command/UntagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.data.storage.Store;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":" * Represents a command that interpret the user input string and mark a task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"public class UntagCommand implements Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"mark {index}\".","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"        Pattern pattern \u003d Pattern.compile(\"untag \\\\d+ \\\\w+\");","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"        if (!pattern.matcher(input).matches()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: untag \u003cindex\u003e \u003ctag\u003e\");","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        Store s \u003d Store.getInstance();","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"        s.removeTagFromTaskAtIndex(index, input.split(\" \")[2]);","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        return \"Deleted tag \" + input.split(\" \")[2] + \"to task: \\n\" + s.getTask(index).toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"yiwen101":28}},{"path":"src/main/java/duke/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"todo test1/isMarked true/tags todo,tagsd,tag2","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"todo test2/isMarked false/tags todo,tag4,tag3","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"yiwen101":2}},{"path":"src/main/java/duke/data/storage/Store.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.storage;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.builder.TaskBuilder;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.tasklist.Tasklist;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":" * Responsible for reading and writing to duke.txt in the data folder which stores the task list contents.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"public class Store {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"    private static final Store store \u003d new Store();","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    private final Tasklist tasks \u003d new Tasklist();","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"    private final String fileName \u003d \"./src/main/java/duke/data/duke.txt\";","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"    private final TaskBuilder taskBuilder \u003d new TaskBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"    private Store() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        // detect whether duke.txt exists, and create it if it doesn\u0027t","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"        assert file.exists() : \"file should exist\";","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"        FileReader fr \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"yiwen101"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yiwen101"},"content":"            fr \u003d new FileReader(fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"yiwen101"},"content":"            int i;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"yiwen101"},"content":"            String input \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"yiwen101"},"content":"            while ((i \u003d fr.read()) !\u003d -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"yiwen101"},"content":"                input +\u003d (char) i;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"yiwen101"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"yiwen101"},"content":"            String[] inputStrs \u003d input.split(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"yiwen101"},"content":"            for (String inputStr : inputStrs) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"yiwen101"},"content":"                if (inputStr.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"yiwen101"},"content":"                    continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"yiwen101"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"yiwen101"},"content":"                String[] taskTypeAndIsMarked \u003d inputStr.split(\"/isMarked \");","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"yiwen101"},"content":"                assert taskTypeAndIsMarked.length \u003d\u003d 2 : \"taskTypeAndIsMarked should have length 2\";","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"yiwen101"},"content":"                Task task \u003d taskBuilder.buildFromString(taskTypeAndIsMarked[0]);","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"yiwen101"},"content":"                int prevTaskCount \u003d tasks.getTaskCount();","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"yiwen101"},"content":"                tasks.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"yiwen101"},"content":"                assert tasks.getTaskCount() \u003d\u003d prevTaskCount + 1 : \"task count should increase by 1\";","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"yiwen101"},"content":"                System.out.println(taskTypeAndIsMarked[1]);","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"yiwen101"},"content":"                String[] isMarkedAndTagsStr \u003d taskTypeAndIsMarked[1].split(\"/tags \");","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"yiwen101"},"content":"                if (isMarkedAndTagsStr[0].contains(\"true\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"yiwen101"},"content":"                    tasks.mark(tasks.getTaskCount());","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"yiwen101"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"yiwen101"},"content":"                String[] tags \u003d isMarkedAndTagsStr[1].split(\",\");","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"yiwen101"},"content":"                for (String tag : tags) {","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"yiwen101"},"content":"                    System.out.println(tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"yiwen101"},"content":"                    tasks.addTagToTaskAtIndex(tasks.getTaskCount(), tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"yiwen101"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"yiwen101"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"yiwen101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"yiwen101"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"yiwen101"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"yiwen101"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"yiwen101"},"content":"        } finally {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"yiwen101"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"yiwen101"},"content":"                if (fr !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"yiwen101"},"content":"                    fr.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"yiwen101"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"yiwen101"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"yiwen101"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"yiwen101"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"yiwen101"},"content":"     * Returns the single instance of Store.","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"yiwen101"},"content":"     * @return The instance of Store.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"yiwen101"},"content":"    public static Store getInstance() {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"yiwen101"},"content":"        return store;","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"yiwen101"},"content":"    private void write() {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"yiwen101"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"yiwen101"},"content":"            FileWriter fw \u003d new FileWriter(fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"yiwen101"},"content":"            fw.write(tasks.getTaskRepresentations());","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"yiwen101"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"yiwen101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"yiwen101"},"content":"            System.out.println(\"Something went wrong storing the change: \" + e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"yiwen101"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"yiwen101"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If task list is full.","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"yiwen101"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"yiwen101"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"yiwen101"},"content":"        write();","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"yiwen101"},"content":"     * Returns the tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"yiwen101"},"content":"     * @return The tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"yiwen101"},"content":"    public Task[] getTasks() {","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"yiwen101"},"content":"        return tasks.getTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"yiwen101"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to be returned.","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"yiwen101"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"yiwen101"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"yiwen101"},"content":"        return tasks.getTask(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"yiwen101"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"yiwen101"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"yiwen101"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"yiwen101"},"content":"        write();","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"yiwen101"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"yiwen101"},"content":"    public void mark(int index) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"yiwen101"},"content":"        tasks.mark(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"yiwen101"},"content":"        write();","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"yiwen101"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"yiwen101"},"content":"    public void unmark(int index) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"yiwen101"},"content":"        tasks.unmark(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"yiwen101"},"content":"        write();","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"yiwen101"},"content":"    public void setDescriptionAtIndex(int index, String description) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"yiwen101"},"content":"        tasks.setDescriptionAtIndex(index, description);","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"yiwen101"},"content":"        write();","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"yiwen101"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"yiwen101"},"content":"        return tasks.getTaskCount();","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"yiwen101"},"content":"    public boolean hasTaskAtIndex(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"yiwen101"},"content":"        return tasks.hasTaskAtIndex(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"yiwen101"},"content":"        return tasks.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"yiwen101"},"content":"    public String find(String keyword) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"yiwen101"},"content":"        return tasks.findTasksWithKeyword(keyword).toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"yiwen101"},"content":"     * Adds a tag to a task at the specified index.","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to add the tag to.","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"yiwen101"},"content":"     * @param tag The tag to be added.","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index or tag is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"yiwen101"},"content":"    public void addTagToTaskAtIndex(int index, String tag) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"yiwen101"},"content":"        tasks.addTagToTaskAtIndex(index, tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"yiwen101"},"content":"        write();","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"yiwen101"},"content":"     * Removes a tag from a task at the specified index.","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to remove the tag from.","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"yiwen101"},"content":"     * @param tag The tag to be removed.","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index or tag is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"yiwen101"},"content":"    public void removeTagFromTaskAtIndex(int index, String tag) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"yiwen101"},"content":"        tasks.removeTagFromTaskAtIndex(index, tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"yiwen101"},"content":"        write();","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"yiwen101"},"content":"    public String findTasksWithTag(String tag) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"yiwen101"},"content":"        return tasks.findTasksWithTag(tag).toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":194,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":194}},{"path":"src/main/java/duke/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"    private By by;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"    public void setBy(String by) throws InvalidInputException {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"        this.by \u003d new By(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":19}},{"path":"src/main/java/duke/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":" * Represents a task with start and end time.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"    private From from;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"    private To to;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"        this.from \u003d new From(from);","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"        this.to \u003d new To(to);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":22}},{"path":"src/main/java/duke/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":" * Represents a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"    protected Tags tags \u003d new Tags();","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"    protected Description description;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    protected String userInputString;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    public boolean hasTag(String tag) {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"        return this.tags.hasTag(tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"    public void addTag(String tag) throws InvalidInputException {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"        this.tags.addTag(tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"    public void removeTag(String tag) {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"        this.tags.removeTag(tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"    public void mark() {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"yiwen101"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description + \".  (tags: \" + this.tags + \")\";","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"yiwen101"},"content":"    public String getTaskRepresentation() throws NullPointerException {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"yiwen101"},"content":"        return this.userInputString + \"/isMarked \" + this.isDone + \"/tags \" + this.tags.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"yiwen101"},"content":"    public void setUserInputString(String userInputString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"yiwen101"},"content":"        this.userInputString \u003d userInputString;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"yiwen101"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"yiwen101"},"content":"        return this.description.hasKeyword(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":52}},{"path":"src/main/java/duke/data/task/TaskComponent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":" * Some unit for storing and presenting information to compose a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"public abstract class TaskComponent {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"final class Description extends TaskComponent {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    public Description(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        return this.description;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"final class By extends TaskComponent {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"    public By(String by) throws InvalidInputException {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"Invalid date format, should be YYYY-MM-DD\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"yiwen101"},"content":"        // Accept dates in a format such as yyyy-mm-dd format (e.g., 2019-10-15) and","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"yiwen101"},"content":"        // print in a different format such as MMM dd yyyy e.g., (Oct 15 2019).","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"yiwen101"},"content":"        return this.by.format(java.time.format.DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"yiwen101"},"content":"final class From extends TaskComponent {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"yiwen101"},"content":"    protected String from;","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"yiwen101"},"content":"    public From(String from) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"yiwen101"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"yiwen101"},"content":"        return this.from;","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"yiwen101"},"content":"final class To extends TaskComponent {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"yiwen101"},"content":"    protected String to;","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"yiwen101"},"content":"    public To(String to) {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"yiwen101"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"yiwen101"},"content":"        return this.to;","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"yiwen101"},"content":"final class Tags extends TaskComponent {","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"yiwen101"},"content":"    protected HashSet\u003cString\u003e tags;","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"yiwen101"},"content":"    public Tags() {","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"yiwen101"},"content":"        this.tags \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"yiwen101"},"content":"    public boolean hasTag(String tag) {","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"yiwen101"},"content":"        return this.tags.contains(tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"yiwen101"},"content":"    public void addTag(String tag) throws InvalidInputException {","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"yiwen101"},"content":"        if (tag.contains(\",\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"Invalid Input: Tag should not contain \\\",\\\"\");","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"yiwen101"},"content":"        this.tags.add(tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"yiwen101"},"content":"    public void removeTag(String tag) {","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"yiwen101"},"content":"        this.tags.remove(tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"yiwen101"},"content":"        String tagsString \u003d \"\";","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"yiwen101"},"content":"        for (String tag : this.tags) {","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"yiwen101"},"content":"            tagsString +\u003d tag + \",\";","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"yiwen101"},"content":"        // Remove the last comma","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"yiwen101"},"content":"        return tagsString.substring(0, tagsString.length() - 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"yiwen101":105}},{"path":"src/main/java/duke/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":" * Represents a simple task in the todo list.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":11}},{"path":"src/main/java/duke/data/task/builder/Builder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task.builder;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":" * Interface for all builders.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":" * @param \u003cT\u003e The type of object to be built.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"public interface Builder\u003cT\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"    public T buildFromString(String input) throws DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":11}},{"path":"src/main/java/duke/data/task/builder/DeadlineBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task.builder;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"public class DeadlineBuilder implements Builder\u003cTask\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    private String pattern \u003d \"deadline\\\\s+(.*?)\\\\s+/by\\\\s+(.*)\";","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    ","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"     * Builds a Deadline object from a string.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"deadline \u003cdescription\u003e /by YYYY-MM-DD HH:MM\".","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"     * @return Deadline object.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    public Task buildFromString(String input) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"        Pattern p \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        if (m.matches()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"            String description \u003d m.group(1);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"            String by \u003d m.group(2);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"            Deadline deadline \u003d new Deadline();","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"            deadline.setDescription(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"            deadline.setBy(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"            deadline.setUserInputString(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"            deadline.addTag(\"deadline\");","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"            return deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: deadline \u003cdescription\u003e /by YYYY-MM-DD HH:MM\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":38}},{"path":"src/main/java/duke/data/task/builder/EventBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task.builder;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Event;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"public class EventBuilder implements Builder\u003cTask\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    private String pattern \u003d \"event\\\\s+(.*?)\\\\s+/from\\\\s+(.*?)\\\\s+/to\\\\s+(.*)\";","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    ","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"     * Builds an Event object from a string.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\".","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"     * @return Event object.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    public Task buildFromString(String input) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"        Pattern p \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        if (m.matches()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"            String description \u003d m.group(1);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"            String start \u003d m.group(2);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"            String end \u003d m.group(3);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"            Event event \u003d new Event();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"            event.setDescription(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"            event.setFrom(start);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"            event.setTo(end);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"            event.setUserInputString(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"            event.addTag(\"event\");","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"            return event;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":41}},{"path":"src/main/java/duke/data/task/builder/TaskBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task.builder;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":" * Responsible for building a Task object from a string.","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"public class TaskBuilder implements Builder\u003cTask\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"    private final DeadlineBuilder deadlineBuilder \u003d new DeadlineBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"    private final EventBuilder eventBuilder \u003d new EventBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    private final TodoBuilder todoBuilder \u003d new TodoBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"     * Builds a Task object from a string.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"todo {description}\"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"     *              or \"deadline {description} /by {by}\" or \"event {description} /from {start} /to {end}\"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"     * @return Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    public Task buildFromString(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"        String type \u003d input.split(\" \")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        switch (type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"            return todoBuilder.buildFromString(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"            return deadlineBuilder.buildFromString(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"            return eventBuilder.buildFromString(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: todo \u003cdescription\u003e \"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"                    + \"or deadline \u003cdescription\u003e /by \u003cby\u003e or event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"yiwen101":36}},{"path":"src/main/java/duke/data/task/builder/TodoBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task.builder;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Todo;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"public class TodoBuilder implements Builder\u003cTask\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    private String pattern \u003d \"todo\\\\s+(.*)\";","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    ","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"     * Builds a Todo object from a string.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user in the format \"todo \u003cdescription\u003e\".","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"     * @return Todo object.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    public Todo buildFromString(String input) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"        Pattern p \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        if (m.matches()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"            String description \u003d m.group(1);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"            Todo todo \u003d new Todo();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"            todo.setDescription(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"            todo.setUserInputString(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"            todo.addTag(\"todo\");","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"            return todo;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"expected format: todo \u003cdescription\u003e\");","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":35}},{"path":"src/main/java/duke/data/task/tasklist/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task.tasklist;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":" * Manager class for all the tasks of the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"public class Tasklist {","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"    private int taskCount \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    private Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"    public Tasklist() {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If task list is full.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"        if (taskCount \u003d\u003d 100) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"            throw new DukeException(\"task list is full\");","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        tasks[taskCount] \u003d task;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"        taskCount++;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"    public Task[] getTasks() {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"        return tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"        if (index \u003e taskCount || index \u003c 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"            throw new DukeException(\"index out of bounds when calling getTask from store\");","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"        return tasks[index - 1];","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"yiwen101"},"content":"     * Deletes a task at the index from the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"yiwen101"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"yiwen101"},"content":"        if (index \u003e taskCount || index \u003c 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"index out of bounds\");","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"yiwen101"},"content":"        for (int i \u003d index - 1; i \u003c taskCount - 1; i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"yiwen101"},"content":"            tasks[i] \u003d tasks[i + 1];","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"yiwen101"},"content":"        taskCount--;","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"yiwen101"},"content":"     * Marks a task at the index as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"yiwen101"},"content":"    public void mark(int index) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"yiwen101"},"content":"        if (index \u003e taskCount || index \u003c 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"index out of bounds\");","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"yiwen101"},"content":"        tasks[index - 1].mark();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"yiwen101"},"content":"     * Marks a task at the index as not done.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"yiwen101"},"content":"    public void unmark(int index) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"yiwen101"},"content":"        if (index \u003e taskCount || index \u003c 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"index out of bounds\");","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"yiwen101"},"content":"        tasks[index - 1].unmark();","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"yiwen101"},"content":"    public void setDescriptionAtIndex(int index, String description) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"yiwen101"},"content":"        if (index \u003e taskCount || index \u003c 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"index out of bounds\");","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"yiwen101"},"content":"        tasks[index - 1].setDescription(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"yiwen101"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"yiwen101"},"content":"        return taskCount;","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"yiwen101"},"content":"    public boolean hasTaskAtIndex(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"yiwen101"},"content":"        return index \u003c\u003d taskCount \u0026\u0026 index \u003e 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"yiwen101"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"yiwen101"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"yiwen101"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"yiwen101"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"yiwen101"},"content":"            result +\u003d (i + 1) + \". \" + tasks[i] + \"\\n\";","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"yiwen101"},"content":"        return result;","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"yiwen101"},"content":"    public String getTaskRepresentations() {","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"yiwen101"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"yiwen101"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"yiwen101"},"content":"            result +\u003d tasks[i].getTaskRepresentation() + \"\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"yiwen101"},"content":"        return result;","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"yiwen101"},"content":"     * Returns a tasklist with tasks that contain the keyword in their description.","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"yiwen101"},"content":"     * @param keyword The keyword to be searched for.","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"yiwen101"},"content":"     * @return A tasklist with tasks that contain the keyword in their description.","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException if the tasklist is full.","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"yiwen101"},"content":"    public Tasklist findTasksWithKeyword(String keyword) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"yiwen101"},"content":"        Tasklist result \u003d new Tasklist();","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"yiwen101"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"yiwen101"},"content":"            if (tasks[i].hasKeyword(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"yiwen101"},"content":"                result.addTask(tasks[i]);","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"yiwen101"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"yiwen101"},"content":"        return result;","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"yiwen101"},"content":"     * Returns a tasklist with tasks that contain the tag.","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"yiwen101"},"content":"     * @param tag The tag to be searched for, which is a string that does not contain \",\".","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"yiwen101"},"content":"     * @return A tasklist with tasks that contain the tag.","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"yiwen101"},"content":"    public Tasklist findTasksWithTag(String tag) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"yiwen101"},"content":"        Tasklist result \u003d new Tasklist();","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"yiwen101"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"yiwen101"},"content":"            if (tasks[i].hasTag(tag)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"yiwen101"},"content":"                result.addTask(tasks[i]);","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"yiwen101"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"yiwen101"},"content":"        return result;","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"yiwen101"},"content":"     * Adds a tag to the task at the index.","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to be added with the tag.","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"yiwen101"},"content":"     * @param tag The tag to be added.","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index is invalid(does not exist) or the tag is invalid(contains \",\").","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"yiwen101"},"content":"    public void addTagToTaskAtIndex(int index, String tag) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"yiwen101"},"content":"        if (index \u003e taskCount || index \u003c 1) {","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"index out of bounds\");","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"yiwen101"},"content":"        tasks[index - 1].addTag(tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"yiwen101"},"content":"     * Removes a tag from the task at the index.","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"yiwen101"},"content":"     * @param index The index of the task to be removed with the tag.","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"yiwen101"},"content":"     * @param tag The tag to be removed.","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If index is invalid(out of bound) or the tag is invalid(does not exist).","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"yiwen101"},"content":"    public void removeTagFromTaskAtIndex(int index, String tag) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"yiwen101"},"content":"        if (index \u003e taskCount || index \u003c 1) {","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"index out of bounds\");","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"yiwen101"},"content":"        if (!tasks[index - 1].hasTag(tag)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"task does not have the tag\");","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"yiwen101"},"content":"        tasks[index - 1].removeTag(tag);","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":172}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.exception;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":" * Represents an exception that is specific to Duke.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"        super(message);","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":10}},{"path":"src/main/java/duke/exception/InternalException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.exception;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":" * Represents an exception that is due to the implementation of duke, for example, tasklist is implemented","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":" * with wrongly array of fixed length, so that it cannot store more than that amount of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"public class InternalException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"    public InternalException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"        super(\"Internal exception: \" + message);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"yiwen101":11}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.exception;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":" * Represents an exception that is due to invalid input from the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"        super(\"Invalid Input: \" + message);","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yiwen101":10}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"yiwen101"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"yiwen101"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"yiwen101"},"content":"    private void flip() {","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"yiwen101"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"yiwen101"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"yiwen101"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"yiwen101"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"yiwen101"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"yiwen101"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"yiwen101"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"yiwen101"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"yiwen101"},"content":"        db.flip();","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"yiwen101"},"content":"        return db;","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"yiwen101":61}},{"path":"src/main/java/duke/ui/Invoker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":" * The typical invoker class in the command pattern. It stores a hashmap of commands and executes them.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"public class Invoker {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    private HashMap\u003cString, Command\u003e commands;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"    public Invoker() {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"        this.commands \u003d new HashMap\u003cString, Command\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"     * Adds a command to the invoker.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"     * @param commandName Name of the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"     * @param command Command object.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"    public void setCommand(String commandName, Command command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        this.commands.put(commandName, command);","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"     * Executes a command.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"     * @param input String input from user.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"    public String execute(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"        String commandName \u003d input.split(\" \")[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"        if (this.commands.get(commandName) \u003d\u003d null) {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"            throw new InvalidInputException(\"Command not found\");","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"        return this.commands.get(commandName).execute(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"yiwen101":39}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.ui;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"     * Initializes the main window by instantiating duke and say the greeting words.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"yiwen101"},"content":"        duke \u003d new Duke();","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"yiwen101"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"yiwen101"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"yiwen101"},"content":"                DialogBox.getDukeDialog(Duke.getWelcomeMessage(),","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"yiwen101"},"content":"                            dukeImage)","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"yiwen101"},"content":"        );","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"yiwen101"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"yiwen101"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"yiwen101"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"yiwen101"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"yiwen101"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"yiwen101"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"yiwen101"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"yiwen101"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"yiwen101"},"content":"        assert !response.isEmpty() : \"Response should not be empty\";","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"yiwen101"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"yiwen101"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"yiwen101"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"yiwen101"},"content":"        );","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"yiwen101"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"yiwen101"},"content":"        if (response.equals(Duke.getFinishMessage())) {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"yiwen101"},"content":"            PauseTransition pause \u003d new PauseTransition(javafx.util.Duration.seconds(1));","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"yiwen101"},"content":"            pause.setOnFinished(event -\u003e System.exit(0));","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"yiwen101"},"content":"            pause.play();","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"yiwen101":66}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"yiwen101":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"yiwen101":19}},{"path":"src/test/java/duke/data/storage/StoreTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"public class StoreTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"    public void test() {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"        Store s \u003d Store.getInstance();","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"        try{","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"            Task t \u003d s.getTask(1);","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"            assert false;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"        int i;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"        assert false;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"yiwen101":18}},{"path":"src/test/java/duke/data/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"    public void toStringTest() throws InvalidInputException {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"        Deadline deadline \u003d new Deadline();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"        deadline.setDescription(\"return book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"        ","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"        deadline.setBy(\"2020-08-23\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"        assertEquals(\"[D][ ] return book (by: Aug 23 2020)\", deadline.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"    public void setByTest() throws InvalidInputException {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"        Deadline deadline \u003d new Deadline();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"        deadline.setDescription(\"return book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"        deadline.setBy(\"2020-08-23\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"            deadline.setBy(\"2020-08-23 12:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"            assertEquals(\"Invalid Input: Invalid date format, should be YYYY-MM-DD\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"yiwen101"},"content":"       ","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yiwen101"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"yiwen101":36}},{"path":"src/test/java/duke/data/task/builder/DeadlineBuilderTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task.builder;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.builder.DeadlineBuilder;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"public class DeadlineBuilderTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"    public void buildFromStringTest() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"        DeadlineBuilder deadlineBuilder \u003d new DeadlineBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"        Task t \u003d deadlineBuilder.buildFromString(\"deadline return book /by 2020-02-02\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"        assertEquals(\"[D][ ] return book (by: Feb 02 2020)\", t.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"            deadlineBuilder.buildFromString(\"deadline return book /by 2020-02-02 12:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"            assertEquals(\"Invalid Input: Invalid date format, should be YYYY-MM-DD\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"    } ","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"yiwen101":25}},{"path":"src/test/java/duke/data/task/tasklist/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwen101"},"content":"package duke.data.task.tasklist;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"yiwen101"},"content":"import duke.data.task.builder.TaskBuilder;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"yiwen101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"yiwen101"},"content":"public class TasklistTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"yiwen101"},"content":"    Tasklist tasklist \u003d new Tasklist();","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"yiwen101"},"content":"    TaskBuilder taskBuilder \u003d new TaskBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"yiwen101"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"yiwen101"},"content":"    public void getTaskRepresentationTest() {","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"yiwen101"},"content":"       try {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"yiwen101"},"content":"           Task task1 \u003d taskBuilder.buildFromString(\"todo read book\");","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"yiwen101"},"content":"           Task task2 \u003d taskBuilder.buildFromString(\"deadline return book /by 2020-02-02\");","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"yiwen101"},"content":"           Task task3 \u003d taskBuilder.buildFromString(\"event project meeting /from 2020-02-02 12:00 /to 2020-02-02 13:00\");","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"yiwen101"},"content":"           tasklist.addTask(task1);","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"yiwen101"},"content":"           tasklist.addTask(task2);","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"yiwen101"},"content":"           tasklist.addTask(task3);","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"yiwen101"},"content":"       } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"yiwen101"},"content":"           assert false : \"should not reach here\";","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"yiwen101"},"content":"           System.out.println(e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"yiwen101"},"content":"       }","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"yiwen101"},"content":"       String tasks \u003d tasklist.getTaskRepresentations();","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"yiwen101"},"content":"       assert true;","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"yiwen101"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"yiwen101"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"yiwen101"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"yiwen101":30}}]
