[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"# Anya project template","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"3. After that, locate the `src/main/java/Anya.java` file, right-click it, and choose `Run Anya.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tim-pipi":2,"-":22}},{"path":"data/Anya.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"T | 0 | read book","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"E | 0 | project meeting | Aug 6th 2pm | Aug 6th 4pm","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"T | 0 | sleep","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"D | 0 | sleep | tonight","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"T | 0 | sleep","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tim-pipi":7}},{"path":"src/main/java/Anya.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":" * Represents a chatbot named Anya","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"public class Anya {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    final static String LINE \u003d \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    static String savedFile \u003d \"./data/Anya.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    enum Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, UNKNOWN","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    enum TaskType {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"        TODO, DEADLINE, EVENT, UNKNOWN","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"        greet();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"        loadFile(savedFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"        start();","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"        exit();","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(\"    Hello! I\u0027m Anya Forger\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"                         + \"    What can I do for you?\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"                         + \"    Enter a command: list/mark/unmark/todo/deadline/event/bye\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"    public static void exit() {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"    public static void start() {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"        scan:","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"                String[] arguments \u003d sc.nextLine().split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"                Command command \u003d getCommand(arguments[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"                String details;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"                if (arguments.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"                    details \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"                    details \u003d arguments[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"                switch (command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"                    case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"                        saveFile(savedFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tim-pipi"},"content":"                        break scan;","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"tim-pipi"},"content":"                    case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"tim-pipi"},"content":"                        list();","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"tim-pipi"},"content":"                    case MARK: {","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument or Multiple arguments provided","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty() || details.split(\" \").length !\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! Please only input ONE integer after the word mark!\"","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not a number","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"tim-pipi"},"content":"                        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"tim-pipi"},"content":"                            Integer.parseInt(details);","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"tim-pipi"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! Please only input INTEGERs after the word mark!\"","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not within task numbers","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"tim-pipi"},"content":"                        int taskNumber \u003d Integer.parseInt(details);","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"tim-pipi"},"content":"                        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! I don\u0027t see a task with the number:\" + taskNumber","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is already Done (Future implementation)","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"tim-pipi"},"content":"                        t.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve marked this task as Done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    \" + t);","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"tim-pipi"},"content":"                    case UNMARK: {","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument or Multiple arguments provided","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty() || details.split(\" \").length !\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! Please only input ONE integer after the word unmark!\"","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not a number","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"tim-pipi"},"content":"                        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"tim-pipi"},"content":"                            Integer.parseInt(details);","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"tim-pipi"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! Please only input INTEGERs after the word unmark!\"","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not within task numbers","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"tim-pipi"},"content":"                        int taskNumber \u003d Integer.parseInt(details);","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"tim-pipi"},"content":"                        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! I don\u0027t see a task with the number:\" + taskNumber","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"tim-pipi"},"content":"                        t.markAsNotDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve marked this task as Not Done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    \" + t);","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"tim-pipi"},"content":"                    case TODO: {","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument provided","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! Please input a description after the word todo!\"","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d new Todo(details);","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"tim-pipi"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    \" + t);","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"tim-pipi"},"content":"                    case DEADLINE: {","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument or wrong no of arguments provided","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"tim-pipi"},"content":"                        String[] info \u003d details.split(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty() || info.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! Please input in the following format: \"","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"tim-pipi"},"content":"                                    + \"    deadline \u003ctaskName\u003e /by \u003cdeadline\u003e\"","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"tim-pipi"},"content":"                        String taskName \u003d info[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"tim-pipi"},"content":"                        String deadline \u003d info[1].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"tim-pipi"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    \" + t);","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"tim-pipi"},"content":"                    case EVENT: {","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument provided","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! Please input in the following format:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"tim-pipi"},"content":"                                    + \"    event \u003ctaskName\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e\"","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Does not contain /from and /to","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"tim-pipi"},"content":"                        if (!details.contains(\"/from\") \u0026\u0026 !details.contains(\"/to\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! Please input in the following format:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"tim-pipi"},"content":"                                    + \"    event \u003ctaskName\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e\"","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"tim-pipi"},"content":"                        String taskName \u003d details.split(\"/from\")[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"tim-pipi"},"content":"                        String startTime \u003d details.split(\"/from\")[1].trim().split(\"/to\")[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"tim-pipi"},"content":"                        String endTime \u003d details.split(\"/to\")[1].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"tim-pipi"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    \" + t);","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"tim-pipi"},"content":"                    case DELETE: {","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument or Multiple arguments provided","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty() || details.split(\" \").length !\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! Please input in the following format:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"tim-pipi"},"content":"                                    + \"    delete \u003ctaskNumber\u003e\"","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not a number","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"tim-pipi"},"content":"                        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"tim-pipi"},"content":"                            Integer.parseInt(details);","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"tim-pipi"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! Please only input INTEGERs after the word unmark!\"","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not within task numbers","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"tim-pipi"},"content":"                        int taskNumber \u003d Integer.parseInt(details);","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"tim-pipi"},"content":"                        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":220,"author":{"gitId":"tim-pipi"},"content":"                                    + \"☹ Waku waku! I don\u0027t see a task with the number:\" + taskNumber","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"tim-pipi"},"content":"                                    + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"tim-pipi"},"content":"                        tasks.remove(t);","lastModifiedDate":"2023-08-24"},{"lineNumber":226,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":228,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve removed this task as Not Done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    \" + t);","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"tim-pipi"},"content":"                    default:","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"☹ Waku waku!!! I\u0027m sorry, but I don\u0027t know what that means (yet) :( \");","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"tim-pipi"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"tim-pipi"},"content":"            } catch (AnyaException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":241,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":243,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":244,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":245,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":246,"author":{"gitId":"tim-pipi"},"content":"    public static void list() {","lastModifiedDate":"2023-08-24"},{"lineNumber":247,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":248,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(\"    Waku waku!\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"tim-pipi"},"content":"                         + \"    Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"tim-pipi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"tim-pipi"},"content":"            System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-08-24"},{"lineNumber":252,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":253,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":255,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":256,"author":{"gitId":"tim-pipi"},"content":"    private static Command getCommand(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":257,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"bye\")) return Command.BYE;","lastModifiedDate":"2023-08-24"},{"lineNumber":258,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"list\")) return Command.LIST;","lastModifiedDate":"2023-08-24"},{"lineNumber":259,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"mark\")) return Command.MARK;","lastModifiedDate":"2023-08-24"},{"lineNumber":260,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"unmark\")) return Command.UNMARK;","lastModifiedDate":"2023-08-24"},{"lineNumber":261,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"todo\")) return Command.TODO;","lastModifiedDate":"2023-08-24"},{"lineNumber":262,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"deadline\")) return Command.DEADLINE;","lastModifiedDate":"2023-08-24"},{"lineNumber":263,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"event\")) return Command.EVENT;","lastModifiedDate":"2023-08-24"},{"lineNumber":264,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"delete\")) return Command.DELETE;","lastModifiedDate":"2023-08-24"},{"lineNumber":265,"author":{"gitId":"tim-pipi"},"content":"        return Command.UNKNOWN;","lastModifiedDate":"2023-08-24"},{"lineNumber":266,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":267,"author":{"gitId":"tim-pipi"},"content":"    private static TaskType getTaskType(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":268,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"T\")) return TaskType.TODO;","lastModifiedDate":"2023-09-01"},{"lineNumber":269,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"D\")) return TaskType.DEADLINE;","lastModifiedDate":"2023-09-01"},{"lineNumber":270,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"E\")) return TaskType.EVENT;","lastModifiedDate":"2023-09-01"},{"lineNumber":271,"author":{"gitId":"tim-pipi"},"content":"        return TaskType.UNKNOWN;","lastModifiedDate":"2023-09-01"},{"lineNumber":272,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":273,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":274,"author":{"gitId":"tim-pipi"},"content":"    private static void loadFile(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":275,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":276,"author":{"gitId":"tim-pipi"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":277,"author":{"gitId":"tim-pipi"},"content":"            File directory \u003d file.getParentFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":278,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":279,"author":{"gitId":"tim-pipi"},"content":"            // Check if directory exists","lastModifiedDate":"2023-09-01"},{"lineNumber":280,"author":{"gitId":"tim-pipi"},"content":"            if (directory.mkdir()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":281,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(\"Directory was not found. New directory \" + directory.getName() + \" is created\");","lastModifiedDate":"2023-09-01"},{"lineNumber":282,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":283,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":284,"author":{"gitId":"tim-pipi"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":285,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(\"File is not found. New File created: \" + file.getName());","lastModifiedDate":"2023-09-01"},{"lineNumber":286,"author":{"gitId":"tim-pipi"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":287,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(\"File already exists. Your data is loaded\");","lastModifiedDate":"2023-09-01"},{"lineNumber":288,"author":{"gitId":"tim-pipi"},"content":"                readFile(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":289,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":290,"author":{"gitId":"tim-pipi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":291,"author":{"gitId":"tim-pipi"},"content":"            System.out.println(\"An error occurred.\" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":292,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":293,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":294,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":295,"author":{"gitId":"tim-pipi"},"content":"    private static void readFile(File file) throws FileNotFoundException {","lastModifiedDate":"2023-09-01"},{"lineNumber":296,"author":{"gitId":"tim-pipi"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":297,"author":{"gitId":"tim-pipi"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":298,"author":{"gitId":"tim-pipi"},"content":"            String[] arguments \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":299,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":300,"author":{"gitId":"tim-pipi"},"content":"            TaskType taskType \u003d getTaskType(arguments[0].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":301,"author":{"gitId":"tim-pipi"},"content":"            boolean isDone \u003d arguments[1].trim().equals(\"1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":302,"author":{"gitId":"tim-pipi"},"content":"            String description \u003d arguments[2].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":303,"author":{"gitId":"tim-pipi"},"content":"            String by \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":304,"author":{"gitId":"tim-pipi"},"content":"            String from \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":305,"author":{"gitId":"tim-pipi"},"content":"            String to \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":306,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":307,"author":{"gitId":"tim-pipi"},"content":"            if (arguments.length \u003d\u003d 4) {","lastModifiedDate":"2023-09-01"},{"lineNumber":308,"author":{"gitId":"tim-pipi"},"content":"                by \u003d arguments[3].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":309,"author":{"gitId":"tim-pipi"},"content":"            } else if (arguments.length \u003d\u003d 5) {","lastModifiedDate":"2023-09-01"},{"lineNumber":310,"author":{"gitId":"tim-pipi"},"content":"                from \u003d arguments[3].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":311,"author":{"gitId":"tim-pipi"},"content":"                to \u003d arguments[4].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":312,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":313,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":314,"author":{"gitId":"tim-pipi"},"content":"            Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":315,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":316,"author":{"gitId":"tim-pipi"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":317,"author":{"gitId":"tim-pipi"},"content":"            case TODO:","lastModifiedDate":"2023-09-01"},{"lineNumber":318,"author":{"gitId":"tim-pipi"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":319,"author":{"gitId":"tim-pipi"},"content":"                if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":320,"author":{"gitId":"tim-pipi"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":321,"author":{"gitId":"tim-pipi"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":322,"author":{"gitId":"tim-pipi"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":323,"author":{"gitId":"tim-pipi"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":324,"author":{"gitId":"tim-pipi"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-01"},{"lineNumber":325,"author":{"gitId":"tim-pipi"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":326,"author":{"gitId":"tim-pipi"},"content":"                if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":327,"author":{"gitId":"tim-pipi"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":328,"author":{"gitId":"tim-pipi"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":329,"author":{"gitId":"tim-pipi"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":330,"author":{"gitId":"tim-pipi"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":331,"author":{"gitId":"tim-pipi"},"content":"            case EVENT:","lastModifiedDate":"2023-09-01"},{"lineNumber":332,"author":{"gitId":"tim-pipi"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":333,"author":{"gitId":"tim-pipi"},"content":"                if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":334,"author":{"gitId":"tim-pipi"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":335,"author":{"gitId":"tim-pipi"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":336,"author":{"gitId":"tim-pipi"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":337,"author":{"gitId":"tim-pipi"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":338,"author":{"gitId":"tim-pipi"},"content":"            default:","lastModifiedDate":"2023-09-01"},{"lineNumber":339,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(\"Unknown task type.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":340,"author":{"gitId":"tim-pipi"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":341,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":342,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":343,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":344,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":345,"author":{"gitId":"tim-pipi"},"content":"    private static void saveFile(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":346,"author":{"gitId":"tim-pipi"},"content":"        // Overwrite everything - clear the file","lastModifiedDate":"2023-09-01"},{"lineNumber":347,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":348,"author":{"gitId":"tim-pipi"},"content":"            writeToFile(filePath, \"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":349,"author":{"gitId":"tim-pipi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":350,"author":{"gitId":"tim-pipi"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":351,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":352,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":353,"author":{"gitId":"tim-pipi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":354,"author":{"gitId":"tim-pipi"},"content":"            String text \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":355,"author":{"gitId":"tim-pipi"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":356,"author":{"gitId":"tim-pipi"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":357,"author":{"gitId":"tim-pipi"},"content":"                text +\u003d task.formatToSave() + System.lineSeparator();","lastModifiedDate":"2023-09-01"},{"lineNumber":358,"author":{"gitId":"tim-pipi"},"content":"                appendToFile(filePath, text);","lastModifiedDate":"2023-09-01"},{"lineNumber":359,"author":{"gitId":"tim-pipi"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":360,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":361,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":362,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":363,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":364,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":365,"author":{"gitId":"tim-pipi"},"content":"    private static void writeToFile(String filePath, String text) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":366,"author":{"gitId":"tim-pipi"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":367,"author":{"gitId":"tim-pipi"},"content":"        fw.write(text);","lastModifiedDate":"2023-09-01"},{"lineNumber":368,"author":{"gitId":"tim-pipi"},"content":"        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":369,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":370,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":371,"author":{"gitId":"tim-pipi"},"content":"    private static void appendToFile(String filePath, String text) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":372,"author":{"gitId":"tim-pipi"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-01"},{"lineNumber":373,"author":{"gitId":"tim-pipi"},"content":"        fw.write(text);","lastModifiedDate":"2023-09-01"},{"lineNumber":374,"author":{"gitId":"tim-pipi"},"content":"        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":375,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tim-pipi":373,"-":3}},{"path":"src/main/java/AnyaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"public class AnyaException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"    public AnyaException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"        return \"D\" + super.formatToSave() + \" | \" + this.by;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":16}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"        return \"E\" + super.formatToSave() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":18}},{"path":"src/main/java/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"public class InvalidArgumentException extends AnyaException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    public String getStatusNumber() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with 1","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"        return \" | \" + getStatusNumber() + \" | \" + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"        return \"[\" + this.getStatusIcon() +\"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"        return \"T\" + super.formatToSave();","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"deadline homework /by tonight","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"event class /from 4pm /to 6pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"unmark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"java -classpath ..\\bin Anya \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tim-pipi":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"java -classpath ../bin Anya \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tim-pipi":1,"-":37}}]
