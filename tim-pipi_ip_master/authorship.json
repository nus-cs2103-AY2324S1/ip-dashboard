[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"# Anya project template","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"3. After that, locate the `src/main/java/Anya.java` file, right-click it, and choose `Run Anya.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tim-pipi":2,"-":22}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"T | 1 | read book","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"D | 0 | return book | 2019-12-01T06:30","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"E | 0 | project meeting | 2019-12-01T06:30 | 2019-12-01T06:30","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"T | 0 | join sports club","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"T | 0 | sleep","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"D | 0 | sleep | 2019-12-01T06:30","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"T | 0 | sleep","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tim-pipi":7}},{"path":"src/main/java/anya/Anya.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import anya.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import anya.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import anya.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"import anya.storage.Storage.StorageOperationException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"import anya.storage.Storage.InvalidStorageFilePathException;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"import anya.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":" * Represents a chatbot named anya.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"public class Anya {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    public Anya(String storageFilePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"            this.storage \u003d new Storage(storageFilePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"            this.parser \u003d new Parser(storage, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"        } catch (InvalidStorageFilePathException | StorageOperationException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"            ui.showInitError();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"        ui.showGreetingMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"        parser.parse();","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"        ui.showExitMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"        new Anya(\"data/tasks.txt\").run();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tim-pipi":43,"-":1}},{"path":"src/main/java/anya/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"public enum Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, UNKNOWN","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":5}},{"path":"src/main/java/anya/exception/AnyaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"public class AnyaException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"    public AnyaException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":7}},{"path":"src/main/java/anya/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"public class InvalidArgumentException extends AnyaException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":7}},{"path":"src/main/java/anya/messages/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.messages;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"public class Messages {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_GREETING \u003d \"Hello! I\u0027m Anya Forger.\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"                                                + \"What can I do for you?\";","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_ERROR_LOADING \u003d \"Error loading file.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_ERROR_INIT \u003d \"Error initializing Bot.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_EXIT \u003d \"Bye! Hope to see you again.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":13}},{"path":"src/main/java/anya/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import anya.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import anya.exception.AnyaException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import anya.exception.InvalidArgumentException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import anya.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import anya.task.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    public Parser(Storage storage, TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"bye\")) return Command.BYE;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"list\")) return Command.LIST;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"mark\")) return Command.MARK;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"unmark\")) return Command.UNMARK;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"todo\")) return Command.TODO;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"deadline\")) return Command.DEADLINE;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"event\")) return Command.EVENT;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"delete\")) return Command.DELETE;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"        return Command.UNKNOWN;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"    public void parse() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"        scan:","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"        while (true) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"                String[] arguments \u003d sc.nextLine().split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"                Command command \u003d parseCommand(arguments[0]);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"                String details;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"                if (arguments.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"                    details \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"                    details \u003d arguments[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"                switch (command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"                    case BYE:","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"                        storage.save(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"                        break scan;","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"                    case LIST:","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"                        tasks.list();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"                    case MARK: {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument or Multiple arguments provided","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty() || details.split(\" \").length !\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! Please only input ONE integer after the word mark!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not a number","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"                        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"                            Integer.parseInt(details);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"tim-pipi"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! Please only input INTEGERs after the word mark!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not within anya.task numbers","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"tim-pipi"},"content":"                        int taskNumber \u003d Integer.parseInt(details);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"tim-pipi"},"content":"                        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! I don\u0027t see a task with the number:\" + taskNumber);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is already Done (Future implementation)","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"tim-pipi"},"content":"                        t.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve marked this task as Done:\\n\" + t);","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"tim-pipi"},"content":"                    case UNMARK: {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument or Multiple arguments provided","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty() || details.split(\" \").length !\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! Please only input ONE integer after the word unmark!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not a number","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"tim-pipi"},"content":"                        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"tim-pipi"},"content":"                            Integer.parseInt(details);","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"tim-pipi"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! Please only input INTEGERs after the word unmark!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not within anya.task numbers","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"tim-pipi"},"content":"                        int taskNumber \u003d Integer.parseInt(details);","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"tim-pipi"},"content":"                        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! I don\u0027t see a task with the number:\" + taskNumber);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"tim-pipi"},"content":"                        t.markAsNotDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve marked this task as Not Done:\\n\" + t);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"tim-pipi"},"content":"                    case TODO: {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument provided","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! Please input a description after the word todo!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d new Todo(details);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"tim-pipi"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve added this task:\\n\" + t);","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"tim-pipi"},"content":"                    case DEADLINE: {","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument or wrong no of arguments provided","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"tim-pipi"},"content":"                        String[] info \u003d details.split(\"/by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty() || info.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! Please input in the following format: \"","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"tim-pipi"},"content":"                                    + \"    deadline \u003ctaskName\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"tim-pipi"},"content":"                        String taskName \u003d info[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"tim-pipi"},"content":"                        String deadline \u003d info[1].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"tim-pipi"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve added this task:\\n\" + t);","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"tim-pipi"},"content":"                    case EVENT: {","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument provided","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! Please input in the following format:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"tim-pipi"},"content":"                                    + \"    event \u003ctaskName\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e\");","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Does not contain /from and /to","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"tim-pipi"},"content":"                        if (!details.contains(\"/from\") \u0026\u0026 !details.contains(\"/to\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! Please input in the following format:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"tim-pipi"},"content":"                                    + \"    event \u003ctaskName\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e\");","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"tim-pipi"},"content":"                        String taskName \u003d details.split(\"/from\")[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"tim-pipi"},"content":"                        String startTime \u003d details.split(\"/from\")[1].trim().split(\"/to\")[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"tim-pipi"},"content":"                        LocalDateTime startTimeDate \u003d convertStringToDate(startTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"tim-pipi"},"content":"                        String endTime \u003d details.split(\"/to\")[1].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"tim-pipi"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Waku waku! I\u0027ve added this task:\\n\" + t);","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"tim-pipi"},"content":"                        break;","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"tim-pipi"},"content":"                    case DELETE: {","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"tim-pipi"},"content":"                        // Error: No argument or Multiple arguments provided","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"tim-pipi"},"content":"                        if (details.isEmpty() || details.split(\" \").length !\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! Please input in the following format:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"tim-pipi"},"content":"                                    + \"    delete \u003ctaskNumber\u003e\");","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not a number","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"tim-pipi"},"content":"                        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"tim-pipi"},"content":"                            Integer.parseInt(details);","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"tim-pipi"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! Please only input INTEGERs after the word unmark!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"tim-pipi"},"content":"                        // Error: Argument provided is not within anya.task numbers","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"tim-pipi"},"content":"                        int taskNumber \u003d Integer.parseInt(details);","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"tim-pipi"},"content":"                        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"tim-pipi"},"content":"                            throw new InvalidArgumentException(\"☹ Waku waku! I don\u0027t see a anya.task with the number:\" + taskNumber);","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"tim-pipi"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"tim-pipi"},"content":"                        Task t \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"tim-pipi"},"content":"                        tasks.remove(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"tim-pipi"},"content":"                        String result \u003d \"    Waku waku! I\u0027ve removed this task:\\n\" + t;","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"tim-pipi"},"content":"                        result +\u003d \"    Now you have \" + tasks.size() + \" tasks in the list!\";","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(result);","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"tim-pipi"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"tim-pipi"},"content":"                    default:","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"tim-pipi"},"content":"                        String result \u003d \"☹ Waku waku!!! I\u0027m sorry, but I don\u0027t know what that means (yet) :( \";","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"tim-pipi"},"content":"                        System.out.println(result);","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"tim-pipi"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"tim-pipi"},"content":"            } catch (AnyaException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"tim-pipi"},"content":"    private LocalDateTime convertStringToDate(String dateString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"tim-pipi"},"content":"        return LocalDateTime.parse(dateString);","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":191}},{"path":"src/main/java/anya/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import anya.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    private final String storageFilePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    public Storage(String path) throws InvalidStorageFilePathException {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"        this.storageFilePath \u003d path;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"        if (!isValidPath(path)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"     * Returns true if the given path is acceptable as a storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"     * The file path is considered acceptable if it ends with \u0027.txt\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"    private static boolean isValidPath(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"        return filePath.endsWith(\".txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"    public TaskList load() throws StorageOperationException {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"        // Check for directory","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"        File source \u003d new File(storageFilePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"        File directory \u003d source.getParentFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"        if (directory.mkdir()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"            System.out.println(\"Directory was not found. New directory \" + directory.getName() + \" is created\");","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"            if (source.createNewFile()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(\"File is not found. New File created: \" + source.getName());","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"                return new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(\"File already exists. Your data is loaded\");","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"                return readFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + storageFilePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"    public TaskList readFile() throws FileNotFoundException {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"        Scanner sc \u003d new Scanner(new File(storageFilePath));","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"                tasks.add(convertStringToTask(sc.nextLine()));","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"            } catch (UnknownTaskException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"tim-pipi"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"tim-pipi"},"content":"    public Task convertStringToTask(String input) throws UnknownTaskException {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"tim-pipi"},"content":"        String[] args \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"tim-pipi"},"content":"        String taskType \u003d args[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"tim-pipi"},"content":"        boolean isDone \u003d args[1].trim().equals(\"1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"tim-pipi"},"content":"        String description \u003d args[2].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"tim-pipi"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"tim-pipi"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"tim-pipi"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"tim-pipi"},"content":"            String by \u003d args[3].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"tim-pipi"},"content":"            return new Deadline(description, by, isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"tim-pipi"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"tim-pipi"},"content":"            String from \u003d args[3].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"tim-pipi"},"content":"            String to \u003d args[4].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"tim-pipi"},"content":"            return new Event(description, from, to, isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"tim-pipi"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"tim-pipi"},"content":"            throw new UnknownTaskException(\"Unknown task identified: \" + taskType);","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"tim-pipi"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"tim-pipi"},"content":"            clearFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"tim-pipi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"tim-pipi"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"tim-pipi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"tim-pipi"},"content":"            String text \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"tim-pipi"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"tim-pipi"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"tim-pipi"},"content":"                text +\u003d convertTaskToString(t) + System.lineSeparator();","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"tim-pipi"},"content":"                appendToFile(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"tim-pipi"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"tim-pipi"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"tim-pipi"},"content":"    public String convertTaskToString(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"tim-pipi"},"content":"        return task.formatToSave();","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"tim-pipi"},"content":"    private void clearFile() throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"tim-pipi"},"content":"        FileWriter fw \u003d new FileWriter(this.storageFilePath, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"tim-pipi"},"content":"        fw.write(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"tim-pipi"},"content":"        fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"tim-pipi"},"content":"    private void appendToFile(String text) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"tim-pipi"},"content":"        FileWriter fw \u003d new FileWriter(this.storageFilePath, true);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"tim-pipi"},"content":"        fw.write(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"tim-pipi"},"content":"        fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"tim-pipi"},"content":"    private LocalDateTime convertStringToDate(String dateString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"tim-pipi"},"content":"        return LocalDateTime.parse(dateString);","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"tim-pipi"},"content":"     * Signals that the given file path does not fulfill the storage filepath constraints.","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"tim-pipi"},"content":"    public static class InvalidStorageFilePathException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"tim-pipi"},"content":"        public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"tim-pipi"},"content":"            super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"tim-pipi"},"content":"     * Signals that some error has occured while trying to convert and read/write data between the application","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"tim-pipi"},"content":"     * and the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"tim-pipi"},"content":"    public static class StorageOperationException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"tim-pipi"},"content":"        public StorageOperationException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"tim-pipi"},"content":"            super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"tim-pipi"},"content":"    public static class UnknownTaskException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"tim-pipi"},"content":"        public UnknownTaskException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"tim-pipi"},"content":"            super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":152}},{"path":"src/main/java/anya/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"        this.by \u003d super.convertStringToDate(by);","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    public Deadline(String description, String by, Boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"        this.by \u003d super.convertStringToDate(by);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"            this.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    public String getType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"        return \"D\";","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"        return \"D\" + super.formatToSave() + \" | \" + this.by;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"    public String formatDate(LocalDateTime date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDate(this.by) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":39}},{"path":"src/main/java/anya/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"        this.from \u003d super.convertStringToDate(from);","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"        this.to \u003d super.convertStringToDate(to);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"    public Event(String description, String from, String to, Boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"        this.from \u003d super.convertStringToDate(from);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"        this.to \u003d super.convertStringToDate(to);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"            this.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"    public String getType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"        return \"E\";","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"        return \"E\" + super.formatToSave() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"    public String formatDate(LocalDateTime date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDate(this.from) + \" to: \" + formatDate(this.to) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":43}},{"path":"src/main/java/anya/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done anya.task with X","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    public String getStatusNumber() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done anya.task with 1","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"    public String getType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"        return \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"        return \" | \" + getStatusNumber() + \" | \" + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"    public LocalDateTime convertStringToDate(String dateString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"        return LocalDateTime.parse(dateString);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"        return \"[\" + this.getStatusIcon() +\"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":50}},{"path":"src/main/java/anya/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    public void remove(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"    public int size() {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"    public void list() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"        StringBuilder list \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"            list.append(System.lineSeparator());","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"            list.append(String.format((i + 1) + \". \" + tasks.get(i)));","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(list.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":40}},{"path":"src/main/java/anya/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"            this.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    public String getType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"        return \"T\";","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"        return \"T\" + super.formatToSave();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":27}},{"path":"src/main/java/anya/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":" * UI of the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":" * Deals with interactions with user.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    private final static String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"    /** A platform independent line separator. */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    private final static String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    private final Scanner in;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"     * Shows message to the user .","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"     * @param message message to be shown.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"    public void showToUser(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"        out.println(LS + DIVIDER + LS","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"                + message.replace(\"\\n\", LS)","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"                + LS + DIVIDER + LS);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"    /** Generates and prints the welcome message upon the start of the application. */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"        showToUser(MESSAGE_GREETING);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"        showToUser(MESSAGE_ERROR_LOADING);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"    public void showExitMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"        showToUser(MESSAGE_EXIT);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"    public void showTaskList(String list) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"        showToUser(list);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"    public void showInitError() {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"        showToUser(MESSAGE_ERROR_INIT);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"deadline homework /by tonight","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"event class /from 4pm /to 6pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"unmark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"java -classpath ..\\bin Anya \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tim-pipi":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"java -classpath ../bin Anya \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tim-pipi":1,"-":37}}]
