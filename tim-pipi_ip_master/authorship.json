[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"# Anya Forger - Your Task Management Chat bot","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"Anya Forger is a chat bot inspired by the character from the [_Spy x Family_](https://en.wikipedia.org/wiki/Spy_%C3%97_Family) anime. She is your ultimate task management companion. Whether you\u0027re a secret agent or just someone with a busy schedule, Anya can help you stay organized and on top of your tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"## Features:","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"* **Task Management**: Anya Forger can create, edit, and track your tasks effortlessly.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"* **Priority Sorting**: Arrange your tasks by priority to ensure you focus on what matters most.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"* **Deadline Alerts**: Receive timely reminders, so you never miss a deadline.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"* **Cross-Device Sync**: Access your tasks from anywhere, on any device.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"## üöÄMission Accomplished:","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"\u003e \"Anya Forger is the secret agent of Task Management.\" - Anonymous","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"## Task List:","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"- [ ] Finish coding the chat-bot","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"- [ ] Test Anya\u0027s task management features","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"- [ ] Write documentation","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"- [ ] Deploy Anya to production!","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"## Getting Started:","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"1. Download the `anya.jar` file from [here]()","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"2. Run the following command:","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"java -jar Anya.jar ","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"\u003e ‚úèÔ∏è Note: run the command in the same folder as the jar file","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"If you are Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"```java","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"public class Main {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"tim-pipi":30,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"        toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"    mainClass.set(\"anya.Anya\")","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"    archiveBaseName \u003d \"Anya\"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tim-pipi":22,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"T | 1 | read book","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"D | 1 | return book | 2019-12-01T06:30","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"E | 0 | project meeting | 2019-12-01T06:30 | 2019-12-01T06:30","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"T | 0 | sleep","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"T | 0 | sleep","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tim-pipi":5}},{"path":"src/main/java/anya/Anya.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import anya.exception.AnyaException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import anya.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import anya.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import anya.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import anya.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":" * Represents a chat bot named anya.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"public class Anya {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    private static final String STORAGE_FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new instance of the {@code Anya} class with the specified storage file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"     * This constructor initializes the user interface (UI), storage, and task list parser for the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"     * It also loads tasks from the specified storage file and handles exceptions related to storage operations.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"     * @throws RuntimeException If there is an issue with the storage file path or storage operation,","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"     *                          a runtime exception is thrown, and an initialization error message is","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"     *                          displayed through the UI.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"    public Anya() {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"            this.storage \u003d new Storage(STORAGE_FILE_PATH);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"            this.parser \u003d new Parser(storage, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"        } catch (AnyaException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"            ui.showInitError();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"            return parser.parse(input);","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"        } catch (AnyaException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tim-pipi":45,"-":1}},{"path":"src/main/java/anya/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"tim-pipi":12}},{"path":"src/main/java/anya/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import anya.gui.MainWindow;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    private Anya anya \u003d new Anya();","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(anya.Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"            stage.setTitle(\"Anya Forger\");","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"            stage.getIcons().add(new Image(\"/images/anya.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAnya(anya);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"tim-pipi":35}},{"path":"src/main/java/anya/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":" * Enum representing the available commands in the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":" * This enum defines the various command types that can be used by the user to interact with the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":" * Each enum value corresponds to a specific user command, such as \"BYE\" for exiting the application or \"TODO\" for","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":" * adding a to-do task.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"public enum Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, UNKNOWN","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":12}},{"path":"src/main/java/anya/exception/AnyaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":" * Custom exception class for handling Anya-specific exceptions.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":" * This class extends the standard Java Exception class to create custom exceptions tailored for the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":" * It allows for the propagation of Anya-specific error messages when exceptional conditions occur during execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":" * @see Exception","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"public class AnyaException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new instance of the {@code AnyaException} class with the specified error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"     * @param message A descriptive error message explaining the exceptional condition.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"    public AnyaException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":20}},{"path":"src/main/java/anya/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":" * Custom exception class for handling invalid arguments in Anya commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":" * This class extends the {@code AnyaException} class to create custom exceptions specifically for cases where","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":" * invalid arguments are provided to Anya commands. It allows for the propagation of error messages indicating","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":" * that an invalid argument was detected.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":" * @see AnyaException","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"public class InvalidArgumentException extends AnyaException {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new instance of the {@code InvalidArgumentException} class with the specified error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"     * @param message A descriptive error message explaining the invalid argument condition.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":21}},{"path":"src/main/java/anya/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.gui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"    public static DialogBox getAnyaDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"tim-pipi":61}},{"path":"src/main/java/anya/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.gui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import anya.Anya;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import anya.messages.Messages;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    private Anya anya;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/damian.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"    private Image anyaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/anya.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"    public void setAnya(Anya a) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"        anya \u003d a;","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"                DialogBox.getAnyaDialog(Messages.MESSAGE_GREETING, anyaImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"        String response \u003d anya.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"                DialogBox.getAnyaDialog(response, anyaImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"tim-pipi":60}},{"path":"src/main/java/anya/messages/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.messages;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"public class Messages {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"    public static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"    /** A platform independent line separator. */","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    public static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_GREETING \u003d \"Hello! I\u0027m Anya Forger.\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"                                                + \"What can I do for you?\";","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_ERROR_LOADING \u003d \"Error loading file.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_ERROR_INIT \u003d \"Error initializing Bot.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_EXIT \u003d \"Bye! Hope to see you again.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_SUCCESS_LOADING \u003d \"Error loading file.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_SUCCESS_ADD \u003d \"I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_SUCCESS_DELETE \u003d \"I\u0027ve deleted this task:\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_SUCCESS_MARK \u003d \"I\u0027ve marked this task as \u0027DONE\u0027:\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_SUCCESS_UNMARK \u003d \"I\u0027ve marked this task as \u0027NOT DONE\u0027:\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_TASK_SIZE \u003d \"Now you have tasks.size() tasks in the list!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_TASK_LIST \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_TASK_FOUND \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_TASK_NOT_FOUND \u003d \"There are no matching tasks found\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    public static final String MESSAGE_ERROR_PREFIX \u003d \"Oh no!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":27}},{"path":"src/main/java/anya/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import anya.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import anya.exception.AnyaException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import anya.exception.InvalidArgumentException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"import anya.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"import anya.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"import anya.ui.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":" * The `Parser` class is responsible for interpreting user input","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":" * and executing corresponding actions in the Anya application.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":" * It handles parsing commands, validating arguments,","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":" * and performing the appropriate operations on tasks and data storage.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Parser` instance with the specified storage and task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"     * @param storage The storage component responsible for saving and loading task data.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"     * @param tasks   The task list containing the user\u0027s tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"    public Parser(Storage storage, TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"     * @return The command represented by the user input, or {@code Command.UNKNOWN} if the input is not recognized.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"            return Command.BYE;","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"            return Command.LIST;","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"mark\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"            return Command.MARK;","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"unmark\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"            return Command.UNMARK;","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"todo\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"            return Command.TODO;","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"deadline\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"tim-pipi"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"event\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"tim-pipi"},"content":"            return Command.EVENT;","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"delete\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"tim-pipi"},"content":"            return Command.DELETE;","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"tim-pipi"},"content":"        if (input.equals(\"find\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"tim-pipi"},"content":"            return Command.FIND;","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"tim-pipi"},"content":"        return Command.UNKNOWN;","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"tim-pipi"},"content":"     * Executes the core functionality of parsing user input and performing relevant actions.","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"tim-pipi"},"content":"     * This method reads user input, parses it, and executes the appropriate command based on the parsed input.","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"tim-pipi"},"content":"     * It handles various command types and associated error checks, displaying appropriate messages and performing","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"tim-pipi"},"content":"     * actions like marking tasks as done, adding tasks, deleting tasks, and more.","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"tim-pipi"},"content":"     * @return The output of the command in String.","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"tim-pipi"},"content":"    public String parse(String input) throws AnyaException {","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"tim-pipi"},"content":"        String[] arguments \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"tim-pipi"},"content":"        Command command \u003d parseCommand(arguments[0]);","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"tim-pipi"},"content":"        String details;","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"tim-pipi"},"content":"        if (arguments.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"tim-pipi"},"content":"            details \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"tim-pipi"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"tim-pipi"},"content":"            details \u003d arguments[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"tim-pipi"},"content":"        switch (command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"tim-pipi"},"content":"        case BYE:","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"tim-pipi"},"content":"            return executeByeCommand();","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"tim-pipi"},"content":"        case LIST:","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"tim-pipi"},"content":"            return executeListCommand();","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"tim-pipi"},"content":"        case MARK: {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"tim-pipi"},"content":"            return executeMarkCommand(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"tim-pipi"},"content":"        case UNMARK: {","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"tim-pipi"},"content":"            return executeUnmarkCommand(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"tim-pipi"},"content":"        case TODO: {","lastModifiedDate":"2023-09-15"},{"lineNumber":106,"author":{"gitId":"tim-pipi"},"content":"            return executeTodoCommand(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"tim-pipi"},"content":"        case DEADLINE: {","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"tim-pipi"},"content":"            return executeDeadlineCommand(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"tim-pipi"},"content":"        case EVENT: {","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"tim-pipi"},"content":"            return executeEventCommand(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"tim-pipi"},"content":"        case DELETE: {","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"tim-pipi"},"content":"            return executeDeleteCommand(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"tim-pipi"},"content":"        case FIND: {","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"tim-pipi"},"content":"            return executeFindCommand(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"tim-pipi"},"content":"        default:","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"tim-pipi"},"content":"            throw new AnyaException(\"I\u0027m sorry, but I don\u0027t know what that means (yet) :( \");","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"tim-pipi"},"content":"    private String executeFindCommand(String details) {","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"tim-pipi"},"content":"        TaskList matchingTasks \u003d tasks.find(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"tim-pipi"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"tim-pipi"},"content":"            return ui.showTaskNotFound();","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"tim-pipi"},"content":"        return ui.showTaskFound(matchingTasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":132,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"tim-pipi"},"content":"    private String executeDeleteCommand(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"tim-pipi"},"content":"        validateDeleteArguments(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":135,"author":{"gitId":"tim-pipi"},"content":"        validateTypeOfArguments(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":136,"author":{"gitId":"tim-pipi"},"content":"        int taskNumber \u003d Integer.parseInt(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":137,"author":{"gitId":"tim-pipi"},"content":"        validateTaskNumber(taskNumber);","lastModifiedDate":"2023-09-15"},{"lineNumber":138,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"tim-pipi"},"content":"        Task t \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-15"},{"lineNumber":140,"author":{"gitId":"tim-pipi"},"content":"        tasks.remove(t);","lastModifiedDate":"2023-09-15"},{"lineNumber":141,"author":{"gitId":"tim-pipi"},"content":"        return ui.showTaskDeleteSuccess(t, tasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":142,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"tim-pipi"},"content":"    private static void validateDeleteArguments(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"tim-pipi"},"content":"        // Error: No argument or Multiple arguments provided","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"tim-pipi"},"content":"        if (details.isEmpty() || details.split(\" \").length !\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"tim-pipi"},"content":"            throw new InvalidArgumentException(\"‚òπ Waku waku! Please input in the following format:\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"tim-pipi"},"content":"                    + \"    delete \u003ctaskNumber\u003e\");","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"tim-pipi"},"content":"    private String executeEventCommand(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":153,"author":{"gitId":"tim-pipi"},"content":"        validateEventDetails(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":154,"author":{"gitId":"tim-pipi"},"content":"        validateEventTime(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":155,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"tim-pipi"},"content":"        String taskName \u003d details.split(\"/from\")[0].trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":157,"author":{"gitId":"tim-pipi"},"content":"        String startTime \u003d details.split(\"/from\")[1].trim().split(\"/to\")[0].trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":158,"author":{"gitId":"tim-pipi"},"content":"        String endTime \u003d details.split(\"/to\")[1].trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":159,"author":{"gitId":"tim-pipi"},"content":"        Task t \u003d new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-09-15"},{"lineNumber":160,"author":{"gitId":"tim-pipi"},"content":"        tasks.add(t);","lastModifiedDate":"2023-09-15"},{"lineNumber":161,"author":{"gitId":"tim-pipi"},"content":"        return ui.showTaskAddSuccess(t, tasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":162,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":164,"author":{"gitId":"tim-pipi"},"content":"    private static void validateEventTime(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":165,"author":{"gitId":"tim-pipi"},"content":"        // Error: Does not contain /from and /to","lastModifiedDate":"2023-09-15"},{"lineNumber":166,"author":{"gitId":"tim-pipi"},"content":"        if (!details.contains(\"/from\") \u0026\u0026 !details.contains(\"/to\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":167,"author":{"gitId":"tim-pipi"},"content":"            throw new InvalidArgumentException(\"‚òπ Waku waku! Please input in the following format:\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":168,"author":{"gitId":"tim-pipi"},"content":"                    + \"    event \u003ctaskName\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e\");","lastModifiedDate":"2023-09-15"},{"lineNumber":169,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":170,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":171,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":172,"author":{"gitId":"tim-pipi"},"content":"    private static void validateEventDetails(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":173,"author":{"gitId":"tim-pipi"},"content":"        // Error: No argument provided","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"tim-pipi"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"tim-pipi"},"content":"            throw new InvalidArgumentException(\"‚òπ Waku waku! Please input in the following format:\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":176,"author":{"gitId":"tim-pipi"},"content":"                    + \"    event \u003ctaskName\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e\");","lastModifiedDate":"2023-09-15"},{"lineNumber":177,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":178,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"tim-pipi"},"content":"    private String executeDeadlineCommand(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":181,"author":{"gitId":"tim-pipi"},"content":"        String[] info \u003d details.split(\"/by\");","lastModifiedDate":"2023-09-15"},{"lineNumber":182,"author":{"gitId":"tim-pipi"},"content":"        validateDeadlineDetails(details, info);","lastModifiedDate":"2023-09-15"},{"lineNumber":183,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"tim-pipi"},"content":"        String taskName \u003d info[0].trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":185,"author":{"gitId":"tim-pipi"},"content":"        String deadline \u003d info[1].trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":186,"author":{"gitId":"tim-pipi"},"content":"        Task t \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2023-09-15"},{"lineNumber":187,"author":{"gitId":"tim-pipi"},"content":"        tasks.add(t);","lastModifiedDate":"2023-09-15"},{"lineNumber":188,"author":{"gitId":"tim-pipi"},"content":"        return ui.showTaskAddSuccess(t, tasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":189,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":191,"author":{"gitId":"tim-pipi"},"content":"    private static void validateDeadlineDetails(String details, String[] info) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":192,"author":{"gitId":"tim-pipi"},"content":"        // Error: No argument or wrong no of arguments provided","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"tim-pipi"},"content":"        if (details.isEmpty() || info.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"tim-pipi"},"content":"            throw new InvalidArgumentException(\"‚òπ Waku waku! Please input in the following format:\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":195,"author":{"gitId":"tim-pipi"},"content":"                    + \"    deadline \u003ctaskName\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":198,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"tim-pipi"},"content":"    private String executeTodoCommand(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":200,"author":{"gitId":"tim-pipi"},"content":"        validateTodoDescription(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":201,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"tim-pipi"},"content":"        Task t \u003d new Todo(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":203,"author":{"gitId":"tim-pipi"},"content":"        tasks.add(t);","lastModifiedDate":"2023-09-15"},{"lineNumber":204,"author":{"gitId":"tim-pipi"},"content":"        return ui.showTaskAddSuccess(t, tasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":205,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":207,"author":{"gitId":"tim-pipi"},"content":"    private static void validateTodoDescription(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":208,"author":{"gitId":"tim-pipi"},"content":"        // Error: No argument provided","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"tim-pipi"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"tim-pipi"},"content":"            throw new InvalidArgumentException(\"Please input in the following format:\\n\"","lastModifiedDate":"2023-09-15"},{"lineNumber":211,"author":{"gitId":"tim-pipi"},"content":"                    + \"    todo \u003ctaskName\u003e\");","lastModifiedDate":"2023-09-15"},{"lineNumber":212,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"tim-pipi"},"content":"    private String executeByeCommand() throws AnyaException {","lastModifiedDate":"2023-09-15"},{"lineNumber":217,"author":{"gitId":"tim-pipi"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":218,"author":{"gitId":"tim-pipi"},"content":"        return ui.showExitMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":219,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":221,"author":{"gitId":"tim-pipi"},"content":"    private String executeListCommand() throws AnyaException {","lastModifiedDate":"2023-09-15"},{"lineNumber":222,"author":{"gitId":"tim-pipi"},"content":"        return ui.showTaskList(tasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":223,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":224,"author":{"gitId":"tim-pipi"},"content":"    private String executeMarkCommand(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":225,"author":{"gitId":"tim-pipi"},"content":"        validateNumberOfArguments(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":226,"author":{"gitId":"tim-pipi"},"content":"        validateTypeOfArguments(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":227,"author":{"gitId":"tim-pipi"},"content":"        int taskNumber \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":228,"author":{"gitId":"tim-pipi"},"content":"        validateTaskNumber(taskNumber);","lastModifiedDate":"2023-09-15"},{"lineNumber":229,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":230,"author":{"gitId":"tim-pipi"},"content":"        Task t \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-09-15"},{"lineNumber":231,"author":{"gitId":"tim-pipi"},"content":"        tasks.mark(taskNumber);","lastModifiedDate":"2023-09-15"},{"lineNumber":232,"author":{"gitId":"tim-pipi"},"content":"        return ui.showTaskMarkSuccess(t);","lastModifiedDate":"2023-09-15"},{"lineNumber":233,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":234,"author":{"gitId":"tim-pipi"},"content":"    private String executeUnmarkCommand(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":235,"author":{"gitId":"tim-pipi"},"content":"        validateNumberOfArguments(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":236,"author":{"gitId":"tim-pipi"},"content":"        validateTypeOfArguments(details);","lastModifiedDate":"2023-09-15"},{"lineNumber":237,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":238,"author":{"gitId":"tim-pipi"},"content":"        int taskNumber \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":239,"author":{"gitId":"tim-pipi"},"content":"        validateTaskNumber(taskNumber);","lastModifiedDate":"2023-09-15"},{"lineNumber":240,"author":{"gitId":"tim-pipi"},"content":"        Task t \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-09-15"},{"lineNumber":241,"author":{"gitId":"tim-pipi"},"content":"        tasks.unmark(taskNumber);","lastModifiedDate":"2023-09-15"},{"lineNumber":242,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":243,"author":{"gitId":"tim-pipi"},"content":"        return ui.showTaskUnmarkSuccess(t);","lastModifiedDate":"2023-09-15"},{"lineNumber":244,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":245,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":246,"author":{"gitId":"tim-pipi"},"content":"    private static void validateTypeOfArguments(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":247,"author":{"gitId":"tim-pipi"},"content":"        // Error: Argument provided is not a number","lastModifiedDate":"2023-09-02"},{"lineNumber":248,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":249,"author":{"gitId":"tim-pipi"},"content":"            Integer.parseInt(details);","lastModifiedDate":"2023-09-02"},{"lineNumber":250,"author":{"gitId":"tim-pipi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":251,"author":{"gitId":"tim-pipi"},"content":"            throw new InvalidArgumentException(\"‚òπ Waku waku! \"","lastModifiedDate":"2023-09-03"},{"lineNumber":252,"author":{"gitId":"tim-pipi"},"content":"                    + \"Please only input INTEGERs after the word unmark!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":253,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":254,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":255,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":256,"author":{"gitId":"tim-pipi"},"content":"    private static void validateNumberOfArguments(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":257,"author":{"gitId":"tim-pipi"},"content":"        // Error: No argument or Multiple arguments provided","lastModifiedDate":"2023-09-15"},{"lineNumber":258,"author":{"gitId":"tim-pipi"},"content":"        if (details.isEmpty() || details.split(\" \").length !\u003d 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":259,"author":{"gitId":"tim-pipi"},"content":"            throw new InvalidArgumentException(\"‚òπ Waku waku! \"","lastModifiedDate":"2023-09-15"},{"lineNumber":260,"author":{"gitId":"tim-pipi"},"content":"                    + \"Please only input ONE integer after the word unmark!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":261,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":262,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":263,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":264,"author":{"gitId":"tim-pipi"},"content":"    private void validateTaskNumber(int taskNumber) throws InvalidArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":265,"author":{"gitId":"tim-pipi"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e tasks.size() - 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":266,"author":{"gitId":"tim-pipi"},"content":"            throw new InvalidArgumentException(\"‚òπ Waku waku! \"","lastModifiedDate":"2023-09-15"},{"lineNumber":267,"author":{"gitId":"tim-pipi"},"content":"                    + \"I don\u0027t see a task with the number:\" + taskNumber + 1);","lastModifiedDate":"2023-09-15"},{"lineNumber":268,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":269,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":270,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":270}},{"path":"src/main/java/anya/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"import anya.exception.AnyaException;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"import anya.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":" * The `Storage` class is responsible for managing the storage of task data in the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":" * It provides functionality to read, write, and convert task data between the application and the storage file.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"    private final String storageFilePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    private File source;","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Storage` instance with the specified storage file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"     * @param path The file path where task data is stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"     * @throws AnyaException If the provided storage file path is invalid (doesn\u0027t end with \u0027.txt\u0027).","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"    public Storage(String path) throws AnyaException {","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"        this.storageFilePath \u003d path;","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"        if (!isValidPath(path)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"            throw new AnyaException(\"Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"        this.source \u003d new File(path);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"     * Returns true if the given path is acceptable as a storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"     * @param filePath The file path to be checked.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"     * @return true if the file path ends with \u0027.txt\u0027, indicating it\u0027s a valid storage file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"    private static boolean isValidPath(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"        return filePath.endsWith(\".txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"     * Loads task data from the storage file and returns it as a `TaskList`.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"     * @return A `TaskList` containing the loaded tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"     * @throws AnyaException If an error occurs while reading or creating the storage file.","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"    public ArrayList\u003cTask\u003e load() throws AnyaException {","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"        // Check for directory","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"        File directory \u003d this.source.getParentFile();","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"        directory.mkdir();","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"            if (source.createNewFile()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"tim-pipi"},"content":"            return readFile();","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"tim-pipi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"tim-pipi"},"content":"            throw new AnyaException(\"Error writing to file: \" + storageFilePath);","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"tim-pipi"},"content":"     * Reads task data from the storage file and converts it into a `TaskList`.","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"tim-pipi"},"content":"     * @return A `TaskList` containing the tasks read from the storage file.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"tim-pipi"},"content":"     * @throws FileNotFoundException If the storage file is not found.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"tim-pipi"},"content":"    public ArrayList\u003cTask\u003e readFile() throws AnyaException {","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"tim-pipi"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"tim-pipi"},"content":"            Scanner sc \u003d new Scanner(this.source);","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"tim-pipi"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"tim-pipi"},"content":"                Task t \u003d convertStringToTask(sc.nextLine());","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"tim-pipi"},"content":"                tasks.add(t);","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"tim-pipi"},"content":"            return tasks;","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"tim-pipi"},"content":"        } catch (UnknownTaskException | FileNotFoundException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"tim-pipi"},"content":"            throw new AnyaException(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"tim-pipi"},"content":"     * Converts a string representation of a task to a `Task` object.","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"tim-pipi"},"content":"     * @param input The string representation of a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"tim-pipi"},"content":"     * @return A `Task` object parsed from the input string.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"tim-pipi"},"content":"     * @throws UnknownTaskException If an unknown task type is encountered in the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"tim-pipi"},"content":"    public Task convertStringToTask(String input) throws UnknownTaskException {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"tim-pipi"},"content":"        String[] args \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"tim-pipi"},"content":"        String taskType \u003d args[0].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"tim-pipi"},"content":"        boolean isDone \u003d args[1].trim().equals(\"1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"tim-pipi"},"content":"        String description \u003d args[2].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"tim-pipi"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"tim-pipi"},"content":"        case \"T\":","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"tim-pipi"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"tim-pipi"},"content":"        case \"D\":","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"tim-pipi"},"content":"            String by \u003d args[3].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"tim-pipi"},"content":"            return new Deadline(description, by, isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"tim-pipi"},"content":"        case \"E\":","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"tim-pipi"},"content":"            String from \u003d args[3].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"tim-pipi"},"content":"            String to \u003d args[4].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"tim-pipi"},"content":"            return new Event(description, from, to, isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"tim-pipi"},"content":"        default:","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"tim-pipi"},"content":"            throw new UnknownTaskException(\"Unknown task identified: \" + taskType);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"tim-pipi"},"content":"     * Saves the tasks from a `TaskList` to the storage file.","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"tim-pipi"},"content":"     * @param tasks The `TaskList` containing the tasks to be saved.","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"tim-pipi"},"content":"    public void save(TaskList tasks) throws AnyaException {","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"tim-pipi"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"tim-pipi"},"content":"            clearFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"tim-pipi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"tim-pipi"},"content":"            throw new AnyaException(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"tim-pipi"},"content":"        writeToFile(tasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"tim-pipi"},"content":"    private void writeToFile(TaskList tasks) throws AnyaException {","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"tim-pipi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"tim-pipi"},"content":"            String text \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"tim-pipi"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"tim-pipi"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"tim-pipi"},"content":"                text +\u003d convertTaskToString(t) + System.lineSeparator();","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"tim-pipi"},"content":"                appendToFile(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"tim-pipi"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"tim-pipi"},"content":"                throw new AnyaException(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":141,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"tim-pipi"},"content":"     * Converts a `Task` object to its string representation for storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"tim-pipi"},"content":"     * @param task The `Task` object to be converted.","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"tim-pipi"},"content":"     * @return A string representation of the task suitable for storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"tim-pipi"},"content":"    public String convertTaskToString(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"tim-pipi"},"content":"        return task.formatToSave();","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"tim-pipi"},"content":"    private void clearFile() throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"tim-pipi"},"content":"        FileWriter fw \u003d new FileWriter(this.storageFilePath, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"tim-pipi"},"content":"        fw.write(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"tim-pipi"},"content":"        fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"tim-pipi"},"content":"    private void appendToFile(String text) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"tim-pipi"},"content":"        FileWriter fw \u003d new FileWriter(this.storageFilePath, true);","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"tim-pipi"},"content":"        fw.write(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"tim-pipi"},"content":"        fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"tim-pipi"},"content":"     * Signals that an unknown task type was encountered during conversion.","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"tim-pipi"},"content":"    public static class UnknownTaskException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"tim-pipi"},"content":"        public UnknownTaskException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"tim-pipi"},"content":"            super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":175}},{"path":"src/main/java/anya/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":" * Represents a deadline task in the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":" * A deadline task is a task with a specific due date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Deadline` instance with the specified description and deadline date-time.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"     * @param description A description of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"     * @param by          The due date and time of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"        this.by \u003d super.convertStringToDate(by);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Deadline` instance with the specified description, deadline date-time, and done status.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"     * @param description A description of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"     * @param by          The due date and time of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"    public Deadline(String description, String by, Boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"        this.by \u003d super.convertStringToDate(by);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"            this.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"     * Returns the type of task, which is \u0027D\u0027 for deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"     * @return The task type.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"    public String getType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"        return \"D\";","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"     * Formats the `Deadline` object as a string for saving to storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"     * @return A string representation of the `Deadline` object suitable for storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"        return \"D\" + super.formatToSave() + \" | \" + this.by;","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"     * Formats a `LocalDateTime` object as a string in the \"MMM d yyyy HH:mm\" format.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"tim-pipi"},"content":"     * @param date The `LocalDateTime` object to be formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"tim-pipi"},"content":"     * @return A formatted date-time string.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"tim-pipi"},"content":"    public String formatDate(LocalDateTime date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tim-pipi"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"tim-pipi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDate(this.by) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":73}},{"path":"src/main/java/anya/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":" * Represents an event task in the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":" * An event task is a task with a specific start date and time and an end date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Event` instance with the specified description, start date-time, and end date-time.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"     * @param description A description of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"     * @param from        The start date and time of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"     * @param to          The end date and time of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"        this.from \u003d super.convertStringToDate(from);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"        this.to \u003d super.convertStringToDate(to);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Event` instance with the specified description,","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"     * start date-time, end date-time, and done status.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"     * @param description A description of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"     * @param from        The start date and time of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"     * @param to          The end date and time of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"    public Event(String description, String from, String to, Boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"        this.from \u003d super.convertStringToDate(from);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"        this.to \u003d super.convertStringToDate(to);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"            this.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"     * Returns the type of task, which is \u0027E\u0027 for event.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"     * @return The task type.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"    public String getType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"        return \"E\";","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"     * Formats the `Event` object as a string for saving to storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"     * @return A string representation of the `Event` object suitable for storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tim-pipi"},"content":"        return \"E\" + super.formatToSave() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"tim-pipi"},"content":"     * Formats a `LocalDateTime` object as a string in the \"MMM d yyyy HH:mm\" format.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"tim-pipi"},"content":"     * @param date The `LocalDateTime` object to be formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"tim-pipi"},"content":"     * @return A formatted date-time string.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"tim-pipi"},"content":"    public String formatDate(LocalDateTime date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tim-pipi"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"tim-pipi"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDate(this.from) + \" to: \" + formatDate(this.to) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":79}},{"path":"src/main/java/anya/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":" * Represents a generic task in the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":" * A task has a description and a completion status.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Task` instance with the specified description and initializes it as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"     * @param description A description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done anya.task with X","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"    public String getStatusNumber() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done anya.task with 1","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"    public String getType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"        return \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"    public Task markAsDone() {","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"        return this;","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"    public Task markAsNotDone() {","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"        return this;","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"        return \" | \" + getStatusNumber() + \" | \" + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"    public LocalDateTime convertStringToDate(String dateString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"        return LocalDateTime.parse(dateString);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":61}},{"path":"src/main/java/anya/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":" * Represents a collection of tasks in the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":" * The `TaskList` class provides methods for adding, removing, accessing, and listing tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new empty `TaskList`.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `TaskList` with the specified list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"     * @param tasks An ArrayList of tasks to initialize the `TaskList`.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"     * Adds a task to the `TaskList`.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"     * @param tasks The tasks to be added.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"    public void add(Task... tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"        Collections.addAll(this.tasks, tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"     * Removes a task from the `TaskList`.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"    public void remove(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"     * Retrieves a task from the `TaskList` at the specified index.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"    public Task mark(int index) {","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"        return this.tasks.get(index).markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"    public Task unmark(int index) {","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"tim-pipi"},"content":"        return this.tasks.get(index).markAsNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"tim-pipi"},"content":"     * Returns the number of tasks in the `TaskList`.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"tim-pipi"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"tim-pipi"},"content":"    public int size() {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"tim-pipi"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"tim-pipi"},"content":"     * Lists all tasks in the `TaskList` with their corresponding indices.","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"tim-pipi"},"content":"    public void list() {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"tim-pipi"},"content":"        StringBuilder list \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"tim-pipi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"tim-pipi"},"content":"            list.append(System.lineSeparator());","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"tim-pipi"},"content":"            list.append(String.format((i + 1) + \". \" + tasks.get(i)));","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"tim-pipi"},"content":"        System.out.println(list.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"tim-pipi"},"content":"     * Finds and displays tasks containing a specified keyword in their descriptions.","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"tim-pipi"},"content":"     * @param input The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"tim-pipi"},"content":"    public TaskList find(String input) {","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"tim-pipi"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"tim-pipi"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"tim-pipi"},"content":"            if (t.getDescription().contains(input)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"tim-pipi"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"tim-pipi"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"tim-pipi"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":100}},{"path":"src/main/java/anya/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":" * Represents a todo task in the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":" * A todo task is a simple task with a description.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Todo` instance with the specified description.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"     * @param description A description of the todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Todo` instance with the specified description and done status.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"     * @param description A description of the todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"            this.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"     * Returns the type of task, which is \u0027T\u0027 for todo.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"     * @return The task type.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"    public String getType() {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"        return \"T\";","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"     * Formats the `Todo` object as a string for saving to storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"     * @return A string representation of the `Todo` object suitable for storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"    public String formatToSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"        return \"T\" + super.formatToSave();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":54}},{"path":"src/main/java/anya/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.DIVIDER;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.LS;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_ERROR_INIT;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_ERROR_LOADING;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_EXIT;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_GREETING;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_SUCCESS_ADD;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_SUCCESS_DELETE;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_SUCCESS_LOADING;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_SUCCESS_MARK;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_SUCCESS_UNMARK;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_TASK_FOUND;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_TASK_LIST;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_TASK_NOT_FOUND;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"import static anya.messages.Messages.MESSAGE_TASK_SIZE;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"import anya.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"tim-pipi"},"content":"import anya.task.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"tim-pipi"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tim-pipi"},"content":" * Represents the User Interface (UI) of the Anya application.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tim-pipi"},"content":" * The UI handles interactions with the user, displaying messages, and receiving user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tim-pipi"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tim-pipi"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tim-pipi"},"content":"    private final Scanner in;","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tim-pipi"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Ui` instance using the default input and output streams (System.in and System.out).","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tim-pipi"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tim-pipi"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tim-pipi"},"content":"     * Constructs a new `Ui` instance with the specified input and output streams.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tim-pipi"},"content":"     * @param in  The input stream to read user input from.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"tim-pipi"},"content":"     * @param out The output stream to display messages to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tim-pipi"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tim-pipi"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"tim-pipi"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tim-pipi"},"content":"     * Displays a message to the user, surrounded by a divider for better readability.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"tim-pipi"},"content":"     * @param message The message to be shown.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"tim-pipi"},"content":"    public void showToUser(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"tim-pipi"},"content":"        out.println(LS + DIVIDER + LS","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"tim-pipi"},"content":"                + message.replace(\"\\n\", LS)","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"tim-pipi"},"content":"                + LS + DIVIDER + LS);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"tim-pipi"},"content":"     * Returns the welcome message when the application starts.","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"tim-pipi"},"content":"     * @return Welcome Message.","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"tim-pipi"},"content":"    public String showGreetingMessage() {","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"tim-pipi"},"content":"        return MESSAGE_GREETING;","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"tim-pipi"},"content":"     * Returns a message to inform the user that the application is exiting.","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"tim-pipi"},"content":"     * @return Exit Message","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"tim-pipi"},"content":"    public String showExitMessage() {","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"tim-pipi"},"content":"        return MESSAGE_EXIT;","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"tim-pipi"},"content":"     * Reads a user command from the input stream, trims leading and trailing whitespace,","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"tim-pipi"},"content":"     * and returns the cleaned command as a string.","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"tim-pipi"},"content":"     * @return The user-entered command after trimming whitespace.","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"tim-pipi"},"content":"    public String readUserCommand() {","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"tim-pipi"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"tim-pipi"},"content":"     * Returns a loading error message when there is an issue loading data.","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"tim-pipi"},"content":"     * @return Loading Error Message.","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"tim-pipi"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"tim-pipi"},"content":"        return MESSAGE_ERROR_LOADING;","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"tim-pipi"},"content":"     * Returns a loading success message when there is an issue loading data.","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"tim-pipi"},"content":"     * @return Loading Success Message.","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"tim-pipi"},"content":"    public String showLoadingSuccess() {","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"tim-pipi"},"content":"        return MESSAGE_SUCCESS_LOADING;","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"tim-pipi"},"content":"     * Returns a success message after adding a task to the task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"tim-pipi"},"content":"     * @param task  The task that was added.","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"tim-pipi"},"content":"     * @param tasks The task list containing the added task.","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"tim-pipi"},"content":"     * @return A success message including information about the added task and the updated task list size.","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"tim-pipi"},"content":"    public String showTaskAddSuccess(Task task, TaskList tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"tim-pipi"},"content":"        return MESSAGE_SUCCESS_ADD + task + LS","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"tim-pipi"},"content":"                + MESSAGE_TASK_SIZE.replace(\"tasks.size()\", String.valueOf(tasks.size()));","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"tim-pipi"},"content":"     * Generates a success message after marking a task as done.","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"tim-pipi"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"tim-pipi"},"content":"     * @return A success message indicating that the task has been marked as done.","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"tim-pipi"},"content":"    public String showTaskMarkSuccess(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"tim-pipi"},"content":"        return MESSAGE_SUCCESS_MARK + task;","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"tim-pipi"},"content":"     * Generates a success message after marking a task as not done.","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"tim-pipi"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"tim-pipi"},"content":"     * @return A success message indicating that the task has been marked as not done.","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"tim-pipi"},"content":"    public String showTaskUnmarkSuccess(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"tim-pipi"},"content":"        return MESSAGE_SUCCESS_UNMARK + task;","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"tim-pipi"},"content":"     * Displays a list of tasks to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"tim-pipi"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"tim-pipi"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"tim-pipi"},"content":"        StringBuilder list \u003d new StringBuilder(MESSAGE_TASK_LIST);","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"tim-pipi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"tim-pipi"},"content":"            list.append(String.format((i + 1) + \". \" + tasks.get(i) + \"\\n\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"tim-pipi"},"content":"        return list.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"tim-pipi"},"content":"     * Returns a success message after deleting a task from the task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"tim-pipi"},"content":"     * @param task  The task that was deleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"tim-pipi"},"content":"     * @param tasks The task list containing the deleted task.","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"tim-pipi"},"content":"     * @return A success message including information about the deleted task and the updated task list size.","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"tim-pipi"},"content":"    public String showTaskDeleteSuccess(Task task, TaskList tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"tim-pipi"},"content":"        return MESSAGE_SUCCESS_DELETE + task + LS","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"tim-pipi"},"content":"                + MESSAGE_TASK_SIZE.replace(\"tasks.size()\", String.valueOf(tasks.size()));","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"tim-pipi"},"content":"     * Generates a message to display a list of tasks found in the task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"tim-pipi"},"content":"     * @param tasks The task list containing the found tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"tim-pipi"},"content":"     * @return A message displaying the found tasks with their indexes in the list.","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"tim-pipi"},"content":"    public String showTaskFound(TaskList tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"tim-pipi"},"content":"        StringBuilder list \u003d new StringBuilder(MESSAGE_TASK_FOUND);","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"tim-pipi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"tim-pipi"},"content":"            list.append(String.format((i + 1) + \". \" + tasks.get(i) + \"\\n\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"tim-pipi"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"tim-pipi"},"content":"        return list.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":181,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"tim-pipi"},"content":"     * Generates a message to indicate that no tasks were found.","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"tim-pipi"},"content":"     * @return A message indicating that no tasks matching the search criteria were found.","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"tim-pipi"},"content":"    public String showTaskNotFound() {","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"tim-pipi"},"content":"        return MESSAGE_TASK_NOT_FOUND;","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"tim-pipi"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"tim-pipi"},"content":"     * Generates an error message during the application initialization.","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"tim-pipi"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"tim-pipi"},"content":"     * @return Init Error Message.","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"tim-pipi"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":195,"author":{"gitId":"tim-pipi"},"content":"    public String showInitError() {","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"tim-pipi"},"content":"        return MESSAGE_ERROR_INIT;","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tim-pipi":198}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"tim-pipi":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"anya.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"tim-pipi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"tim-pipi":23}},{"path":"src/test/java/anya/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"package anya.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"    private final Todo t \u003d new Todo(\"Test task\");","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"    public void markAsDoneTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"        t.markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"        assertTrue(t.isDone);","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"    public void markAsNotDoneTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"        t.markAsNotDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"        assertFalse(t.isDone);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tim-pipi"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tim-pipi"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tim-pipi":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tim-pipi"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tim-pipi"},"content":"deadline homework /by tonight","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tim-pipi"},"content":"event class /from 4pm /to 6pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tim-pipi"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tim-pipi"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tim-pipi"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tim-pipi"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tim-pipi"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tim-pipi"},"content":"unmark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tim-pipi"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tim-pipi":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tim-pipi"},"content":"java -classpath ..\\bin Anya \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tim-pipi":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tim-pipi"},"content":"java -classpath ../bin Anya \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tim-pipi":1,"-":37}}]
