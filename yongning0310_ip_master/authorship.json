[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yongning0310":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"    String javaFxVersion \u003d \u002717.0.8\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"yongning0310":21,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"T | 0 | eat","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"T | 0 | sleep","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"D | 0 | return book | Feb 12 2019","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"D | 0 | return book | Oct 15 2019","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"E | 0 | return book | Feb 12 2019 | Feb 12 2019","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"E | 0 | return book | Oct 15 2019 1800 | Oct 15 2019 2000","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"E | 0 | return book | Feb 12 2019 1800 | Feb 12 2019 2000","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"T | 0 | eat","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"T | 0 | sleep","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"T | 0 | play","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"T | 0 | list","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"T | 0 | eat","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"yongning0310":12}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"    private void flip() {","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"        db.flip();","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"        return db;","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"yongning0310":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import duke.taskclasses.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":" * Initialise and configuration for the main program, Duke.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"     * Constructor for the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"     * @param filePath The file path where tasks are saved and loaded.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"     * To intialise the program before running the application.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"     * @param mainWindow The configuration of the main application to run.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"    public void activate(MainWindow mainWindow) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"        ui \u003d new Ui(mainWindow);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"yongning0310"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"yongning0310"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"yongning0310"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"yongning0310"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"yongning0310"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"yongning0310"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"yongning0310"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"yongning0310"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"yongning0310"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"yongning0310"},"content":"        stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"yongning0310"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"yongning0310"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"yongning0310"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"yongning0310"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"yongning0310"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"yongning0310"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"yongning0310"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"yongning0310"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"yongning0310"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"yongning0310"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"yongning0310"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"yongning0310"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"yongning0310"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"yongning0310"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"yongning0310"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"yongning0310"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"yongning0310"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"yongning0310"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"yongning0310"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"yongning0310"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"yongning0310"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"yongning0310"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"yongning0310"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"yongning0310"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"yongning0310"},"content":"        });","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"yongning0310"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"yongning0310"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"yongning0310"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"yongning0310"},"content":"        });","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"yongning0310"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"yongning0310"},"content":"     * Iteration 1:","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"yongning0310"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"yongning0310"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"yongning0310"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"yongning0310"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"yongning0310"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"yongning0310"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"yongning0310"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"yongning0310"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"yongning0310"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"yongning0310"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-04"},{"lineNumber":138,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"yongning0310"},"content":"    ArrayList\u003cString\u003e getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"yongning0310"},"content":"        return Parser.run(input, ui, storage, tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yongning0310":141,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"public class Launcher {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"yongning0310":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"    private Duke duke \u003d new Duke(\"./data/tasks.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"            mainWindow \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"            mainWindow.setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"            duke.activate(mainWindow);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"yongning0310":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"     * Deals with users input and clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"        ArrayList\u003cString\u003e response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"        printUserReply(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"        for (Object res : response.toArray()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"            printDukeReply((String) res);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"     * Displays users reply on screen.","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"    public void printUserReply(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"yongning0310"},"content":"                DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"yongning0310"},"content":"     * Displays Duke\u0027s reply on screen.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"yongning0310"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"yongning0310"},"content":"    public void printDukeReply(String response) {","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"yongning0310"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"yongning0310"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"yongning0310"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"yongning0310":74}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidFindException;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidListNumberException;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidToDoException;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"import duke.taskclasses.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":" * Responsible for interpreting user commands and executing the appropriate actions.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"     * Enum representing the possible command types that can be executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"    private enum Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"        TODO, DEADLINE, EVENT, BYE, MARK, UNMARK, LIST, DELETE, CLEAR, FIND","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"     * Interprets and processes user input, then calls the appropriate action based on the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"     * @param ui       The UI instance used to handle outputs to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"     * @param storage  The Storage instance used for reading/writing data.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"     * @param taskList The TaskList instance holding the user\u0027s tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"    public static ArrayList\u003cString\u003e run(String input, Ui ui, Storage storage, TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"        String[] details \u003d input.split(\"/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"        Command command;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"            command \u003d getCommand(parts[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"            executeCommand(output, command, ui, taskList, parts, details, input);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"            if (command \u003d\u003d Command.BYE) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"                storage.writeToDB(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"            return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"            ArrayList\u003cString\u003e error \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"            error.add(e.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"            return error;","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"     * Retrieves the command based on the given input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"     * @param input The user\u0027s command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"     * @return The corresponding Command.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"yongning0310"},"content":"     * @throws InvalidInputException If the input does not correspond to any known command.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"yongning0310"},"content":"    private static Command getCommand(String input) throws InvalidInputException {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"yongning0310"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"yongning0310"},"content":"            return Command.valueOf(input.toUpperCase());","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"yongning0310"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"yongning0310"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"yongning0310"},"content":"     * Helper function to add an array of strings to an ArrayList.","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"yongning0310"},"content":"    public static void addToOutput(String[] res, ArrayList\u003cString\u003e output) {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"yongning0310"},"content":"        for (String i: res) {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"yongning0310"},"content":"            output.add(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"yongning0310"},"content":"     * Executes the appropriate actions based on the given command.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"yongning0310"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"yongning0310"},"content":"     * @param ui      The UI instance used for user interactions.","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"yongning0310"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"yongning0310"},"content":"     * @param parts   The split input parts.","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"yongning0310"},"content":"     * @param details The split details.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"yongning0310"},"content":"     * @param fullInput The complete user input string.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"yongning0310"},"content":"     * @throws DukeException If any error occurs during command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"yongning0310"},"content":"    private static void executeCommand(ArrayList\u003cString\u003e output, Command command, Ui ui, TaskList taskList,","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"yongning0310"},"content":"                                       String[] parts, String[] details, String fullInput) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"yongning0310"},"content":"        // retrieve the task number for commands that require it","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"yongning0310"},"content":"        Integer number \u003d (command \u003d\u003d Command.MARK || command \u003d\u003d Command.UNMARK || command \u003d\u003d Command.DELETE)","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"yongning0310"},"content":"                ? getTaskNumber(parts, taskList) : null;","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"yongning0310"},"content":"        switch (command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"yongning0310"},"content":"        case BYE:","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"yongning0310"},"content":"            addToOutput(ui.printBye(), output);","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"yongning0310"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"yongning0310"},"content":"        case DELETE:","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"yongning0310"},"content":"            String content \u003d taskList.deleteTask(number);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"yongning0310"},"content":"            addToOutput(ui.deleteTask(content), output);","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"yongning0310"},"content":"            addToOutput(ui.printTaskCount(taskList.getTasksCount()), output);","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"yongning0310"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"yongning0310"},"content":"        case LIST:","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"yongning0310"},"content":"            addToOutput(ui.returnList(taskList), output);","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"yongning0310"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"yongning0310"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"yongning0310"},"content":"            taskList.markTaskAsNotDone(number);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"yongning0310"},"content":"            addToOutput(ui.printTaskMarkAsNotDone(taskList.getStatusAndDescription(number)), output);","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"yongning0310"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"yongning0310"},"content":"        case MARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"yongning0310"},"content":"            taskList.markTaskAsDone(number);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"yongning0310"},"content":"            addToOutput(ui.printTaskMarkAsDone(taskList.getStatusAndDescription(number)), output);","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"yongning0310"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"yongning0310"},"content":"        case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"yongning0310"},"content":"            String toDoDescription \u003d details[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"yongning0310"},"content":"            if (toDoDescription.length() \u003c\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"yongning0310"},"content":"                throw new InvalidToDoException();","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"yongning0310"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"yongning0310"},"content":"            addToOutput(","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"yongning0310"},"content":"                    taskList.addToDoToList(false,","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"yongning0310"},"content":"                            toDoDescription.substring(5).trim()).addedTaskDescription(),","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"yongning0310"},"content":"                    output);","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"yongning0310"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"yongning0310"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"yongning0310"},"content":"            if (details[0].trim().length() \u003c\u003d 8 || !fullInput.contains(\"by\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"yongning0310"},"content":"                throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"yongning0310"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"yongning0310"},"content":"            String deadlineDescription \u003d details[0].split(\"/\")[0].substring(9).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"yongning0310"},"content":"            String byTime \u003d fullInput.split(\"by\")[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"yongning0310"},"content":"            addToOutput(taskList.addDeadlineToList(false, deadlineDescription, byTime).addedTaskDescription(),","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"yongning0310"},"content":"                    output);","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"yongning0310"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"yongning0310"},"content":"        case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"yongning0310"},"content":"            if (details[0].trim().length() \u003c\u003d 5 || !fullInput.contains(\"from\") || !fullInput.contains(\"to\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"yongning0310"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"yongning0310"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"yongning0310"},"content":"            String eventDescription \u003d details[0].split(\"/\")[0].substring(6).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"yongning0310"},"content":"            String fromTime \u003d fullInput.split(\"from\")[1].split(\"/to\")[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"yongning0310"},"content":"            String toTime \u003d fullInput.split(\"to\")[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"yongning0310"},"content":"            addToOutput(taskList.addEventToList(false, eventDescription, fromTime, toTime).addedTaskDescription(),","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"yongning0310"},"content":"                    output);","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"yongning0310"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"yongning0310"},"content":"        case CLEAR:","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"yongning0310"},"content":"            taskList.clear();","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"yongning0310"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"yongning0310"},"content":"        case FIND:","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"yongning0310"},"content":"            String findDescription \u003d details[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"yongning0310"},"content":"            if (findDescription.length() \u003c\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"yongning0310"},"content":"                throw new InvalidFindException();","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"yongning0310"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"yongning0310"},"content":"            addToOutput(ui.printTaskContainingKeyword(taskList, findDescription.substring(5).trim()), output);","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"yongning0310"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"yongning0310"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"yongning0310"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"yongning0310"},"content":"     * Retrieves the task number from the input parts and checks if it\u0027s valid.","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"yongning0310"},"content":"     * @param parts Parts of the command input.","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"yongning0310"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"yongning0310"},"content":"     * @return The task number.","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"yongning0310"},"content":"     * @throws InvalidListNumberException If the task number is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"yongning0310"},"content":"    private static int getTaskNumber(String[] parts, TaskList taskList) throws InvalidListNumberException {","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"yongning0310"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"yongning0310"},"content":"            int number \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"yongning0310"},"content":"            if (number \u003c 0 || number \u003e taskList.getTasksCount()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"yongning0310"},"content":"                throw new InvalidListNumberException();","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"yongning0310"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"yongning0310"},"content":"            return number;","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"yongning0310"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"yongning0310"},"content":"            throw new InvalidListNumberException();","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yongning0310":194}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"import duke.taskclasses.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"import duke.taskclasses.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":" * Represents a storage mechanism for saving and loading task lists.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"     * Constructs a new storage instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"     * @param filePath The path to the file where tasks are saved and loaded.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"     * Loads tasks from the file into a TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"     * @return A TaskList containing the loaded tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"    public TaskList load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"                    String line \u003d s.nextLine().trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"                    String[] taskParts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"                    boolean isDone \u003d taskParts[1].trim().equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"                    switch (taskParts[0].trim()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"                        taskList.addToDoToList(isDone, taskParts[2].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"                        taskList.addDeadlineToList(isDone, taskParts[2].trim(), taskParts[3].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"                        taskList.addEventToList(isDone, taskParts[2].trim(), taskParts[3].trim(), taskParts[4].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"                    default:","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"                        System.out.println(\"Unexpected task type encountered: \" + line);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"                } catch (InvalidDateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"yongning0310"},"content":"                    System.out.println(\"Invalid date format encountered in some tasks. Please check.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"yongning0310"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"yongning0310"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"yongning0310"},"content":"            s.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"yongning0310"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"yongning0310"},"content":"            System.out.println(\"The file is not found. Initializing an empty task list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"yongning0310"},"content":"        return taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"yongning0310"},"content":"     * Writes the given task list to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"yongning0310"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"yongning0310"},"content":"    public void writeToDB(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"yongning0310"},"content":"        StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"yongning0310"},"content":"        for (Task task : taskList.getList()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"yongning0310"},"content":"            content.append(task.getDbString()).append(\"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"yongning0310"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"yongning0310"},"content":"            Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"yongning0310"},"content":"            Files.write(path, content.toString().getBytes());","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"yongning0310"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"yongning0310"},"content":"            System.out.println(\"An error occurred while writing to the file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"yongning0310"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yongning0310":91}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import duke.taskclasses.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"     * Constructs a new Ui instance and displays the welcome message.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    public Ui(MainWindow mainWindow) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"        String logo \u003d \" ██▄   ████▄    ▄     ▄▀  \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"                + \"█  █  █   █     █  ▄▀    \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"                + \"█   █ █   █ ██   █ █ ▀▄  \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"                + \"█  █  ▀████ █ █  █ █   █ \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"                + \"███▀        █  █ █  ███  \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"                + \"            █   ██       \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"                + \"                         \";","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"        mainWindow.printDukeReply(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"        mainWindow.printDukeReply(\"What can I do for you?\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"     * Prints a message to inform that the task has been marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"     * @param taskContent The content of the task that has been marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"    public String[] printTaskMarkAsDone(String taskContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"        String[] res \u003d { \"Nice! I\u0027ve marked this task as done:\", \"  \" + taskContent};","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"     * Prints a message to inform that the task has been marked as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"     * @param taskContent The content of the task that has been marked as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"    public String[] printTaskMarkAsNotDone(String taskContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"        String[] res \u003d {\"OK, I\u0027ve marked this task as not done yet:\", \"  \" + taskContent};","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"     * Informs the user that there was an error loading data from storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"    public String[] showLoadingError() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"        String[] res \u003d {\"ERROR reading the file, might be corrupted\"};","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"     * Prints all the tasks available in the provided task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"     * @param tasks The task list containing tasks to print.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"    public String[] returnList(TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"        String[] res \u003d {\"Here are the tasks in your list:\",","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"            tasks.allStatusAndDescriptionToString()};","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"yongning0310"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"yongning0310"},"content":"     * Prints a dashed line for visual separation in the interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"yongning0310"},"content":"    public void newDashedLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"yongning0310"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"yongning0310"},"content":"     * Informs the user that a task has been deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"yongning0310"},"content":"     * @param content The content of the deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"yongning0310"},"content":"    public String[] deleteTask(String content) {","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"yongning0310"},"content":"        String[] res \u003d {\"Noted. I\u0027ve removed this task:\", content};","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"yongning0310"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"yongning0310"},"content":"     * Informs the user about the current count of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"yongning0310"},"content":"     * @param count The current number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"yongning0310"},"content":"    public String[] printTaskCount(int count) {","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"yongning0310"},"content":"        String[] res \u003d {String.format(\"Now you have %s tasks in the list.\", count)};","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"yongning0310"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"yongning0310"},"content":"     * Prints all the tasks available in the provided task list that contains the keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"yongning0310"},"content":"     * @param tasks The task list containing tasks to print.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"yongning0310"},"content":"    public String[] printTaskContainingKeyword(TaskList tasks, String keyword) {","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"yongning0310"},"content":"        String[] res \u003d {\"Here are the matching tasks in your list:\",","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"yongning0310"},"content":"            tasks.getAllStatusAndDescriptionWithKeyword(keyword)};","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"yongning0310"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"yongning0310"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"yongning0310"},"content":"    public String[] printBye() {","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"yongning0310"},"content":"        return new String[]{\"Bye. Hope to see you again soon!\"};","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yongning0310":110}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":" * Represents a custom exception for the duke.Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":" * Specific types of exceptions should extend this class.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"     * Default constructor for duke.exception.DukeException.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"     * Returns the string representation of the duke.exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"     * It calls the toString() method from the superclass.","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"     * @return A string representing the duke.exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"        return super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":26}},{"path":"src/main/java/duke/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":" * Represents an exception when an invalid datetime format is provided to the duke.Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"     * Default constructor for InvalidDateTimeException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"        super();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"     * Returns a custom message indicating an invalid datetime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"     * @return A string explaining the error.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"        return \"☹ OOPS!!! The datetime format is invalid.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"yongning0310":24}},{"path":"src/main/java/duke/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":" * Represents an exception when an invalid deadline format is provided to the duke.Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"public class InvalidDeadlineException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"     * Default constructor for InvalidDeadlineException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"     * Returns a custom message indicating an invalid deadline format.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"     * @return A string explaining the error.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"        return \"☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"yongning0310":25}},{"path":"src/main/java/duke/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":" * Represents an exception when an invalid event format is provided to the duke.Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"public class InvalidEventException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"     * Default constructor for InvalidEventException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"     * Returns a custom message indicating an invalid event format.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"     * @return A string explaining the error.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"        return \"☹ OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":25}},{"path":"src/main/java/duke/exception/InvalidFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":" * Represents an exception when an invalid find format is provided to the duke.Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"public class InvalidFindException extends DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"     * Default constructor for InvalidFindException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"    public InvalidFindException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"        super();","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"     * Returns a custom message indicating an invalid find format.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"     * @return A string explaining the error.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"        return \"☹ OOPS!!! The description of a find cannot be empty.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yongning0310":24}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":" * Represents an exception when an invalid input is provided to the duke.Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"     * Default constructor for InvalidInputException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"     * Returns a custom message indicating an invalid input.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"     * @return A string explaining the error.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":24}},{"path":"src/main/java/duke/exception/InvalidListNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":" * Represents an exception when an invalid numbering for list of tasks is provided to the duke.Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"public class InvalidListNumberException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"     * Default constructor for InvalidListNumberException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"    public InvalidListNumberException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"     * Returns a custom message indicating an invalid numbering provided for list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"     * @return A string explaining the error.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"        return \"☹ OOPS!!! The task number entered is invalid.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":25}},{"path":"src/main/java/duke/exception/InvalidToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":" * Represents an exception when an invalid to do format is provided to the duke.Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"public class InvalidToDoException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"     * Default constructor for InvalidToDoException.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"    public InvalidToDoException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"        super();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"     * Returns a custom message indicating an invalid to do format.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"     * @return A string explaining the error.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"        return \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":24}},{"path":"src/main/java/duke/taskclasses/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.taskclasses;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"import duke.utils.DateTimeUtils;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":" * A deadline task has a description and a specific end date and time by which the task should be completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"    /** The end date and time for the deadline task. */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"     * Constructs a new Deadline object with a given description and date.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"     * @param date The end date and time for the deadline in string format.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"     * @throws InvalidDateTimeException If the provided date string is not in a valid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"    public Deadline(String description, String date) throws InvalidDateTimeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"        super(description, \"D\");","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"        this.date \u003d DateTimeUtils.stringToLocalDateTime(date);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"        this.addedTaskDescription();","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"     * Returns a formatted string with details specific to the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"     * @return A string representation of the deadline details.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"        return String.format(\" (by: %s)\", DateTimeUtils.localDateTimeToString(this.date));","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"     * Returns a formatted string suitable for database storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"     * @return A string representation of the deadline task formatted for database storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"    public String getDbString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"        return String.format(\"%s | %s | %s | %s\", \"D\", this.isDone() ? \"1\" : \"0\", this.description,","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"                DateTimeUtils.localDateTimeToStringForDb(this.date));","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":49}},{"path":"src/main/java/duke/taskclasses/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.taskclasses;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"import duke.utils.DateTimeUtils;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":" * Represents an event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":" * An event task has a description, a start date and time, and an end date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    /** The start date and time for the event. */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"    /** The end date and time for the event. */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"     * Constructs a new Event object with a given description, start date, and end date.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"     * @param start The start date and time for the event in string format.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"     * @param end The end date and time for the event in string format.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"     * @throws InvalidDateTimeException If the provided date strings are not in a valid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"    public Event(String description, String start, String end) throws InvalidDateTimeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"        super(description, \"E\");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"        this.start \u003d DateTimeUtils.stringToLocalDateTime(start);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"        this.end \u003d DateTimeUtils.stringToLocalDateTime(end);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"        this.addedTaskDescription();","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"     * Returns a formatted string with details specific to the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"     * @return A string representation of the event details.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"        return String.format(\" (from: %s to: %s)\", DateTimeUtils.localDateTimeToString(this.start),","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"                DateTimeUtils.localDateTimeToString(this.end));","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"     * Returns a formatted string suitable for database storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"     * @return A string representation of the event task formatted for database storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"    public String getDbString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"        return String.format(\"%s | %s | %s | %s | %s\",","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"                \"E\",","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"                this.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"                this.description,","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"                DateTimeUtils.localDateTimeToStringForDb(this.start),","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"                DateTimeUtils.localDateTimeToStringForDb(this.end));","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":60}},{"path":"src/main/java/duke/taskclasses/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.taskclasses;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":" * Abstract class representing a general task.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":" * Specific types of tasks (e.g., ToDo, Deadline, Event) should extend this class.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"    /** Description of the task */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"    protected String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"    /** Task completion status */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    /** Type of the task (e.g., TODO, DEADLINE, EVENT) */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"    protected String type;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"     * Constructor to initialize a Task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"     * @param type Type of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"     * Abstract method to get additional details of a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"     * Implementation should be provided in subclasses.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"     * @return A string representing additional details of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"    public abstract String getDetails();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"     * Abstract method to get the database string representation of a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"     * Implementation should be provided in subclasses.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"     * @return A string suitable for database storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"    public abstract String getDbString();","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"     * Returns the description of the added task.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"    public String[] addedTaskDescription() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"        String[] res \u003d {\"Got it. I\u0027ve added this task:\", \"   \" + this.getStatusAndDescription()};","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"     * Returns the status icon based on task completion.","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"     * @return \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"yongning0310"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"yongning0310"},"content":"     * @return A string representing the task type.","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"yongning0310"},"content":"    public String getType() {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"yongning0310"},"content":"        return this.type;","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"yongning0310"},"content":"     * Returns the status icon, task type, description, and additional details.","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"yongning0310"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"yongning0310"},"content":"    public String getStatusAndDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"yongning0310"},"content":"        return String.format(\"[%s][%s] %s%s\",","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"yongning0310"},"content":"                this.getType(),","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"yongning0310"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"yongning0310"},"content":"                this.description,","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"yongning0310"},"content":"                this.getDetails());","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"yongning0310"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"yongning0310"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"yongning0310"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"yongning0310"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"yongning0310"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"yongning0310"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"yongning0310"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"yongning0310"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"yongning0310"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"yongning0310"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"yongning0310"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"yongning0310"},"content":"     * @return A string representing the task\u0027s description.","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"yongning0310"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"yongning0310"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":117}},{"path":"src/main/java/duke/taskclasses/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.taskclasses;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":" * Provides methods to manipulate and interact with the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    /** List of tasks */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"    private ArrayList\u003cTask\u003e taskLists;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"    /** Count of tasks in the list */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"    private int taskCount \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"     * Constructs a new TaskList with an existing list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"     * @param taskLists List of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskLists) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"        this.taskLists \u003d taskLists;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"     * Constructs a new empty TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"        this.taskLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"        return this.taskLists;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"     * Returns the status and description of all tasks in the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"    public String allStatusAndDescriptionToString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"        for (int i \u003d 0; i \u003c taskLists.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"            Task taskToPrint \u003d taskLists.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"            String newLine \u003d (i + 1) + \". \" + taskToPrint.getStatusAndDescription() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"            output +\u003d newLine;","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"     * Returns the status and description of the task at the given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"     * @param number The index of the task in the list (1-based).","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"     * @return String representation of the task status and description.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"yongning0310"},"content":"    public String getStatusAndDescription(int number) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"yongning0310"},"content":"        return taskLists.get(number - 1).getStatusAndDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"yongning0310"},"content":"     * Returns the count of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"yongning0310"},"content":"     * @return The task count.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"yongning0310"},"content":"    public int getTasksCount() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"yongning0310"},"content":"        return this.taskCount;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"yongning0310"},"content":"     * Adds a ToDo task to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"yongning0310"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"yongning0310"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"yongning0310"},"content":"    public Task addToDoToList(Boolean isDone, String description) {","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"yongning0310"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"yongning0310"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"yongning0310"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"yongning0310"},"content":"        taskLists.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"yongning0310"},"content":"        this.taskCount++;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"yongning0310"},"content":"        return newTask;","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"yongning0310"},"content":"     * Adds a Deadline task to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"yongning0310"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"yongning0310"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"yongning0310"},"content":"     * @param date Due date of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"yongning0310"},"content":"     * @throws InvalidDateTimeException If the provided date string is not in a valid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"yongning0310"},"content":"    public Task addDeadlineToList(Boolean isDone, String description, String date) throws InvalidDateTimeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"yongning0310"},"content":"        Task newTask \u003d new Deadline(description, date);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"yongning0310"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"yongning0310"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"yongning0310"},"content":"        taskLists.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"yongning0310"},"content":"        this.taskCount++;","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"yongning0310"},"content":"        return newTask;","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"yongning0310"},"content":"     * Adds an Event task to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"yongning0310"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"yongning0310"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"yongning0310"},"content":"     * @param start Start date and time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"yongning0310"},"content":"     * @param end End date and time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"yongning0310"},"content":"     * @throws InvalidDateTimeException If the provided date strings are not in a valid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"yongning0310"},"content":"    public Task addEventToList(Boolean isDone, String description, String start, String end)","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"yongning0310"},"content":"            throws InvalidDateTimeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"yongning0310"},"content":"        Task newTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"yongning0310"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"yongning0310"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"yongning0310"},"content":"        taskLists.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"yongning0310"},"content":"        this.taskCount++;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"yongning0310"},"content":"        return newTask;","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"yongning0310"},"content":"     * Clears the task count. Note: This does not clear the task list itself.","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"yongning0310"},"content":"    public void clear() {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"yongning0310"},"content":"        this.taskCount \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"yongning0310"},"content":"     * Deletes the task at the given index and returns its details.","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"yongning0310"},"content":"     * @param number The index of the task to delete (1-based).","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"yongning0310"},"content":"     * @return The string representation of the deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"yongning0310"},"content":"    public String deleteTask(int number) {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"yongning0310"},"content":"        String content \u003d taskLists.get(number - 1).getStatusAndDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"yongning0310"},"content":"        taskLists.remove(number - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"yongning0310"},"content":"        this.taskCount--;","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"yongning0310"},"content":"        return content;","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"yongning0310"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"yongning0310"},"content":"     * @param number The index of the task to mark as done (1-based).","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"yongning0310"},"content":"    public void markTaskAsDone(int number) {","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"yongning0310"},"content":"        taskLists.get(number - 1).markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"yongning0310"},"content":"     * Marks the task at the given index as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"yongning0310"},"content":"     * @param number The index of the task to mark as not done (1-based).","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"yongning0310"},"content":"    public void markTaskAsNotDone(int number) {","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"yongning0310"},"content":"        taskLists.get(number - 1).markAsNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"yongning0310"},"content":"     * Returns the status and description of all tasks in the list that contains the keyword in description.","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"yongning0310"},"content":"    public String getAllStatusAndDescriptionWithKeyword(String keyword) {","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"yongning0310"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"yongning0310"},"content":"        for (int i \u003d 0; i \u003c taskLists.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"yongning0310"},"content":"            Task taskToPrint \u003d taskLists.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"yongning0310"},"content":"            if (taskToPrint.description.contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"yongning0310"},"content":"                String newLine \u003d (i + 1) + \". \" + taskToPrint.getStatusAndDescription() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"yongning0310"},"content":"                output +\u003d newLine;","lastModifiedDate":"2023-09-07"},{"lineNumber":178,"author":{"gitId":"yongning0310"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"yongning0310"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yongning0310":182}},{"path":"src/main/java/duke/taskclasses/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.taskclasses;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":" * ToDo tasks are a type of task with only a description and no additional time-related details.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"     * Constructs a new ToDo task with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"        super(description, \"T\");","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"        this.addedTaskDescription();","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"     * Provides additional details for the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"     * Since ToDo tasks have no extra details, this returns an empty string.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"     * @return An empty string.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"        return \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"     * Provides a formatted string for storing the ToDo task in a database.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"     * @return A formatted string representing the ToDo task for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"    public String getDbString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"        return String.format(\"%s | %s | %s\",","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"                \"T\", this.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"                this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":41}},{"path":"src/main/java/duke/utils/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package duke.utils;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":" * Provides utility methods for converting and manipulating date and time objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"public class DateTimeUtils {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"     * Converts a LocalDateTime object to a formatted string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"     * @param dateTime The LocalDateTime object to be converted.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"     * @return The formatted string representation of the dateTime.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"    public static String localDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"        String result \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"        if (!(dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"            result +\u003d \" \" + dateTime.format(timeFormatter).toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"     * Converts a LocalDateTime object to a formatted string representation for db.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"     * @param dateTime The LocalDateTime object to be converted.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"     * @return The formatted db string representation of the dateTime.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"    public static String localDateTimeToStringForDb(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"        String result \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"        if (!(dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"            result +\u003d \" \" + dateTime.format(timeFormatter).toLowerCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"        return result;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"     * Converts a date and time string to a LocalDateTime object. Supports multiple formats.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"     * @param dateTimeString The string representation of the date and time to be converted.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"     * @return The corresponding LocalDateTime object.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"yongning0310"},"content":"     * @throws InvalidDateTimeException if the dateTimeString cannot be parsed into any supported format.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"yongning0310"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"yongning0310"},"content":"    public static LocalDateTime stringToLocalDateTime(String dateTimeString) throws InvalidDateTimeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"yongning0310"},"content":"        List\u003cString\u003e patterns \u003d Arrays.asList(","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"yongning0310"},"content":"                \"MMM d yyyy HHmm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"yongning0310"},"content":"                \"M/d/yyyy HHmm\",","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"yongning0310"},"content":"                \"M/d/yyyy\",","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"yongning0310"},"content":"                \"yyyy-MM-dd\",","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"yongning0310"},"content":"                \"yyyy-MM-dd HHmm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"yongning0310"},"content":"                \"MMM d yyyy\"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"yongning0310"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"yongning0310"},"content":"        for (String pattern : patterns) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"yongning0310"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"yongning0310"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"yongning0310"},"content":"                if (pattern.contains(\"H\") || pattern.contains(\"h\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"yongning0310"},"content":"                    return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"yongning0310"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"yongning0310"},"content":"                LocalDate date \u003d LocalDate.parse(dateTimeString, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"yongning0310"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"yongning0310"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"yongning0310"},"content":"                // If parsing fails, continue to the next pattern","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"yongning0310"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"yongning0310"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"yongning0310"},"content":"        System.out.println(dateTimeString);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"yongning0310"},"content":"        // If none of the patterns matched, throw an exception","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"yongning0310"},"content":"        throw new InvalidDateTimeException();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"yongning0310":92}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"yongning0310":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"  prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"yongning0310":19}},{"path":"src/test/java/taskClasses/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package taskClasses;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"import duke.taskclasses.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"    public void setUp() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    public void testAddToDoWithDescriptionOnly() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"        tasks.addToDoToList(false, \"Study Java\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"        assertEquals(1, tasks.getTasksCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"        assertEquals(\"[T][ ] Study Java\", tasks.getStatusAndDescription(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"    public void testAddToDoMarkedAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"        tasks.addToDoToList(true, \"Read a novel\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"        assertEquals(1, tasks.getTasksCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"        assertEquals(\"[T][X] Read a novel\", tasks.getStatusAndDescription(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"    public void testAddMultipleToDos() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"        tasks.addToDoToList(true, \"Task 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"        tasks.addToDoToList(false, \"Task 2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"        assertEquals(2, tasks.getTasksCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"        assertEquals(\"[T][X] Task 1\", tasks.getStatusAndDescription(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"        assertEquals(\"[T][ ] Task 2\", tasks.getStatusAndDescription(2));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"    public void testAddEventWithDates() throws InvalidDateTimeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"        tasks.addEventToList(false, \"Duke project meeting\", \"2023-09-01\", \"2023-09-02\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"        assertEquals(1, tasks.getTasksCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"        assertEquals(\"[E][ ] Duke project meeting (from: Sep 1 2023 to: Sep 2 2023)\", tasks.getStatusAndDescription(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"    public void testAddEventWithStartDateAfterEndDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"        assertThrows(InvalidDateTimeException.class, () -\u003e tasks.addEventToList(false, \"Duke project meeting\", \"2023-09-40\", \"2023-09-02\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"yongning0310"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"yongning0310"},"content":"    public void testAddEventMarkedAsDone() throws InvalidDateTimeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"yongning0310"},"content":"        tasks.addEventToList(true, \"Graduation\", \"2023-10-01\", \"2023-10-02\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yongning0310"},"content":"        assertEquals(1, tasks.getTasksCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"yongning0310"},"content":"        assertEquals(\"[E][X] Graduation (from: Oct 1 2023 to: Oct 2 2023)\", tasks.getStatusAndDescription(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yongning0310":62}},{"path":"src/test/java/utils/DateTimeUtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"package utils;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"import duke.utils.DateTimeUtils;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"public class DateTimeUtilsTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"    public void testLocalDateTimeToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"        // Test case 1: Non-midnight time","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"        LocalDateTime testDateTime1 \u003d LocalDateTime.of(2023, 8, 31, 14, 30);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"        assertEquals(\"Aug 31 2023 2pm\", DateTimeUtils.localDateTimeToString(testDateTime1));","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"        // Test case 2: Midnight time","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"        LocalDateTime testDateTime2 \u003d LocalDateTime.of(2023, 8, 31, 0, 0);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"        assertEquals(\"Aug 31 2023\", DateTimeUtils.localDateTimeToString(testDateTime2));","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"    public void testStringToLocalDateTime() throws InvalidDateTimeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"        // Test case 1: Using format M/d/yyyy HHmm","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"        String testString1 \u003d \"8/31/2023 1430\";","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"        assertEquals(LocalDateTime.of(2023, 8, 31, 14, 30), DateTimeUtils.stringToLocalDateTime(testString1));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"        // Test case 2: Using format M/d/yyyy","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"        String testString2 \u003d \"8/31/2023\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"        assertEquals(LocalDateTime.of(2023, 8, 31, 0, 0), DateTimeUtils.stringToLocalDateTime(testString2));","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"        // Test case 3: Using format yyyy-MM-dd","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"        String testString3 \u003d \"2023-08-31\";","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"        assertEquals(LocalDateTime.of(2023, 8, 31, 0, 0), DateTimeUtils.stringToLocalDateTime(testString3));","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"        // Test case 4: Using format yyyy-MM-dd HHmm","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"        String testString4 \u003d \"2023-08-31 1430\";","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yongning0310"},"content":"        assertEquals(LocalDateTime.of(2023, 8, 31, 14, 30), DateTimeUtils.stringToLocalDateTime(testString4));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yongning0310"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yongning0310"},"content":"    public void testInvalidStringToLocalDateTime() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yongning0310"},"content":"        // Test case 1: Invalid format","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yongning0310"},"content":"        String testString1 \u003d \"31 Aug 2023\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yongning0310"},"content":"        assertThrows(InvalidDateTimeException.class, () -\u003e DateTimeUtils.stringToLocalDateTime(testString1));","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yongning0310"},"content":"        // Test case 2: Invalid date","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"yongning0310"},"content":"        String testString2 \u003d \"8/32/2023\";","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"yongning0310"},"content":"        assertThrows(InvalidDateTimeException.class, () -\u003e DateTimeUtils.stringToLocalDateTime(testString2));","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"yongning0310"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"yongning0310"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yongning0310":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":1}},{"path":"text-ui-test/input1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"todo task","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"mark 100","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"bye","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"deadline return book /by 2/12/2019","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"deadline return book /by 2019-10-15 1800","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"event return book /from 2019-10-15 1800 /to 2019-10-15 2000","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"event return book /from 2/12/2019 1800 /to 2/12/2019 2000","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"event return book /from 2/12/2019  /to 2/12/2019","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"event return book /from 2/12/2019 2500 /to 2/12/2019 2000","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"yongning0310":26}},{"path":"text-ui-test/runtest1.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yongning0310"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"yongning0310"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yongning0310"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"yongning0310"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"yongning0310"},"content":"    mkdir ../bin","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yongning0310"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"yongning0310"},"content":"# delete output from previous run","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"yongning0310"},"content":"if [ -e \"./ACTUAL1.TXT\" ]","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"yongning0310"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yongning0310"},"content":"    rm ACTUAL1.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yongning0310"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yongning0310"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"yongning0310"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"yongning0310"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"yongning0310"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"yongning0310"},"content":"    exit 1","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"yongning0310"},"content":"fi","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yongning0310"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yongning0310"},"content":"java -classpath ../bin Duke \u003c input1.txt \u003e ACTUAL1.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yongning0310"},"content":"# convert to UNIX format","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yongning0310"},"content":"cp EXPECTED1.TXT EXPECTED1-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"yongning0310"},"content":"dos2unix ACTUAL1.TXT EXPECTED1-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"yongning0310"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"yongning0310"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"yongning0310"},"content":"diff ACTUAL1.TXT EXPECTED1-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"yongning0310"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"yongning0310"},"content":"then","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"yongning0310"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"yongning0310"},"content":"    exit 0","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"yongning0310"},"content":"else","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"yongning0310"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"yongning0310"},"content":"    exit 1","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"yongning0310"},"content":"fi","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yongning0310":38}}]
