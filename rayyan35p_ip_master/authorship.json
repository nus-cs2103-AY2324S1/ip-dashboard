[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayyan35p"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"rayyan35p"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"rayyan35p"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"rayyan35p"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"rayyan35p"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"rayyan35p"},"content":"    private LocalDateTime deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"rayyan35p"},"content":"    private DateTimeFormatter formatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"rayyan35p"},"content":"    public DeadlineTask(String description, String deadlineDate) {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"rayyan35p"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"rayyan35p"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"rayyan35p"},"content":"            // time should be in format dd/mm/yyyy HHMM(24h)","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"rayyan35p"},"content":"            this.formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"rayyan35p"},"content":"            this.deadlineDate \u003d LocalDateTime.parse(deadlineDate, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"rayyan35p"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"rayyan35p"},"content":"            System.out.println(\"There was an error parsing the date given.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"rayyan35p"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"rayyan35p"},"content":"    public String getType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"rayyan35p"},"content":"        return \"Deadline\";","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"rayyan35p"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"rayyan35p"},"content":"        return formatter.format(this.deadlineDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"rayyan35p"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"rayyan35p"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"rayyan35p"},"content":"        DateTimeFormatter stringFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm a\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"rayyan35p"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + stringFormatter.format(this.deadlineDate) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"rayyan35p"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"rayyan35p":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayyan35p"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"rayyan35p"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"rayyan35p"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"rayyan35p"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"rayyan35p"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"rayyan35p"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"rayyan35p"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"rayyan35p"},"content":"        TaskList list \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"rayyan35p"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"rayyan35p"},"content":"            File dataDirectory \u003d new File(\"./data\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"rayyan35p"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"rayyan35p"},"content":"            File taskFile \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"rayyan35p"},"content":"            if (taskFile.createNewFile()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"rayyan35p"},"content":"                System.out.println(\"Created new file to store your tasks!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"rayyan35p"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"rayyan35p"},"content":"                System.out.println(\"Existing task file exists. \");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"rayyan35p"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"rayyan35p"},"content":"            list \u003d new TaskList(taskFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"rayyan35p"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"rayyan35p"},"content":"            System.out.println(\"Unable to create file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"rayyan35p"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(\"Hello! I\u0027m Bob\");","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"rayyan35p"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"rayyan35p"},"content":"        while(true) {","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"rayyan35p"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"rayyan35p"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"rayyan35p"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"rayyan35p"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"rayyan35p"},"content":"                    list.printList();","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"rayyan35p"},"content":"                } else if (input.startsWith(\"mark\") || input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"rayyan35p"},"content":"                    String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"rayyan35p"},"content":"                    if (inputSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"rayyan35p"},"content":"                        throw new DukeException(\"Input the task number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"rayyan35p"},"content":"                    } else if (inputSplit.length \u003e 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"rayyan35p"},"content":"                        throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"rayyan35p"},"content":"                    } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"rayyan35p"},"content":"                        int taskNo \u003d Integer.parseInt(inputSplit[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"rayyan35p"},"content":"                        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"rayyan35p"},"content":"                            list.setTaskComplete(taskNo);","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"rayyan35p"},"content":"                        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"rayyan35p"},"content":"                            list.setTaskIncomplete(taskNo);","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"rayyan35p"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"rayyan35p"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"rayyan35p"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"rayyan35p"},"content":"                    String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"rayyan35p"},"content":"                    if (inputSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"rayyan35p"},"content":"                        throw new DukeException(\"Input the task number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"rayyan35p"},"content":"                    } else if (inputSplit.length \u003e 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"rayyan35p"},"content":"                        throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"rayyan35p"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"rayyan35p"},"content":"                        int taskNo \u003d Integer.parseInt(inputSplit[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"rayyan35p"},"content":"                        list.deleteTask(taskNo);","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"rayyan35p"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"rayyan35p"},"content":"                } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"rayyan35p"},"content":"                    if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"rayyan35p"},"content":"                        if (input.length() \u003d\u003d 4 || input.equals(\"todo \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"rayyan35p"},"content":"                            throw new DukeException(\"Description of a todo cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"rayyan35p"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"rayyan35p"},"content":"                        input \u003d input.substring(5);","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"rayyan35p"},"content":"                        list.addTask(new ToDoTask(input));","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"rayyan35p"},"content":"                    } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"rayyan35p"},"content":"                        if (input.length() \u003d\u003d 8 || input.equals(\"deadline \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"rayyan35p"},"content":"                            throw new DukeException(\"Description of a deadline cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"rayyan35p"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"rayyan35p"},"content":"                        input \u003d input.substring(9);","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"rayyan35p"},"content":"                        String[] inputArr;","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"rayyan35p"},"content":"                        inputArr \u003d input.split(\" /by \");","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"rayyan35p"},"content":"                        list.addTask(new DeadlineTask(inputArr[0], inputArr[1]));","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"rayyan35p"},"content":"                    } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"rayyan35p"},"content":"                        if (input.length() \u003d\u003d 5 || input.equals(\"event \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"rayyan35p"},"content":"                            throw new DukeException(\"Description of an event cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"rayyan35p"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"rayyan35p"},"content":"                        input \u003d input.substring(6);","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"rayyan35p"},"content":"                        String[] inputArr;","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"rayyan35p"},"content":"                        inputArr \u003d input.split(\" /from \");","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"rayyan35p"},"content":"                        String description \u003d inputArr[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"rayyan35p"},"content":"                        inputArr \u003d inputArr[1].split(\" /to \");","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"rayyan35p"},"content":"                        list.addTask(new EventTask(description, inputArr[0], inputArr[1]));","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"rayyan35p"},"content":"                    } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"rayyan35p"},"content":"                        throw new DukeException(\"I don\u0027t know what that means\");","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"rayyan35p"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"rayyan35p"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"rayyan35p"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"rayyan35p"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"rayyan35p"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"rayyan35p"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"rayyan35p"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"rayyan35p"},"content":"                System.out.println(\"Please key in a valid index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"rayyan35p"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"rayyan35p"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"rayyan35p"},"content":"        list.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":104,"author":{"gitId":"rayyan35p"},"content":"    public static void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"rayyan35p"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"rayyan35p"},"content":"            System.out.println(i + 1 + \".\" + list.get(i));","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rayyan35p":104,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayyan35p"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"rayyan35p"},"content":"    public DukeException(String s) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"rayyan35p"},"content":"        super(s);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"rayyan35p"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"rayyan35p"},"content":"        super(\"test\");","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"rayyan35p"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"rayyan35p":9}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayyan35p"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"rayyan35p"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"rayyan35p"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"rayyan35p"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"rayyan35p"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"rayyan35p"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"rayyan35p"},"content":"    private DateTimeFormatter formatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"rayyan35p"},"content":"    public EventTask(String description, String startDate, String endDate) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"rayyan35p"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"rayyan35p"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"rayyan35p"},"content":"            this.formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"rayyan35p"},"content":"            // time should be in format dd/mm/yyyy HHMM(24h)","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"rayyan35p"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(startDate, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"rayyan35p"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(endDate, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"rayyan35p"},"content":"            if (start.isBefore(end)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"rayyan35p"},"content":"                this.startDate \u003d start;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"rayyan35p"},"content":"                this.endDate \u003d end;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"rayyan35p"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"rayyan35p"},"content":"                throw new DukeException(\"Your start date is either the same or after your end date!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"rayyan35p"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"rayyan35p"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"rayyan35p"},"content":"            System.out.println(\"There was an error parsing the date given.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"rayyan35p"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"rayyan35p"},"content":"    public String getType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"rayyan35p"},"content":"        return \"Event\";","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"rayyan35p"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"rayyan35p"},"content":"        return formatter.format(this.startDate) + \",\" + formatter.format(this.endDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"rayyan35p"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"rayyan35p"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"rayyan35p"},"content":"        DateTimeFormatter stringFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm a\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"rayyan35p"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + stringFormatter.format(this.startDate) +","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"rayyan35p"},"content":"                \" to: \" + stringFormatter.format(this.endDate) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"rayyan35p"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"rayyan35p":43}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayyan35p"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"rayyan35p"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"rayyan35p"},"content":"    private String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"rayyan35p"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"rayyan35p"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"rayyan35p"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"rayyan35p"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"rayyan35p"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"rayyan35p"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"rayyan35p"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"rayyan35p"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"rayyan35p"},"content":"    public abstract String getType();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"rayyan35p"},"content":"    public abstract String getDateTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"rayyan35p"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"rayyan35p"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"rayyan35p"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"rayyan35p"},"content":"            return \"[X] \" + description;","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"rayyan35p"},"content":"        return \"[ ] \" + description;","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"rayyan35p"},"content":"    // Need to store type of task, whether it is done, title, date/time","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"rayyan35p"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"rayyan35p"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"rayyan35p"},"content":"        String type \u003d this.getType();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"rayyan35p"},"content":"        String completed;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"rayyan35p"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"rayyan35p"},"content":"            completed \u003d \"1\";","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"rayyan35p"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"rayyan35p"},"content":"            completed \u003d \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"rayyan35p"},"content":"        String title \u003d this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"rayyan35p"},"content":"        String dateTime \u003d this.getDateTime();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"rayyan35p"},"content":"        if (this.getDateTime().length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"rayyan35p"},"content":"            output.append(type + \",\" + completed + \",\" + title + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"rayyan35p"},"content":"        else {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"rayyan35p"},"content":"            output.append(type + \",\" + completed + \",\" + title + \",\" + dateTime + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"rayyan35p"},"content":"        return output.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"rayyan35p"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"rayyan35p":52}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayyan35p"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"rayyan35p"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"rayyan35p"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"rayyan35p"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"rayyan35p"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"rayyan35p"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"rayyan35p"},"content":"public class TaskList {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"rayyan35p"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"rayyan35p"},"content":"    private File file;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"rayyan35p"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"rayyan35p"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"rayyan35p"},"content":"    public TaskList(File file) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"rayyan35p"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"rayyan35p"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"rayyan35p"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"rayyan35p"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"rayyan35p"},"content":"                String storedTask \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"rayyan35p"},"content":"                String[] taskArray \u003d storedTask.split(\",\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"rayyan35p"},"content":"                Task task;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"rayyan35p"},"content":"                if (taskArray[0].startsWith(\"Todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"rayyan35p"},"content":"                    task \u003d new ToDoTask(taskArray[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"rayyan35p"},"content":"                } else if (taskArray[0].startsWith(\"Deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"rayyan35p"},"content":"                    task \u003d new DeadlineTask(taskArray[2], taskArray[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"rayyan35p"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"rayyan35p"},"content":"                    task \u003d new EventTask(taskArray[2], taskArray[3], taskArray[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"rayyan35p"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"rayyan35p"},"content":"                if ((taskArray[1]).equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"rayyan35p"},"content":"                    task.setDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"rayyan35p"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"rayyan35p"},"content":"                this.list.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"rayyan35p"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"rayyan35p"},"content":"            scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"rayyan35p"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"rayyan35p"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"rayyan35p"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"rayyan35p"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"rayyan35p"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"rayyan35p"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"rayyan35p"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"rayyan35p"},"content":"        this.list.add(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(\"Now you have \" + this.list.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"rayyan35p"},"content":"    public void setTaskComplete(int i) {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"rayyan35p"},"content":"        Task task \u003d this.list.get(i);","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"rayyan35p"},"content":"        task.setDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"rayyan35p"},"content":"    public void setTaskIncomplete(int i) {","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"rayyan35p"},"content":"        Task task \u003d this.list.get(i);","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"rayyan35p"},"content":"        task.setNotDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"rayyan35p"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"rayyan35p"},"content":"        return this.list.get(i);","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"rayyan35p"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"rayyan35p"},"content":"        Task task \u003d this.list.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"rayyan35p"},"content":"        this.list.remove(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"rayyan35p"},"content":"        System.out.println(\"Now you have \" + this.list.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"rayyan35p"},"content":"    public void printList() {","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"rayyan35p"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"rayyan35p"},"content":"            System.out.println(i + 1 + \".\" + list.get(i));","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"rayyan35p"},"content":"    public void close() {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"rayyan35p"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"rayyan35p"},"content":"            FileWriter writer \u003d new FileWriter(this.file);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"rayyan35p"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"rayyan35p"},"content":"                writer.write(task.toFileString());","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"rayyan35p"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"rayyan35p"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"rayyan35p"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"rayyan35p"},"content":"            System.out.println(\"An error occurred while saving your tasks.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"rayyan35p"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"rayyan35p"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"rayyan35p"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"rayyan35p":97}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayyan35p"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"rayyan35p"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"rayyan35p"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"rayyan35p"},"content":"    public String getType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"rayyan35p"},"content":"        return \"Todo\";","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"rayyan35p"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"rayyan35p"},"content":"        return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"rayyan35p"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"rayyan35p"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"rayyan35p"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"rayyan35p"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"rayyan35p"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"rayyan35p"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"rayyan35p":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rayyan35p"},"content":"todo read book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"rayyan35p"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"rayyan35p"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"rayyan35p"},"content":"todo join sports club","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"rayyan35p"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"rayyan35p"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"rayyan35p"},"content":"mark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"rayyan35p"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"rayyan35p"},"content":"unmark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"rayyan35p"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"rayyan35p"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"rayyan35p":11}}]
