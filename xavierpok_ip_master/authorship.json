[{"path":"src/main/java/Kniaz.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"import task.*;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"public class Kniaz {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"     * Seperator to make things a bit prettier","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"    private static final String SEPERATOR \u003d \"_\".repeat(20) + \"\\n\";","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"     * Logo to use to represent this chatbot in the command line","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"    private static final String LOGO \u003d \"KNIAZ\";","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"    // Placeholder for now, intend to make prettier later","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"    // Kniaz is a rough equivalent for Duke in eastern europe - get it?","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"     * Message to print when exiting.","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"    private static final String EXITMESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"     * String that, when entered into the command line interface of Kniaz, result in Kniaz exiting, and","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"     * printing the exit message.","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"    public static final String EXITSTRING \u003d \"bye\";","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"     * All tasks stored by Kniaz.","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"     * Main function of Kniaz, that is intended as entry point into the program.","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"     * @param args arguments to be entered into Kniaz when it is called from command line","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"//        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"        // initialise a scanner object to read from input","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"        System.out.println(\"Hello from\\n\" + Kniaz.LOGO);","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"        System.out.println(Kniaz.SEPERATOR);","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"        System.out.println(Kniaz.SEPERATOR);","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"        String next \u003d \"\"; //Initialise the input","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"        while (true) { // I find this a bit icky but we rely on guard clauses to break instead","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"xavierpok"},"content":"            next \u003d input.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"xavierpok"},"content":"            if (next.equals(Kniaz.EXITSTRING)) {","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"xavierpok"},"content":"                break; // Used here instead of in the while because of timing of next","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"xavierpok"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"xavierpok"},"content":"            if (next.equals(\"list\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"xavierpok"},"content":"                System.out.println(taskList.toPrintString());","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"xavierpok"},"content":"                // print out if we are asked to list","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"xavierpok"},"content":"            } else if (next.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"xavierpok"},"content":"                // handle parsing which entry the user wants to mark here","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"xavierpok"},"content":"                String entryAsString \u003d Kniaz.getAfter(next,\"mark\");","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"xavierpok"},"content":"                int entryAsInt \u003d Integer.parseInt(entryAsString.strip());","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"xavierpok"},"content":"                int entryToMark \u003d entryAsInt - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"xavierpok"},"content":"                // handle actual marking here","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"xavierpok"},"content":"                taskList.get(entryToMark).markAsDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"xavierpok"},"content":"                // give user feedback","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"xavierpok"},"content":"                System.out.println(\"As you say. The task has been marked as done.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"xavierpok"},"content":"                System.out.println(taskList.get(entryToMark).toPrintString());","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"xavierpok"},"content":"            } else if (next.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"xavierpok"},"content":"                // handle parsing which entry user wants to unmark here","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"xavierpok"},"content":"                String entryAsString \u003d Kniaz.getAfter(next,\"unmark\");","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"xavierpok"},"content":"                int entryAsInt \u003d Integer.parseInt(entryAsString.strip());","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"xavierpok"},"content":"                int entryToMark \u003d entryAsInt - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"xavierpok"},"content":"                // handle unmarking here","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"xavierpok"},"content":"                Kniaz.taskList.get(entryToMark).markAsUndone();","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"xavierpok"},"content":"                // give user feedback","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"xavierpok"},"content":"                System.out.println(\"Ah, so you didn\u0027t actually finish it. Correcting your mistake.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"xavierpok"},"content":"                System.out.println(taskList.get(entryToMark).toPrintString());","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"xavierpok"},"content":"            } else if (next.startsWith((\"todo\"))) {","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"xavierpok"},"content":"                String taskName \u003d Kniaz.getAfter(next,\"todo\").strip();","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"xavierpok"},"content":"                // interpret everything else that isn\u0027t special as a task to add","lastModifiedDate":"2023-08-20"},{"lineNumber":104,"author":{"gitId":"xavierpok"},"content":"                Task taskToAdd \u003d new ToDo((taskName));","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"xavierpok"},"content":"                // next currently holds the name of this new task","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"xavierpok"},"content":"                Kniaz.taskList.add(taskToAdd);","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"xavierpok"},"content":"                System.out.printf(\"added: %s%n\",taskToAdd.toPrintString());","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"xavierpok"},"content":"            } else if (next.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"xavierpok"},"content":"                // pull the args for this command","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"xavierpok"},"content":"                String deadlineArgs \u003d Kniaz.getAfter(next, \"deadline\");","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"xavierpok"},"content":"                String[] tokenizedDlineArgs \u003d deadlineArgs.split(\"/\");","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"xavierpok"},"content":"                // Split it up by the slash","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"xavierpok"},"content":"                String deadlineName \u003d tokenizedDlineArgs[0].strip();","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"xavierpok"},"content":"                String deadlineTime \u003d Kniaz.getAfter(tokenizedDlineArgs[1], \"by\").strip();","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"xavierpok"},"content":"                // we getAfter(\"by\"), to get all after the by, as that\u0027s the actual date/time","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"xavierpok"},"content":"                // Of note, this means that if it\u0027s lacking \"by\", no time will be specified.","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"xavierpok"},"content":"                // strip to remove excess whitespace","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"xavierpok"},"content":"                Task taskToAdd \u003d new Deadline(deadlineName,deadlineTime);","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"xavierpok"},"content":"                Kniaz.taskList.add(taskToAdd);","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"xavierpok"},"content":"                // make a new Deadline to add","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"xavierpok"},"content":"                System.out.printf(\"added: %s%n\",taskToAdd.toPrintString());","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"xavierpok"},"content":"                // remember to print our message to the user!","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"xavierpok"},"content":"            } else if (next.startsWith(\"event\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"xavierpok"},"content":"                String eventArgs \u003d Kniaz.getAfter(next, \"event\");","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"xavierpok"},"content":"                String[] tokenizedEventArgs \u003d eventArgs.split(\"/\");","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"xavierpok"},"content":"                String eventName \u003d tokenizedEventArgs[0].strip();","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"xavierpok"},"content":"                String eventStart \u003d Kniaz.getAfter(tokenizedEventArgs[1], \" from\").strip();","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"xavierpok"},"content":"                String eventEnd \u003d Kniaz.getAfter(tokenizedEventArgs[2], \"to\").strip();","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"xavierpok"},"content":"                // we use getAfter here to get all after the \"from\" or \"to\", as that\u0027s the actual date/time","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"xavierpok"},"content":"                // strip to remove excess whitespace","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"xavierpok"},"content":"                Task taskToAdd \u003d new Event(eventName, eventStart, eventEnd);","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"xavierpok"},"content":"                Kniaz.taskList.add(taskToAdd);","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"xavierpok"},"content":"                // add a new Event to the tasklist","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"xavierpok"},"content":"                System.out.printf(\"added: %s%n\",taskToAdd.toPrintString());","lastModifiedDate":"2023-08-21"},{"lineNumber":148,"author":{"gitId":"xavierpok"},"content":"                // and remember to give feedback to user","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"xavierpok"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"xavierpok"},"content":"            // Each command input will invariable result in a seperator line being printed","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"xavierpok"},"content":"            // Helps to keep it looking nice","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"xavierpok"},"content":"            System.out.println((Kniaz.SEPERATOR));","lastModifiedDate":"2023-08-20"},{"lineNumber":154,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":155,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":156,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":157,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":158,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":159,"author":{"gitId":"xavierpok"},"content":"        System.out.println(Kniaz.EXITMESSAGE);","lastModifiedDate":"2023-08-20"},{"lineNumber":160,"author":{"gitId":"xavierpok"},"content":"        System.out.println(Kniaz.SEPERATOR);","lastModifiedDate":"2023-08-20"},{"lineNumber":161,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":162,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":163,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"xavierpok"},"content":"     * Helper function to get the substring after a provided substring","lastModifiedDate":"2023-08-21"},{"lineNumber":165,"author":{"gitId":"xavierpok"},"content":"     * @param fullString The whole string to scan","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"xavierpok"},"content":"     * @param subString The substring to scan fullString for","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"xavierpok"},"content":"     * @return the substring of everything after the provided subString","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"xavierpok"},"content":"    private static String getAfter(String fullString, String subString) {","lastModifiedDate":"2023-08-21"},{"lineNumber":170,"author":{"gitId":"xavierpok"},"content":"        int indexOfSubString \u003d fullString.indexOf(subString);","lastModifiedDate":"2023-08-21"},{"lineNumber":171,"author":{"gitId":"xavierpok"},"content":"        return fullString.substring(indexOfSubString + subString.length());","lastModifiedDate":"2023-08-21"},{"lineNumber":172,"author":{"gitId":"xavierpok"},"content":"        // add the substring length to skip to the end of it","lastModifiedDate":"2023-08-21"},{"lineNumber":173,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":174,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":175,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":176,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":177,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":178,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":179,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":180,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"xavierpok":180}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package task;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":" * Encapsulates a task with a singular deadline,","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":" * so has a name, completion status, and a time representing the deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"     * String to put at the front of string rep of this, represents the name,","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"     * D for [D]eadline","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"    private final static String PREPEND \u003d \"[D]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"     * String representing the deadline of this Deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"    private String deadlineTime \u003d \"\";","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"     * Constructor for Deadline, setting name and time","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"     * @param deadlineName the name of this Deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"     * @param deadlineTime the time of this Deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"    public Deadline(String deadlineName, String deadlineTime) {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"        super(deadlineName, false);","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"     * The user-facing string representation of this Deadline, containing information about","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"     * what kind of task this is(a Deadline), its name, when it is due, and whether it is done.","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"     * @return the user-facing string representation of this Deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"    public String toPrintString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"        String postpend \u003d String.format(\"(by : %s)\",this.deadlineTime);","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"        return Deadline.PREPEND + super.toPrintString() + postpend;","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"xavierpok":41}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package task;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"     * String to put at the front of string rep of this, represents the name,","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"     * E for [E]vent","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"    private final static String PREPEND \u003d \"[E]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"     * String representing whene this Event starts","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"    private String startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"     * String representing when this Event ends","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"    private String endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"     * Constructor for Event, setting name, starting time, ending time","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"     * @param eventName the name of this Deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"     * @param startTime the starting time of this Deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"     * @param endTime the ending time of this Deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"    public Event(String eventName, String startTime, String endTime) {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"        super(eventName, false);","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"     * The user-facing string representation of this Event, containing information about","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"     * what kind of task this is(an Event), its name, when it starts, when it ends, and whether it is done.","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"     * @return the user-facing string representation of this Deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"    public String toPrintString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"        String postpend \u003d String.format(","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"                \" from : %s to: %s\", this.startTime, this.endTime","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"        ); //need a whitespace here for formatting reasons","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"        return Event.PREPEND + super.toPrintString() + postpend;","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"xavierpok":45}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package task;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":" * Class encapsulating a single task to be done (by the user) in Kniaz","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"     * Whether this task is done","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"     * Name of this task","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"    private String taskName \u003d \"\";","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"     * The (protected) constructor for this task, mostly for inheritance by subclasses","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"     * @param taskName name of task","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"     * @param isDone whether it is done","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"    protected Task(String taskName, boolean isDone) {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"     * Marks this task as done, does NOT check for if it was already done","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"        this.isDone \u003d true  ;","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"     * Marks this task as not done, does NOT check for if it was already undone","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"xavierpok"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"xavierpok"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"xavierpok"},"content":"     * The user-facing string representation of this Task, containing information about","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"xavierpok"},"content":"     * whether this task is done and its name","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"xavierpok"},"content":"     * @return the user-facing string representation of this ToDo.","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"xavierpok"},"content":"    public String toPrintString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"xavierpok"},"content":"        String statusIcon \u003d \"\";","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"xavierpok"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"xavierpok"},"content":"            statusIcon \u003d \"X\";","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"xavierpok"},"content":"        } else if (!this.isDone) {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"xavierpok"},"content":"            statusIcon \u003d \" \";","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"xavierpok"},"content":"        return String.format(\"[%s] %s\", statusIcon, this.taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"xavierpok"},"content":"        // return in format [statusIcon] taskname","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"xavierpok":60}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package task;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":" * Class encapsulating a list of Tasks, supports easy string representation, refer to Task for more details about","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":" * what Tasks are.","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"    // Parent constructor is (implicitly) used","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"     * Returns the user-facing string representation of TaskList,","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"     * which is a numbered list of the user-facing string representation of each Task,","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"     * with a newline in between each entry","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"     * @return the string representation of TaskList","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"    public String toPrintString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"            Task currTask \u003d this.get(i);","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"            String newLine \u003d String.format(","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"                    \"%d. %s\\n\", i+1 , currTask.toPrintString());","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"            // User probably expects to start counting from 1 instead of 0","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"            // so need to add 1 here","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"            out.append(newLine);","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"        return out.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"xavierpok":39}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"package task;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":" * Encapsulates a Task that is a to-do, lacking a date and only containing a name and completion status","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"xavierpok"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"xavierpok"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"xavierpok"},"content":"     * String to put at the front of string rep of this, represents the name,","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"xavierpok"},"content":"     * T for [T]oDo","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"xavierpok"},"content":"    private final static String PREPEND \u003d \"[T]\";","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"xavierpok"},"content":"     * Constructor for a ToDo.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"xavierpok"},"content":"     * @param toDoName the name of this ToDo","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"xavierpok"},"content":"    public ToDo(String toDoName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"xavierpok"},"content":"        super(toDoName,false);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"xavierpok"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"xavierpok"},"content":"     * The user-facing string representation of this ToDo, containing information about","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"xavierpok"},"content":"     * what kind of task this is(a ToDo), its name and whether it is done","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"xavierpok"},"content":"     * @return the user-facing string representation of this ToDo.","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"xavierpok"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"xavierpok"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"xavierpok"},"content":"    public String toPrintString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"xavierpok"},"content":"        return ToDo.PREPEND + super.toPrintString();","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"xavierpok"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"xavierpok"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"xavierpok"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"xavierpok":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xavierpok"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"xavierpok"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"xavierpok"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"xavierpok"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"xavierpok"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"xavierpok":5}}]
