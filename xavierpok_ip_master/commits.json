{"authorDailyContributionsMap":{"xavierpok":[{"date":"2023-08-20","commitResults":[{"hash":"8edc3a7d9952ab3327e1fe85148d9f98a7089eed","isMergeCommit":false,"messageTitle":"Implements Level 0 features of the Duke (Re-named to Kniaz for this version) chatbot. This refers to just renaming the chatbot, and implementing a skeletal version that greets the user and exits.","messageBody":"Adds two new private fields, LOGO and SEPERATOR, to help with this, which hold the logo and horizontal seperator lines respectively (Seperator lines are to help with formatting)\n","tags":["level-0"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":10}}},{"hash":"2235c7222b2b49581657e87f787ecd2d94b74737","isMergeCommit":false,"messageTitle":"Implements level 1 features \u0026 adds (public) constant fields.","messageBody":"Level 1 features just refers to echoing any input given by the user. Also adds a public field EXITSTRING which is the input that will cause Kniaz to exit. Adds private field EXITMESSAGE that is the message that prints on exit.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":2}}},{"hash":"64cb410ed17bd85d73d43b64a3a688a17207418d","isMergeCommit":false,"messageTitle":"Adds  ability to store text entered by user and display back when requested","messageBody":"When a string that isn\u0027t interpreted as a command is input, adds it to internal storage. When list is input, displays the list. Note : \u0027bye\u0027 is retained as a command still.\n\nAlso adds a new private function to format this task list as a string.\n","tags":["Proto-Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":4}}},{"hash":"5d3ce9d71055c5a4e69bd79d26713cd4ec457bf3","isMergeCommit":false,"messageTitle":"Final version of Level 2","messageBody":"Makes edits to code formatting, functionality is the same. Redundant while statement amended to while(True), and System.out.println of String.format call amended to System.out.printf\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}}]},{"date":"2023-08-21","commitResults":[{"hash":"19395e77781a58c792d61ad8b9fb61ef7c8796d0","isMergeCommit":false,"messageTitle":"Adds ability to mark/unmark tasks as done/undone with accompanying message. Adds Task and TaskList classes to encapsulate tasks, and lists of tasks respectively.","messageBody":"","tags":["Proto-Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":25}}},{"hash":"ea42ab472f0909c6bab2a2b1e7143e1007541a14","isMergeCommit":false,"messageTitle":"Documents additions in previous commit, tagged Proto-Level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":15}}},{"hash":"1c4147be615c39d8f04c42e1d765c494bb313467","isMergeCommit":false,"messageTitle":"Implements ToDos, Deadlines and Events, as well as input/output (i.e. commands and printing to Kniaz\u0027s command line) for said tasks, and refactors Task printing slightly.","messageBody":"Feature expansion to hit Level 4.\n\nToDos are Tasks without dates/times, Deadlines are Tasks with a singular due date/times, Events are Tasks with a start/stop.\n\nAlso refactors Task to be an abstract class for ToDo to inherit from.\n\nThis is a slight shift of paradigm, as a Task would be something you need to do, but alone contains insufficient information.\n\nToDos lack time as it\u0027s just something the user has to do -- time isn\u0027t relevant here\n\nA deadline naturally has a due date.\n\nEvents in Kniaz are defined by start-stop in addition to the name, which is a natural abstraction of an event (Kniaz doesn\u0027t care about place (yet?))\n\nLastly, string representation to output of Tasks in Kniaz\u0027s output has been shifted from toString() to toPrintString(), to diffrentiate between input meant SOLELY for the user (which is toPrintString())\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":192,"deletions":35}}}]},{"date":"2023-08-22","commitResults":[{"hash":"aa05fdd9eb7a66ecd30a14409a19c0c99b793bc5","isMergeCommit":false,"messageTitle":"Patches user-facing string rep of Event, adding a whitespace in front of \"from\"","messageBody":"Needed to make it adhere closer to expected output, as no whitespace means \"from\" sticks to the previous string\n\nImproves output seen by user\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"4edd8aa590021e40deb3e4e4f634949523b82df9","isMergeCommit":false,"messageTitle":"Patches user-facing string rep of Event, adding a whitespace in front of \"from\"","messageBody":"Needed to make it adhere closer to expected output, as no whitespace means \"from\" sticks to the previous string\n\nImproves output seen by user\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"2dc0cdd489b3a2c4fe3ace396d0aff4f935e7c85","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/master\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"b64b8b212320eb074c2cc9d88b09bcbfe37cb90d","isMergeCommit":false,"messageTitle":"Adds (single) semi-automated test case for use with runtest.sh","messageBody":"Allows for quick verification of input/output, comparing EXPECTED against input and actual output.\n\nExpected is to be updated with further edits to behaviour of Kniaz.\n","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0}}}]},{"date":"2023-08-23","commitResults":[{"hash":"062b4c493051750b3e93c57b0678b52c6932280b","isMergeCommit":false,"messageTitle":"Adds user error reporting, moves a significant amount of parsing and event logic out of Kniaz, and adds a new Exception, KniazRuntimeException","messageBody":"User error reporting is useful, as the user would naturally want to know what they did wrong.\n\nMoves parsing of commands into KniazParser, which now handles parsing of commands. It seperates commands into what kind of commands and their arguments\n\nMoves logic of commands into the logic.taskhandling package. The classes within take in the text-interface command arguments as Strings and work through the logic of how to operate on those. E.g., the ToDo name is passed to a ToDoHandler which decides what to do with this.\n\nMoving of parsing helps to keep Kniaz clean, and seperate how we decide to parse the command given to Kniaz seperate from the main Kniaz loop. This is important as there are many ways to parse arguments, and we might decide another way is better. This also allows for better exception handling, as Kniaz does not need to do input validation, and just passes it off to another class. All Kniaz has to do now is to grab whatever exception is thrown up and figure out what to do(Which is a lot easier!)\n\nSimilarly, for logic, we might decide to refactor it later, and this helps keep Kniaz clean. Notably, validation of the arguments provided can be handled seperately. For example, ToDo will only expect ONE argument, but the user might decide to provide two. Getting Kniaz or KniazParser to handle this borders on scope creep of what these classes are meant to do. Also offers similar benefits in exception handling as per the paragraph above about KniazParser.\n\nAddition of the new Exception is to support these new features. Notably, the addition of a seperate userMessage field supports two different exception reporting pipelines, to support good user experience. It\u0027s reasonable that more information might be needed to debug for future feature additions/refactors that might overwhelm or confuse the user, but a developer might find useful.\n\nModifies test cases to reflect the new change in behaviour\n","tags":["Level-5","A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":410,"deletions":77},"sh":{"insertions":1,"deletions":1}}},{"hash":"332889531bee5f136a77dad7a4241b3965bae9fd","isMergeCommit":false,"messageTitle":"Documents code added in previous commit(Tagged Level-5), Converts all commandHandler classes in logic-\u003etaskhandling package to be abstract classes","messageBody":"Documentation was not done previously, this commit fixes that\n\nClasses should be abstract, as they contain only static methods and should not be instantiated.\n","tags":["Documents-Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":226,"deletions":35}}},{"hash":"78a3b735b71723515201aeca51722574b636939f","isMergeCommit":false,"messageTitle":"Updates test case","messageBody":"Amends and expands input.txt and EXPECTED.txt to be accurate to new features, including invalid input handling\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0}}},{"hash":"70936e2f5385afb377ee8a0b1c20fdb73db87db0","isMergeCommit":false,"messageTitle":"Implements task deletion, and fixes formatting \u0026 documentation in TaskList, and adds whitespace stripping to parseCommand","messageBody":"DeleteHandler follows the same design pattern for the other commands, and additions in Kniaz and KniazParser are needed to accomodate the new command.\n\nAdding deletion is a useful feature because sometimes the user makes a mistake or wants to permanently delete a task to shorten the list\n\nAlso adds test case for demonstration of new behaviour\n\nparseCommand stripping whitespace brings it closer to user-expected behaviour because it\u0027s natural to expect that leading/trailing whitespaces would be ignored\n\nLastly, fixing of formatting and adding documentation is good because style guide and it\u0027s good to document\n","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":109,"deletions":17}}}]},{"date":"2023-08-27","commitResults":[{"hash":"39cb07556bf46f4581064868e29649ab7efeead0","isMergeCommit":false,"messageTitle":"Implement saving","messageBody":"Currently, Kniaz forgets all data on new session\n\nLet it save to remember from previous session.\n","tags":["Saving"],"fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":1}}}]},{"date":"2023-08-28","commitResults":[{"hash":"a9c7aacc5917b29c51c456731c7bfa3675aba531","isMergeCommit":false,"messageTitle":"Implement loading on Kniaz start","messageBody":"Previous commit tagged Saving only saves, does not load\n\nSaving only makes sense if Kniaz loads saved data\n","tags":["Loading"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":10}}},{"hash":"a75de4dda04b579ce247ebff744404d1d2298adb","isMergeCommit":false,"messageTitle":"Write javadoc strings for commits tagged Saving, Loading","messageBody":"Previous commits implemented functionality, lacked javadoc strings.\n\nDocumentation is good.\n","tags":["Level-7","Documents-Saving-Loading"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":9}}},{"hash":"d6e3967c81cd09beea7eba545506e9dd7c9d0a85","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-7\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"3089cc5a9441a0307f640190679c11dc7b186387","isMergeCommit":false,"messageTitle":"Implement date-time parsing","messageBody":"Currently, stores date-time only as Strings, no parsing\n\nShould parse to allow for flexibility and organised output for better UX\n","tags":["date-time-parse"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":1},"java":{"insertions":67,"deletions":8}}},{"hash":"c06f521a0f9d7669d795e789693aaabf81c14928","isMergeCommit":false,"messageTitle":"Write javadoc strings \u0026 fix code standard issues","messageBody":"Documentation \u0026 code standards are important\n\nModify access on class members to keep the API good and upkeep good OOP\n","tags":["document-date-time-parsing"],"fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":8}}},{"hash":"41bd70669f302c7ec49da542e3a5d300076c83be","isMergeCommit":false,"messageTitle":"Update test cases","messageBody":"Test cases were unmodified, outdated\n\nModification to reflect new behaviour is good\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":3}}},{"hash":"3fd07aa07206e78bb37f5787552447523d835a11","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"babda4953a4eb158cadcbad5f3c228ed79754128","isMergeCommit":false,"messageTitle":"Create new package io","messageBody":"Prepare to seperate I/O into another package for better OOP practices\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"6a589990e06a7764e44646b49a34dfb18423a1ea","isMergeCommit":false,"messageTitle":"Move parser package to io \u0026 rename","messageBody":"Was not under io package previously\n\nParsing of incoming inputs should be under io package\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":48}}},{"hash":"e18cf334fbd23482fa3fa6aa2c2a418a0b98ff52","isMergeCommit":false,"messageTitle":"Seperate InstructionType into own class","messageBody":"Was inner class of KniazParser\n\nNow, seperate to make cleaner, needed as more functionality added on\n","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":0}}},{"hash":"cb5b7c6dbd86ce05979c2b9b8f2879dbf40b09cd","isMergeCommit":false,"messageTitle":"Create exception class shells","messageBody":"One type of exception covers all Kniaz exception, very unspecific\n\nExpand types to prepare for I/O refactor later\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}}]},{"date":"2023-08-29","commitResults":[{"hash":"a66b5f9d8bdfcc51f2290ceb12da49debc58d973","isMergeCommit":false,"messageTitle":"Refactor command handling \u0026 parsing","messageBody":"Command handling code used to handle parsing also, and was messy.\n\nSplit command handling \u0026 parsing to be more functional in paradigm.\n\nBetter design helps maintain and extend\n","fileTypesAndContributionMap":{"java":{"insertions":696,"deletions":567}}},{"hash":"99c9444e87788a28278d379db8f038b700f62032","isMergeCommit":false,"messageTitle":"Finish implementation and add javadocs","messageBody":"Had some small errors and unfinished docs\n\nShould be cleaned up and documentation thrown in for future reference\n","fileTypesAndContributionMap":{"java":{"insertions":192,"deletions":77}}},{"hash":"f686cc77078b9a82c386ca00b33d202079345fd6","isMergeCommit":false,"messageTitle":"Fix error in CommandFactory, KniazCommand","messageBody":"Now, does not make sense or works\n\nSensible and working code is good\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":18}}},{"hash":"4129af5f9517f7dc507fc5ccc8f8da4557eab2e1","isMergeCommit":false,"messageTitle":"Fix errors, finish implementation of OOP","messageBody":"Previously was undone, finish refactor\n\nBetter methodology and structure is good for design\n\nCurrent implementation lacking exception handling, output is bare-bones\n","fileTypesAndContributionMap":{"java":{"insertions":568,"deletions":449}}}]},{"date":"2023-08-30","commitResults":[{"hash":"333ec1635e19624b33dda2075b41c551af904f96","isMergeCommit":false,"messageTitle":"Make chatbot have more personality in responses","messageBody":"Previous refactor removed due to re-implementation of I/O\n\nFeature re-addition after refactor is good to return to behaviour\n\nCurrent design also more extensible overall than previous design\n","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":5}}},{"hash":"9444dd5d08b8afa082f92f7d7e57a25612cc103f","isMergeCommit":false,"messageTitle":"Add missing javadoc strings \u0026 inline comments","messageBody":"Previously, missing javadoc strings \u0026 inline comments in code.\n\nConsistent documentation is a good thing.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":127,"deletions":56}}},{"hash":"67a18a7397778b1f3c2e37a491e8b0fa4a271c29","isMergeCommit":false,"messageTitle":"Fix bugs in line parsing","messageBody":"Previously, read each whitespace delimited string as an unnamed argument\n\nI.e. it would interpret \"todo read book\" w/ args \"read\"\u0026\"book\"\n\nFix this to be in line with old \u0026 expected behaviour\n","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":32}}},{"hash":"31e3a49af8d6b6fc55e7db72ee65c2cca5c7dc9c","isMergeCommit":false,"messageTitle":"Update exceptions, use \u0026 handle new exceptions","messageBody":"Fine-tune exception types and implement where appropriate\n\nBetter practices, as more specific exceptions are better\n\nWhen exception is thrown, more information about what kind of exception\n\nPrevious commits did not handle exception after refactor\n\nHandling certain exceptions that are expected to crop up is good\n","fileTypesAndContributionMap":{"java":{"insertions":262,"deletions":109}}},{"hash":"05320ac4478ac660386cd93f248d670dde86d7ed","isMergeCommit":false,"messageTitle":"Update test case to match expected behaviour","messageBody":"Changes changed behaviour slightly, update to match expected output\n\nUpdating test case is good because now it reflects actual expected\n","fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0}}},{"hash":"5849176d22047afb8b229924487c8296a47a3ddf","isMergeCommit":false,"messageTitle":"Add comments explaining why things were done","messageBody":"Documentation is good\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"187f9936ccf46980ccc8b29cc5918dc70459345d","isMergeCommit":false,"messageTitle":"Removes unused import statements and fixes javadoc","messageBody":"Code style and documentation standards are good\n","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":6}}}]},{"date":"2023-08-31","commitResults":[{"hash":"f66d837c3eda91562b05defedb7257fbe0284e81","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-Packages","A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"cd27a61e0ac51fa46d87f90de79cc772351f8cc9","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"254b64a3c486d85c89fe4f9a40c824fc830c65a4","isMergeCommit":false,"messageTitle":"Add \u0026 configure gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"df53fb75f7fe79ea41f714a729c7c896a28190ca","isMergeCommit":false,"messageTitle":"Add no-arg constructor to KniazSession","messageBody":"Useful for instantiating anonymous instances -- Lack all behaviour as no fields\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"909b5d12e489483b4635e496e25d585e5a77fa9e","isMergeCommit":false,"messageTitle":"Add tests for DeadlineHandler, DeleteHandler","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":168,"deletions":0}}},{"hash":"448a55fdf62e7a0c6910ff558fe7fc9ecd3132bc","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"","tags":["A-JavaDoc","A-Jar","A-JUnit","A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"12a0356806bdbcf8895bdc7164c166d3bb4d180f","isMergeCommit":false,"messageTitle":"Add new find command","messageBody":"Feature expansion, useful if user has many tasks in their task list.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":75,"deletions":1}}},{"hash":"43a76ebe9b0666b627973b7e0d56996734fd5f85","isMergeCommit":false,"messageTitle":"Edit name of built jar via shadowjar to Kniaz","messageBody":"Kniaz is the name of our program, NOT duke.\n","tags":["Incidental-Fix"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"055c4b63a3261a2ea01a041094b2925a4f2e90d8","isMergeCommit":true,"messageTitle":"Merge branch \u0027Branch-L-9\u0027","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2023-09-05","commitResults":[{"hash":"0e6b2bbe34d6886cdf4c1213462a54049b3cdd18","isMergeCommit":false,"messageTitle":"Fix codestyle errors \u0026 import statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":196}}},{"hash":"21aaf03d90c62a18730ff818ec644f4eb3ff7f61","isMergeCommit":false,"messageTitle":"Fix to adhere to stylecheck","messageBody":"","tags":["A-checkstyle"],"fileTypesAndContributionMap":{"java":{"insertions":274,"deletions":391}}},{"hash":"7dc8ad089a7de872bbd2dab6bb2f2796888ea89c","isMergeCommit":false,"messageTitle":"Fix format bug that caused compile error","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":7}}}]},{"date":"2023-09-06","commitResults":[{"hash":"5566d57024d61d1f6b9cc54f0280697e67f2aa89","isMergeCommit":false,"messageTitle":"Fix compile error","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"1e45212bfb08e377ba99c8069e053d098a746660","isMergeCommit":false,"messageTitle":"Implement first stage of javafx","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":2},"java":{"insertions":30,"deletions":1}}},{"hash":"ec50ec7d5053704ae21d7393b4b23e63fa17625e","isMergeCommit":false,"messageTitle":"Revert \"Fix compile error\"","messageBody":"This reverts commit 5566d57024d61d1f6b9cc54f0280697e67f2aa89.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":5}}},{"hash":"db1c6e770ddd0328c4a464ecd28863cfa940679a","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into javafx-testing","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e5d1082f1c327157487c30bc60b9ab1c89ba637f","isMergeCommit":false,"messageTitle":"Implement framework from javafx tutorial","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":47,"deletions":0},"java":{"insertions":289,"deletions":15}}},{"hash":"8c35ee3ec0e1c66d6f0b17abf341733b2681078a","isMergeCommit":false,"messageTitle":"Re-work Kniaz to use javaFX GUI to I/O","messageBody":"Part of implementation of Level-10\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":2},"java":{"insertions":51,"deletions":170}}},{"hash":"4da9d7a0bf911b1a13294324447be777314aa8d9","isMergeCommit":false,"messageTitle":"Implement quitting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":7}}},{"hash":"b7788a1cf3776303dae0db8dc15a78b013f127d3","isMergeCommit":false,"messageTitle":"Add javadocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":11}}},{"hash":"d3d4135cc7e1daba539a1af6bc10422011cda70a","isMergeCommit":false,"messageTitle":"Refactor, mostly sorting into packages","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":91,"deletions":78}}},{"hash":"1d674ca33346973a787521f739915030924d22fe","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10","A-Varargs"],"fileTypesAndContributionMap":{}}]},{"date":"2023-09-12","commitResults":[{"hash":"bdb4bdfcc9b7ec15402a415a9c32ad34f5fdb813","isMergeCommit":false,"messageTitle":"Add assert for InstructionType","messageBody":"Currently does not use assert to throw exception.\n\nChanges error checking to use assert.\n\nUsing assert makes it cleaner and emphasises it\u0027s a programmer error\n\nException covered should not occur except in case of error.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}},{"hash":"6570046dd018377f5a83255a7a0ce79e40b45530","isMergeCommit":false,"messageTitle":"Add assert for FindHandler","messageBody":"Currently does not use assert to throw exception.\n\nChanges error checking to use assert.\n\nUsing assert makes it cleaner and emphasises it\u0027s a programmer error\n\nException covered should not occur except in case of error.\n\nIt\u0027s unlikely to occur but in case something goes wrong.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"fe6d61e1c178c6fa2553593fb3445067b53f9bb2","isMergeCommit":false,"messageTitle":"Add assert for CommandFactory","messageBody":"Currently, does not do checking for instruction types existing in its mapping.\n\nAdds such checking.\n\nEnsures that all instruction types entered by user will have an associated handler.\n\nException covered should not occur except in case of error.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"d3e21cdf780c75b1aca803e59d1fd52937f8c0fc","isMergeCommit":false,"messageTitle":"Touch up code quality","messageBody":"Bad code is bad.\n\nThis makes code better to read.\n\nCommenting documenting strange values \u0026 un-nesting code to be better.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":4}}},{"hash":"d7f59a5ad26e21b337c203399b0c29a20eedf2cc","isMergeCommit":false,"messageTitle":"Add assert for KniazOutputFlavourer","messageBody":"Currently missing such compile-time checks\n\nImportant that all instructiontypes have a flavour string\n\nUser will expect Kniaz to give some kind of output for each valid command, this ensures that there is.\n\nShould not happen except in case of programmer error\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":3}}},{"hash":"cefcb8d3074f67051c43eaf8f07a1ca79d52be2e","isMergeCommit":true,"messageTitle":"Merge pull request #1 from xavierpok/A-Assertions","messageBody":"Add assertions to verify compiletime \u0026 runtime condiitons at various points in code","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"e9bab46c659e09c844de0228cb91b6959c05b384","isMergeCommit":true,"messageTitle":"Merge pull request #2 from xavierpok/A-CodeQuality","messageBody":"Touch up code quality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"ab4934663425a7c87c66b798b07c0174db50d096","isMergeCommit":false,"messageTitle":"Add support for tagging","messageBody":"Currently no such tagging feature.\n\nAdds implementation tagging (without yet letting the user tag)\n\nTagging allows for later sorting by tag.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":0}}},{"hash":"99314d64efe25f3b3ab681d455d7bea429991359","isMergeCommit":false,"messageTitle":"Add tagging I/O and touch up tagging code","messageBody":"Currently tagging is not user-accessible.\n\nAdds tagging input/output.\n\nTagging allows for later sorting by tag.\n","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":37}}},{"hash":"733d3bacc90ec9273cb28288e5949bfe555e3376","isMergeCommit":false,"messageTitle":"Add searching for tags in find command","messageBody":"No way to actually use tags\n\nThe find command now also finds for tags\n\nPiggyback onto the find command to avoid unneeded command bloat\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":2}}},{"hash":"f88fff1c8080f5ce2fdcbbfc1d950214b068502c","isMergeCommit":true,"messageTitle":"Merge pull request #3 from xavierpok/C-Tagging","messageBody":"Adds tagging and searching for tagging","fileTypesAndContributionMap":{}},{"hash":"c358832dc915cb428d0aeb3d417670aa7e32a33c","isMergeCommit":false,"messageTitle":"Revert \"Adds tagging and searching for tagging\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":148}}},{"hash":"c2c360915a5801c37edd1bb8d8e19034ce5e6216","isMergeCommit":true,"messageTitle":"Merge pull request #4 from xavierpok/revert-3-C-Tagging","messageBody":"Revert \"Adds tagging and searching for tagging\"","fileTypesAndContributionMap":{}},{"hash":"c5c1d915e080e78dc536c53ecec35f020d00d929","isMergeCommit":false,"messageTitle":"Revert \"Revert \"Adds tagging and searching for tagging\"\"","messageBody":"This reverts commit c358832dc915cb428d0aeb3d417670aa7e32a33c.\n\nThere were a few errors, but now they\u0027re fixed\n","tags":["C-Tagging","BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":148,"deletions":36}}}]},{"date":"2023-09-20","commitResults":[{"hash":"f47d8a32bb3521606af927dd7c523f3f665d52f7","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"Update documentation \u0026 add user guide\n","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":33,"deletions":22}}},{"hash":"d26b943a3c72a4a1e05b4cc19d38880dfbfb9db1","isMergeCommit":false,"messageTitle":"Add whitespace as dummy commit","messageBody":"Javadocs were done way before, but commit for admin purposes.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"8a1db51cd8397bba3491ebe46115c5a4967bff53","isMergeCommit":false,"messageTitle":"Add whitespace as dummy commit","messageBody":"Coding standards were done way before, but commit for admin purposes.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"f1d785845d9ba76a961f803cc6086410b6c174bf","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"c7416455f9f561c0cef3d6368d52e76a60f7b076","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"abd62b811eed9e51ffb888d979f01d2fbda61926","isMergeCommit":false,"messageTitle":"Change build.gradle settings","messageBody":"Previous build.gradle had Kniaz as the main class\n\nCurrent main class is Launcher since GUI change\n\nMake functionality functional for .jar build\n","tags":["A-Release"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2023-09-21","commitResults":[{"hash":"413eb411a9e838edb5f1807a533e25aacb32303a","isMergeCommit":false,"messageTitle":"Edit README.md in docs","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":23,"deletions":17}}}]}]},"authorFileTypeContributionMap":{"xavierpok":{"java":2330,"md":56,"fxml":47,"sh":1,"bat":0,"gradle":17,"txt":32}},"authorContributionVariance":{"xavierpok":249572.28},"authorDisplayNameMap":{"xavierpok":"CS2103-F13-1 POK ..VIER"}}
