{"authorDailyContributionsMap":{"xavierpok":[{"date":"2023-08-20","commitResults":[{"hash":"8edc3a7d9952ab3327e1fe85148d9f98a7089eed","isMergeCommit":false,"messageTitle":"Implements Level 0 features of the Duke (Re-named to Kniaz for this version) chatbot. This refers to just renaming the chatbot, and implementing a skeletal version that greets the user and exits.","messageBody":"Adds two new private fields, LOGO and SEPERATOR, to help with this, which hold the logo and horizontal seperator lines respectively (Seperator lines are to help with formatting)\n","tags":["level-0"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":10}}},{"hash":"2235c7222b2b49581657e87f787ecd2d94b74737","isMergeCommit":false,"messageTitle":"Implements level 1 features \u0026 adds (public) constant fields.","messageBody":"Level 1 features just refers to echoing any input given by the user. Also adds a public field EXITSTRING which is the input that will cause Kniaz to exit. Adds private field EXITMESSAGE that is the message that prints on exit.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":2}}},{"hash":"64cb410ed17bd85d73d43b64a3a688a17207418d","isMergeCommit":false,"messageTitle":"Adds  ability to store text entered by user and display back when requested","messageBody":"When a string that isn\u0027t interpreted as a command is input, adds it to internal storage. When list is input, displays the list. Note : \u0027bye\u0027 is retained as a command still.\n\nAlso adds a new private function to format this task list as a string.\n","tags":["Proto-Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":4}}},{"hash":"5d3ce9d71055c5a4e69bd79d26713cd4ec457bf3","isMergeCommit":false,"messageTitle":"Final version of Level 2","messageBody":"Makes edits to code formatting, functionality is the same. Redundant while statement amended to while(True), and System.out.println of String.format call amended to System.out.printf\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}}]},{"date":"2023-08-21","commitResults":[{"hash":"19395e77781a58c792d61ad8b9fb61ef7c8796d0","isMergeCommit":false,"messageTitle":"Adds ability to mark/unmark tasks as done/undone with accompanying message. Adds Task and TaskList classes to encapsulate tasks, and lists of tasks respectively.","messageBody":"","tags":["Proto-Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":25}}},{"hash":"ea42ab472f0909c6bab2a2b1e7143e1007541a14","isMergeCommit":false,"messageTitle":"Documents additions in previous commit, tagged Proto-Level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":15}}},{"hash":"1c4147be615c39d8f04c42e1d765c494bb313467","isMergeCommit":false,"messageTitle":"Implements ToDos, Deadlines and Events, as well as input/output (i.e. commands and printing to Kniaz\u0027s command line) for said tasks, and refactors Task printing slightly.","messageBody":"Feature expansion to hit Level 4.\n\nToDos are Tasks without dates/times, Deadlines are Tasks with a singular due date/times, Events are Tasks with a start/stop.\n\nAlso refactors Task to be an abstract class for ToDo to inherit from.\n\nThis is a slight shift of paradigm, as a Task would be something you need to do, but alone contains insufficient information.\n\nToDos lack time as it\u0027s just something the user has to do -- time isn\u0027t relevant here\n\nA deadline naturally has a due date.\n\nEvents in Kniaz are defined by start-stop in addition to the name, which is a natural abstraction of an event (Kniaz doesn\u0027t care about place (yet?))\n\nLastly, string representation to output of Tasks in Kniaz\u0027s output has been shifted from toString() to toPrintString(), to diffrentiate between input meant SOLELY for the user (which is toPrintString())\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":192,"deletions":35}}}]},{"date":"2023-08-22","commitResults":[{"hash":"aa05fdd9eb7a66ecd30a14409a19c0c99b793bc5","isMergeCommit":false,"messageTitle":"Patches user-facing string rep of Event, adding a whitespace in front of \"from\"","messageBody":"Needed to make it adhere closer to expected output, as no whitespace means \"from\" sticks to the previous string\n\nImproves output seen by user\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"4edd8aa590021e40deb3e4e4f634949523b82df9","isMergeCommit":false,"messageTitle":"Patches user-facing string rep of Event, adding a whitespace in front of \"from\"","messageBody":"Needed to make it adhere closer to expected output, as no whitespace means \"from\" sticks to the previous string\n\nImproves output seen by user\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"2dc0cdd489b3a2c4fe3ace396d0aff4f935e7c85","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/master\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"b64b8b212320eb074c2cc9d88b09bcbfe37cb90d","isMergeCommit":false,"messageTitle":"Adds (single) semi-automated test case for use with runtest.sh","messageBody":"Allows for quick verification of input/output, comparing EXPECTED against input and actual output.\n\nExpected is to be updated with further edits to behaviour of Kniaz.\n","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0}}}]},{"date":"2023-08-23","commitResults":[{"hash":"062b4c493051750b3e93c57b0678b52c6932280b","isMergeCommit":false,"messageTitle":"Adds user error reporting, moves a significant amount of parsing and event logic out of Kniaz, and adds a new Exception, KniazRuntimeException","messageBody":"User error reporting is useful, as the user would naturally want to know what they did wrong.\n\nMoves parsing of commands into KniazParser, which now handles parsing of commands. It seperates commands into what kind of commands and their arguments\n\nMoves logic of commands into the logic.taskhandling package. The classes within take in the text-interface command arguments as Strings and work through the logic of how to operate on those. E.g., the ToDo name is passed to a ToDoHandler which decides what to do with this.\n\nMoving of parsing helps to keep Kniaz clean, and seperate how we decide to parse the command given to Kniaz seperate from the main Kniaz loop. This is important as there are many ways to parse arguments, and we might decide another way is better. This also allows for better exception handling, as Kniaz does not need to do input validation, and just passes it off to another class. All Kniaz has to do now is to grab whatever exception is thrown up and figure out what to do(Which is a lot easier!)\n\nSimilarly, for logic, we might decide to refactor it later, and this helps keep Kniaz clean. Notably, validation of the arguments provided can be handled seperately. For example, ToDo will only expect ONE argument, but the user might decide to provide two. Getting Kniaz or KniazParser to handle this borders on scope creep of what these classes are meant to do. Also offers similar benefits in exception handling as per the paragraph above about KniazParser.\n\nAddition of the new Exception is to support these new features. Notably, the addition of a seperate userMessage field supports two different exception reporting pipelines, to support good user experience. It\u0027s reasonable that more information might be needed to debug for future feature additions/refactors that might overwhelm or confuse the user, but a developer might find useful.\n\nModifies test cases to reflect the new change in behaviour\n","tags":["Level-5","A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":410,"deletions":77},"sh":{"insertions":1,"deletions":1}}},{"hash":"332889531bee5f136a77dad7a4241b3965bae9fd","isMergeCommit":false,"messageTitle":"Documents code added in previous commit(Tagged Level-5), Converts all commandHandler classes in logic-\u003etaskhandling package to be abstract classes","messageBody":"Documentation was not done previously, this commit fixes that\n\nClasses should be abstract, as they contain only static methods and should not be instantiated.\n","tags":["Documents-Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":226,"deletions":35}}},{"hash":"78a3b735b71723515201aeca51722574b636939f","isMergeCommit":false,"messageTitle":"Updates test case","messageBody":"Amends and expands input.txt and EXPECTED.txt to be accurate to new features, including invalid input handling\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0}}},{"hash":"70936e2f5385afb377ee8a0b1c20fdb73db87db0","isMergeCommit":false,"messageTitle":"Implements task deletion, and fixes formatting \u0026 documentation in TaskList, and adds whitespace stripping to parseCommand","messageBody":"DeleteHandler follows the same design pattern for the other commands, and additions in Kniaz and KniazParser are needed to accomodate the new command.\n\nAdding deletion is a useful feature because sometimes the user makes a mistake or wants to permanently delete a task to shorten the list\n\nAlso adds test case for demonstration of new behaviour\n\nparseCommand stripping whitespace brings it closer to user-expected behaviour because it\u0027s natural to expect that leading/trailing whitespaces would be ignored\n\nLastly, fixing of formatting and adding documentation is good because style guide and it\u0027s good to document\n","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":109,"deletions":17}}}]},{"date":"2023-08-27","commitResults":[{"hash":"39cb07556bf46f4581064868e29649ab7efeead0","isMergeCommit":false,"messageTitle":"Implement saving","messageBody":"Currently, Kniaz forgets all data on new session\n\nLet it save to remember from previous session.\n","tags":["Saving"],"fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":1}}}]},{"date":"2023-08-28","commitResults":[{"hash":"a9c7aacc5917b29c51c456731c7bfa3675aba531","isMergeCommit":false,"messageTitle":"Implement loading on Kniaz start","messageBody":"Previous commit tagged Saving only saves, does not load\n\nSaving only makes sense if Kniaz loads saved data\n","tags":["Loading"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":10}}},{"hash":"a75de4dda04b579ce247ebff744404d1d2298adb","isMergeCommit":false,"messageTitle":"Write javadoc strings for commits tagged Saving, Loading","messageBody":"Previous commits implemented functionality, lacked javadoc strings.\n\nDocumentation is good.\n","tags":["Level-7","Documents-Saving-Loading"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":9}}},{"hash":"d6e3967c81cd09beea7eba545506e9dd7c9d0a85","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-7\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"3089cc5a9441a0307f640190679c11dc7b186387","isMergeCommit":false,"messageTitle":"Implement date-time parsing","messageBody":"Currently, stores date-time only as Strings, no parsing\n\nShould parse to allow for flexibility and organised output for better UX\n","tags":["date-time-parse"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":1},"java":{"insertions":67,"deletions":8}}},{"hash":"c06f521a0f9d7669d795e789693aaabf81c14928","isMergeCommit":false,"messageTitle":"Write javadoc strings \u0026 fix code standard issues","messageBody":"Documentation \u0026 code standards are important\n\nModify access on class members to keep the API good and upkeep good OOP\n","tags":["document-date-time-parsing"],"fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":8}}},{"hash":"41bd70669f302c7ec49da542e3a5d300076c83be","isMergeCommit":false,"messageTitle":"Update test cases","messageBody":"Test cases were unmodified, outdated\n\nModification to reflect new behaviour is good\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":3}}},{"hash":"3fd07aa07206e78bb37f5787552447523d835a11","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-8\u0027","messageBody":"","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"xavierpok":{"java":1317,"md":0,"fxml":0,"sh":1,"bat":0,"gradle":0,"txt":20}},"authorContributionVariance":{"xavierpok":71134.98},"authorDisplayNameMap":{"xavierpok":"POK ..VIER"}}
