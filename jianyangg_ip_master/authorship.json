[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"jianyangg"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"jianyangg"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jianyangg":15,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"T | 0 | coffee","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"T | 0 | test /by 6pm","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"D | 0 | hw | 1920-10-22","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"T | 0 | task","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"T | 0 | more tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"T | 0 | more tasks\\n","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"T | 0 | more more tasks","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"jianyangg":7}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"     * ","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"     * @param taskName","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"     * @param deadline Deadline in the format yyyy-mm-dd.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"        super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"        // assume deadline is of the format 2019-12-01","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"    private String dateToString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"        // desired format is MMM dd yyyy","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"        return this.deadline.format(java.time.format.DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"    private String parseDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jianyangg"},"content":"        // convert deadline back to yyyy-mm-dd","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jianyangg"},"content":"        return this.deadline.format(java.time.format.DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jianyangg"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jianyangg"},"content":"     * ","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the Deadline object.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jianyangg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jianyangg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jianyangg"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateToString() + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jianyangg"},"content":"     * Returns a string representation of the Deadline object to be saved in the","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jianyangg"},"content":"     * file.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jianyangg"},"content":"     * ","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the Deadline object to be saved in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jianyangg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jianyangg"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jianyangg"},"content":"        return \"D | \" + (this.getIsDone() ? \"1\" : \"0\") + \" | \" + this.getTaskName() + \" | \" + parseDate();","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":53}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":" * Represents a chat bot that can keep track of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"public class Duke {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"     * Catches DukeException if there is an error loading the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"     * @param filePath Path to the file to be loaded.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jianyangg"},"content":"    public Duke() {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"jianyangg"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"jianyangg"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"jianyangg"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"jianyangg"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"jianyangg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"jianyangg"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"jianyangg"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"jianyangg"},"content":"    public String showIntroduction() {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"jianyangg"},"content":"        return ui.showIntroduction();","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jianyangg"},"content":"     * Runs the program.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jianyangg"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jianyangg"},"content":"        // show introduction","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jianyangg"},"content":"        ui.showIntroduction();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jianyangg"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jianyangg"},"content":"            System.out.println();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jianyangg"},"content":"            String input \u003d sc.nextLine().trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jianyangg"},"content":"            while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jianyangg"},"content":"                handleTextInput(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jianyangg"},"content":"                System.out.println();","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jianyangg"},"content":"                input \u003d sc.nextLine().trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jianyangg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jianyangg"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jianyangg"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jianyangg"},"content":"        ui.sendFarewell();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jianyangg"},"content":"    private String handleTextInput(String inputString) {","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"jianyangg"},"content":"        // handle key logic here.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jianyangg"},"content":"        String command \u003d inputString.split(\" \")[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jianyangg"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jianyangg"},"content":"        switch (command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jianyangg"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"jianyangg"},"content":"            return ui.sendFarewell();","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"jianyangg"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jianyangg"},"content":"            return ui.printTaskList(tasks.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"jianyangg"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jianyangg"},"content":"            taskIndex \u003d Integer.parseInt(inputString.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jianyangg"},"content":"            // tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jianyangg"},"content":"            tasks.markTaskAsDone(taskIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"jianyangg"},"content":"            return ui.markTaskAsDoneMessage(tasks.taskToString(taskIndex));","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"jianyangg"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"jianyangg"},"content":"            taskIndex \u003d Integer.parseInt(inputString.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"jianyangg"},"content":"            tasks.unmarkTaskAsDone(taskIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jianyangg"},"content":"            return ui.unmarkTaskAsDoneMessage(tasks.taskToString(taskIndex));","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"jianyangg"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"jianyangg"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"jianyangg"},"content":"                String taskName \u003d inputString.substring(5);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"jianyangg"},"content":"                Task newTask \u003d new ToDo(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"jianyangg"},"content":"                tasks.addToTaskList(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"jianyangg"},"content":"                return ui.addTaskOutputText(newTask, tasks.size());","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"jianyangg"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"jianyangg"},"content":"                return ui.showErrorMessage(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"jianyangg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"jianyangg"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"jianyangg"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"jianyangg"},"content":"                // stop before /by","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"jianyangg"},"content":"                String taskName \u003d inputString.substring(9, inputString.indexOf(\"/by\") - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"jianyangg"},"content":"                // get day","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"jianyangg"},"content":"                String deadline \u003d inputString.substring(inputString.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"jianyangg"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"jianyangg"},"content":"                    Task newTask \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"jianyangg"},"content":"                    tasks.addToTaskList(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"jianyangg"},"content":"                    return ui.addTaskOutputText(newTask, tasks.size());","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"jianyangg"},"content":"                } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"jianyangg"},"content":"                    // System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"jianyangg"},"content":"                    return ui.showErrorMessage(\"\\tInvalid date format. Please use yyyy-mm-dd.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"jianyangg"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"jianyangg"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"jianyangg"},"content":"                return ui.showErrorMessage(\"\\t☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"jianyangg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"jianyangg"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"jianyangg"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"jianyangg"},"content":"                String taskName \u003d inputString.substring(6, inputString.indexOf(\"/from\") - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"jianyangg"},"content":"                String from \u003d inputString.substring(inputString.indexOf(\"/from\") + 6, inputString.indexOf(\"/to\") - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"jianyangg"},"content":"                String to \u003d inputString.substring(inputString.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"jianyangg"},"content":"                Task newTask \u003d new Event(taskName, from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"jianyangg"},"content":"                tasks.addToTaskList(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"jianyangg"},"content":"                return ui.addTaskOutputText(newTask, tasks.size());","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"jianyangg"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"jianyangg"},"content":"                return ui.showErrorMessage(\"\\t☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"jianyangg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"jianyangg"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"jianyangg"},"content":"            taskIndex \u003d Integer.parseInt(inputString.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"jianyangg"},"content":"            String msg \u003d ui.printDeleteMessage(tasks.taskToString(taskIndex), taskIndex, tasks.size());","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"jianyangg"},"content":"            tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"jianyangg"},"content":"            return msg;","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"jianyangg"},"content":"        case \"find\":","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"jianyangg"},"content":"            String keyword \u003d inputString.substring(5);","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"jianyangg"},"content":"            String outputString \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"jianyangg"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"jianyangg"},"content":"                if (tasks.taskToString(i).contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"jianyangg"},"content":"                    outputString +\u003d tasks.taskToString(i) + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"jianyangg"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"jianyangg"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"jianyangg"},"content":"            return ui.printTaskList(outputString);","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"jianyangg"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"jianyangg"},"content":"            return ui.showErrorMessage(","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"jianyangg"},"content":"                    \"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means. Try again using either mark \u003cindex\u003e, unmark \u003cindex\u003e, todo \u003ctask\u003e, deadline \u003ctask /by ..\u003e, event \u003ctask /from .. /to ..\u003e, or bye.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"jianyangg"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"jianyangg"},"content":"    // this handles the response to the input","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"jianyangg"},"content":"    // the response is then sent to the GUI","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"jianyangg"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"jianyangg"},"content":"        String resp \u003d handleTextInput(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"jianyangg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"jianyangg"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"jianyangg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"jianyangg"},"content":"            return ui.showErrorMessage(\"\\tError saving file.\" + \" \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"jianyangg"},"content":"        return resp;","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"jianyangg"},"content":"     * Provides the entry point for the program.","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"jianyangg"},"content":"     * @param args","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"jianyangg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"jianyangg"},"content":"        // get new duke instance","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"jianyangg"},"content":"        Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"jianyangg"},"content":"        // start program","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"jianyangg"},"content":"        duke.run();","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":169}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":" * Represents a DukeException.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":" * Represents an Event. Event inherits from Task and contains a string","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":" * representation of start and end.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"    private String fromString;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"    private String toString;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"     * Constructs an Event object.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"     * ","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"     * @param taskName","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"     * @param from Start time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"     * @param to End time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"        super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"        this.fromString \u003d from;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"        this.toString \u003d to;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"     * Overrides the toString method in Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the Event object.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jianyangg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jianyangg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jianyangg"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.fromString + \" to: \" + this.toString + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jianyangg"},"content":"     * Returns a string representation of the Event object to be saved in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jianyangg"},"content":"     * Overrides the saveString method in Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the Event object to be saved in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jianyangg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jianyangg"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jianyangg"},"content":"        return \"E | \" + (this.getIsDone() ? \"1\" : \"0\") + \" | \" + this.getTaskName() + \" | \" + this.fromString + \" | \"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jianyangg"},"content":"                + this.toString;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":44}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import duke.gui.Main;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"    Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"jianyangg":10}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":" * Represents a Storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"    private String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"    private File directory;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"    private File file;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"     * ","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"     * @param filePath Path to the file to be loaded.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"     * Loads tasks from the file in the file path.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"     * ","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jianyangg"},"content":"     * @return ArrayList of type Task loaded from the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jianyangg"},"content":"     * @throws DukeException If there is an error loading the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jianyangg"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jianyangg"},"content":"        // load tasks from storage using filePath given","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jianyangg"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jianyangg"},"content":"        // check whether directory exists from filePath given","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jianyangg"},"content":"        // check the directory until the file name from the file path","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jianyangg"},"content":"        // if directory doesn\u0027t exist, create directory ","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jianyangg"},"content":"        this.directory \u003d new File(filePath.substring(0, filePath.lastIndexOf(\"/\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jianyangg"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jianyangg"},"content":"        if (directory.exists() \u0026\u0026 file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jianyangg"},"content":"            // load the data into taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jianyangg"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jianyangg"},"content":"                Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jianyangg"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jianyangg"},"content":"                    // save to taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jianyangg"},"content":"                    taskList.add(Task.parseTask(s.nextLine()));","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jianyangg"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jianyangg"},"content":"                s.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jianyangg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jianyangg"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jianyangg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jianyangg"},"content":"        return taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jianyangg"},"content":"     * Saves tasks to the file in the file path.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jianyangg"},"content":"     * @param tasks TaskList to be saved.","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jianyangg"},"content":"     * @throws DukeException If there is an error saving the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jianyangg"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jianyangg"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jianyangg"},"content":"            directory.mkdir();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jianyangg"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jianyangg"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jianyangg"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jianyangg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jianyangg"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jianyangg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jianyangg"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jianyangg"},"content":"            FileWriter fWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jianyangg"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jianyangg"},"content":"                fWriter.write(tasks.getTaskItemSaveString(i) + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jianyangg"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jianyangg"},"content":"            fWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jianyangg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jianyangg"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":85}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":" * Represents a Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"    private String taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"     * Constructs a Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"     * @param taskName","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"     * Returns the task name.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"     * @return String representing the task name.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jianyangg"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jianyangg"},"content":"        return this.taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jianyangg"},"content":"     * Returns the status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jianyangg"},"content":"     * @return Boolean representing the status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jianyangg"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jianyangg"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jianyangg"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jianyangg"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jianyangg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jianyangg"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jianyangg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jianyangg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jianyangg"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.taskName;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jianyangg"},"content":"     * Returns a string representation of the Task object to be saved in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the Task object to be saved in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jianyangg"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jianyangg"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jianyangg"},"content":"     * Parses the data string and returns a Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jianyangg"},"content":"     * @param data String representation of the Task object to be saved in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jianyangg"},"content":"     * @return Task object representing the data string.","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jianyangg"},"content":"    public static Task parseTask(String data) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jianyangg"},"content":"        // T | 1 | read book","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jianyangg"},"content":"        // D | 0 | return book | 1920-01-01","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jianyangg"},"content":"        // E | 0 | project meeting | Aug 6th | Aug 8th","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jianyangg"},"content":"        String[] dataArr \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jianyangg"},"content":"        String taskType \u003d dataArr[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jianyangg"},"content":"        boolean isDone \u003d dataArr[1].equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jianyangg"},"content":"        // each task has at least 3 elements","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jianyangg"},"content":"        String taskName \u003d dataArr[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jianyangg"},"content":"        Task newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"jianyangg"},"content":"        // todo","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"jianyangg"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"jianyangg"},"content":"            newTask \u003d new ToDo(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"jianyangg"},"content":"            // deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jianyangg"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"jianyangg"},"content":"            newTask \u003d new Deadline(taskName, dataArr[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"jianyangg"},"content":"            // event","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"jianyangg"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"jianyangg"},"content":"            newTask \u003d new Event(taskName, dataArr[3], dataArr[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"jianyangg"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"jianyangg"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"jianyangg"},"content":"        return newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":96}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":" * Represents a TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"     * Constructs a TaskList object.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"     * Constructs a TaskList object.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"     * ","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"     * @param savedTaskList ArrayList of type Task retrieved from saved data.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"     * @throws DukeException If there is an error loading the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"    public TaskList(ArrayList\u003cTask\u003e savedTaskList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"        // this.taskList.addAll(savedTaskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"        this.taskList \u003d savedTaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"jianyangg"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"jianyangg"},"content":"     * @return Size of the task list as an integer.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"jianyangg"},"content":"    public int size() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jianyangg"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"jianyangg"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"jianyangg"},"content":"     * @param task Task object to be added to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"jianyangg"},"content":"    public void addToTaskList(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"jianyangg"},"content":"        if (taskList.size() \u003c 100) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jianyangg"},"content":"            taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jianyangg"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jianyangg"},"content":"            System.out.println(\"Error: List is full.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jianyangg"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jianyangg"},"content":"     * @param i Index of the task of interest.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the task at the specified index with numbering.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jianyangg"},"content":"    public String taskToString(int i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jianyangg"},"content":"        return \"\\t\" + (i + 1) + \". \" + taskList.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"jianyangg"},"content":"     * Returns a string representation of the TaskList object.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the TaskList object.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jianyangg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jianyangg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jianyangg"},"content":"        String outputString \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jianyangg"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"jianyangg"},"content":"            outputString +\u003d taskToString(i) + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"jianyangg"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"jianyangg"},"content":"        return outputString;","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"jianyangg"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jianyangg"},"content":"     * @param taskIndex Index of the task to be marked as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jianyangg"},"content":"    public void markTaskAsDone(int taskIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jianyangg"},"content":"        taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"jianyangg"},"content":"     * Unmarks the task at the specified index as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"jianyangg"},"content":"     * @param taskIndex Index of the task to be unmarked as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"jianyangg"},"content":"    public void unmarkTaskAsDone(int taskIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jianyangg"},"content":"        taskList.get(taskIndex).unmarkAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"jianyangg"},"content":"     * Returns a string representation of the task at the specified index to be saved in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"jianyangg"},"content":"     * @param i Index of the task of interest.","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the task at the specified index to be saved in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"jianyangg"},"content":"    public String getTaskItemSaveString(int i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"jianyangg"},"content":"        return taskList.get(i).saveString();","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"jianyangg"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"jianyangg"},"content":"     * @param taskIndex Index of the task to be deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"jianyangg"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"jianyangg"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":104}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":" * Represents a ToDo task which is a subclass of Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"        super(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"     * Returns a string representation of the ToDo object.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the ToDo object.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"     * Returns a string representation of the ToDo object to be saved in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"     * @return String representation of the ToDo object to be saved in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"        return \"T | \" + (this.getIsDone() ? \"1\" : \"0\") + \" | \" + this.getTaskName();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":28}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":" * Represents a Ui object that deals with interactions with the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"    private final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"    private final String LOGO \u003d \"░█████╗░██╗░░██╗░█████╗░████████╗████████╗██╗░░░██╗\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"            + \"██╔══██╗██║░░██║██╔══██╗╚══██╔══╝╚══██╔══╝╚██╗░██╔╝\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"            + \"██║░░╚═╝███████║███████║░░░██║░░░░░░██║░░░░╚████╔╝░\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"            + \"██║░░██╗██╔══██║██╔══██║░░░██║░░░░░░██║░░░░░╚██╔╝░░\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"            + \"╚█████╔╝██║░░██║██║░░██║░░░██║░░░░░░██║░░░░░░██║░░░\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"            + \"░╚════╝░╚═╝░░╚═╝╚═╝░░╚═╝░░░╚═╝░░░░░░╚═╝░░░░░░╚═╝░░░\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"    private final String GREETING \u003d \"Hello! I\u0027m Chatty.\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"    private final String FAREWELL \u003d \"Bye. Have \\\"fun\\\" in school!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"    private final String ERROR \u003d \"Error: \";","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"     * Prints the introduction message to console.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"    public String showIntroduction() {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"        // System.out.println(\"\\nWelcome to Chatty.\\n\" + LOGO);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"        return GREETING;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"    // private String sendGreeting() {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"    //     // System.out.println(DIVIDER);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"    //     // System.out.println(GREETING);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"jianyangg"},"content":"    //     // System.out.println(DIVIDER);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"jianyangg"},"content":"    //     return GREETING;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"jianyangg"},"content":"    // }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"jianyangg"},"content":"     * Prints the concluding message to console.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"jianyangg"},"content":"    public String sendFarewell() {","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"jianyangg"},"content":"        // System.out.println(DIVIDER);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"jianyangg"},"content":"        // System.out.println(FAREWELL);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"jianyangg"},"content":"        // System.out.println(DIVIDER);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"jianyangg"},"content":"        return FAREWELL;","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"jianyangg"},"content":"     * Prints a divider to console.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"jianyangg"},"content":"    public void printDivider() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"jianyangg"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"jianyangg"},"content":"     * Prints the task list to console.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"jianyangg"},"content":"     * @param taskList String representation of the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"jianyangg"},"content":"    public String printTaskList(String taskList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"jianyangg"},"content":"        System.out.println(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"jianyangg"},"content":"        return \"Here are the tasks in your list:\\n\" + taskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"jianyangg"},"content":"     * Prints the matching tasks to console.","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"jianyangg"},"content":"     * @param matchingTasks String representation of the matching tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"jianyangg"},"content":"    public String addTaskOutputText(Task newTask, int taskListSize) {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"jianyangg"},"content":"        // can use -1 because we just added it","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"\" + newTask.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"jianyangg"},"content":"        String taskWord \u003d taskListSize \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"Now you have \" + taskListSize + \" \" + taskWord + \" in your list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"jianyangg"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newTask.toString() + \"\\nNow you have \" + taskListSize","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"jianyangg"},"content":"                + \" \" + taskWord + \" in your list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"jianyangg"},"content":"     * Prints the matching tasks to console.","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"jianyangg"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"jianyangg"},"content":"        System.out.println(ERROR + \"Error loading file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"jianyangg"},"content":"        return ERROR + \"Error loading file.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"jianyangg"},"content":"     * Prints the message when a task is marked as done to console.","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"jianyangg"},"content":"     * @param taskString String representation of the task that is marked as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"jianyangg"},"content":"    public String markTaskAsDoneMessage(String taskString) {","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"\" + taskString);","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"jianyangg"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + taskString;","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"jianyangg"},"content":"     * Prints the message when a task is marked as not done to console.","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"jianyangg"},"content":"     * @param taskString String representation of the task that is marked as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"jianyangg"},"content":"    public String unmarkTaskAsDoneMessage(String taskString) {","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"\" + taskString);","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"jianyangg"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + taskString;","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"jianyangg"},"content":"     * Prints the error message to console.","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"jianyangg"},"content":"     * @param errorMessage Error message to be printed.","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"jianyangg"},"content":"    public String showErrorMessage(String errorMessage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"jianyangg"},"content":"        System.out.println(ERROR + errorMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"jianyangg"},"content":"        return ERROR + errorMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"jianyangg"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"jianyangg"},"content":"     * Prints the message when a task is deleted to console.","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"jianyangg"},"content":"     * @param taskToString String representation of the task that is deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"jianyangg"},"content":"     * @param taskIndex Index of the task that is deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"jianyangg"},"content":"     * @param taskListSize Size of the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"jianyangg"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"jianyangg"},"content":"    public String printDeleteMessage(String taskToString, int taskIndex, int taskListSize) {","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"Noted. I\u0027ve removed task \" + (taskIndex + 1) + \":\");","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"\" + taskToString);","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"jianyangg"},"content":"        taskListSize -\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"jianyangg"},"content":"        String taskWord \u003d taskListSize \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"jianyangg"},"content":"        System.out.println(\"Now you have \" + taskListSize + \" \" + taskWord + \" in your list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"jianyangg"},"content":"        return \"Noted. I\u0027ve removed task \" + (taskIndex + 1) + \":\\n\" + taskToString + \"\\nNow you have \"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"jianyangg"},"content":"                + taskListSize + \" \" + taskWord + \" in your list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":128}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"  @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"  private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"  @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"  private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"jianyangg"},"content":"  private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"jianyangg"},"content":"    try {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"jianyangg"},"content":"      FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"jianyangg"},"content":"      fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"jianyangg"},"content":"      fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"jianyangg"},"content":"      fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"jianyangg"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"jianyangg"},"content":"      e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"jianyangg"},"content":"    dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"jianyangg"},"content":"    dialog.setWrapText(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"jianyangg"},"content":"    displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"jianyangg"},"content":"    displayPicture.setClip(new javafx.scene.shape.Circle(50, 50, 50));","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"jianyangg"},"content":"    dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"jianyangg"},"content":"    dialog.setMaxWidth(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"jianyangg"},"content":"    dialog.setPrefWidth(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"jianyangg"},"content":"    dialog.setBorder(null);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"jianyangg"},"content":"    dialog.setPadding(new javafx.geometry.Insets(10, 10, 10, 10));","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"jianyangg"},"content":"    dialog.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"jianyangg"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"jianyangg"},"content":"  /**","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"jianyangg"},"content":"   * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"jianyangg"},"content":"   */","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"jianyangg"},"content":"  private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"jianyangg"},"content":"    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"jianyangg"},"content":"    Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"jianyangg"},"content":"    getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"jianyangg"},"content":"    setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"jianyangg"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"jianyangg"},"content":"  public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"jianyangg"},"content":"    var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"jianyangg"},"content":"    db.setStyle(\"-fx-background-color: #F5F5DC; -fx-padding: 10px; -fx-border-radius: 10px;\");","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"jianyangg"},"content":"    return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"jianyangg"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"jianyangg"},"content":"  public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"jianyangg"},"content":"    var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"jianyangg"},"content":"    db.setStyle(\"-fx-background-color: #e6f7ff; -fx-padding: 10px; -fx-border-radius: 10px;\");","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"jianyangg"},"content":"    db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"jianyangg"},"content":"    return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"jianyangg"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"jianyangg":73}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"  private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"  @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"  public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"    try {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"      FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"      AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"      Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"      stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"      fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"jianyangg"},"content":"      stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"jianyangg"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"jianyangg"},"content":"      e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"jianyangg"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"jianyangg":34}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"  @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"  private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"  @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"  private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"  @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"  private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"  @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"  private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"  private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"jianyangg"},"content":"  private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"images/DaUser.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"jianyangg"},"content":"  private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"images/DaDuke.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"jianyangg"},"content":"  @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"jianyangg"},"content":"  public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"jianyangg"},"content":"      scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"jianyangg"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"jianyangg"},"content":"  ","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"jianyangg"},"content":"  @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"jianyangg"},"content":"  public void showWelcomeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"jianyangg"},"content":"      String introduction \u003d duke.showIntroduction(); // Assuming this method exists in your Duke class","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"jianyangg"},"content":"      dialogContainer.getChildren().add(DialogBox.getDukeDialog(introduction, dukeImage));","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"jianyangg"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"jianyangg"},"content":"  ","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"jianyangg"},"content":"  public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"jianyangg"},"content":"    duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"jianyangg"},"content":"    showWelcomeMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"jianyangg"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"jianyangg"},"content":"  /**","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"jianyangg"},"content":"   * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"jianyangg"},"content":"   * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"jianyangg"},"content":"   */","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"jianyangg"},"content":"  @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"jianyangg"},"content":"  private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"jianyangg"},"content":"    String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"jianyangg"},"content":"    String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"jianyangg"},"content":"    System.out.println(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"jianyangg"},"content":"    System.out.println(response);","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"jianyangg"},"content":"    dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"jianyangg"},"content":"        DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"jianyangg"},"content":"        DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"jianyangg"},"content":"    );","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"jianyangg"},"content":"    userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"jianyangg"},"content":"  }","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"jianyangg":62}},{"path":"src/main/resources/duke/gui/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"jianyangg":16}},{"path":"src/main/resources/duke/gui/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"jianyangg":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"// juint","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"public class DukeTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":19}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"    public void parseTask_stringWithDeadline_correctOutput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"        assertEquals(\"[D][ ] return book (by: Oct 15 2020)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"                Task.parseTask(\"D | 0 | return book | 2020-10-15\").toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"    public void parseTask_stringWithEvent_correctOutput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"        assertEquals(\"[E][ ] project meeting (from: Aug 6th to: Aug 8th)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"                Task.parseTask(\"E | 0 | project meeting | Aug 6th | Aug 8th\").toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"jianyangg"},"content":"    public void parseTask_stringWithToDo_correctOutput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"jianyangg"},"content":"        assertEquals(\"[T][ ] read book\", Task.parseTask(\"T | 0 | read book\").toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":24}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"    // test correct string","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"    public void toString_arbitraryValue_correctOutput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"        assertEquals(\"[T][ ] test\", new ToDo(\"test\").toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"    public void saveString_arbitraryValue_correctOutput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"        assertEquals(\"T | 0 | test\", new ToDo(\"test\").saveString());","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":18}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"[E][X] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"[D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"jianyangg":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jianyangg"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"jianyangg"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"jianyangg"},"content":"deadline return book /by 2020-12-14","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jianyangg"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"jianyangg"},"content":"deadline do homework /by 1920-12-20","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"jianyangg"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jianyangg"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"jianyangg"},"content":"unmark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"jianyangg"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jianyangg"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"jianyangg"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jianyangg"},"content":"event","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"jianyangg"},"content":"deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"jianyangg"},"content":"blahblahblah","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"jianyangg"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"jianyangg"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"jianyangg"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"jianyangg"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jianyangg"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"jianyangg"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jianyangg":20}}]
