[{"path":"src/main/java/chatterchicken/ChatterChicken.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import chatterchicken.command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.exception.CCException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import chatterchicken.parser.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import chatterchicken.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import chatterchicken.tasklist.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import chatterchicken.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":" * The {@code ChatterChicken} class is the main class for the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":" * It initializes and coordinates the application\u0027s components, such as the UI, parser, storage, and task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":" * The class also defines the main method for launching the application and the main loop for user interaction.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"public class ChatterChicken {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public static final String PATH \u003d \"src/main/data/task-list.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     * Initializes the ChatterChicken application by creating instances of the UI, parser, and storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    public ChatterChicken() {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        this.storage \u003d new Storage(parser);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"     * The main entry point of the ChatterChicken application.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"     * Initializes the application, runs the main loop, and catches and displays exceptions.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        ChatterChicken chatterChicken \u003d new ChatterChicken();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        chatterChicken.run();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     * Initiates the main loop of the ChatterChicken application.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     * Reads user input, processes commands, and provides responses until the user chooses to exit.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"     * Catches and displays exceptions.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    private void run() {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"            tasks \u003d new TaskList(storage.loadTasksFromFile(), ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"            ui.displayGreeting();","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"            while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"                Command command \u003d parser.parseInput(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"                executeCommand(command);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"                storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        ui.displayFarewell();","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"     * Executes the specified command by invoking corresponding methods on the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"     * ","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"     * @param command The parsed user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If an error occurs during command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"    private void executeCommand(Command command) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"        String action \u003d command.getAction();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        String taskDescription \u003d command.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"        switch (action) {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            tasks.printList();","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"            tasks.markTask(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"            tasks.unmarkTask(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"            tasks.deleteTask(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"        case \"find\":","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"            tasks.find(taskDescription);","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"            tasks.addTask(parser.parseTask(action, taskDescription));","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        default:","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :\u003c\");","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":101}},{"path":"src/main/java/chatterchicken/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":" * The Command class represents a command provided by the user for the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":" * It encapsulates both the action and task description specified by the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"public class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"    private final String action;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"     * Constructs a new Command with the specified action and task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"     * @param action The action to be performed, such as adding, marking, unmarking, or deleting a task.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description or details associated with the command, typically used for task creation.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    public Command(String action, String taskDescription) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"        this.action \u003d action;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    public String getAction() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        return action;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        return taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tllshan":29}},{"path":"src/main/java/chatterchicken/data/exception/CCException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.data.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":" * The CCException class represents a custom exception specific to the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":" * It is used to handle and convey application-specific errors and exceptional conditions.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"public class CCException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"     * Constructs a new CCException with the specified error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    public CCException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":17}},{"path":"src/main/java/chatterchicken/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.data.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * The Deadline class represents a deadline task in the task management application.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" * It extends the parent Task class and includes information about the task\u0027s due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" * Deadline tasks are used to track tasks with specific deadlines.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    private final LocalDate dueDate; //the due date of the deadline task","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"     * Constructs a Deadline object with the provided task description, task name, and due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"     * @param name The name or title of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     * @param dueDate The due date of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    public Deadline(String taskDescription, String name, LocalDate dueDate) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"        super(taskDescription, name);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     * Generates the formatted representation of the deadline task for display purposes.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     * The format includes the task status, task type, description, and due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"     * @return The formatted representation of the deadline task.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    public String getTaskForPrinting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][D] %s (by: %s)\", super.checkDone(), super.getName(), super.formatDate(dueDate));","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     * Gets the input representation of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     * The input format is suitable for creating and parsing deadline tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"     * @return The input representation of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        return \"deadline \" + super.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":45}},{"path":"src/main/java/chatterchicken/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.data.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * The Event class represents an event task in the task management application.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" * It extends the parent Task class and includes information about the event\u0027s start and end dates.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" * Event tasks are used to schedule events with specific start and end times.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    private final LocalDate start; //the start date of the event","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    private final LocalDate end; //the end date of the event","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"     * Constructs an Event object with the provided task description, event name, start date, and end date.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"     * @param name The name or title of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"     * @param start The start date of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * @param end The end date of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public Event(String taskDescription, String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        super(taskDescription, name);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     * Generates the formatted representation of the event task for display purposes.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"     * The format includes the task status, task type, description, start date, and end date.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     * @return The formatted representation of the event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    public String getTaskForPrinting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][E] %s (from: %s to: %s)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"                super.checkDone(),","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"                super.getName(),","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"                super.formatDate(start),","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"                super.formatDate(end));","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     * Gets the input representation of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     * The input format is suitable for creating and parsing event tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"     * @return The input representation of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        return \"event \" + super.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":53}},{"path":"src/main/java/chatterchicken/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.data.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" * The abstract Task class represents a generic task with a task description, name, and completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" * Subclasses such as ToDo, Deadline, and Event provide specific task types.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    private final String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"     * Constructs a new Task with the provided task description and name.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"     * @param name The name or title of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    public Task(String taskDescription, String name) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    protected String getName() {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        return this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     * Gets a formatted input string for the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"     * @return The formatted input string representing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    public abstract String getInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"     * Gets a formatted string for printing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     * @return The formatted string for printing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"    public abstract String getTaskForPrinting();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"     * Gets a formatted string for saving the task, including its completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"     * @return The formatted string for saving the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"    public String getTaskForSaving() {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        String done \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"            done \u003d \"X\";","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"            done \u003d \" \";","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        return done + getInput(); //append completion status character to input","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"     * @param isDone True if the task is completed; false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"     * Checks the completion status of the task and returns \u0027X\u0027 if completed, or \u0027 \u0027 if not completed.","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"     * @return \u0027X\u0027 if the task is completed; \u0027 \u0027 if not completed.","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"    protected String checkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"     * Formats a given LocalDate object into a string using the \"dd/MM/yyyy\" pattern.","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"     * @param date The LocalDate object to be formatted.","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"     * @return The formatted date string.","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"    public String formatDate(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":93}},{"path":"src/main/java/chatterchicken/data/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.data.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":" * The ToDo class represents a to-do task in the task management application.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":" * It extends the base Task class and includes a description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * ToDo tasks are used to represent tasks without specific deadlines or start times.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"     * Constructs a ToDo object with the provided task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    public ToDo(String taskDescription) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"        super(taskDescription, taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"     * Generates the formatted representation of the to-do task for display purposes.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * The format includes the task status, task type, and description.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     * @return The formatted representation of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    public String getTaskForPrinting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][T] %s\", super.checkDone(), super.getName());","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"     * Gets the input representation of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     * The input format is suitable for creating and parsing to-do tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     * @return The input representation of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        return \"todo \" + super.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":39}},{"path":"src/main/java/chatterchicken/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import chatterchicken.command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.exception.CCException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.ToDo;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":" * The Parser class is responsible for parsing user input and converting it into commands and task objects.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":" * It supports the creation of ToDo, Deadline, and Event tasks from user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":" * This class also handles parsing of task details from data files.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * Parses the input command and creates a Command object.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     * This method extracts the action and task description from the input and returns a Command object.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     * @param input The input command provided by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If an error occurs during parsing, such as an empty input.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    public Command parseInput(String input) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Empty input detected.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        int space \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        String action \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        if (space \u003d\u003d -1) { //input is a single word","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"            action \u003d input;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"            //split input into action and description","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"            action \u003d input.substring(0, space);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"            description \u003d input.substring(space + 1, input.length());","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        return new Command(action, description);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     * Parses a task from a line of data file input and returns the corresponding Task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     * This method extracts task details from the input, creates a Command object, and parses the task type.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"     * @param fileLine The input line from the data file containing task details.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"     * @return A Task object representing the parsed task.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If an error occurs during parsing.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    public Task parseTaskFromFile(String fileLine) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        String input \u003d fileLine.substring(1); //remove completion status character to extract task input","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        Command command \u003d parseInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        Task task \u003d parseTask(command.getAction(), command.getTaskDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        //Extract the task completion status character from the file line.","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        //If it is marked as completed (\u0027X\u0027), set the task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        if (fileLine.charAt(0) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"            task.setDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"     * Parses a Task object based on its type and input details.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"     * @param type  The type of the task (todo, deadline, event).","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task details.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"     * @return A Task object representing the parsed task.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If an error occurs during parsing or task creation.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"    public Task parseTask(String type, String input) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"            task \u003d parseToDo(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"            task \u003d parseDeadline(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"            task \u003d parseEvent(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid task type.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"     * Parses the input string to create a new ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"     * @return A new ToDo task object created from the provided description.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If the description is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"    private ToDo parseToDo (String taskDescription) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"        return new ToDo(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"     * Parses the input string to create a new Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description and due date of the Deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"     * @return A new Deadline task object created from the provided description.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If the input format is incorrect or if there are empty fields.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    private Deadline parseDeadline(String taskDescription) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"        String[] fields \u003d taskDescription.split(\"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"        if (fields.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Incorrect format for deadline.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"        String name \u003d fields[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        String dueDate \u003d fields[1].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"        if (name.isEmpty() || dueDate.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Empty field for deadline detected.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"        return new Deadline(taskDescription, name, parseDate(dueDate));","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"     * Parses the input string to create a new Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description, start date, and end date of the Event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"     * @return A new Event task object created from the provided description.","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If the input format is incorrect or if there are empty fields.","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"    private Event parseEvent(String taskDescription) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"        String[] fields \u003d taskDescription.split(\"/from|/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"        if (fields.length !\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Incorrect format for event.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"tllshan"},"content":"        String name \u003d fields[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"tllshan"},"content":"        String start \u003d fields[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"tllshan"},"content":"        String end \u003d fields[2].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"tllshan"},"content":"        if (name.isEmpty() || start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Empty field for event detected.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"        return new Event(taskDescription, name, parseDate(start), parseDate(end));","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"     * Parses a string into a LocalDate object.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"     * @param date The string containing a date to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"    private static LocalDate parseDate(String date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"            System.out.println(\"Error parsing date: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"tllshan"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tllshan":161}},{"path":"src/main/java/chatterchicken/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import chatterchicken.ChatterChicken;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import chatterchicken.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.exception.CCException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import chatterchicken.tasklist.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":" * The Storage class is responsible for loading and saving tasks from/to a data file for the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":" * It interacts with the data file to read and write task information, ensuring data persistence.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     * Constructs a new Storage object with the specified parser.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"     * @param parser The parser used to interpret and convert data from the data file.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    public Storage(Parser parser) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"     * Loads tasks from the data file and returns them as an ArrayList of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     * If the data file doesn\u0027t exist, a new file is created.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"     * @return An ArrayList containing the loaded tasks, or null in case of errors.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"            File dataFile \u003d Paths.get(ChatterChicken.PATH).toAbsolutePath().toFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(dataFile));","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"                String currLine \u003d reader.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"                while (currLine !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"                    Task task \u003d parser.parseTaskFromFile(currLine);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"                    taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"                    currLine \u003d reader.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"                reader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"            System.err.println(\"An error occurred while loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"            System.err.println(\"An error occurred while adding tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        System.out.println(\"HERE\");","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"     * Saves tasks from the provided TaskList to the data file.","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"     * @param taskList The TaskList containing tasks to be saved.","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"    public void saveTasksToFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"            File dataFile \u003d Paths.get(ChatterChicken.PATH).toAbsolutePath().toFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(dataFile));","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"                String taskDescription \u003d task.getTaskForSaving() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"                writer.append(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"            System.err.println(\"An error occurred while saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tllshan":86}},{"path":"src/main/java/chatterchicken/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.tasklist;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.exception.CCException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import chatterchicken.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":" * The TaskList class represents a collection of tasks managed by the ChatterChicken task manager.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":" * It allows for adding, marking, unmarking, and deleting tasks, as well as printing the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":" * along with their respective indexes. Tasks can be of different types: ToDo, Deadline, and Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     * Constructs a new TaskList with the provided list of tasks and a UI component for user interactions.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     * @param taskList The initial list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"     * @param ui The user interface component for displaying messages and user interactions.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     * Adds a new task to the task list based on the provided Task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message with the added task\u0027s details.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If there is an error in adding the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        ui.displayAddTask(task, taskList.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     * Marks a task as done based on the provided input.","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message with the marked task\u0027s details.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information to mark as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If there is an error in marking the task or if the input is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"    public void markTask(String input) throws CCException {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"            Task task \u003d taskList.get(getIndex(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"            task.setDone(true);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"            ui.displayMarkTask(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid input for marking list of length \" + taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"     * Unmarks a previously marked task as not done based on the provided input.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message with the unmarked task\u0027s details.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information to unmark.","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If there is an error in unmarking the task or if the input is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"    public void unmarkTask(String input) throws CCException {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"            Task task \u003d taskList.get(getIndex(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"            task.setDone(false);","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"            ui.displayUnmarkTask(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid input for list of length \" + taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"     * Deletes a task from the task list based on the provided input.","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message after deleting the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information to be deleted.","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If there is an error in deleting the task or if the input is invalid.","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"    public void deleteTask(String input) throws CCException {","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"            int index \u003d getIndex(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"            taskList.remove(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"            ui.displayDeleteTask(task, taskList.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid input for list of length \" + taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"    public void find(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"            if(task.getTaskDescription().contains(input)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        ui.displayMatchingTasks(matchingTasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"     * Retrieves the index of a task based on the provided input.","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information and index as the last character.","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"     * @return The index of the task parsed from the input.","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    private int getIndex(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"        return input.charAt(input.length() - 1) - \u00270\u0027 - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"     * Prints the list of tasks with their respective indexes.","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"    public void printList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"        ui.displayList(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"        return taskList.iterator();","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":127}},{"path":"src/main/java/chatterchicken/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import chatterchicken.tasklist.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" * The Ui class handles user interface interactions for the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":" * It provides methods to display messages and task-related information to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private static final String LINE \u003d \"\\n    _____________________________________________________________________________\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    private static final String INDENT \u003d \"      \";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    private static final String INDENT_BIG \u003d \"        \";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"     * Displays a greeting message to the user to introduce ChatterChicken.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    public void displayGreeting() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        printToScreen(INDENT + \"Hello! I\u0027m ChatterChicken!\\n\" + INDENT + \"What can I do for you?\");","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     * Displays a farewell message to the user as they exit the ChatterChicken application.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    public void displayFarewell() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        printToScreen(INDENT + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     * Displays a message indicating that a task has been added to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"     * @param size The updated size of the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    public void displayAddTask(Task task, int size) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        printToScreen(INDENT + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"                + INDENT_BIG + task.getTaskForPrinting() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"                + INDENT + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     * Displays a message indicating that a task has been deleted from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"     * @param size The updated size of the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    public void displayDeleteTask(Task task, int size) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        printToScreen(INDENT + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"                + INDENT_BIG + task.getTaskForPrinting() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"                + INDENT + \"Now you have \" + size + \" tasks in your list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    public void displayMarkTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        printToScreen(INDENT + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"                + INDENT_BIG + task.getTaskForPrinting());","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"    public void displayUnmarkTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"        printToScreen(INDENT + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"                + INDENT_BIG + task.getTaskForPrinting());","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"    public void displayMatchingTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        System.out.println(LINE + INDENT + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"            System.out.println(INDENT_BIG + index + \".\" + task.getTaskForPrinting());","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"            index++;","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"    public void displayList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        System.out.println(LINE + INDENT + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"            System.out.println(INDENT_BIG + (i + 1) + \".\" + taskList.get(i).getTaskForPrinting());","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"     * Prints a message to the screen, surrounded by the predefined line separator.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"    private void printToScreen(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"        System.out.println(LINE + message + LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tllshan":107}},{"path":"src/test/java/chatterchicken/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.ToDo;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.exception.CCException;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    public void parseTask_invalidTaskType_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"invalid\", \"taskDescription\");","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        fail(\"Task was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyToDoDescription_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"todo\", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        fail(\"ToDo was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    public void parseTask_validToDo_returnsToDo() {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        Task task;","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            task \u003d parser.parseTask(\"todo\", \"read book\");","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        assertTrue(task instanceof ToDo);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        assertEquals(\"todo read book\", task.getInput());","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyDeadlineDescription_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"deadline\", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        fail(\"Deadline was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyDeadlineEndDate_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"deadline\", \"return book /by \");","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"        fail(\"Deadline was successfully constructed with empty end date.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"    public void parseTask_validDeadline_returnsDeadline() {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"        Task task;","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"            task \u003d parser.parseTask(\"deadline\", \"return book /by 2023-01-09\");","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"        assertTrue(task instanceof Deadline);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        assertEquals(\"deadline return book /by 2023-01-09\", task.getInput());","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyEventDescription_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"event\", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        fail(\"Event was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyEventStartDate_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"event\", \"holiday /from /to 2023-12-25\");","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        fail(\"Event was successfully constructed with empty start date.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyEventEndDate_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"event\", \"holiday /from 2023-12-02 /to \");","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"        fail(\"Event was successfully constructed with empty end date.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"    public void parseTask_validEvent_returnsEvent() {","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"        Task task;","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"            task \u003d parser.parseTask(\"event\", \"holiday /from 2023-12-02 /to 2023-12-25\");","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"        assertTrue(task instanceof Event);","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"        assertEquals(\"event holiday /from 2023-12-02 /to 2023-12-25\", task.getInput());","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tllshan":135}},{"path":"src/test/java/chatterchicken/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package chatterchicken.tasklist;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.task.ToDo;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import chatterchicken.data.exception.CCException;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import chatterchicken.parser.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import chatterchicken.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public void deleteTask_invalidIndex_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(), new Ui());","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"            taskList.deleteTask(\"-1\");","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        fail(\"Invalid index was deleted from task list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    public void deleteTask_validIndex_taskDeletedFromList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(), new Ui());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        ToDo toBeDeleted \u003d new ToDo(\"delete this\");","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(new ToDo(\"read book 1\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(new ToDo(\"read book 2\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(toBeDeleted);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(new ToDo(\"read book 3\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"            taskList.deleteTask(\"3\");","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            assertFalse(task.equals(toBeDeleted));","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tllshan":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"deadline return book /by 2023-01-09","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"event holiday /from 2023-12-02 /to 2023-12-25","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"REM create classes directory if it doesn\u0027t exist","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"if not exist ..\\classes mkdir ..\\classes","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"REM compile each Java file separately into the classes folder","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"javac -d ..\\classes -cp ..\\src\\main\\java ..\\src\\main\\java\\chatterchicken\\*.java","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"REM run the program, feed commands from input.txt file, and redirect the output to ACTUAL.TXT","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"java -classpath ..\\classes chatterchicken.ChatterChicken \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tllshan":7,"-":17}}]
