[{"path":"src/main/java/CCException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"public class CCException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"    public CCException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":5}},{"path":"src/main/java/ChatterChicken.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"public class ChatterChicken {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"    public static final String LINE \u003d \"\\n    _____________________________________________________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"    public static final String INDENT \u003d \"      \";","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"    public static final String INDENT_BIG \u003d \"        \";","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    private static List list;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    private void greet() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"                + INDENT + \"Hello! I\u0027m ChatterChicken!\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"                + INDENT + \"What can I do for you?\"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"                + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    private void exit() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        System.out.println(LINE + INDENT + \"Bye. Hope to see you again soon!\" + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    private void parseInput(String input) throws CCException {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        int space \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        String action;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        if (space \u003d\u003d -1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"            action \u003d input;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"            action \u003d input.substring(0, input.indexOf(\u0027 \u0027));","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        switch (action) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"            case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"                list.printList();","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"                list.markTask(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"                list.unmarkTask(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"                list.deleteTask(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"            case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"                list.addTask(action, input);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"                throw new CCException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :\u003c\");","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    private void run() {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"            list \u003d new List();","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"            greet();","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"            while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"                parseInput(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        exit();","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"        ChatterChicken cc \u003d new ChatterChicken();","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"        cc.run();","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":72}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"    private final String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"    public Deadline(String name, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][D] %s (by: %s)\", super.checkDone(), super.getName(), end);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"    private final String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"    private final String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][E] %s (from: %s to: %s)\", super.checkDone(), super.getName(), start, end);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":16}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"public class List {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"    public List() {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    public void addTask(String type, String input) throws CCException {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"        switch (type) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"                task \u003d parseToDo(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"                task \u003d parseDeadline(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"            case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"                task \u003d parseEvent(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        list.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        System.out.println(ChatterChicken.LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"                + ChatterChicken.INDENT + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"                + ChatterChicken.INDENT_BIG + task.getTask() + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"                + ChatterChicken.INDENT + \"Now you have \" + list.size() + \" tasks in the list.\"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"                + ChatterChicken.LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    private ToDo parseToDo (String input) throws CCException {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        if (input.equals(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        return new ToDo(input.substring(\"todo\".length()).trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    private Deadline parseDeadline(String input) throws CCException {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        String[] fields \u003d input.split(\"/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        if (fields.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Incorrect format for deadline.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        if (!fields[0].startsWith(\"deadline \") || !fields[1].startsWith(\"by \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Incorrect format for deadline.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"        String name \u003d fields[0].substring(\"deadline\".length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        String end \u003d fields[1].substring(\"by\".length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        if (name.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Empty field for deadline detected.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        return new Deadline(name, end);","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"    private Event parseEvent(String input) throws CCException{","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        String[] fields \u003d input.split(\"/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        if (fields.length !\u003d 3) {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Incorrect format for event.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        if (!fields[0].startsWith(\"event \") || !fields[1].startsWith(\"from \") || !fields[2].startsWith(\"to \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Incorrect format for event.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        String name \u003d fields[0].substring(\"event\".length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        String start \u003d fields[1].substring(\"from\".length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        String end \u003d fields[2].substring(\"to\".length()).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        if (name.isEmpty() || start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Empty field for event detected.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"        return new Event(name, start, end);","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"    public void markTask(String input) throws CCException {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"            Task task \u003d list.get(getIndex(input));","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"            task.markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"            System.out.println(ChatterChicken.LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"                    + ChatterChicken.INDENT + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"                    + ChatterChicken.INDENT_BIG + task.getTask()","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"                    + ChatterChicken.LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid input for marking list of length \" + list.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"    public void unmarkTask(String input) throws CCException {","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"            Task task \u003d list.get(getIndex(input));","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"            task.unmarkDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"            System.out.println(ChatterChicken.LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"                    + ChatterChicken.INDENT + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"                    + ChatterChicken.INDENT_BIG + task.getTask()","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"                    + ChatterChicken.LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid input for list of length \" + list.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"    public void deleteTask(String input) throws CCException {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"            int index \u003d getIndex(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"            list.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"            System.out.println(ChatterChicken.LINE","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"                    + ChatterChicken.INDENT + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"                    + ChatterChicken.INDENT_BIG + task.getTask() + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"                    + ChatterChicken.INDENT + \"Now you have \" + list.size() + \" tasks in your list.\"","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"                    + ChatterChicken.LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid input for list of length \" + list.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    private int getIndex(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"        return input.charAt(input.length() - 1) - \u00270\u0027 - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"    public void printList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"        System.out.println(ChatterChicken.LINE + ChatterChicken.INDENT + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"            System.out.println(ChatterChicken.INDENT_BIG + (i + 1) + \".\" + list.get(i).getTask());","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"        System.out.println(ChatterChicken.LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":123}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"    private final String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    public String getName() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"        return this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][T] %s\", checkDone(), name);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    protected String checkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":30}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][T] %s\", super.checkDone(), super.getName());","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"deadline return book /by sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"event project meeting /from monday 2pm /to monday 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"java -classpath ..\\bin ChatterChicken \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tllshan":1,"-":20}}]
