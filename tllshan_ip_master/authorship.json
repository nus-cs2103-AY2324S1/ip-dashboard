[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"# ChatterChicken","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"\u003e\"Your mind is for having ideas, not holding them.\" - David Allen ([source](https://dansilvestre.com/productivity-quotes/))","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"ChatterChicken frees your mind of having to remember things you need to do. It\u0027s","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"- text-based","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"- easy to learn","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"- ~~FAST~~ _SUPER_ FAST to use","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"All you need to do is,","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"1. download it from [here](https://github.com/tllshan/ip/archive/refs/tags/A-Jar.zip).","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"2. double-click it.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"3. add your tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"4. let it manage your tasks for you ðŸ˜„","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"And it is **FREE**!","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"Features:","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"---","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"```java","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"public class Main {","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tllshan":29,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"javafx {","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"    version \u003d \"17\"","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tllshan":22,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.CCException;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":" * The {@code Duke} class is the main class for the Duke task manager application.","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":" * It initializes and coordinates the application\u0027s components, such as the UI, parser, storage, and task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":" * The class also defines the main method for launching the application and the main loop for user interaction.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"public class Duke {","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public static final String PATH \u003d \"src/main/data/task-list.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     * Initializes the Duke application by creating instances of the UI, parser, and storage.","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    public Duke() {","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        this.storage \u003d new Storage(parser);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        this.tasks \u003d new TaskList(storage.loadTasksFromFile(), ui);","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        // Add assertions to check the initial state of Duke\u0027s components","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        assert ui !\u003d null : \"UI should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        assert parser !\u003d null : \"Parser should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"     * The main entry point of the Duke application.","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"     * Initializes the application, runs the main loop, and catches and displays exceptions.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        duke.run();","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"                return ui.displayFarewell();","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"            } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"                Command command \u003d parser.parseInput(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"                String response \u003d executeCommand(command);","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"                storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"                return response;","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        return \"\";","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"     * Initiates the main loop of the Duke application.","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"     * Reads user input, processes commands, and provides responses until the user chooses to exit.","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"     * Catches and displays exceptions.","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"    private void run() {","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"            tasks \u003d new TaskList(storage.loadTasksFromFile(), ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"            ui.displayGreeting();","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"                assert input !\u003d null : \"Input should not be null\"; // Check that input is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"                Command command \u003d parser.parseInput(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"                assert command !\u003d null : \"Command should not be null\"; // Check that the parsed command is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"                executeCommand(command);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"                storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"        ui.displayFarewell();","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"     * Executes the specified command by invoking corresponding methods on the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"     * ","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"     * @param command The parsed user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If an error occurs during command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"    private String executeCommand(Command command) throws CCException {","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"        assert command !\u003d null : \"Command should not be null\"; // Check that the command is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"        String action \u003d command.getAction();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"        String taskDescription \u003d command.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"        String response;","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        switch (action) {","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"        case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"            response \u003d tasks.printList();","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"            response \u003d tasks.markTask(taskDescription);","lastModifiedDate":"2023-09-14"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"            response \u003d tasks.unmarkTask(taskDescription);","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"            response \u003d tasks.deleteTask(taskDescription);","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"        case \"find\":","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"            response \u003d tasks.find(taskDescription);","lastModifiedDate":"2023-09-14"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"        case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"            response \u003d tasks.addTask(parser.parseTask(action, taskDescription));","lastModifiedDate":"2023-09-14"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"        case \"count\":","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"            response \u003d tasks.countTasks(taskDescription);","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"        default:","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :\u003c\");","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"        return response;","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":132}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"public class Launcher {","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"tllshan":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            // Add assertions to check conditions","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"            assert fxmlLoader !\u003d null : \"FXMLLoader should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"            assert ap !\u003d null : \"AnchorPane should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"            assert scene !\u003d null : \"Scene should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"            stage.show();","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"tllshan":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":" * The Command class represents a command provided by the user for the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":" * It encapsulates both the action and task description specified by the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"public class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"    private final String action;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"     * Constructs a new Command with the specified action and task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"     * @param action The action to be performed, such as adding, marking, unmarking, or deleting a task.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description or details associated with the command, typically used for task creation.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    public Command(String action, String taskDescription) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"        this.action \u003d action;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    public String getAction() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        return action;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        return taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tllshan":29}},{"path":"src/main/java/duke/data/exception/CCException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.data.exception;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":" * The CCException class represents a custom exception specific to the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":" * It is used to handle and convey application-specific errors and exceptional conditions.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"public class CCException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"     * Constructs a new CCException with the specified error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    public CCException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":17}},{"path":"src/main/java/duke/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * The Deadline class represents a deadline task in the task management application.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" * It extends the parent Task class and includes information about the task\u0027s due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" * Deadline tasks are used to track tasks with specific deadlines.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    private final LocalDate dueDate; //the due date of the deadline task","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"     * Constructs a Deadline object with the provided task description, task name, and due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"     * @param name The name or title of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     * @param dueDate The due date of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    public Deadline(String taskDescription, String name, LocalDate dueDate) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"        super(taskDescription, name);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     * Generates the formatted representation of the deadline task for display purposes.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     * The format includes the task status, task type, description, and due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"     * @return The formatted representation of the deadline task.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    public String getTaskForPrinting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][D] %s (by: %s)\", super.checkDone(), super.getName(), super.formatDate(dueDate));","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     * Gets the input representation of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     * The input format is suitable for creating and parsing deadline tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"     * @return The input representation of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        return \"deadline \" + super.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":45}},{"path":"src/main/java/duke/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * The Event class represents an event task in the task management application.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" * It extends the parent Task class and includes information about the event\u0027s start and end dates.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" * Event tasks are used to schedule events with specific start and end times.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    private final LocalDate start; //the start date of the event","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    private final LocalDate end; //the end date of the event","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"     * Constructs an Event object with the provided task description, event name, start date, and end date.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"     * @param name The name or title of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"     * @param start The start date of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * @param end The end date of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public Event(String taskDescription, String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        super(taskDescription, name);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     * Generates the formatted representation of the event task for display purposes.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"     * The format includes the task status, task type, description, start date, and end date.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     * @return The formatted representation of the event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    public String getTaskForPrinting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][E] %s (from: %s to: %s)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"                super.checkDone(),","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"                super.getName(),","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"                super.formatDate(start),","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"                super.formatDate(end));","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     * Gets the input representation of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     * The input format is suitable for creating and parsing event tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"     * @return The input representation of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        return \"event \" + super.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":53}},{"path":"src/main/java/duke/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" * The abstract Task class represents a generic task with a task description, name, and completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" * Subclasses such as ToDo, Deadline, and Event provide specific task types.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    private final String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"     * Constructs a new Task with the provided task description and name.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"     * @param name The name or title of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    public Task(String taskDescription, String name) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    protected String getName() {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        return this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     * Gets a formatted input string for the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"     * @return The formatted input string representing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    public abstract String getInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"     * Gets a formatted string for printing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     * @return The formatted string for printing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"    public abstract String getTaskForPrinting();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"     * Gets a formatted string for saving the task, including its completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"     * @return The formatted string for saving the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"    public String getTaskForSaving() {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        String done \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"            done \u003d \"X\";","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"            done \u003d \" \";","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        return done + getInput(); //append completion status character to input","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"     * @param isDone True if the task is completed; false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"     * Checks the completion status of the task and returns \u0027X\u0027 if completed, or \u0027 \u0027 if not completed.","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"     * @return \u0027X\u0027 if the task is completed; \u0027 \u0027 if not completed.","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"    protected String checkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"     * Formats a given LocalDate object into a string using the \"dd/MM/yyyy\" pattern.","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"     * @param date The LocalDate object to be formatted.","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"     * @return The formatted date string.","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"    public String formatDate(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":93}},{"path":"src/main/java/duke/data/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":" * The ToDo class represents a to-do task in the task management application.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":" * It extends the base Task class and includes a description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * ToDo tasks are used to represent tasks without specific deadlines or start times.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"     * Constructs a ToDo object with the provided task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    public ToDo(String taskDescription) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"        super(taskDescription, taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"     * Generates the formatted representation of the to-do task for display purposes.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * The format includes the task status, task type, and description.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     * @return The formatted representation of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    public String getTaskForPrinting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][T] %s\", super.checkDone(), super.getName());","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"     * Gets the input representation of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     * The input format is suitable for creating and parsing to-do tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     * @return The input representation of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        return \"todo \" + super.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":39}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.CCException;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Event;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import duke.data.task.ToDo;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":" * The Parser class is responsible for parsing user input and converting it into commands and task objects.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":" * It supports the creation of ToDo, Deadline, and Event tasks from user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":" * This class also handles parsing of task details from data files.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * Parses the input command and creates a Command object.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     * This method extracts the action and task description from the input and returns a Command object.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     * @param input The input command provided by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If an error occurs during parsing, such as an empty input.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    public Command parseInput(String input) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Empty input detected.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        int space \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        String action \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        if (space \u003d\u003d -1) { //input is a single word","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"            action \u003d input;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"            //split input into action and description","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"            action \u003d input.substring(0, space);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"            description \u003d input.substring(space + 1, input.length());","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        assert action !\u003d null : \"Action should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"        assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"        return new Command(action, description);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"     * Parses a task from a line of data file input and returns the corresponding Task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"     * This method extracts task details from the input, creates a Command object, and parses the task type.","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"     * @param fileLine The input line from the data file containing task details.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"     * @return A Task object representing the parsed task.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If an error occurs during parsing.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"    public Task parseTaskFromFile(String fileLine) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        String input \u003d fileLine.substring(1); //remove completion status character to extract task input","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        Command command \u003d parseInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        Task task \u003d parseTask(command.getAction(), command.getTaskDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        //Extract the task completion status character from the file line.","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        //If it is marked as completed (\u0027X\u0027), set the task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        if (fileLine.charAt(0) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"            task.setDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"     * Parses a Task object based on its type and input details.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"     * @param type  The type of the task (todo, deadline, event).","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task details.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"     * @return A Task object representing the parsed task.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If an error occurs during parsing or task creation.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"    public Task parseTask(String type, String input) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"            task \u003d parseToDo(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"            task \u003d parseDeadline(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"            task \u003d parseEvent(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid task type.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"     * Parses the input string to create a new ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"     * @return A new ToDo task object created from the provided description.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If the description is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"    private ToDo parseToDo (String taskDescription) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"        assert taskDescription !\u003d null : \"TaskDescription should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"        return new ToDo(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"     * Parses the input string to create a new Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description and due date of the Deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"     * @return A new Deadline task object created from the provided description.","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If the input format is incorrect or if there are empty fields.","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"    private Deadline parseDeadline(String taskDescription) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"        String[] fields \u003d taskDescription.split(\"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"        if (fields.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Incorrect format for deadline.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"        String name \u003d fields[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"        String dueDate \u003d fields[1].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"        if (name.isEmpty() || dueDate.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Empty field for deadline detected.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"        assert taskDescription !\u003d null : \"TaskDescription should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"        assert name !\u003d null : \"Task name should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"        assert dueDate !\u003d null : \"Due date should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"        return new Deadline(taskDescription, name, parseDate(dueDate));","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"tllshan"},"content":"     * Parses the input string to create a new Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description, start date, and end date of the Event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"tllshan"},"content":"     * @return A new Event task object created from the provided description.","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If the input format is incorrect or if there are empty fields.","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"tllshan"},"content":"    private Event parseEvent(String taskDescription) throws CCException {","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"tllshan"},"content":"        String[] fields \u003d taskDescription.split(\"/from|/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"        if (fields.length !\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Incorrect format for event.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"tllshan"},"content":"        String name \u003d fields[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"        String start \u003d fields[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"        String end \u003d fields[2].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"        if (name.isEmpty() || start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"OOPS!!! Empty field for event detected.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"        assert taskDescription !\u003d null : \"TaskDescription should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"        assert name !\u003d null : \"Task name should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"tllshan"},"content":"        assert start !\u003d null : \"Start date should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"tllshan"},"content":"        assert end !\u003d null : \"End date should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"        return new Event(taskDescription, name, parseDate(start), parseDate(end));","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"tllshan"},"content":"     * Parses a string into a LocalDate object.","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"tllshan"},"content":"     * @param date The string containing a date to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"tllshan"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"tllshan"},"content":"    private static LocalDate parseDate(String date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"tllshan"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"tllshan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"tllshan"},"content":"            System.out.println(\"Error parsing date: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"tllshan"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tllshan":179}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.storage;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.CCException;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":" * The Storage class is responsible for loading and saving tasks from/to a data file for the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":" * It interacts with the data file to read and write task information, ensuring data persistence.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     * Constructs a new Storage object with the specified parser.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"     * @param parser The parser used to interpret and convert data from the data file.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    public Storage(Parser parser) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        assert parser !\u003d null : \"Parser should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     * Loads tasks from the data file and returns them as an ArrayList of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     * If the data file doesn\u0027t exist, a new file is created.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"     * @return An ArrayList containing the loaded tasks, or null in case of errors.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            File dataFile \u003d Paths.get(Duke.PATH).toAbsolutePath().toFile();","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(dataFile));","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"                String currLine \u003d reader.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"                while (currLine !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"                    Task task \u003d parser.parseTaskFromFile(currLine);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"                    taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"                    currLine \u003d reader.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"                reader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"            assert taskList !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"            return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"            System.err.println(\"An error occurred while loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"            System.err.println(\"An error occurred while adding tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        System.out.println(\"HERE\");","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"     * Saves tasks from the provided TaskList to the data file.","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"     * @param taskList The TaskList containing tasks to be saved.","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"    public void saveTasksToFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"            File dataFile \u003d Paths.get(Duke.PATH).toAbsolutePath().toFile();","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(dataFile));","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"                String taskDescription \u003d task.getTaskForSaving() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"                writer.append(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"            System.err.println(\"An error occurred while saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tllshan":88}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.tasklist;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.CCException;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.data.task.ToDo;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Event;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":" * The TaskList class represents a collection of tasks managed by the ChatterChicken task manager.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":" * It allows for adding, marking, unmarking, and deleting tasks, as well as printing the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":" * along with their respective indexes. Tasks can be of different types: ToDo, Deadline, and Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    private int markedCount;","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    private int todoCount;","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    private int deadlineCount;","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    private int eventCount;","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"     * Constructs a new TaskList with the provided list of tasks and a UI component for user interactions.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     * @param taskList The initial list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"     * @param ui The user interface component for displaying messages and user interactions.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        this.markedCount \u003d 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        this.todoCount \u003d 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        this.deadlineCount \u003d 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        this.eventCount \u003d 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"     * Adds a new task to the task list based on the provided Task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message with the added task\u0027s details.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If there is an error in adding the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        assert task !\u003d null : \"Task should not be null\"; // Check that the task is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"            todoCount++;","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"            deadlineCount++;","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            eventCount++;","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        return ui.displayAddTask(task, taskList.size());","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"     * Marks a task as done based on the provided input.","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message with the marked task\u0027s details.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information to mark as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If there is an error in marking the task or if the input is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    public String markTask(String input) throws CCException {","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"        assert input !\u003d null : \"Input should not be null\"; // Check that the input is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        assert !input.isEmpty() : \"Input should not be empty\"; // Check that the input is not empty","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"            Task task \u003d taskList.get(getIndex(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"            assert task !\u003d null : \"Task should not be null\"; // Check that the task is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"            task.setDone(true);","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"            markedCount++;","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            return ui.displayMarkTask(task);","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid input for marking list of length \" + taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"     * Unmarks a previously marked task as not done based on the provided input.","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message with the unmarked task\u0027s details.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information to unmark.","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If there is an error in unmarking the task or if the input is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"    public String unmarkTask(String input) throws CCException {","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        assert input !\u003d null : \"Input should not be null\"; // Check that the input is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"        assert !input.isEmpty() : \"Input should not be empty\"; // Check that the input is not empty","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"            Task task \u003d taskList.get(getIndex(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"            assert task !\u003d null : \"Task should not be null\"; // Check that the task is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"            task.setDone(false);","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"            markedCount--;","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"            return ui.displayUnmarkTask(task);","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid input for list of length \" + taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"     * Deletes a task from the task list based on the provided input.","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message after deleting the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information to be deleted.","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"     * @throws CCException If there is an error in deleting the task or if the input is invalid.","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"    public String deleteTask(String input) throws CCException {","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"        assert input !\u003d null : \"Input should not be null\"; // Check that the input is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"            int index \u003d getIndex(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"            assert task !\u003d null : \"Task should not be null\"; // Check that the task is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"            taskList.remove(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"            return ui.displayDeleteTask(task, taskList.size());","lastModifiedDate":"2023-09-14"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"            throw new CCException(\"Invalid input for list of length \" + taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"     * Searches for tasks in the task list that contain the specified keyword in their descriptions.","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"     * @param input The keyword or search query used to find matching tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"     * @return A string containing a list of tasks that match the search query.","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"    public String find(String input) {","lastModifiedDate":"2023-09-14"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"        assert input !\u003d null : \"Input should not be null\"; // Check that the input is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"tllshan"},"content":"            if(task.getTaskDescription().contains(input)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"tllshan"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"tllshan"},"content":"        return ui.displayMatchingTasks(matchingTasks);","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"    public String countTasks(String input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"tllshan"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"tllshan"},"content":"        switch (input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"        case \"completed\":","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"            response \u003d countCompletedTasks();","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"tllshan"},"content":"        case \"uncompleted\":","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"            response \u003d countUncompletedTasks();","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"            break;","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"        case \"type\":","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"            response \u003d countTaskType();","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"tllshan"},"content":"    private String countCompletedTasks() {","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"tllshan"},"content":"        return ui.displayCompletedTaskCount(markedCount, taskList.size());","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"tllshan"},"content":"    private String countUncompletedTasks() {","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"tllshan"},"content":"        return ui.displayUncompletedTaskCount(taskList.size() - markedCount, taskList.size());","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"tllshan"},"content":"    private String countTaskType() {","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"tllshan"},"content":"        return ui.displayTaskTypeCount(todoCount, deadlineCount, eventCount);","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"tllshan"},"content":"     * Retrieves the index of a task based on the provided input.","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information and index as the last character.","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"tllshan"},"content":"     * @return The index of the task parsed from the input.","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"tllshan"},"content":"    private int getIndex(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"tllshan"},"content":"        return input.charAt(input.length() - 1) - \u00270\u0027 - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"tllshan"},"content":"     * Prints the list of tasks with their respective indexes.","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"tllshan"},"content":"    public String printList() {","lastModifiedDate":"2023-09-14"},{"lineNumber":184,"author":{"gitId":"tllshan"},"content":"        return ui.displayList(taskList);","lastModifiedDate":"2023-09-14"},{"lineNumber":185,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"tllshan"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"tllshan"},"content":"        return taskList.iterator();","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":191}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        db.flip();","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"        return db;","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    private void flip() {","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"tllshan":56}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"public class MainWindow {","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    private static final Image userImage \u003d new Image(DialogBox.class.getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    private static final Image dukeImage \u003d new Image(DialogBox.class.getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    private void initialize() {","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        // Add assertions","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        assert scrollPane !\u003d null : \"ScrollPane should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        assert dialogContainer !\u003d null : \"VBox dialogContainer should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        assert userInput !\u003d null : \"TextField userInput should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        assert duke !\u003d null : \"Duke instance should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        );","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"tllshan":53}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" * The Ui class handles user interface interactions for the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" * It provides methods to display messages and task-related information to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    private static final String INDENT \u003d \"      \";","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    private static final String INDENT_BIG \u003d \"        \";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"     * Displays a greeting message to the user to introduce ChatterChicken.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    public String displayGreeting() {","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        return INDENT + \"Hello! I\u0027m ChatterChicken!\\n\" + INDENT + \"What can I do for you?\";","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     * Displays a farewell message to the user as they exit the ChatterChicken application.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    public String displayFarewell() {","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        return INDENT + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     * Displays a message indicating that a task has been added to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     * @param size The updated size of the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    public String displayAddTask(Task task, int size) {","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        return INDENT + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"                + INDENT_BIG + task.getTaskForPrinting() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"                + INDENT + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"     * Displays a message indicating that a task has been deleted from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     * @param size The updated size of the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    public String displayDeleteTask(Task task, int size) {","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        return INDENT + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"                + INDENT_BIG + task.getTaskForPrinting() + \"\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"                + INDENT + \"Now you have \" + size + \" tasks in your list.\";","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"    public String displayMarkTask(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"         return INDENT + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"                + INDENT_BIG + task.getTaskForPrinting();","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"    public String displayUnmarkTask(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"        return  INDENT + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"                + INDENT_BIG + task.getTaskForPrinting();","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"    public String displayMatchingTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"        String result \u003d  INDENT + \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"            result +\u003d \"\\n\" + INDENT_BIG + index + \".\" + task.getTaskForPrinting();","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            index++;","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"        return result;","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"    public String displayCompletedTaskCount(int completedCount, int totalCount) {","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"        return INDENT + \"Congratulations! You have completed \" + completedCount + \" of \" + totalCount + \" tasks!\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"    public String displayUncompletedTaskCount(int uncompletedCount, int totalCount) {","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"        return INDENT + \"You still have \" + uncompletedCount + \" of \" + totalCount + \" tasks uncompleted. Jia you! \\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"    public String displayTaskTypeCount(int todoCount, int deadlineCount, int eventCount) {","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        return INDENT + \"Your tasklist consists of :\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"                INDENT_BIG + todoCount + \" todos \\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"                INDENT_BIG + deadlineCount + \" deadlines \\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"                INDENT_BIG + eventCount + \" events\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"    public String displayList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"        String result \u003d INDENT + \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-16"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"            result +\u003d \"\\n\" + INDENT_BIG + (i + 1) + \".\" + taskList.get(i).getTaskForPrinting();","lastModifiedDate":"2023-09-16"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        return result;","lastModifiedDate":"2023-09-14"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tllshan":110}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"tllshan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"tllshan":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Event;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import duke.data.task.ToDo;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.CCException;","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    public void parseTask_invalidTaskType_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"invalid\", \"taskDescription\");","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        fail(\"Task was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyToDoDescription_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"todo\", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        fail(\"ToDo was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    public void parseTask_validToDo_returnsToDo() {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        Task task;","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            task \u003d parser.parseTask(\"todo\", \"read book\");","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        assertTrue(task instanceof ToDo);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        assertEquals(\"todo read book\", task.getInput());","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyDeadlineDescription_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"deadline\", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        fail(\"Deadline was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyDeadlineEndDate_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"deadline\", \"return book /by \");","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"        fail(\"Deadline was successfully constructed with empty end date.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"    public void parseTask_validDeadline_returnsDeadline() {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"        Task task;","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"            task \u003d parser.parseTask(\"deadline\", \"return book /by 2023-01-09\");","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"        assertTrue(task instanceof Deadline);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        assertEquals(\"deadline return book /by 2023-01-09\", task.getInput());","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyEventDescription_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"event\", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        fail(\"Event was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyEventStartDate_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"event\", \"holiday /from /to 2023-12-25\");","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        fail(\"Event was successfully constructed with empty start date.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyEventEndDate_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"event\", \"holiday /from 2023-12-02 /to \");","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"        fail(\"Event was successfully constructed with empty end date.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"    public void parseTask_validEvent_returnsEvent() {","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"        Task task;","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"            task \u003d parser.parseTask(\"event\", \"holiday /from 2023-12-02 /to 2023-12-25\");","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"        assertTrue(task instanceof Event);","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"        assertEquals(\"event holiday /from 2023-12-02 /to 2023-12-25\", task.getInput());","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tllshan":135}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.tasklist;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import duke.data.task.ToDo;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.CCException;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public void deleteTask_invalidIndex_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(), new Ui());","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"            taskList.deleteTask(\"-1\");","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        fail(\"Invalid index was deleted from task list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    public void deleteTask_validIndex_taskDeletedFromList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(), new Ui());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        ToDo toBeDeleted \u003d new ToDo(\"delete this\");","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(new ToDo(\"read book 1\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(new ToDo(\"read book 2\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(toBeDeleted);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(new ToDo(\"read book 3\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"            taskList.deleteTask(\"3\");","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        } catch (CCException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            assertFalse(task.equals(toBeDeleted));","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tllshan":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"deadline return book /by 2023-01-09","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"event holiday /from 2023-12-02 /to 2023-12-25","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"REM create classes directory if it doesn\u0027t exist","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"if not exist ..\\classes mkdir ..\\classes","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"REM compile each Java file separately into the classes folder","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"javac -d ..\\classes -cp ..\\src\\main\\java ..\\src\\main\\java\\chatterchicken\\*.java","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"REM run the program, feed commands from input.txt file, and redirect the output to ACTUAL.TXT","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"java -classpath ..\\classes chatterchicken.ChatterChicken \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tllshan":7,"-":17}}]
