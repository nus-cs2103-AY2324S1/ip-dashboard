[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"# ChatterChicken","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"\u003e\"Your mind is for having ideas, not holding them.\" - David Allen ([source](https://dansilvestre.com/productivity-quotes/))","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"ChatterChicken frees your mind of having to remember things you need to do. It\u0027s","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"- text-based","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"- easy to learn","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"- ~~FAST~~ _SUPER_ FAST to use","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"All you need to do is,","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"1. download it from [here](https://github.com/tllshan/ip/archive/refs/tags/A-Jar.zip).","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"2. double-click it.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"3. add your tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"4. let it manage your tasks for you ðŸ˜„","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"And it is **FREE**!","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"Features:","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"---","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"```java","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"public class Main {","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tllshan":29,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    // Used for loops to clean up the imports","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    def platforms \u003d [\"win\", \"linux\", \"mac\"]","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    def javafxDependency \u003d [\"javafx-graphics\", \"javafx-controls\", \"javafx-fxml\"]","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    for (plt in platforms) {","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        for (dep in javafxDependency) {","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"            runtimeOnly \"org.openjfx:$dep:$javafx.version:$plt\"","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"javafx {","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"    version \u003d \"17\"","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tllshan":34,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"Duke is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI) while still having the","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"  - [Adding a todo: `todo`](#adding-a-todo---todo)","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"  - [Adding a deadline: `deadline`](#adding-a-deadline---deadline)","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"  - [Adding an event: `event`](#adding-an-event---event)","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"  - [Printing the list: `list`](#printing-the-list---list)","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"  - [Marking a task: `mark`](#marking-a-task---mark)","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"  - [Unmarking a task: `unmark`](#unmarking-a-task---unmark)","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"  - [Deleting a task: `delete`](#deleting-a-task---delete)","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"  - [Finding in list: `find`](#finding-in-list---find)","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"  - [Displaying statistics: `stats`](#displaying-statistics---stats)","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"  - [Filtering completed tasks: `completed`](#filtering-completed-tasks---completed)","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"  - [Filtering uncompleted tasks: `uncompleted`](#filtering-uncompleted-tasks---uncompleted)","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"  - [Filtering todos: `todos`](#filtering-todos---todos)","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"  - [Filtering deadlines: `deadlines`](#filtering-deadlines---deadlines)","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"  - [Filtering events: `events`](#filtering-events---events)","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"  - [Exiting the program: `bye`](#exiting-the-program---bye)","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"## Quick Start","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"1. Ensure you have `Java 11` or above installed in your computer.","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"2. Download the latest duke.jar from [here](https://github.com/tllshan/ip/releases).","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"3. Copy the file to the folder you want to use as the home folder for your chatbot.","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar duke.jar` commmand to run the application.","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"5. Type the command in the command box and press Enter to execute it. You may refer to the Features below for the details of each command.","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"### Adding a todo - `todo`","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"Adds a todo to the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"- A todo is a task that has only a description.","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"Example: `todo read book`","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"Expected output: ","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    [ ][T] read book","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"### Adding a deadline - `deadline`","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"Adds a deadline to the list","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"Format: `deadline DESCRIPTION /by DUE DATE`","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"- A deadline is a task that has a description and a due date. ","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"- Date must be in the format YYYY-MM-DD.","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"Example: `deadline return book /by 2023-09-22`","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"    [ ][D] return book /by 2023-09-22","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"### Adding an event - `event`","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"Adds an event to the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"Format: `event DESCRIPTION /from START DATE /to END DATE`","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"- An event is a task that has a description, a start date, and an end date. ","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"- Dates must be in the format YYYY-MM-DD.","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"Example\" `event holiday /from 2023-12-20 /to 2023-12-25`","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"    [ ][E] return holidy /from 2023-12-20 /to 2023-12-25","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"### Printing the list - `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"Prints a numbered list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"Format: `print`","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"- `X` indicates tasks that have been marked.","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"- `T`, `D`, and `E` tags indicate todos, deadlines and events respectively. ","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"- Deadlines and events are printed with the relevant dates, formatted as DD/MM/YYYY.","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"    1.[ ][T] read book","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"    2.[ ][D] return book (by: 29/09/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"    3.[ ][E] holiday (from: 20/12/2023 to: 25/12/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"### Marking a task - `mark`","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"Marks a task as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"Format: `mark TASK INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"- Marks the task at the specified `TASK INDEX`.","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"- The index refers to the index number shown in list command.","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"- The index must be a positive integer.","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"Example: `mark 2`","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"    [X][D] return book (by: 29/09/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"### Unmarking a task - `unmark`","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"Marks a task as not done yet.","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"Format: `unmark TASK INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"- Unmarks the task at the specified `TASK INDEX`.","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"- The index refers to the index number shown in list command.","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"tllshan"},"content":"- The index must be a positive integer.","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"tllshan"},"content":"Example: `unmark 2`","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"    [ ][D] return book (by: 29/09/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"### Deleting a task - `delete`","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"Format: `delete TASK INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"- Deletes the task at the specified `TASK INDEX`.","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"- The index refers to the index number shown in list command.","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"- The index must be a positive integer.","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"Example: `delete 1`","lastModifiedDate":"2023-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"Noted. I\u0027ve removed this task.","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"    [ ][T] read book","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"tllshan"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":164,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"tllshan"},"content":"### Finding in list - `find`","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"tllshan"},"content":"Finds tasks containing a key word or phrase.","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"tllshan"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"tllshan"},"content":"- Finds and lists tasks with the given `KEYWORD`.","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"tllshan"},"content":"- The search is case-sensitive. e.g. `book` will not match `Book`.","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"tllshan"},"content":"Example: `find book`","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"tllshan"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"tllshan"},"content":"    1.[X][D] return book (by 29/09/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"tllshan"},"content":"### Displaying statistics - `stats`","lastModifiedDate":"2023-09-22"},{"lineNumber":183,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"tllshan"},"content":"Displays the number of each type of task, and the percentage of tasks completed.","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":186,"author":{"gitId":"tllshan"},"content":"Format: `stats`","lastModifiedDate":"2023-09-22"},{"lineNumber":187,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":190,"author":{"gitId":"tllshan"},"content":"Your tasklist consists of:","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"tllshan"},"content":"    - 1 todos","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"tllshan"},"content":"    - 2 deadlines","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"tllshan"},"content":"    - 3 events","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"tllshan"},"content":"You are 66% done with all tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":197,"author":{"gitId":"tllshan"},"content":"### Filtering completed tasks - `completed`","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"tllshan"},"content":"Displays tasks that have been marked as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"tllshan"},"content":"Format: `completed`","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"tllshan"},"content":"Congratulations! You have completed 2 of 3 tasks!","lastModifiedDate":"2023-09-22"},{"lineNumber":206,"author":{"gitId":"tllshan"},"content":"    1.[X][T] read book","lastModifiedDate":"2023-09-22"},{"lineNumber":207,"author":{"gitId":"tllshan"},"content":"    2.[X][E] holiday (from: 20/12/2023 to: 25/12/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":208,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":209,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":210,"author":{"gitId":"tllshan"},"content":"### Filtering uncompleted tasks - `uncompleted`","lastModifiedDate":"2023-09-22"},{"lineNumber":211,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":212,"author":{"gitId":"tllshan"},"content":"Displays tasks that have not been marked as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":213,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"tllshan"},"content":"Format: `uncompleted`","lastModifiedDate":"2023-09-22"},{"lineNumber":215,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":216,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":217,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":218,"author":{"gitId":"tllshan"},"content":"You still have 1 of 3 tasks uncompleted. Jia you!","lastModifiedDate":"2023-09-22"},{"lineNumber":219,"author":{"gitId":"tllshan"},"content":"    1.[ ][D] return book (by: 22/09/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":220,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":221,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":222,"author":{"gitId":"tllshan"},"content":"### Filtering todos - `todos`","lastModifiedDate":"2023-09-22"},{"lineNumber":223,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":224,"author":{"gitId":"tllshan"},"content":"Displays all todos in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":225,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":226,"author":{"gitId":"tllshan"},"content":"Format: `todos`","lastModifiedDate":"2023-09-22"},{"lineNumber":227,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":228,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":229,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":230,"author":{"gitId":"tllshan"},"content":"You have 1 todos on your list!","lastModifiedDate":"2023-09-22"},{"lineNumber":231,"author":{"gitId":"tllshan"},"content":"    1.[X][T] read book","lastModifiedDate":"2023-09-22"},{"lineNumber":232,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":233,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":234,"author":{"gitId":"tllshan"},"content":"### Filtering deadlines - `deadlines`","lastModifiedDate":"2023-09-22"},{"lineNumber":235,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":236,"author":{"gitId":"tllshan"},"content":"Displays all deadlines in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":238,"author":{"gitId":"tllshan"},"content":"Format: `deadlines`","lastModifiedDate":"2023-09-22"},{"lineNumber":239,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":240,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":241,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":242,"author":{"gitId":"tllshan"},"content":"You have 2 deadlines on your list!","lastModifiedDate":"2023-09-22"},{"lineNumber":243,"author":{"gitId":"tllshan"},"content":"    1.[ ][D] return book (by: 22/09/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":244,"author":{"gitId":"tllshan"},"content":"    2.[X][D] submit report (by; 01/10/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":245,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":246,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":247,"author":{"gitId":"tllshan"},"content":"### Filtering events - `events`","lastModifiedDate":"2023-09-22"},{"lineNumber":248,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":249,"author":{"gitId":"tllshan"},"content":"Displays all events in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":250,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":251,"author":{"gitId":"tllshan"},"content":"Format: `events`","lastModifiedDate":"2023-09-22"},{"lineNumber":252,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":253,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":254,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":255,"author":{"gitId":"tllshan"},"content":"You have 2 events on your list!","lastModifiedDate":"2023-09-22"},{"lineNumber":256,"author":{"gitId":"tllshan"},"content":"    1.[X][E] holiday (from: 20/12/2023 to: 25/12/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":257,"author":{"gitId":"tllshan"},"content":"    2.[ ][E] exams (from: 30/11/2023 to: 05/12/2023)","lastModifiedDate":"2023-09-22"},{"lineNumber":258,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":259,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":260,"author":{"gitId":"tllshan"},"content":"### Exiting the program - `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":261,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":262,"author":{"gitId":"tllshan"},"content":"Displays exit message and disables user input.","lastModifiedDate":"2023-09-22"},{"lineNumber":263,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":264,"author":{"gitId":"tllshan"},"content":"Format: `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":265,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":266,"author":{"gitId":"tllshan"},"content":"Expected output:","lastModifiedDate":"2023-09-22"},{"lineNumber":267,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":268,"author":{"gitId":"tllshan"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-09-22"},{"lineNumber":269,"author":{"gitId":"tllshan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":270,"author":{"gitId":"tllshan"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":271,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":272,"author":{"gitId":"tllshan"},"content":"## Command Summary","lastModifiedDate":"2023-09-22"},{"lineNumber":273,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":274,"author":{"gitId":"tllshan"},"content":"- `todo DESCRIPTION`","lastModifiedDate":"2023-09-22"},{"lineNumber":275,"author":{"gitId":"tllshan"},"content":"- `deadline DESCRIPTION /by DUE DATE`","lastModifiedDate":"2023-09-22"},{"lineNumber":276,"author":{"gitId":"tllshan"},"content":"- `event DESCRIPTION /from START DATE /to END DATE`","lastModifiedDate":"2023-09-22"},{"lineNumber":277,"author":{"gitId":"tllshan"},"content":"- `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":278,"author":{"gitId":"tllshan"},"content":"- `mark TASK INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":279,"author":{"gitId":"tllshan"},"content":"- `unmark TASK INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":280,"author":{"gitId":"tllshan"},"content":"- `delete TASK INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":281,"author":{"gitId":"tllshan"},"content":"- `find KEYWORD`","lastModifiedDate":"2023-09-22"},{"lineNumber":282,"author":{"gitId":"tllshan"},"content":"- `stats`","lastModifiedDate":"2023-09-22"},{"lineNumber":283,"author":{"gitId":"tllshan"},"content":"- `completed`","lastModifiedDate":"2023-09-22"},{"lineNumber":284,"author":{"gitId":"tllshan"},"content":"- `uncompleted`","lastModifiedDate":"2023-09-22"},{"lineNumber":285,"author":{"gitId":"tllshan"},"content":"- `todos`","lastModifiedDate":"2023-09-22"},{"lineNumber":286,"author":{"gitId":"tllshan"},"content":"- `deadlines`","lastModifiedDate":"2023-09-22"},{"lineNumber":287,"author":{"gitId":"tllshan"},"content":"- `events`","lastModifiedDate":"2023-09-22"},{"lineNumber":288,"author":{"gitId":"tllshan"},"content":"- `bye`","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"tllshan":262,"-":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":" * The {@code Duke} class is the main class for the Duke task manager application.","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":" * It initializes and coordinates the application\u0027s components, such as the UI, parser, storage, and task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":" * The class also defines the main method for launching the application and the main loop for user interaction.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"public class Duke {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    public static final String PATH \u003d \"src/main/data/task-list.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     * Initializes the Duke application by creating instances of the UI, parser, and storage.","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    public Duke() {","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        this.storage \u003d new Storage(parser);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        this.tasks \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        // Add assertions to check the initial state of Duke\u0027s components","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        assert parser !\u003d null : \"Parser should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        assert tasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"                return farewell();","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"            } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"                Command command \u003d parser.parseInput(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"                String response \u003d command.execute(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"                storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"                return response;","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        return \"\";","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"    private String farewell() {","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":54}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"public class Launcher {","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"tllshan":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            // Add assertions to check conditions","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"            assert fxmlLoader !\u003d null : \"FXMLLoader should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"            assert ap !\u003d null : \"AnchorPane should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"            assert scene !\u003d null : \"Scene should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"            stage.show();","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"tllshan":36}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"            \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"            + INDENT + \"%s\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"            + \"Now you have %d tasks in the list.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private Task task;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        return response(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    private String response(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        return String.format(COMMAND_RESPONSE, task.getFormattedTask(), tasks.getSize());","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":29}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * The Command class represents a command provided by the user for the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" * It encapsulates both the action and task description specified by the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    public static String INDENT \u003d \"      \";","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    public abstract String execute(TaskList tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tllshan":13}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"            \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"            + INDENT + \"%s\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"            + \"Now you have %d tasks in the list.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    private String taskIndex;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    public DeleteTaskCommand(String taskIndex) {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            Task deletedTask \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"            return response(tasks, deletedTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    private String response(TaskList tasks, Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        return String.format(COMMAND_RESPONSE, task.getFormattedTask(), tasks.getSize());","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":35}},{"path":"src/main/java/duke/command/FilterCompletedTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"public class FilterCompletedTasksCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE \u003d \"Congratulations! You have completed %d of %d tasks!\";","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"        return response(tasks, tasks.getCompletedTasks());","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private String response(TaskList tasks, TaskList completedTasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"        return String.format(COMMAND_RESPONSE, completedTasks.getSize(), tasks.getSize())","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"                + completedTasks.getFormattedList();","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"tllshan":18}},{"path":"src/main/java/duke/command/FilterDeadlinesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"public class FilterDeadlinesCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE \u003d \"You have %d deadlines on your list!\";","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"        return response(tasks.getDeadlines());","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private String response(TaskList deadlines) {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"        return String.format(COMMAND_RESPONSE, deadlines.getSize()) + deadlines.getFormattedList();","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"tllshan":17}},{"path":"src/main/java/duke/command/FilterEventsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"public class FilterEventsCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE \u003d \"You have %d events on your list!\";","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"        return response(tasks.getEvents());","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private String response(TaskList events) {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"        return String.format(COMMAND_RESPONSE, events.getSize()) + events.getFormattedList();","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"tllshan":17}},{"path":"src/main/java/duke/command/FilterTodosCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"public class FilterTodosCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE \u003d \"You have %d todos on your list!\";","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"        return response(tasks.getTodos());","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private String response(TaskList todos) {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"        return String.format(COMMAND_RESPONSE, todos.getSize()) + todos.getFormattedList();","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"tllshan":17}},{"path":"src/main/java/duke/command/FilterUncompletedTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"public class FilterUncompletedTasksCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE \u003d \"You still have %d of %d tasks uncompleted. Jia you!\";","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"        return response(tasks, tasks.getUncompletedTasks());","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private String response(TaskList tasks, TaskList uncompletedTasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"        return String.format(COMMAND_RESPONSE, uncompletedTasks.getSize(), tasks.getSize())","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"                + uncompletedTasks.getFormattedList();","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"tllshan":18}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    private String input;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    public FindTaskCommand(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"        TaskList matchingTasks \u003d tasks.find(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"        return response(matchingTasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    private String response(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        return COMMAND_RESPONSE + tasks.getFormattedList();","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":24}},{"path":"src/main/java/duke/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"            \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"            + INDENT + \"%s\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private String taskIndex;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    public MarkTaskCommand(String taskIndex) {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"            Task markedTask \u003d tasks.markTask(taskIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            return response(markedTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    private String response(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        return String.format(COMMAND_RESPONSE, task.getFormattedTask());","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":34}},{"path":"src/main/java/duke/command/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"public class PrintListCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"        return response(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    private String response(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"        return COMMAND_RESPONSE + tasks.getFormattedList();","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":16}},{"path":"src/main/java/duke/command/PrintStatsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"public class PrintStatsCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE \u003d \"Your tasklist consists of: \\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"            + INDENT + \"- %d todos \\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"            + INDENT + \"- %d deadlines\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"            + INDENT + \"- %d events\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"            + \"You are %d%% done with all tasks.\\n\";","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"        return response(tasks.getTodos(), tasks.getDeadlines(), tasks.getEvents(), tasks.percentDone());","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    private String response(TaskList todos, TaskList deadlines, TaskList events, int percentDone) {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        return String.format(COMMAND_RESPONSE, todos.getSize(), deadlines.getSize(), events.getSize(), percentDone);","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":21}},{"path":"src/main/java/duke/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.command;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    private static final String COMMAND_RESPONSE","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"            \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"            + INDENT + \"%s\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private String taskIndex;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    public UnmarkTaskCommand(String taskIndex) {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"            Task unmarkedTask \u003d tasks.unmarkTask(taskIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            return response(unmarkedTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    private String response(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        return String.format(COMMAND_RESPONSE, task.getFormattedTask());","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":34}},{"path":"src/main/java/duke/data/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.data.exception;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":" * The DukeException class represents a custom exception specific to the ChatterChicken task manager application.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":" * It is used to handle and convey application-specific errors and exceptional conditions.","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"        super(message);","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":17}},{"path":"src/main/java/duke/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * The Deadline class represents a deadline task in the task management application.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" * It extends the parent Task class and includes information about the task\u0027s due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" * Deadline tasks are used to track tasks with specific deadlines.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    private final LocalDate dueDate; //the due date of the deadline task","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"     * Constructs a Deadline object with the provided task description, task name, and due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"     * @param name The name or title of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     * @param dueDate The due date of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    public Deadline(String taskDescription, String name, LocalDate dueDate) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"        super(taskDescription, name);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     * Generates the formatted representation of the deadline task for display purposes.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     * The format includes the task status, task type, description, and due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"     * @return The formatted representation of the deadline task.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    public String getFormattedTask() {","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][D] %s (by: %s)\", super.checkDone(), super.getName(), super.formatDate(dueDate));","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     * Gets the input representation of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     * The input format is suitable for creating and parsing deadline tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"     * @return The input representation of the deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        return \"deadline \" + super.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":45}},{"path":"src/main/java/duke/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * The Event class represents an event task in the task management application.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" * It extends the parent Task class and includes information about the event\u0027s start and end dates.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" * Event tasks are used to schedule events with specific start and end times.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    private final LocalDate start; //the start date of the event","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    private final LocalDate end; //the end date of the event","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"     * Constructs an Event object with the provided task description, event name, start date, and end date.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"     * @param name The name or title of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"     * @param start The start date of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * @param end The end date of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    public Event(String taskDescription, String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        super(taskDescription, name);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     * Generates the formatted representation of the event task for display purposes.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"     * The format includes the task status, task type, description, start date, and end date.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     * @return The formatted representation of the event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    public String getFormattedTask() {","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][E] %s (from: %s to: %s)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"                super.checkDone(),","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"                super.getName(),","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"                super.formatDate(start),","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"                super.formatDate(end));","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     * Gets the input representation of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     * The input format is suitable for creating and parsing event tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"     * @return The input representation of the event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        return \"event \" + super.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":53}},{"path":"src/main/java/duke/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" * The abstract Task class represents a generic task with a task description, name, and completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":" * Subclasses such as ToDo, Deadline, and Event provide specific task types.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    private final String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"     * Constructs a new Task with the provided task description and name.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"     * @param name The name or title of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    public Task(String taskDescription, String name) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"     * Gets a formatted input string for the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"     * @return The formatted input string representing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    public abstract String getInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"     * Gets a formatted string for printing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     * @return The formatted string for printing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    public abstract String getFormattedTask();","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"     * Gets a formatted string for saving the task, including its completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     * @return The formatted string for saving the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    public String getTaskForSaving() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        String done \u003d isDone? \"X\" : \" \";","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        return done + getInput(); //append completion status character to input","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"     * @param isDone True if the task is completed; false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"     * Checks the completion status of the task and returns \u0027X\u0027 if completed, or \u0027 \u0027 if not completed.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"     * @return \u0027X\u0027 if the task is completed; \u0027 \u0027 if not completed.","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"    protected String checkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"        return isDone ? \"X\" : \"  \";","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"     * Formats a given LocalDate object into a string using the \"dd/MM/yyyy\" pattern.","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"     * @param date The LocalDate object to be formatted.","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"     * @return The formatted date string.","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"    public String formatDate(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"    protected String getName() {","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"        return this.name;","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":93}},{"path":"src/main/java/duke/data/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.data.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":" * The ToDo class represents a to-do task in the task management application.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":" * It extends the base Task class and includes a description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":" * ToDo tasks are used to represent tasks without specific deadlines or start times.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"     * Constructs a ToDo object with the provided task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    public ToDo(String taskDescription) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"        super(taskDescription, taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"     * Generates the formatted representation of the to-do task for display purposes.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * The format includes the task status, task type, and description.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     * @return The formatted representation of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    public String getFormattedTask() {","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        return String.format(\"[%s][T] %s\", super.checkDone(), super.getName());","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"     * Gets the input representation of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     * The input format is suitable for creating and parsing to-do tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     * @return The input representation of the to-do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        return \"todo \" + super.getTaskDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":39}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Event;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import duke.data.task.ToDo;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":" * The Parser class is responsible for parsing user input and converting it into commands and task objects.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":" * It supports the creation of ToDo, Deadline, and Event tasks from user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":" * This class also handles parsing of task details from data files.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"     * Parses the input command and creates a Command object.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     * This method extracts the action and task description from the input and returns a Command object.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     * @param input The input command provided by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"     * @throws DukeException If an error occurs during parsing, such as an empty input.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    public Command parseInput(String input) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        String action \u003d getActionFromInput(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        String description \u003d getDescriptionFromInput(input, action);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        assert action !\u003d null : \"Action should not be null\";","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        switch (action) {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        case \"event\":","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"            return new AddTaskCommand(parseTask(action, description));","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        case \"list\":","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"            return new PrintListCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"            return new MarkTaskCommand(description);","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"            return new UnmarkTaskCommand(description);","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"            return new DeleteTaskCommand(description);","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        case \"find\":","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"            return new FindTaskCommand(description);","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        case \"completed\":","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"            return new FilterCompletedTasksCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"        case \"uncompleted\":","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"            return new FilterUncompletedTasksCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        case \"todos\":","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"            return new FilterTodosCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        case \"deadlines\":","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            return new FilterDeadlinesCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        case \"events\":","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"            return new FilterEventsCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        case \"stats\":","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"            return new PrintStatsCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"        default:","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :\u003c\");","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"    private String getActionFromInput(String input) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"Empty input detected.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"        return words[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"    private String getDescriptionFromInput(String input, String action) {","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"        int startIndex \u003d input.indexOf(action + \" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        if (startIndex \u003e\u003d 0) {","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            startIndex +\u003d action.length() + 1; // Add 1 to account for the space","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"            return input.substring(startIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"            return input; // Return the entire input if the action is not found","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"     * Parses a task from a line of data file input and returns the corresponding Task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"     * This method extracts task details from the input, creates a Command object, and parses the task type.","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"     * @param fileLine The input line from the data file containing task details.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"     * @return A Task object representing the parsed task.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"     * @throws DukeException If an error occurs during parsing.","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"    public Task parseTaskFromFile(String fileLine) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        String input \u003d fileLine.substring(1); //remove completion status character to extract task input","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"        String action \u003d getActionFromInput(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        String description \u003d getDescriptionFromInput(input, action);","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        Task task \u003d parseTask(action, description);","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"        //Extract the task completion status character from the file line.","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"        //If it is marked as completed (\u0027X\u0027), set the task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"        if (fileLine.charAt(0) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"            task.setDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"     * Parses a Task object based on its type and input details.","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"     * @param type  The type of the task (todo, deadline, event).","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task details.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"     * @return A Task object representing the parsed task.","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"     * @throws DukeException If an error occurs during parsing or task creation.","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"    public Task parseTask(String type, String input) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"        switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"            return parseToDo(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"            return parseDeadline(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"            return parseEvent(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"Invalid task type.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"     * Parses the input string to create a new ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description of the ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"     * @return A new ToDo task object created from the provided description.","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"    private ToDo parseToDo (String taskDescription) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"tllshan"},"content":"        assert taskDescription !\u003d null : \"TaskDescription should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"tllshan"},"content":"        return new ToDo(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"tllshan"},"content":"     * Parses the input string to create a new Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description and due date of the Deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"     * @return A new Deadline task object created from the provided description.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"tllshan"},"content":"     * @throws DukeException If the input format is incorrect or if there are empty fields.","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"    private Deadline parseDeadline(String taskDescription) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"        String[] fields \u003d taskDescription.split(\"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"        if (fields.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"OOPS!!! Incorrect format for deadline.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"        String name \u003d fields[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"        String dueDate \u003d fields[1].trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"tllshan"},"content":"        if (name.isEmpty() || dueDate.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"OOPS!!! Empty field for deadline detected.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"tllshan"},"content":"        assert taskDescription !\u003d null : \"TaskDescription should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"tllshan"},"content":"        assert name !\u003d null : \"Task name should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"tllshan"},"content":"        assert dueDate !\u003d null : \"Due date should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"tllshan"},"content":"        return new Deadline(taskDescription, name, parseDate(dueDate));","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"tllshan"},"content":"     * Parses the input string to create a new Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"tllshan"},"content":"     * @param taskDescription The description, start date, and end date of the Event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"tllshan"},"content":"     * @return A new Event task object created from the provided description.","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"tllshan"},"content":"     * @throws DukeException If the input format is incorrect or if there are empty fields.","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"tllshan"},"content":"    private Event parseEvent(String taskDescription) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"tllshan"},"content":"        String[] fields \u003d taskDescription.split(\"/from|/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"tllshan"},"content":"        if (fields.length !\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"OOPS!!! Incorrect format for event.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"tllshan"},"content":"        String name \u003d fields[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"tllshan"},"content":"        String start \u003d fields[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"tllshan"},"content":"        String end \u003d fields[2].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"tllshan"},"content":"        if (name.isEmpty() || start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"OOPS!!! Empty field for event detected.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"tllshan"},"content":"        assert taskDescription !\u003d null : \"TaskDescription should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"tllshan"},"content":"        assert name !\u003d null : \"Task name should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"tllshan"},"content":"        assert start !\u003d null : \"Start date should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"tllshan"},"content":"        assert end !\u003d null : \"End date should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"tllshan"},"content":"        return new Event(taskDescription, name, parseDate(start), parseDate(end));","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"tllshan"},"content":"     * Parses a string into a LocalDate object.","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"tllshan"},"content":"     * @param date The string containing a date to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"tllshan"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"tllshan"},"content":"    private static LocalDate parseDate(String date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"tllshan"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"tllshan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"tllshan"},"content":"            System.out.println(\"Error parsing date: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"tllshan"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tllshan":211}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.storage;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":" * The Storage class is responsible for loading and saving tasks from/to a data file for the ChatterChicken task manager application.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":" * It interacts with the data file to read and write task information, ensuring data persistence.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"     * Constructs a new Storage object with the specified parser.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"     * @param parser The parser used to interpret and convert data from the data file.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"    public Storage(Parser parser) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        assert parser !\u003d null : \"Parser should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"     * Loads tasks from the data file and returns them as an ArrayList of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"     * If the data file doesn\u0027t exist, a new file is created.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"     * @return An ArrayList containing the loaded tasks, or null in case of errors.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            File dataFile \u003d Paths.get(Duke.PATH).toAbsolutePath().toFile();","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"            dataFile.getParentFile().mkdirs();","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(dataFile));","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"                String currLine \u003d reader.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"                while (currLine !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"                    Task task \u003d parser.parseTaskFromFile(currLine);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"                    taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"                    currLine \u003d reader.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"                reader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"            assert taskList !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"            return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"            System.err.println(\"An error occurred while loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"            System.err.println(\"An error occurred while adding tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        System.out.println(\"HERE\");","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"     * Saves tasks from the provided TaskList to the data file.","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"     * @param taskList The TaskList containing tasks to be saved.","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"    public void saveTasksToFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"            File dataFile \u003d Paths.get(Duke.PATH).toAbsolutePath().toFile();","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(dataFile));","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"                String taskDescription \u003d task.getTaskForSaving() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"                writer.append(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"            System.err.println(\"An error occurred while saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tllshan":89}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.tasklist;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import duke.data.task.ToDo;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Event;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":" * The TaskList class represents a collection of tasks managed by the ChatterChicken task manager.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":" * It allows for adding, marking, unmarking, and deleting tasks, as well as printing the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":" * along with their respective indexes. Tasks can be of different types: ToDo, Deadline, and Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"     * Constructs a new TaskList with the provided list of tasks and a UI component for user interactions.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"     * @param taskList The initial list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"     * Adds a new task to the task list based on the provided Task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message with the added task\u0027s details.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"     * @throws DukeException If there is an error in adding the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        assert task !\u003d null : \"Task should not be null\"; // Check that the task is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"     * Deletes a task from the task list based on the provided input.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message after deleting the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information to be deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"     * @throws DukeException If there is an error in deleting the task or if the input is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"    public Task deleteTask(String input) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        assert input !\u003d null : \"Input should not be null\"; // Check that the input is not null","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"            int index \u003d getIndex(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"            Task deletedTask \u003d taskList.get(index);","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"            assert deletedTask !\u003d null : \"Task should not be null\"; // Check that the task is not null","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"            taskList.remove(index);","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"            return deletedTask;","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"Invalid input for list of length \" + taskList.size());","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"     * Marks a task as done based on the provided input.","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message with the marked task\u0027s details.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information to mark as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"     * @throws DukeException If there is an error in marking the task or if the input is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"    public Task markTask(String input) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"        assert input !\u003d null : \"Input should not be null\"; // Check that the input is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        assert !input.isEmpty() : \"Input should not be empty\"; // Check that the input is not empty","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"            Task task \u003d taskList.get(getIndex(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"            assert task !\u003d null : \"Task should not be null\"; // Check that the task is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"            task.setDone(true);","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"            return task;","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"Invalid input for marking list of length \" + taskList.size());","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"     * Unmarks a previously marked task as not done based on the provided input.","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"     * Displays a confirmation message with the unmarked task\u0027s details.","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information to unmark.","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"     * @throws DukeException If there is an error in unmarking the task or if the input is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"    public Task unmarkTask(String input) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        assert input !\u003d null : \"Input should not be null\"; // Check that the input is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        assert !input.isEmpty() : \"Input should not be empty\"; // Check that the input is not empty","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"            Task task \u003d taskList.get(getIndex(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"            assert task !\u003d null : \"Task should not be null\"; // Check that the task is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"            task.setDone(false);","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"            return task;","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"            throw new DukeException(\"Invalid input for list of length \" + taskList.size());","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"     * Searches for tasks in the task list that contain the specified keyword in their descriptions.","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"     * @param input The keyword or search query used to find matching tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"     * @return A string containing a list of tasks that match the search query.","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"    public TaskList find(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"        assert input !\u003d null : \"Input should not be null\"; // Check that the input is not null","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"        TaskList matchingTasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"            if (task.getTaskDescription().contains(input)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"    public TaskList getCompletedTasks() {","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"        TaskList completedTasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"            if (task.isDone()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"                completedTasks.addTask(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"        return completedTasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"    public TaskList getUncompletedTasks() {","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"        TaskList uncompletedTasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"tllshan"},"content":"                uncompletedTasks.addTask(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"tllshan"},"content":"        return uncompletedTasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"tllshan"},"content":"    public TaskList getTodos() {","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"tllshan"},"content":"        TaskList todos \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"tllshan"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"tllshan"},"content":"                todos.addTask(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"tllshan"},"content":"        return todos;","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"tllshan"},"content":"    public TaskList getDeadlines() {","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"tllshan"},"content":"        TaskList deadlines \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"tllshan"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"tllshan"},"content":"                deadlines.addTask(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":157,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":158,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"tllshan"},"content":"        return deadlines;","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"tllshan"},"content":"    public TaskList getEvents() {","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"tllshan"},"content":"        TaskList events \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"tllshan"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"tllshan"},"content":"                events.addTask(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"tllshan"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"tllshan"},"content":"        return events;","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"tllshan"},"content":"    public int percentDone() {","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"tllshan"},"content":"        double completedCount \u003d getCompletedTasks().getSize();","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"tllshan"},"content":"        double result \u003d completedCount / getSize() * 100;","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"tllshan"},"content":"        return (int) result;","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"tllshan"},"content":"     * Prints the list of tasks with their respective indexes.","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"tllshan"},"content":"    public String getFormattedList() {","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"tllshan"},"content":"        String indent \u003d \"      \";","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"tllshan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"tllshan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"tllshan"},"content":"            result +\u003d \"\\n\" + indent + (i + 1) + \".\" + taskList.get(i).getFormattedTask();","lastModifiedDate":"2023-09-22"},{"lineNumber":186,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"tllshan"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"tllshan"},"content":"     * Retrieves the index of a task based on the provided input.","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"tllshan"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"tllshan"},"content":"     * @param input The input containing task information and index as the last character.","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"tllshan"},"content":"     * @return The index of the task parsed from the input.","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"tllshan"},"content":"    private int getIndex(String input) {","lastModifiedDate":"2023-09-22"},{"lineNumber":197,"author":{"gitId":"tllshan"},"content":"        return input.charAt(input.length() - 1) - \u00270\u0027 - 1;","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"tllshan"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"tllshan"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"tllshan"},"content":"        return taskList.iterator();","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":205,"author":{"gitId":"tllshan"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-21"},{"lineNumber":206,"author":{"gitId":"tllshan"},"content":"        return taskList.size();","lastModifiedDate":"2023-09-21"},{"lineNumber":207,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":208,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":208}},{"path":"src/main/java/duke/ui/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"public class DukeDialogBox extends HBox {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    private DukeDialogBox(String text, Image img) {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        displayPicture.setClip(makeCirlce());","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"    private Circle makeCirlce() {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        Circle circle \u003d new Circle(50);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        circle.setCenterX(50);","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        circle.setCenterY(50);","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        return circle;","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"    public static DukeDialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        return new DukeDialogBox(text, img);","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":45}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"public class MainWindow {","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    private static final Image userImage \u003d new Image(UserDialogBox.class.getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"    private static final Image dukeImage \u003d new Image(DukeDialogBox.class.getResourceAsStream(\"/images/Duke.jpg\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    private void initialize() {","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        // Add assertions","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        assert scrollPane !\u003d null : \"ScrollPane should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        assert dialogContainer !\u003d null : \"VBox dialogContainer should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        assert userInput !\u003d null : \"TextField userInput should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        assert duke !\u003d null : \"Duke instance should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"                UserDialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"                DukeDialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"        );","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"tllshan":61}},{"path":"src/main/java/duke/ui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.ui;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"public class UserDialogBox extends HBox {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    private UserDialogBox(String text, Image img) {","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        displayPicture.setClip(makeCirlce());","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    private Circle makeCirlce() {","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        Circle circle \u003d new Circle(50);","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        circle.setCenterX(50);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        circle.setCenterY(50);","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        return circle;","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"    public static UserDialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        return new UserDialogBox(text, img);","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":44}},{"path":"src/main/resources/view/DukeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"        \u003cRegion minWidth\u003d\"10.0\" maxWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"        \u003cVBox alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"                \u003cstyle\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"                    -fx-background-color: #ADD8E6;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"                    -fx-background-radius: 10;","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"                    -fx-padding: 8;","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"                \u003c/style\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"15.0\" top\u003d\"0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"        \u003cHBox layoutY\u003d\"558.0\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"            \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"314.0\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"                \u003cstyle\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"                    -fx-background-color: #D3D3D3;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"                    -fx-background-radius: 10;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"                    -fx-padding: 8;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"                \u003c/style\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"                \u003cpromptText\u003eEnter command here\u003c/promptText\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"            \u003c/TextField\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"            \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"                \u003cstyle\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"                    -fx-background-color: #279ec8;","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"                    -fx-background-radius: 20;","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"                    -fx-padding: 8;","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"                \u003c/style\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"tllshan":35}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"                \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"                    \u003cstyle\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"                        -fx-background-color: #279ec8;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"                        -fx-background-radius: 10;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"                        -fx-padding: 8;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"                    \u003c/style\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"        \u003cRegion minWidth\u003d\"10.0\" maxWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tllshan":27}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Event;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import duke.data.task.ToDo;","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    public void parseTask_invalidTaskType_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"invalid\", \"taskDescription\");","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        fail(\"Task was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyToDoDescription_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"todo\", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        fail(\"ToDo was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"    public void parseTask_validToDo_returnsToDo() {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        Task task;","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            task \u003d parser.parseTask(\"todo\", \"read book\");","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"tllshan"},"content":"        assertTrue(task instanceof ToDo);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"tllshan"},"content":"        assertEquals(\"todo read book\", task.getInput());","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyDeadlineDescription_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"deadline\", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"tllshan"},"content":"        fail(\"Deadline was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyDeadlineEndDate_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"deadline\", \"return book /by \");","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"tllshan"},"content":"        fail(\"Deadline was successfully constructed with empty end date.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"tllshan"},"content":"    public void parseTask_validDeadline_returnsDeadline() {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"tllshan"},"content":"        Task task;","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"tllshan"},"content":"            task \u003d parser.parseTask(\"deadline\", \"return book /by 2023-01-09\");","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"tllshan"},"content":"        assertTrue(task instanceof Deadline);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"tllshan"},"content":"        assertEquals(\"deadline return book /by 2023-01-09\", task.getInput());","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyEventDescription_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"event\", \"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"tllshan"},"content":"        fail(\"Event was successfully constructed with empty description.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyEventStartDate_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"event\", \"holiday /from /to 2023-12-25\");","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"tllshan"},"content":"        fail(\"Event was successfully constructed with empty start date.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"tllshan"},"content":"    public void parseTask_emptyEventEndDate_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"tllshan"},"content":"            parser.parseTask(\"event\", \"holiday /from 2023-12-02 /to \");","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"tllshan"},"content":"        fail(\"Event was successfully constructed with empty end date.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"tllshan"},"content":"    public void parseTask_validEvent_returnsEvent() {","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"tllshan"},"content":"        Task task;","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"tllshan"},"content":"            task \u003d parser.parseTask(\"event\", \"holiday /from 2023-12-02 /to 2023-12-25\");","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"tllshan"},"content":"        assertTrue(task instanceof Event);","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"tllshan"},"content":"        assertEquals(\"event holiday /from 2023-12-02 /to 2023-12-25\", task.getInput());","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tllshan":135}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"package duke.tasklist;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"import duke.data.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"import duke.data.task.ToDo;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"tllshan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"tllshan"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"tllshan"},"content":"    public void deleteTask_invalidIndex_throwsCCException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(), new Ui());","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"tllshan"},"content":"            taskList.deleteTask(\"-1\");","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"tllshan"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"tllshan"},"content":"        fail(\"Invalid index was deleted from task list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"tllshan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"tllshan"},"content":"    public void deleteTask_validIndex_taskDeletedFromList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"tllshan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"tllshan"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(), new Ui());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"tllshan"},"content":"        ToDo toBeDeleted \u003d new ToDo(\"delete this\");","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(new ToDo(\"read book 1\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(new ToDo(\"read book 2\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(toBeDeleted);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"tllshan"},"content":"        taskList.addTask(new ToDo(\"read book 3\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"tllshan"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"tllshan"},"content":"            taskList.deleteTask(\"3\");","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"tllshan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"tllshan"},"content":"            fail(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"tllshan"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"tllshan"},"content":"            assertFalse(task.equals(toBeDeleted));","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"tllshan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"tllshan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"tllshan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"tllshan":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tllshan"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"tllshan"},"content":"deadline return book /by 2023-01-09","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tllshan"},"content":"event holiday /from 2023-12-02 /to 2023-12-25","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"tllshan"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tllshan"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tllshan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"tllshan"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tllshan":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"tllshan"},"content":"REM create classes directory if it doesn\u0027t exist","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"tllshan"},"content":"if not exist ..\\classes mkdir ..\\classes","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"tllshan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"tllshan"},"content":"REM compile each Java file separately into the classes folder","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"tllshan"},"content":"javac -d ..\\classes -cp ..\\src\\main\\java ..\\src\\main\\java\\chatterchicken\\*.java","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"tllshan"},"content":"REM run the program, feed commands from input.txt file, and redirect the output to ACTUAL.TXT","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"tllshan"},"content":"java -classpath ..\\classes chatterchicken.ChatterChicken \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tllshan":7,"-":17}}]
