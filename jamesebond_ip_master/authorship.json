[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"checkstyle {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"//    mainClass.set(\"seedu.duke.Main\")","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"//    mainClassName \u003d \u0027seedu.duke.Main\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"jamesebond"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"jamesebond"},"content":"javafx {","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"jamesebond"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"jamesebond"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 , \u0027javafx.fxml\u0027]","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jamesebond":27,"-":41}},{"path":"data/jamesbond.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"T | 0 | die","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"T | 0 | die and eat","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"T | 0 | die","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"T | 0 | live","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"T | 0 | lie","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"D | 0 | pig | 2019-12-12T23:59","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"E | 0 | duck | 2020-12-12T20:00to2023-12-12T23:59","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jamesebond":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"## Features \u0026 Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"### 1. List tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"- **Command word**: `listout`","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"- **Description**: lists out all the tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"- **Expected output**:","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"1. [T][] die","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"2. [T][X] eat and die","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"----------","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"### 2. Addding tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"- ### Add todo","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"  - **Command word**: `todo (task)`","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"  - **Description**: add task of type \"todo\"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"  - **Expected output**:","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"ADDED todo FOR YOU!!!!","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"[T][]die","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"- ### Add deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"  - **Command word**: `deadline (task) /by (yyyy-MM-dd HH:mm)`","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"  - **Description**: add task with a deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"  - **Expected output**:","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"ADDED deadline FOR YOU!!!!","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"[D][]pig (by: 12-December-2023 11:59PM)","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"- ### Add event","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"  - **Command word**: `event (task) /from (yyyy-MM-dd HH:mm) /to (yyyy-MM-dd HH:mm)`","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"  - **Description**: add task of type \"event\" with time period","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"  - **Expected output**:","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"ADDED event FOR YOU!!!!","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"[E][]duck (from: 12-December-2023 11:59PM to: 14-December-2023 11:59PM)","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"### 3. Find task","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"- **Command word**: `find (keyword)`","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"- **Description**: finds all tasks that matches given keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"- **Expected output**:","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"HERE ARE YOUR MATCHES: ","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"1. [T][X] eat and die","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jamesebond"},"content":"### 4. Delete task","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"- **Command word**: `delete (task number)`","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"- **Description**: deletes the task corresponding to the task number","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"- **Expected output**:","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jamesebond"},"content":"REMOVED FOR YOU:)","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jamesebond"},"content":"[T][X] eat and die","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jamesebond"},"content":"Now you have: 3 tasks left.","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jamesebond"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"jamesebond"},"content":"### 5. Mark task","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"jamesebond"},"content":"- **Command word**: `mark (task number)`","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"jamesebond"},"content":"- **Description**: marks the given task number as completed","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"jamesebond"},"content":"- **Expected output**:","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"jamesebond"},"content":"you\u0027re done. DONEEE","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"jamesebond"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"jamesebond"},"content":"### 6. Unmark task","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"jamesebond"},"content":"- **Command word**: `unmark (task number)`","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"jamesebond"},"content":"- **Description**: umarks the given task number as completed","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"jamesebond"},"content":"- **Expected output**:","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"jamesebond"},"content":"Done. Stop being lazy.","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"jamesebond"},"content":"[T][]die and eat","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"jamesebond"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"jamesebond"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"jamesebond"},"content":"### 7. Undo task","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"jamesebond"},"content":"- **Command word**: `undo`","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"jamesebond"},"content":"- **Description**: undo the most recent task addition","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"jamesebond"},"content":"- **Expected output**:","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"jamesebond"},"content":"Undid the latest task you edited!!!!!!","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"jamesebond"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"jamesebond"},"content":"### 8. Exit","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"jamesebond"},"content":"- **Command word**: `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"jamesebond"},"content":"- **Description**: exits the system ","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jamesebond":81,"-":5}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.OFF: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.ON: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":" * The {@code AddCommand} class represents a command to add tasks to a task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":" * It can handle different types of tasks, including ToDo, Deadline, and Event tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    // Fields","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"    private String description;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"    private String type;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"     * Constructs an {@code AddCommand} object for adding a ToDo task.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"        assert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"        this.type \u003d \"todo\";","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"     * Constructs an {@code AddCommand} object for adding a Deadline task.","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"     * @param by          The deadline of the task (date and time).","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"    public AddCommand(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"        assert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"        assert by !\u003d null : \"Deadline cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"        this.type \u003d \"deadline\";","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"        this.to \u003d by;","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"     * Constructs an {@code AddCommand} object for adding an Event task.","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"jamesebond"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"jamesebond"},"content":"     * @param from        The start date and time of the event.","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"jamesebond"},"content":"     * @param to          The end date and time of the event.","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"jamesebond"},"content":"    public AddCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"jamesebond"},"content":"        assert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"jamesebond"},"content":"        assert from !\u003d null : \"Start date and time cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"jamesebond"},"content":"        assert to !\u003d null : \"End date and time cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"jamesebond"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"jamesebond"},"content":"        this.type \u003d \"event\";","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"jamesebond"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"jamesebond"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"jamesebond"},"content":"     * Executes the AddCommand by creating the specified task and adding it to the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"jamesebond"},"content":"     * @param tasks   The task list to which the task should be added.","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"jamesebond"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"jamesebond"},"content":"     * @param storage The storage for saving task data.","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"jamesebond"},"content":"    public String runCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"jamesebond"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"jamesebond"},"content":"        switch (this.type) {","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"jamesebond"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"jamesebond"},"content":"            task \u003d new ToDo(this.description);","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"jamesebond"},"content":"            tasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"jamesebond"},"content":"            storage.updateFile(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"jamesebond"},"content":"            return ui.todoMessage(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"jamesebond"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"jamesebond"},"content":"            task \u003d new Deadline(this.description, this.to);","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"jamesebond"},"content":"            tasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"jamesebond"},"content":"            storage.updateFile(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"jamesebond"},"content":"            return ui.deadlineMessage(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"jamesebond"},"content":"        case \"event\":","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"jamesebond"},"content":"            task \u003d new Event(this.description, this.from, this.to);","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"jamesebond"},"content":"            tasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"jamesebond"},"content":"            storage.updateFile(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"jamesebond"},"content":"            return ui.eventMessage(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"jamesebond"},"content":"        default:","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"jamesebond"},"content":"            return ui.showErrorMessage(\"idk what u saying.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":98}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":" * The abstract Command class represents a command that can be run","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"     * Executes the command to perform a specific action.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"     * @param taskList The task list that the command may operate on.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"     * @param ui       The user interface for displaying messages or user interactions.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"     * @param storage  The storage component for reading or writing data.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    public abstract String runCommand(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":19}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":" * The DeleteCommand class represents a command to delete a specific task from the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":" * It takes the task number as an argument to identify the task to be deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"     * The task number to be deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"     * Constructs a DeleteCommand object with the task number to be deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"     * @param taskNumber The task number to identify the task to be deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"        assert taskNumber \u003e 0 : \"Task number must be a positive integer\";","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"     * Executes the DeleteCommand by deleting the specified task from the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"     * It then displays a message to inform the user about the deletion.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"     * @param taskList The task list from which the task is to be deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"     * @param storage  The storage component for reading or writing data.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"    public String runCommand(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"        taskList.delete(taskNumber - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"        int len \u003d taskList.totalTaskCount();","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"        storage.updateFile(taskList);","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"        return ui.showDeleteMessage(task, len);","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":45}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":" * The `ExitCommand` class represents a command to exit the application.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":" * When executed, it triggers the application to exit gracefully.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"     * Executes the `ExitCommand` by instructing the user interface to handle the exit action.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"     * @param taskList The task list (not used in this command).","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"     * @param ui       The user interface responsible for handling the exit action.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"     * @param storage  The storage component (not used in this command).","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    public String runCommand(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"        return ui.exit(taskList, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":21}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":" * Represents a command to search for tasks containing a specified keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":" * When executed, it searches through the list of tasks and displays tasks whose descriptions","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":" * contain the specified keyword (case-insensitive).","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"     * The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    private String keyword;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"     * Constructs a new FindCommand with the specified keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"        assert keyword !\u003d null : \"keyword cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"     * Executes the FindCommand by searching for tasks in the provided TaskList whose descriptions","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"     * contain the specified keyword. The search is case-insensitive.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"     * The results are displayed using the provided Ui and may be stored using the provided Storage","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"     * (if applicable).","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"     * @param taskList The TaskList containing the tasks to search through.","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"     * @param ui       The Ui used to display search results.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"     * @param storage  The Storage used to potentially store the search results.","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"    public String runCommand(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"        // Create a new TaskList to store search results","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"        TaskList results \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"        // Iterate through the task list and add tasks containing the keyword to the results","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"        for (Task task : taskList.getToDos()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"            boolean isMatch \u003d task.getTaskDescription().toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"            if (isMatch) {","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"jamesebond"},"content":"                results.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"        // Display the search results using the provided Ui","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"jamesebond"},"content":"        return ui.showSearchResults(results);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":56}},{"path":"src/main/java/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":" * The `IncorrectCommand` class represents a command used to handle incorrect or invalid user inputs.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":" * When executed, it displays an error message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"    public final String messageToUser;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"     * Constructs an `IncorrectCommand` object with the specified error message.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"     * @param messageToUser The error message to be displayed to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    public IncorrectCommand(String messageToUser) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"        assert messageToUser !\u003d null : \"error message cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"        this.messageToUser \u003d messageToUser;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"     * Executes the `IncorrectCommand` by displaying the specified error message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"     * @param taskList The task list (not used in this command).","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"     * @param ui       The user interface responsible for displaying the error message.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"     * @param storage  The storage component (not used in this command).","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"    public String runCommand(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"        return ui.showErrorMessage(this.messageToUser);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":36}},{"path":"src/main/java/commands/ListoutCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":" * The `ListoutCommand` class represents a command to list out and display tasks from the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":" * When executed, it instructs the user interface to display the list of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"public class ListoutCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"     * Executes the `ListoutCommand` by instructing the user interface to display the list of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"     * @param tasks   The task list containing the tasks to be listed.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"     * @param ui      The user interface responsible for displaying the list of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"     * @param storage The storage component (not used in this command).","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    public String runCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"        return ui.listout(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":24}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":" * The `MarkCommand` class represents a command to mark a specific task as done in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":" * When executed, it marks the specified task as done and displays a message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"     * The task number to be marked as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"    protected int taskNumber;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"     * Constructs a `MarkCommand` object with the task number to be marked as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"     * @param taskNumber The task number to identify the task to be marked as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"        assert taskNumber \u003e 0 : \"Task number must be a positive integer\";","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"     * Executes the `MarkCommand` by marking the specified task as done and displaying a message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"     * @param ui      The user interface responsible for displaying messages.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"     * @param storage The storage component (not used in this command).","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"    public String runCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"        storage.updateFile(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"        return ui.markMessage(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":41}},{"path":"src/main/java/commands/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package commands;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":" * The {@code UndoCommand} class represents a command to undo the most recent action in the task management application.","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":" * When executed, it removes the latest modification or task addition from the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":" * It provides a way to revert the last change made by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"     * Executes the UndoCommand by removing the most recent action from the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"     * This command is typically used to revert the last change made by the user, such as adding or modifying a task.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"     * @param taskList The TaskList from which the most recent action should be removed.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"     * @param storage  The storage component for reading or writing data.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"     * @return A message indicating the success of the undo operation.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"    public String runCommand(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"        taskList.removeLatest();","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"        storage.updateFile(taskList);","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"        return ui.undoMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"jamesebond":29}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":" * The `UnmarkCommand` class represents a command to unmark a specific task as done in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":" * When executed, it unmarks the specified task and displays a message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"     * The task number to be unmarked.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"    protected int taskNumber;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"     * Constructs an `UnmarkCommand` object with the task number to be unmarked.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"     * @param taskNumber The task number to identify the task to be unmarked.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"        assert taskNumber \u003e 0 : \"Task number must be a positive integer\";","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"     * Executes the `UnmarkCommand` by unmarking the specified task and displaying a message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"     * @param ui      The user interface responsible for displaying messages.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"     * @param storage The storage component (not used in this command).","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"    public String runCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"        task.unMark();","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"        storage.updateFile(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"        return ui.unmarkMessage(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":42}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"    DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jamesebond"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"jamesebond"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"jamesebond"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jamesebond"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"jamesebond"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"jamesebond"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamesebond":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import commands.Command;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import exceptions.JamesBondException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":" * The `Duke` class is the main class for the Duke task management application.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":" * It handles the initialization of various components and the execution of the application.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"public class Duke {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"     * Constructs a `Duke` object with the specified file path for data storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"     * @param filePath The file path where task data is stored.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"        assert filePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"            tasks \u003d storage.loadTasksFromFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"            this.tasks \u003d tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"        } catch (JamesBondException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"     * * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"        Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"        return c.runCommand(tasks, ui, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jamesebond":48,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamesebond":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"    private Duke duke \u003d new Duke(\"/Users/jamesbond/ip/data/jamesbond.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamesebond":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Baby.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dog.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"The name\u0027s Bond. James Bond. 007\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"                + \"at your service.\", dukeImage));","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jamesebond"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamesebond":53}},{"path":"src/main/java/exceptions/JamesBondException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":" * The `JamesBondException` class represents a custom exception used in the Duke application.","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":" * It is a subclass of the `Exception` class and is used to handle application-specific exceptions.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"public class JamesBondException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"     * Constructs a `JamesBondException` object with the specified error message.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"    public JamesBondException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jamesebond":15}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import commands.*;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.OFF: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.ON: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":" * The `Parser` class provides methods for parsing user input and converting it into commands or tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":" * It also includes a method for parsing task data from a save file format.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"public class Parser {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"     * Parses the user input and returns an appropriate command object.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"     * @return A command object based on the parsed input.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"    public static Command parseCommand(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"        Command c \u003d null;","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"        switch (split[0]) {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"            c \u003d checkExit(split);","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"            c \u003d checkTodo(split);","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"        case \"event\":","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"            c \u003d checkEvent(split);","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"            c \u003d checkDeadline(split);","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"            c \u003d checkUnmark(split);","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"            c \u003d checkMark(split);","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"            c \u003d checkDelete(split);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"jamesebond"},"content":"            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"        case \"find\":","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"            c \u003d checkFind(split);","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"jamesebond"},"content":"        case \"listout\":","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"jamesebond"},"content":"            c \u003d checkListout(split);","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"jamesebond"},"content":"            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"jamesebond"},"content":"        case \"undo\":","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"jamesebond"},"content":"            c \u003d checkUndo(split);","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"jamesebond"},"content":"            break;","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"jamesebond"},"content":"        default:","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"jamesebond"},"content":"            c \u003d new IncorrectCommand(\"idk what u saying BRO.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"jamesebond"},"content":"        return c;","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"jamesebond"},"content":"     * Checks the user input for an \"undo\" command and returns the corresponding command object.","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"jamesebond"},"content":"     * @param split The user input string split into tokens.","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"jamesebond"},"content":"     * @return An \"UndoCommand\" if the input is a valid undo command, otherwise an \"IncorrectCommand.\"","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"jamesebond"},"content":"    private static Command checkUndo(String[] split) {","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"jamesebond"},"content":"        if (split.length \u003e 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"Cannot have anything after undo\");","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"jamesebond"},"content":"        return new UndoCommand();","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"jamesebond"},"content":"     * Processes the \"find\" command.","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"jamesebond"},"content":"     * Checks if a valid search keyword is provided as the second argument in the input array.","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"jamesebond"},"content":"     * If valid, returns a FindCommand with the keyword; otherwise, returns an IncorrectCommand.","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"jamesebond"},"content":"     * @param split An array of strings representing the split user command.","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"jamesebond"},"content":"     * @return A Command object representing the processed command.","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"jamesebond"},"content":"    private static Command checkFind(String[] split) {","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"jamesebond"},"content":"        if (split.length \u003d\u003d 1 || split[1].isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"enter a reasonable search word please\");","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"jamesebond"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"jamesebond"},"content":"            String keyword \u003d split[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"jamesebond"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"jamesebond"},"content":"     * Checks the user input for a \"listout\" command and returns the corresponding command object.","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"jamesebond"},"content":"     * @param split The user input string split into tokens.","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"jamesebond"},"content":"     * @return A \"ListoutCommand\" if the input is a valid listout command, otherwise an \"IncorrectCommand.\"","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"jamesebond"},"content":"    private static Command checkListout(String[] split) {","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"jamesebond"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"jamesebond"},"content":"            return new ListoutCommand();","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"jamesebond"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"why are u telling me things after listout.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"jamesebond"},"content":"     * Checks the user input for a \"mark\" command and returns the corresponding command object.","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"jamesebond"},"content":"     * @param split The user input string split into tokens.","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"jamesebond"},"content":"     * @return A \"MarkCommand\" if the input is a valid mark command, otherwise an \"IncorrectCommand.\"","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"jamesebond"},"content":"    private static Command checkMark(String[] split) {","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"jamesebond"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"You didn\u0027t tell me your task to MARK!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"jamesebond"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"jamesebond"},"content":"            int taskNumber \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"jamesebond"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"jamesebond"},"content":"                return new IncorrectCommand(\"Enter a valid task number.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"jamesebond"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"jamesebond"},"content":"                return new MarkCommand(taskNumber);","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"jamesebond"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"jamesebond"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"Enter a valid task number.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"jamesebond"},"content":"     * Checks the user input for an \"exit\" command and returns the corresponding command object.","lastModifiedDate":"2023-09-04"},{"lineNumber":138,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":139,"author":{"gitId":"jamesebond"},"content":"     * @param split The user input string split into tokens.","lastModifiedDate":"2023-09-04"},{"lineNumber":140,"author":{"gitId":"jamesebond"},"content":"     * @return An \"ExitCommand\" if the input is a valid exit command, otherwise an \"IncorrectCommand.\"","lastModifiedDate":"2023-09-04"},{"lineNumber":141,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":142,"author":{"gitId":"jamesebond"},"content":"    public static Command checkExit(String[] split) {","lastModifiedDate":"2023-09-04"},{"lineNumber":143,"author":{"gitId":"jamesebond"},"content":"        if (split.length \u003e 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":144,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"Cannot have anything after bye\");","lastModifiedDate":"2023-09-04"},{"lineNumber":145,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":146,"author":{"gitId":"jamesebond"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-09-04"},{"lineNumber":147,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":148,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":149,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":150,"author":{"gitId":"jamesebond"},"content":"     * Checks the user input for a \"todo\" command and returns the corresponding command object.","lastModifiedDate":"2023-09-04"},{"lineNumber":151,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":152,"author":{"gitId":"jamesebond"},"content":"     * @param split The user input string split into tokens.","lastModifiedDate":"2023-09-04"},{"lineNumber":153,"author":{"gitId":"jamesebond"},"content":"     * @return A \"TodoCommand\" if the input is a valid todo command, otherwise an \"IncorrectCommand.\"","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":155,"author":{"gitId":"jamesebond"},"content":"    public static Command checkTodo(String[] split) {","lastModifiedDate":"2023-09-04"},{"lineNumber":156,"author":{"gitId":"jamesebond"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":157,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"You didn\u0027t tell me ur task.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":158,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":159,"author":{"gitId":"jamesebond"},"content":"        return new AddCommand(split[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":160,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":161,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":162,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":163,"author":{"gitId":"jamesebond"},"content":"     * Checks the user input for a \"deadline\" command and returns the corresponding command object.","lastModifiedDate":"2023-09-04"},{"lineNumber":164,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":165,"author":{"gitId":"jamesebond"},"content":"     * @param split The user input string split into tokens.","lastModifiedDate":"2023-09-04"},{"lineNumber":166,"author":{"gitId":"jamesebond"},"content":"     * @return A \"DeadlineCommand\" if the input is a valid deadline command, otherwise an \"IncorrectCommand.\"","lastModifiedDate":"2023-09-04"},{"lineNumber":167,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":168,"author":{"gitId":"jamesebond"},"content":"    public static Command checkDeadline(String[] split) {","lastModifiedDate":"2023-09-04"},{"lineNumber":169,"author":{"gitId":"jamesebond"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":170,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"You didn\u0027t tell me ur task and the deadline it\u0027s due by. BUCK UP!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":171,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":172,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":173,"author":{"gitId":"jamesebond"},"content":"        String[] deadline \u003d split[1].split(\" /by \", 2);","lastModifiedDate":"2023-09-04"},{"lineNumber":174,"author":{"gitId":"jamesebond"},"content":"        if (deadline[1].isBlank() || deadline[0].isBlank()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":175,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"Please enter a valid deadline.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":176,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":177,"author":{"gitId":"jamesebond"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":178,"author":{"gitId":"jamesebond"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-04"},{"lineNumber":179,"author":{"gitId":"jamesebond"},"content":"            return new AddCommand(deadline[0], LocalDateTime.parse(deadline[1], formatter));","lastModifiedDate":"2023-09-04"},{"lineNumber":180,"author":{"gitId":"jamesebond"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":181,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"Enter in format yyyy-mm-dd 24:00\");","lastModifiedDate":"2023-09-04"},{"lineNumber":182,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":183,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":184,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":185,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":186,"author":{"gitId":"jamesebond"},"content":"     * Checks the user input for an \"event\" command and returns the corresponding command object.","lastModifiedDate":"2023-09-04"},{"lineNumber":187,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":188,"author":{"gitId":"jamesebond"},"content":"     * @param split The user input string split into tokens.","lastModifiedDate":"2023-09-04"},{"lineNumber":189,"author":{"gitId":"jamesebond"},"content":"     * @return An \"EventCommand\" if the input is a valid event command, otherwise an \"IncorrectCommand.\"","lastModifiedDate":"2023-09-04"},{"lineNumber":190,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":191,"author":{"gitId":"jamesebond"},"content":"    public static Command checkEvent(String[] split) {","lastModifiedDate":"2023-09-04"},{"lineNumber":192,"author":{"gitId":"jamesebond"},"content":"        if (split.length \u003d\u003d 1 || !split[1].contains(\" /from \")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":193,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"You didn\u0027t tell me ur task and the time period it\u0027s due by. BUCK UP!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":194,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":195,"author":{"gitId":"jamesebond"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":196,"author":{"gitId":"jamesebond"},"content":"            String[] task \u003d split[1].split(\" /from \", 2);","lastModifiedDate":"2023-09-04"},{"lineNumber":197,"author":{"gitId":"jamesebond"},"content":"            String[] from \u003d task[1].split(\" /to \", 2);","lastModifiedDate":"2023-09-04"},{"lineNumber":198,"author":{"gitId":"jamesebond"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-04"},{"lineNumber":199,"author":{"gitId":"jamesebond"},"content":"            return new AddCommand(task[0],","lastModifiedDate":"2023-09-09"},{"lineNumber":200,"author":{"gitId":"jamesebond"},"content":"                    LocalDateTime.parse(from[0], formatter), LocalDateTime.parse(from[1], formatter));","lastModifiedDate":"2023-09-09"},{"lineNumber":201,"author":{"gitId":"jamesebond"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":202,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"Enter in format yyyy-mm-dd 24:00\");","lastModifiedDate":"2023-09-04"},{"lineNumber":203,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":204,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":205,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":206,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":207,"author":{"gitId":"jamesebond"},"content":"     * Checks the user input for an \"unmark\" command and returns the corresponding command object.","lastModifiedDate":"2023-09-04"},{"lineNumber":208,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":209,"author":{"gitId":"jamesebond"},"content":"     * @param split The user input string split into tokens.","lastModifiedDate":"2023-09-04"},{"lineNumber":210,"author":{"gitId":"jamesebond"},"content":"     * @return An \"UnmarkCommand\" if the input is a valid unmark command, otherwise an \"IncorrectCommand.\"","lastModifiedDate":"2023-09-04"},{"lineNumber":211,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":212,"author":{"gitId":"jamesebond"},"content":"    private static Command checkUnmark(String[] split) {","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"jamesebond"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":214,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"You didn\u0027t tell me your task to MARK!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":216,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":217,"author":{"gitId":"jamesebond"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":218,"author":{"gitId":"jamesebond"},"content":"            int taskNumber \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":219,"author":{"gitId":"jamesebond"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":220,"author":{"gitId":"jamesebond"},"content":"                return new IncorrectCommand(\"Enter a valid task number.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":221,"author":{"gitId":"jamesebond"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":222,"author":{"gitId":"jamesebond"},"content":"                return new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-09-04"},{"lineNumber":223,"author":{"gitId":"jamesebond"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":224,"author":{"gitId":"jamesebond"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"Enter a valid task number.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":228,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":229,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":230,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":231,"author":{"gitId":"jamesebond"},"content":"     * Checks the user input for a \"delete\" command and returns the corresponding command object.","lastModifiedDate":"2023-09-04"},{"lineNumber":232,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":233,"author":{"gitId":"jamesebond"},"content":"     * @param split The user input string split into tokens.","lastModifiedDate":"2023-09-04"},{"lineNumber":234,"author":{"gitId":"jamesebond"},"content":"     * @return A \"DeleteCommand\" if the input is a valid delete command, otherwise an \"IncorrectCommand.\"","lastModifiedDate":"2023-09-04"},{"lineNumber":235,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":236,"author":{"gitId":"jamesebond"},"content":"    public static Command checkDelete(String[] split) {","lastModifiedDate":"2023-09-04"},{"lineNumber":237,"author":{"gitId":"jamesebond"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":238,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"You didn\u0027t tell me your task to DELETE!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":239,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":240,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":241,"author":{"gitId":"jamesebond"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":242,"author":{"gitId":"jamesebond"},"content":"            int taskNumber \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":243,"author":{"gitId":"jamesebond"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":244,"author":{"gitId":"jamesebond"},"content":"                return new IncorrectCommand(\"Enter a valid task number for DELETE.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":245,"author":{"gitId":"jamesebond"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":246,"author":{"gitId":"jamesebond"},"content":"                return new DeleteCommand(taskNumber);","lastModifiedDate":"2023-09-04"},{"lineNumber":247,"author":{"gitId":"jamesebond"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":248,"author":{"gitId":"jamesebond"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":249,"author":{"gitId":"jamesebond"},"content":"            return new IncorrectCommand(\"Enter a valid task number for DELETE.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":250,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":251,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":252,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":253,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":254,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":255,"author":{"gitId":"jamesebond"},"content":"     * Parses a task in the save file format and returns a corresponding task object.","lastModifiedDate":"2023-09-04"},{"lineNumber":256,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":257,"author":{"gitId":"jamesebond"},"content":"     * @param sf The string in save file format representing a task.","lastModifiedDate":"2023-09-04"},{"lineNumber":258,"author":{"gitId":"jamesebond"},"content":"     * @return A task object based on the parsed save file format.","lastModifiedDate":"2023-09-04"},{"lineNumber":259,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":260,"author":{"gitId":"jamesebond"},"content":"    public static Task parseFomSaveFormat(String sf) {","lastModifiedDate":"2023-09-04"},{"lineNumber":261,"author":{"gitId":"jamesebond"},"content":"        String[] parts \u003d sf.split(\" \\\\| \");","lastModifiedDate":"2023-09-04"},{"lineNumber":262,"author":{"gitId":"jamesebond"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":263,"author":{"gitId":"jamesebond"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-04"},{"lineNumber":264,"author":{"gitId":"jamesebond"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-09-20"},{"lineNumber":265,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":266,"author":{"gitId":"jamesebond"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-04"},{"lineNumber":267,"author":{"gitId":"jamesebond"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":268,"author":{"gitId":"jamesebond"},"content":"            Task task \u003d new ToDo(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":269,"author":{"gitId":"jamesebond"},"content":"            task.setStatus(isDone);","lastModifiedDate":"2023-09-04"},{"lineNumber":270,"author":{"gitId":"jamesebond"},"content":"            return task;","lastModifiedDate":"2023-09-04"},{"lineNumber":271,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":272,"author":{"gitId":"jamesebond"},"content":"        String date \u003d parts[3];","lastModifiedDate":"2023-09-04"},{"lineNumber":273,"author":{"gitId":"jamesebond"},"content":"        if (type.equals(\"D\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":274,"author":{"gitId":"jamesebond"},"content":"            Task task \u003d new Deadline(description, LocalDateTime.parse(date, formatter));","lastModifiedDate":"2023-09-04"},{"lineNumber":275,"author":{"gitId":"jamesebond"},"content":"            task.setStatus(isDone);","lastModifiedDate":"2023-09-04"},{"lineNumber":276,"author":{"gitId":"jamesebond"},"content":"            return task;","lastModifiedDate":"2023-09-04"},{"lineNumber":277,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":278,"author":{"gitId":"jamesebond"},"content":"        if (type.equals(\"E\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":279,"author":{"gitId":"jamesebond"},"content":"            String[] timeline \u003d date.split(\"to\", 2);","lastModifiedDate":"2023-09-20"},{"lineNumber":280,"author":{"gitId":"jamesebond"},"content":"            String from \u003d timeline[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":281,"author":{"gitId":"jamesebond"},"content":"            String to \u003d timeline[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":282,"author":{"gitId":"jamesebond"},"content":"            Task task \u003d new Event(description,","lastModifiedDate":"2023-09-09"},{"lineNumber":283,"author":{"gitId":"jamesebond"},"content":"                    LocalDateTime.parse(from, formatter), LocalDateTime.parse(to, formatter));","lastModifiedDate":"2023-09-09"},{"lineNumber":284,"author":{"gitId":"jamesebond"},"content":"            task.setStatus(isDone);","lastModifiedDate":"2023-09-04"},{"lineNumber":285,"author":{"gitId":"jamesebond"},"content":"            return task;","lastModifiedDate":"2023-09-04"},{"lineNumber":286,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":287,"author":{"gitId":"jamesebond"},"content":"        return null;","lastModifiedDate":"2023-09-04"},{"lineNumber":288,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":289,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":290,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":290}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import exceptions.JamesBondException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.OFF: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.ON: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":" * The `Storage` class is responsible for handling the storage of task data in a file and loading tasks from a file.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    private String file;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"     * Constructs a `Storage` object with the specified file path for task data storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"     * @param file The file path where task data is stored.","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"    public Storage(String file) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"     * Loads tasks from the file and returns a `TaskList` containing the loaded tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"     * @return A `TaskList` containing the loaded tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"     * @throws JamesBondException If an error occurs while loading tasks from the file.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"    public TaskList loadTasksFromFile() throws JamesBondException {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"        TaskList tasksList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(file));","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"            for (String line : lines) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"                Task task \u003d Parser.parseFomSaveFormat(line);","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"                tasksList.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"        return tasksList;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jamesebond"},"content":"     * @param tasks The `TaskList` containing the tasks to be saved.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jamesebond"},"content":"    public void updateFile(TaskList tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jamesebond"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jamesebond"},"content":"            for (Task task : tasks.getToDos()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"jamesebond"},"content":"                writer.write(task.toSaveFormat());","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"jamesebond"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"jamesebond"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"jamesebond"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"jamesebond"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"jamesebond"},"content":" }","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"jamesebond":66}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":" * The `Deadline` class represents a task with a specific deadline.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":" * It extends the `Task` class and includes a deadline date and time.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"     * Constructs a `Deadline` object with the specified description and deadline.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"     * @param text The description of the deadline task.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"     * @param by   The deadline date and time.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    public Deadline(String text, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"        super(text);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"     * Converts the `Deadline` object to a string in a save file format.","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"     * @return A string representation of the `Deadline` object in save file format.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"        return \"D\" + super.toSaveFormat() + \" | \" + this.by;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"     * Returns a string representation of the `Deadline` object for displaying to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"     * @return A string representation of the `Deadline` object.","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(outputFormatter) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":43}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":" * The `Event` class represents a task that occurs during a specific time period.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":" * It extends the `Task` class and includes a start time and end time for the event.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"     * Constructs an `Event` object with the specified description and time period.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"     * @param from        The start date and time of the event.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"     * @param to          The end date and time of the event.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"     * Converts the `Event` object to a string in a save file format.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"     * @return A string representation of the `Event` object in save file format.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"        return \"E\" + super.toSaveFormat() + \" | \" + this.from + \"to\" + this.to;","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"     * Returns a string representation of the `Event` object for displaying to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"     * @return A string representation of the `Event` object.","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(outputFormatter) + \" to: \"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"                + to.format(outputFormatter) + \")\";","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":46}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":" * The `Task` class represents a basic task with a description and completion status.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":" * It serves as the base class for specific task types like `Todo`, `Deadline`, and `Event`.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"public class Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"    protected String text;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"    protected DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d-MMMM-yyyy h:mma\", Locale.ENGLISH);","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"     * Constructs a `Task` object with the specified description.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"     * @param text The description of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    public Task(String text) {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"     * Returns an icon representing the completion status of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"     * @return An \"X\" if the task is done, an empty string otherwise.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"        return (isDone ? \"X\" : \"\");","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"        return this.text;","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"     * @param status The new completion status for the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"jamesebond"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"jamesebond"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"jamesebond"},"content":"    public void unMark() {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"jamesebond"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"jamesebond"},"content":"     * Converts the `Task` object to a string in a save file format.","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"jamesebond"},"content":"     * @return A string representation of the `Task` object in save file format.","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"jamesebond"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"jamesebond"},"content":"        return \" | \" + (this.isDone ? 1 : 0) + \" | \" + this.text;","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"jamesebond"},"content":"     * Returns a string representation of the `Task` object for displaying to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"jamesebond"},"content":"     * @return A string representation of the `Task` object.","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"jamesebond"},"content":"    public String toString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"jamesebond"},"content":"        return \"[\" + getStatusIcon() + \"]\" + this.text;","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":81}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":" * The `TaskList` class represents a collection of tasks. It provides methods for managing tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":" * such as adding, deleting, retrieving, and finding tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"public class TaskList {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"    private ArrayList\u003cTask\u003e toDos;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"     * Constructs a `TaskList` object with an initial capacity of 100 tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"        toDos \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"        toDos.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"        toDos.remove(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"    public int totalTaskCount() {","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"        return this.toDos.size();","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"jamesebond"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"        return toDos.get(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"jamesebond"},"content":"     * Returns a list of all tasks in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"jamesebond"},"content":"     * @return An ArrayList of all tasks in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"jamesebond"},"content":"    public ArrayList\u003cTask\u003e getToDos() {","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"jamesebond"},"content":"        return toDos;","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"jamesebond"},"content":"     * Removes the latest task in the list","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"jamesebond"},"content":"    public void removeLatest() {","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"jamesebond"},"content":"        toDos.remove(toDos.size() - 1);","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"jamesebond"},"content":"     * Finds the index of a task with the specified description in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"jamesebond"},"content":"     * @param task The description of the task to be found.","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"jamesebond"},"content":"     * @return The index of the task if found, or -1 if not found.","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"jamesebond"},"content":"    public int findTask(String task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"jamesebond"},"content":"        for (int i \u003d 0; i \u003c toDos.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"jamesebond"},"content":"            if (task.equalsIgnoreCase(toDos.get(i).text)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"jamesebond"},"content":"                return i;","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"jamesebond"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"jamesebond"},"content":"        return -1;","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":86}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":" * The `ToDo` class represents a basic to-do task without a specific deadline or event time.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":" * It extends the `Task` class and inherits its methods.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"     * Constructs a `ToDo` object with the specified description.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"     * @param text The description of the to-do task.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"    public ToDo(String text) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"        super(text);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"     * Converts the `ToDo` object to a string in a save file format.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"     * @return A string representation of the `ToDo` object in save file format.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"        return \"T\" + super.toSaveFormat();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"     * Returns a string representation of the `ToDo` object for displaying to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"     * @return A string representation of the `ToDo` object.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":38}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.OFF: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.ON: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":" * The `Ui` class handles user interface interactions and provides methods for displaying messages","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":" * and receiving input from the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"public class Ui {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    private final Scanner in;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"     * Constructs a `Ui` object using the default input and output streams (System.in and System.out).","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"    public Ui() {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"     * Constructs a `Ui` object using the specified input and output streams.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"     * @param in  The input stream for reading user input.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"     * @param out The output stream for displaying messages to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"     * Displays an error message indicating a failed loading operation.","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"jamesebond"},"content":"        out.println(\"Failed to load.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"jamesebond"},"content":"     * Displays a list of tasks to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"jamesebond"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"jamesebond"},"content":"    public String listout(TaskList tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"jamesebond"},"content":"        for (int i \u003d 0; i \u003c tasks.totalTaskCount(); i++) {","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"jamesebond"},"content":"            stringBuilder.append((i + 1) + \".\" + tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jamesebond"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"jamesebond"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"jamesebond"},"content":"     * Checks if there is more user input available.","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"jamesebond"},"content":"     * @return `true` if there is more input available, `false` otherwise.","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"jamesebond"},"content":"    public boolean isThereNext() {","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"jamesebond"},"content":"        return this.in.hasNextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"jamesebond"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"jamesebond"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"jamesebond"},"content":"    public String readLine() {","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"jamesebond"},"content":"        return this.in.nextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"jamesebond"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"jamesebond"},"content":"     * @param error The error message to be displayed.","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"jamesebond"},"content":"    public String showErrorMessage(String error) {","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"jamesebond"},"content":"        return error;","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"jamesebond"},"content":"     * Exits the application, saving tasks to a file if necessary.","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"jamesebond"},"content":"     * @param tasks   The task list to be saved.","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"jamesebond"},"content":"     * @param storage The storage object for saving tasks to a file.","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"jamesebond"},"content":"    public String exit(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"jamesebond"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"jamesebond"},"content":"        return \"Bye. Till the next time.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"jamesebond"},"content":"     * Displays a message indicating the removal of a task and the remaining number of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"jamesebond"},"content":"     * @param task   The task that was removed.","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"jamesebond"},"content":"     * @param remain The remaining number of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"jamesebond"},"content":"    public String showDeleteMessage(Task task, int remain) {","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"jamesebond"},"content":"        return \"REMOVED FOR YOU:)\\n\" + task.toString() + \"\\n Now you have:\" + remain + \" tasks left.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"jamesebond"},"content":"     * Displays a message indicating the completion of a task.","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"jamesebond"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"jamesebond"},"content":"    public String markMessage(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"jamesebond"},"content":"        return (\"you\u0027re done. DONEEE\");","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"jamesebond"},"content":"     * Displays a message indicating the unmarking of a task as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"jamesebond"},"content":"     * @param task The task that was marked as undone.","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"jamesebond"},"content":"    public String unmarkMessage(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"jamesebond"},"content":"        return \"Done. Stop being lazy.\\n\" + task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"jamesebond"},"content":"     * Displays a message indicating the addition of an event task.","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"jamesebond"},"content":"     * @param task The event task that was added.","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"jamesebond"},"content":"    public String eventMessage(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"jamesebond"},"content":"        return \"ADDED event FOR YOU!!!!\\n\" + task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"jamesebond"},"content":"     * Displays a message indicating the addition of a deadline task.","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"jamesebond"},"content":"     * @param task The deadline task that was added.","lastModifiedDate":"2023-09-04"},{"lineNumber":138,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":139,"author":{"gitId":"jamesebond"},"content":"    public String deadlineMessage(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":140,"author":{"gitId":"jamesebond"},"content":"        return (\"ADDED deadline FOR YOU!!!!\\n\" + task.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":141,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":142,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":143,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":144,"author":{"gitId":"jamesebond"},"content":"     * Displays search results.","lastModifiedDate":"2023-09-04"},{"lineNumber":145,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":146,"author":{"gitId":"jamesebond"},"content":"     * @param tasks The tasks to search from.","lastModifiedDate":"2023-09-04"},{"lineNumber":147,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":148,"author":{"gitId":"jamesebond"},"content":"    public String showSearchResults(TaskList tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":149,"author":{"gitId":"jamesebond"},"content":"        return \"HERE ARE YOUR MATCHES:\" + listout(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":150,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":151,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":152,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":153,"author":{"gitId":"jamesebond"},"content":"     * Displays a message indicating the addition of a todo task.","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"jamesebond"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":155,"author":{"gitId":"jamesebond"},"content":"     * @param task The todo task that was added.","lastModifiedDate":"2023-09-04"},{"lineNumber":156,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":157,"author":{"gitId":"jamesebond"},"content":"    public String todoMessage(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":158,"author":{"gitId":"jamesebond"},"content":"        return (\"ADDED todo FOR YOU!!!!\\n\" + task.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":159,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":160,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":161,"author":{"gitId":"jamesebond"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":162,"author":{"gitId":"jamesebond"},"content":"     * Displays a message indicating the undo-ing of a task.","lastModifiedDate":"2023-09-15"},{"lineNumber":163,"author":{"gitId":"jamesebond"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":164,"author":{"gitId":"jamesebond"},"content":"    public String undoMessage() {","lastModifiedDate":"2023-09-15"},{"lineNumber":165,"author":{"gitId":"jamesebond"},"content":"        return \"Undid the latest task you edited!!!!!!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":166,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":167,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":167}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"comic\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"            \u003cFont name\u003d\"Comic Sans MS Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamesebond":20}},{"path":"src/main/resources/view/MainWIndow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.control.ButtonBar?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"427.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"561.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"31.0\" prefWidth\u003d\"269.0\" AnchorPane.bottomAnchor\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"290.0\" layoutY\u003d\"561.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"31.0\" prefWidth\u003d\"87.0\" text\u003d\"SEND IT!\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"            \u003cFont name\u003d\"Comic Sans MS Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"9.0\" layoutY\u003d\"67.0\" prefHeight\u003d\"490.0\" prefWidth\u003d\"383.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"BOTTOM_RIGHT\" prefHeight\u003d\"490.0\" prefWidth\u003d\"371.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"                        \u003cButtonBar prefHeight\u003d\"0.0\" prefWidth\u003d\"265.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"         \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"      \u003cImageView fitHeight\u003d\"70.0\" fitWidth\u003d\"76.0\" layoutX\u003d\"14.0\" layoutY\u003d\"-3.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"         \u003cimage\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"            \u003cImage url\u003d\"@../images/shrek.png\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"         \u003c/image\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"      \u003cText layoutX\u003d\"92.0\" layoutY\u003d\"24.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"JAMES BOND LIVING LEGEND\" wrappingWidth\u003d\"253.21630859375\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"            \u003cFont name\u003d\"Comic Sans MS Bold\" size\u003d\"24.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"      \u003c/Text\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jamesebond":41}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import commands.Command;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.OFF: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import commands.IncorrectCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import commands.ListoutCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.ON: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"    void listIncorrectCommandListoutCommand() {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"        Command com \u003d Parser.parseCommand(\"listout \");","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"        assertTrue(com instanceof IncorrectCommand);","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    void list_correctInput_listoutCommand() {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"        Command com \u003d Parser.parseCommand(\"listout\");","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"        assertTrue(com instanceof ListoutCommand);","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":23}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.OFF: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"import java.util.List;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.ON: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"        // Set up a temporary test file","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"        String testFilePath \u003d \"testTasks.txt\";","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jamesebond"},"content":"    public void testSaveTasksToFile() throws IOException {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"        Task task1 \u003d new ToDo(\"Task 1\");","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"jamesebond"},"content":"        taskList.add(task1);","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jamesebond"},"content":"        // Save the tasks to the test file","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jamesebond"},"content":"        storage.updateFile(taskList);","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jamesebond"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(Path.of(\"testTasks.txt\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jamesebond"},"content":"        assertEquals(\"T | 0 | Task 1\", lines.get(0));","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"jamesebond"},"content":"        Files.deleteIfExists(Path.of(\"testTasks.txt\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":42}},{"path":"src/test/java/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"package tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.OFF: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"//CHECKSTYLE.ON: CustomImportOrder","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"    public void toDoString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"        assertEquals(\"[T][]die\", new ToDo(\"die\").toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jamesebond":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"java -classpath ..\\bin duke.JamesBond \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jamesebond":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"java -classpath ../bin JamesBond \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"# convert ACTUAL.TXT to UNIX format using sed","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"sed -i \u0027\u0027 \u0027s/\\r$//\u0027 ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"# convert EXPECTED.TXT to UNIX format using sed","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"sed -i \u0027\u0027 \u0027s/\\r$//\u0027 EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"jamesebond"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jamesebond":7,"-":33}}]
