[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"[E][ ] 2101 team meeting (from: 05-09-2023 18:00 to: 08-09-2023 10:00)","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Go grocery shopping","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"[D][ ] Finish project (by: 17-09-2023 23:59)","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"[D][ ] homework (by: 28-02-2023 18:00)","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"[D][ ] homework (by: 19-02-2024 18:29)","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] more homework","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"freshcabbage123":6}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":" * The main class of the program.","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"     * Name of the bot.","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    private final String NAME \u003d \"Snake CYQJ\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"     * Dynamic array of tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"     * Entry-point for the program. Displays a greeting, echos the user\u0027s input, and exits.","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"     * @param args CLI arguments passed into the program.","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"            Parser.parseCommand(input, duke.taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"        Ui.showGoodbyeMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"    public Duke () {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"        this.ui \u003d new Ui(this.NAME);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"        this.ui.showHelloMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"freshcabbage123":35,"-":5}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":" * duke.exception.DukeException class is a custom duke.exception class that extends Exception.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for duke.exception.DukeException.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"     * @param message The error message.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":15}},{"path":"src/main/java/duke/exception/IllegalTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":" * duke.exception.IllegalTaskIndexException class is a custom duke.exception class that extends DukeException.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":" * It is thrown when the user inputs an invalid duke.task index.","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":" * @author Alan Lim","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"public class IllegalTaskIndexException extends DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for duke.exception.IllegalTaskIndexException.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    public IllegalTaskIndexException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"        super(\"â˜¹ OOPS!!! The duke.task index is invalid.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"freshcabbage123":15}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":" * duke.exception.InvalidArgumentException class is a custom duke.exception class that extends DukeException.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":" * It is thrown when the user inputs an invalid argument for a command.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"public class InvalidArgumentException extends DukeException{","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for duke.exception.InvalidArgumentException.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":14}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":" * duke.exception.UnknownCommandException class is a custom duke.exception class that extends DukeException.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":" * It is thrown when the user inputs an unknown command.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":" * @author Alan Lim","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"public class UnknownCommandException extends DukeException{","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"    * Constructor for duke.exception.UnknownCommandException.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"    */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"        super(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"     * Select command to run.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"    public static void parseCommand(String input, TaskList taskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"                taskList.listTasks();","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"                int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"                taskList.markAsDone(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"                int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"                taskList.markAsUndone(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"                taskList.addTask(input);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"                int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"                taskList.deleteTask(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"            else {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"            Ui.showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"            Ui.showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"freshcabbage123":40}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"    private static final Path DIRECTORY_PATH \u003d Paths.get(\".\", \"data\");","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    private static final Path FILE_PATH \u003d DIRECTORY_PATH.resolve(\"duke.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    public Storage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"     * Loads the data from the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"        Path directoryPath \u003d FILE_PATH.getParent();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"        if (!Files.exists(directoryPath)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"            Files.createDirectories(directoryPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"        // Check if file exists, if not create it","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"        if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"            Files.createFile(FILE_PATH);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"        // Read file and load data","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"        List\u003cString\u003e data;","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"            data \u003d Files.readAllLines(FILE_PATH);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"            System.out.println(\"An error occurred while reading the file: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"            return new ArrayList\u003c\u003e();  // Return an empty duke.task list","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"        for (String line : data) {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"            String[] parts \u003d line.split(\"\\\\]\", 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"                System.out.println(\"Invalid duke.task format found in Hard Disk\");","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"                continue;","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"            char type \u003d parts[0].charAt(parts[0].length()- 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"            char doneStatus \u003d parts[1].charAt(1);","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"            boolean isDone \u003d doneStatus \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"            Task task;","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"            switch (type) {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"                task \u003d new ToDo(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"                if (isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"                String[] components \u003d description.split(\" \\\\(by: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"                String deadlineDescription \u003d components[0].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"                String deadlineDateTime \u003d components[1].substring(0, components[1].length() - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"                task \u003d new Deadline(deadlineDescription, LocalDateTime.parse(deadlineDateTime, format));","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"                if (isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"                String[] eventParts \u003d description.split(\" \\\\(from: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"                String eventDescription \u003d eventParts[0].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"                String[] eventDateTimes \u003d eventParts[1].split(\" to: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"freshcabbage123"},"content":"                String eventStartDateTime \u003d eventDateTimes[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"freshcabbage123"},"content":"                String eventEndDateTime \u003d eventDateTimes[1].substring(0, eventDateTimes[1].length() - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"freshcabbage123"},"content":"                task \u003d new Event(eventDescription,","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"                        LocalDateTime.parse(eventStartDateTime, format),","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"                        LocalDateTime.parse(eventEndDateTime, format));","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"freshcabbage123"},"content":"                if (isDone) task.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"freshcabbage123"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"freshcabbage123"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"freshcabbage123"},"content":"        return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"freshcabbage123"},"content":"     * Saves the data to the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"freshcabbage123"},"content":"     * @param tasks The tasks to save.","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"freshcabbage123"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"freshcabbage123"},"content":"        Path directoryPath \u003d FILE_PATH.getParent();","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"freshcabbage123"},"content":"        if (!Files.exists(directoryPath)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"freshcabbage123"},"content":"            Files.createDirectories(directoryPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"freshcabbage123"},"content":"        // Check if file exists, if not create it","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"freshcabbage123"},"content":"        if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"freshcabbage123"},"content":"            Files.createFile(FILE_PATH);","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"freshcabbage123"},"content":"        // Write data to file","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"freshcabbage123"},"content":"        List\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"freshcabbage123"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"freshcabbage123"},"content":"            data.add(task.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"freshcabbage123"},"content":"        Files.write(FILE_PATH, data);","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"freshcabbage123":114}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"     * The date of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"     * Creates a deadline with the given description and date.","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"     * @param dateTime The date and time of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"    public Deadline (String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"        super.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"        String newDateTime \u003d dateTime.format(super.formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + newDateTime + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"     * The date of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"     * Creates an event with the given description and date.","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"     * @param startDateTime The startDateTime of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"     * @param endDateTime The endDateTime of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"    public Event (String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"        super.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"        String newStartDateTime \u003d startDateTime.format(super.formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"        String newEndDateTime \u003d endDateTime.format(super.formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + newStartDateTime + \" to: \" + newEndDateTime + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":" * Represents a duke.task in the duke.task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"     * The description of the duke.task.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"     * Whether the duke.task is done.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"    protected DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the status icon of the duke.task.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"     * @return The status icon of the duke.task.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"     * Marks the duke.task as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"     * Marks the duke.task as undone.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the description of the duke.task.","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"     * @return The description of the duke.task.","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":53}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.IllegalTaskIndexException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"public class TaskList {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"        TODO {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"            @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"            public Task createTask(String details) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"                return new ToDo(details);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"        },","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"        DEADLINE {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"            @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"            public Task createTask(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"                String[] split \u003d details.split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"                if (split.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"                    throw new InvalidArgumentException(\"â˜¹ OOPS!!! The deadline format is incorrect. \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"                            \"It should be: deadline \u003cname\u003e /by \u003cdate\u003e \u003ctime\u003e\");","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"                String taskName \u003d split[0], dateTime \u003d split[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"                return new Deadline(taskName, parseDateTime(dateTime));","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"        },","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"        EVENT {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"            @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"            public Task createTask(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"                String[] firstSplit \u003d details.split(\" /from \");","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"                String[] secondSplit \u003d firstSplit[firstSplit.length - 1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"                if (firstSplit.length !\u003d 2 || secondSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"                    throw new InvalidArgumentException(\"â˜¹ OOPS!!! The event format is incorrect. \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"                            \"It should be: event \u003cname\u003e /from \u003cdate\u003e \u003ctime\u003e /to \u003cdate\u003e \u003ctime\u003e\");","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"                String taskName \u003d firstSplit[0], startDateTime \u003d secondSplit[0], endDateTime \u003d secondSplit[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"                return new Event(taskName, parseDateTime(startDateTime), parseDateTime(endDateTime));","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"        };","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"         * Creates a deadline duke.task.","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"         * @param details The details of the deadline duke.task.","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"         * @return The deadline duke.task.","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"         * @throws InvalidArgumentException If the deadline task\u0027s format is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"        public abstract Task createTask(String details) throws InvalidArgumentException;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"        private static final DateTimeFormatter[] DATE_TIME_FORMATS \u003d {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"                DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"        };","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"        private static LocalDateTime parseDateTime(String dateTime) throws InvalidArgumentException {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"            for (DateTimeFormatter format: DATE_TIME_FORMATS) {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"                try {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"                    return LocalDateTime.parse(dateTime, format);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"                    // Do nothing","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"            throw new InvalidArgumentException(\"â˜¹ OOPS!!! Your dateTime format is not supported!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"freshcabbage123"},"content":"//        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"freshcabbage123"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"freshcabbage123"},"content":"            this.tasks \u003d storage.load();","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"freshcabbage123"},"content":"            Ui.showErrorLoadingFromFileMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"freshcabbage123"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"freshcabbage123"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"freshcabbage123"},"content":"     * @param command The command that the user inputted.","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"freshcabbage123"},"content":"     * @throws InvalidArgumentException If the task\u0027s format is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"freshcabbage123"},"content":"    public void addTask(String command) throws InvalidArgumentException {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"freshcabbage123"},"content":"        String[] splitCommand \u003d command.split(\"\\\\s\", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"freshcabbage123"},"content":"        if (splitCommand.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"freshcabbage123"},"content":"            throw new InvalidArgumentException(\"â˜¹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"freshcabbage123"},"content":"        String type \u003d splitCommand[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"freshcabbage123"},"content":"        String taskDetails \u003d splitCommand[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"freshcabbage123"},"content":"        TaskType taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"freshcabbage123"},"content":"            taskType \u003d TaskType.valueOf(type.toUpperCase());","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"freshcabbage123"},"content":"            throw new InvalidArgumentException(\"Bro your task type is unknown: \" + type);","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"freshcabbage123"},"content":"        tasks.add(taskType.createTask(taskDetails));","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"freshcabbage123"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"freshcabbage123"},"content":"            Ui.showErrorSavingToFileMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"freshcabbage123"},"content":"        Ui.showAddTaskMessage(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"freshcabbage123"},"content":"     * Lists all the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"freshcabbage123"},"content":"    public void listTasks() {","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"freshcabbage123"},"content":"        Ui.showListTasksMessage(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"freshcabbage123"},"content":"     * Marks a duke.task as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"freshcabbage123"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IllegalTaskIndexException If the index is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"freshcabbage123"},"content":"    public void markAsDone(int index) throws IllegalTaskIndexException {","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"freshcabbage123"},"content":"        if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"freshcabbage123"},"content":"            throw new IllegalTaskIndexException();","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"freshcabbage123"},"content":"        Ui.showMarkAsDoneMessage(tasks, index);","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"freshcabbage123"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"freshcabbage123"},"content":"            Ui.showErrorSavingToFileMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"freshcabbage123"},"content":"     * Marks a duke.task as undone.","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"freshcabbage123"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IllegalTaskIndexException If the index is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"freshcabbage123"},"content":"    public void markAsUndone(int index) throws IllegalTaskIndexException {","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"freshcabbage123"},"content":"        if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"freshcabbage123"},"content":"            throw new IllegalTaskIndexException();","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"freshcabbage123"},"content":"        Ui.showMarkAsUndoneMessage(tasks, index);","lastModifiedDate":"2023-08-28"},{"lineNumber":158,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"freshcabbage123"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"freshcabbage123"},"content":"            Ui.showErrorSavingToFileMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"freshcabbage123"},"content":"     * Delete a task from the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"freshcabbage123"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IllegalTaskIndexException If the index is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"freshcabbage123"},"content":"    public void deleteTask(int index) throws IllegalTaskIndexException {","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"freshcabbage123"},"content":"        if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"freshcabbage123"},"content":"            throw new IllegalTaskIndexException();","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"freshcabbage123"},"content":"        // Calls delete message from duke.ui.Ui class","lastModifiedDate":"2023-08-28"},{"lineNumber":175,"author":{"gitId":"freshcabbage123"},"content":"        Ui.showDeleteTaskMessage(tasks, index);","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"freshcabbage123"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"freshcabbage123"},"content":"            Ui.showErrorSavingToFileMessage();","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":181,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"freshcabbage123":183}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"    * Creates a todo with the given description.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"    * @param description The description of the todo.","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"    */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"    public ToDo (String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"        super.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"    * Returns the string representation of the todo.","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    * @return The string representation of the todo.","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"    */","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":20}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    String name;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"    public Ui (String name) {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    public void showHelloMessage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"Hello! I\u0027m Snake CYQJ\");","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    public static void showDottedLine() {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"    public static void showGoodbyeMessage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"        Ui.showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"        Ui.showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"    public static void showDeleteTaskMessage(List\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"Noted. I\u0027ve removed this duke.task:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(tasks.get(index - 1));","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"        String placeholder \u003d tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" \" + placeholder + \" in the list.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"    public static void showAddTaskMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"        String placeholder \u003d tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" \" + placeholder + \" in the list.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"    public static void showListTasksMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"            System.out.println(\"There are no tasks in your list.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"    public static void showMarkAsDoneMessage(List\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"        tasks.get(index - 1).markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(tasks.get(index - 1));","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"    public static void showMarkAsUndoneMessage(List\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"        tasks.get(index - 1).markAsUndone();","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(tasks.get(index - 1));","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"        showDottedLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"    public static void showErrorSavingToFileMessage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"Error saving data to file.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"freshcabbage123"},"content":"    public static void showErrorLoadingFromFileMessage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"freshcabbage123"},"content":"        System.out.println(\"Error loading data from file.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"freshcabbage123":87}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"[E][ ] 2101 team meeting (from: 05-09-2023 18:00 to: 08-09-2023 10:00)","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Go grocery shopping","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"[D][X] Finish project (by: 17-09-2023 23:59)","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"[D][ ] homework (by: 28-02-2023 18:00)","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"[D][X] homework (by: 19-02-2024 18:29)","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] read boook","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"[T][X] Read book","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Go grocery shopping","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"[D][ ] Finish project (by: 17-09-2023 23:59)","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Walk the dog","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"freshcabbage123":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"todo Read book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"deadline submit 2103T lab /by 30-08-2023 2356","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"event 2101 team meeting /from 05-09-2023 /to Tuesday 10pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"todo Go grocery shopping","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"event Running /from 2023-Sep-10 /to 15:00 tomorrow","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"deadline Finish project /by 17-09-2023 23:59","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"todo Walk the dog","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"mark 5","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"unmark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"unmark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"event watch netflix again /from 19-4-2023 /to Tuesday 19:00","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"deadline modreg round 9 /by Wedenesday 2023-09-25","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"mark 7","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"unmark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"unmark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"event Dinner with the family /from 17-09-2024 /to 20:00 tomorrow","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":27}}]
