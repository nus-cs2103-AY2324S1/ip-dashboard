[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"checkstyle {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"freshcabbage123":20}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"# User Guide for Snake CYQJ","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"Welcome to Snake CYQJ, your personal task manager! This guide will help you get started with Snake CYQJ.","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"## Contents","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"- [Contents](#contents)","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"- [Usage](#usage)","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"    - [1. Add Tasks](#1-add-tasks)","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"        - [1.1. Add Todo task - `todo`](#11-add-todo-task---todo)","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"        - [1.2. Add Deadline task - `deadline`](#12-add-deadline-task---deadline)","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"        - [1.3. Add Event task - `event`](#13-add-event-task---event)","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"    - [2. List Tasks - `list`](#2-list-tasks---list)","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"    - [3. Mark/Unmark Tasks as Done](#3-markunmark-tasks-as-done)","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"        - [3.1. Mark Task as Done - `mark`](#31-mark-task-as-done---mark)","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"        - [3.2. Unmark Task as Done - `unmark`](#32-unmark-task-as-done---unmark)","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    - [4. Delete Tasks - `delete`](#4-delete-tasks---delete)","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"    - [5. Find Tasks - `find`](#5-find-tasks---find)","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    - [6. Sort Tasks](#6-sort-tasks)","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"        - [6.1. Sort by Chronological Order - `sort`](#61-sort-by-chronological-order---sort)","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"        - [6.2. Sort by Task Type - `sort by type`](#62-sort-by-task-type--sort-by-type)","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    - [7. Exit - `bye`](#7-exit---bye)","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"## Quick Start","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"1. Download Java 11 from [here](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html).","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"2. Download the latest jar file from the [Releases tab](https://github.com/freshcabbage123/ip/releases).","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"3. Run with `java -jar Duke.jar` from your terminal.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"## Features","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"1. Task Management","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"    1. Create, read, update and delete various types of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"    2. Mark and unmark tasks as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"    3. Find tasks that contain a keyword in their description.","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"2. Data Persistence","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"    1. Tasks are saved to a file locally.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"        1. On the first run, the save file is created automatically.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"    2. On subsequent runs, the save file is loaded automatically.","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"    3. Tasks are saved to the local file whenever the task list is modified.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"### 1. Add Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"Snake CYQJ can help you keep track of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"There are 3 different types of tasks that you can add:","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"- Todo, a task with no deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"- Deadline, a task with a deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"- Event, a task with a start and end time","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"#### 1.1. Add Todo task - `todo`","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"This command adds a Todo task to your list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"- `\u003cdescription\u003e` is the description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"    - The description cannot be empty.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"todo feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"freshcabbage123"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"freshcabbage123"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"freshcabbage123"},"content":"#### 1.2. Add Deadline task - `deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"freshcabbage123"},"content":"This command adds a Deadline task to your list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"freshcabbage123"},"content":"deadline \u003cdescription\u003e /by \u003cdeadline\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"freshcabbage123"},"content":"- `\u003cdescription\u003e` is the description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"freshcabbage123"},"content":"    - The description cannot be empty.","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"freshcabbage123"},"content":"- `\u003cdeadline\u003e` is the deadline of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"freshcabbage123"},"content":"    - It must be in the format `dd-MM-yyy HH:mm`.","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"freshcabbage123"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"freshcabbage123"},"content":"deadline feed snake /by 29-10-2024 00:00","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"freshcabbage123"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"freshcabbage123"},"content":"[D][ ] feed snake (by: 29-10-2024 00:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"freshcabbage123"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"freshcabbage123"},"content":"#### 1.3. Add Event task - `event`","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"freshcabbage123"},"content":"This command adds an Event task to your list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"freshcabbage123"},"content":"event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"freshcabbage123"},"content":"- `\u003cdescription\u003e` is the description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"freshcabbage123"},"content":"    - The description cannot be empty.","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"freshcabbage123"},"content":"- `\u003cstart time\u003e` is the start time of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"freshcabbage123"},"content":"    - It must be in the format `dd-MM-yyy HH:mm`.","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"freshcabbage123"},"content":"- `\u003cend time\u003e` is the end time of the task","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"freshcabbage123"},"content":"    - It must be in the format `dd-MM-yyy HH:mm`.","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"freshcabbage123"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"freshcabbage123"},"content":"event snake gathering /from 02-01-2024 10:00 /to 03-01-2024 11:00","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"freshcabbage123"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"freshcabbage123"},"content":"[E][ ] snake gathering (from: 02-01-2024 10:00 to: 03-01-2024 11:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"freshcabbage123"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"freshcabbage123"},"content":"### 2. List Tasks - `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"freshcabbage123"},"content":"Snake CYQJ can show you the tasks currently present in your task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"freshcabbage123"},"content":"Note: This command takes in no parameters.","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"freshcabbage123"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"freshcabbage123"},"content":"1.[T][ ] feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"freshcabbage123"},"content":"### 3. Mark/Unmark Tasks as Done","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"freshcabbage123"},"content":"#### 3.1. Mark Task as Done - `mark`","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"freshcabbage123"},"content":"Once you have completed a task, you can tell Snake CYQJ to mark it as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"freshcabbage123"},"content":"mark \u003ctask number\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"freshcabbage123"},"content":"- `\u003ctask number\u003e` is the number of the task in the list, as shown by the `list` command.","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"freshcabbage123"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"freshcabbage123"},"content":"Suppose the task list as shown by the `list` command is as follows:","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"freshcabbage123"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"freshcabbage123"},"content":"1.[T][ ] feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"freshcabbage123"},"content":"Using the `mark` command:","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"freshcabbage123"},"content":"mark 1","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"freshcabbage123"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"freshcabbage123"},"content":"[T][X] feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"freshcabbage123"},"content":"#### 3.2. Unmark Task as Done - `unmark`","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"freshcabbage123"},"content":"If you have marked a task as done by mistake, you can tell Snake CYQJ to unmark it.","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"freshcabbage123"},"content":"unmark \u003ctask number\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"freshcabbage123"},"content":"- `\u003ctask number\u003e` is the number of the task in the list, as shown by the `list` command.","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"freshcabbage123"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"freshcabbage123"},"content":"Suppose the task list as shown by the `list` command is as follows:","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":216,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":217,"author":{"gitId":"freshcabbage123"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":218,"author":{"gitId":"freshcabbage123"},"content":"1.[T][X] feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":219,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":220,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":221,"author":{"gitId":"freshcabbage123"},"content":"Using the `unmark` command:","lastModifiedDate":"2023-09-20"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":223,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":224,"author":{"gitId":"freshcabbage123"},"content":"unmark 1","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":229,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":230,"author":{"gitId":"freshcabbage123"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":232,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":234,"author":{"gitId":"freshcabbage123"},"content":"### 4. Delete Tasks - `delete`","lastModifiedDate":"2023-09-20"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":236,"author":{"gitId":"freshcabbage123"},"content":"Snake CYQJ can help you delete tasks from your task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":238,"author":{"gitId":"freshcabbage123"},"content":"⚠️ Caution: Once a task is deleted, it cannot be recovered.","lastModifiedDate":"2023-09-20"},{"lineNumber":239,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":240,"author":{"gitId":"freshcabbage123"},"content":"⚠️ Caution: Deleting a task will shift the task numbers of the tasks after it forward by 1.","lastModifiedDate":"2023-09-20"},{"lineNumber":241,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":242,"author":{"gitId":"freshcabbage123"},"content":"- If you delete task 2, task 1 will remain as task 1, but task 3 will become task 2, task 4 will become task 3, and so on.","lastModifiedDate":"2023-09-20"},{"lineNumber":243,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":244,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":245,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":246,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":247,"author":{"gitId":"freshcabbage123"},"content":"delete \u003ctask number\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":248,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":249,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":250,"author":{"gitId":"freshcabbage123"},"content":"- `\u003ctask number\u003e` is the number of the task in the list, as shown by the `list` command.","lastModifiedDate":"2023-09-20"},{"lineNumber":251,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":252,"author":{"gitId":"freshcabbage123"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":253,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":254,"author":{"gitId":"freshcabbage123"},"content":"Suppose the task list as shown by the `list` command is as follows:","lastModifiedDate":"2023-09-20"},{"lineNumber":255,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":256,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":257,"author":{"gitId":"freshcabbage123"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":258,"author":{"gitId":"freshcabbage123"},"content":"1.[T][ ] feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":259,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":260,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":261,"author":{"gitId":"freshcabbage123"},"content":"Using the `delete` command:","lastModifiedDate":"2023-09-20"},{"lineNumber":262,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":263,"author":{"gitId":"freshcabbage123"},"content":"delete 1","lastModifiedDate":"2023-09-20"},{"lineNumber":264,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":265,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":266,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":267,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":268,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":269,"author":{"gitId":"freshcabbage123"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":270,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":271,"author":{"gitId":"freshcabbage123"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":272,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":273,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":274,"author":{"gitId":"freshcabbage123"},"content":"### 5. Find Tasks - `find`","lastModifiedDate":"2023-09-20"},{"lineNumber":275,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":276,"author":{"gitId":"freshcabbage123"},"content":"Snake CYQJ can help you find tasks in your task list that has a certain keyword in its description.","lastModifiedDate":"2023-09-20"},{"lineNumber":277,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":278,"author":{"gitId":"freshcabbage123"},"content":"Note: The numbering of tasks in the search result will be the same as the numbering of tasks as shown in the `list` command.","lastModifiedDate":"2023-09-20"},{"lineNumber":279,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":280,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":281,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":282,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":283,"author":{"gitId":"freshcabbage123"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":284,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":286,"author":{"gitId":"freshcabbage123"},"content":"- `\u003ckeyword\u003e` is the keyword to search for in the task description.","lastModifiedDate":"2023-09-20"},{"lineNumber":287,"author":{"gitId":"freshcabbage123"},"content":"    - The keyword cannot be empty.","lastModifiedDate":"2023-09-20"},{"lineNumber":288,"author":{"gitId":"freshcabbage123"},"content":"    - The keyword is case-sensitive.","lastModifiedDate":"2023-09-20"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":290,"author":{"gitId":"freshcabbage123"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":292,"author":{"gitId":"freshcabbage123"},"content":"Suppose the task list as shown by the `list` command is as follows:","lastModifiedDate":"2023-09-20"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":294,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":295,"author":{"gitId":"freshcabbage123"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":296,"author":{"gitId":"freshcabbage123"},"content":"1.[T][ ] feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":297,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":298,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":299,"author":{"gitId":"freshcabbage123"},"content":"Using the `find` command:","lastModifiedDate":"2023-09-20"},{"lineNumber":300,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":301,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":302,"author":{"gitId":"freshcabbage123"},"content":"find book","lastModifiedDate":"2023-09-20"},{"lineNumber":303,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":305,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":307,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":308,"author":{"gitId":"freshcabbage123"},"content":"Here is the 1 matching task in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":309,"author":{"gitId":"freshcabbage123"},"content":"1.[T][ ] feed snake","lastModifiedDate":"2023-09-20"},{"lineNumber":310,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":311,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":312,"author":{"gitId":"freshcabbage123"},"content":"### 6. Sort Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":313,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":314,"author":{"gitId":"freshcabbage123"},"content":"#### 6.1. Sort by Chronological Order - `sort`","lastModifiedDate":"2023-09-20"},{"lineNumber":315,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":316,"author":{"gitId":"freshcabbage123"},"content":"Snake CYQJ can show you the tasks currently present in your task list in sorted chronological order.","lastModifiedDate":"2023-09-20"},{"lineNumber":317,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":318,"author":{"gitId":"freshcabbage123"},"content":"Note: This command takes in no parameters.","lastModifiedDate":"2023-09-20"},{"lineNumber":319,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":320,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":321,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":322,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":323,"author":{"gitId":"freshcabbage123"},"content":"sort","lastModifiedDate":"2023-09-20"},{"lineNumber":324,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":325,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":326,"author":{"gitId":"freshcabbage123"},"content":"Suppose the task list as shown by the `sort` command is as follows:","lastModifiedDate":"2023-09-20"},{"lineNumber":327,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":328,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":329,"author":{"gitId":"freshcabbage123"},"content":"1.[D][ ] assignment (by: 09-03-2024 18:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":330,"author":{"gitId":"freshcabbage123"},"content":"2.[D][ ] oa (by: 08-03-2024 17:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":331,"author":{"gitId":"freshcabbage123"},"content":"3.[D][ ] submission (by: 01-04-2024 16:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":332,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":333,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":334,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":335,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":336,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":337,"author":{"gitId":"freshcabbage123"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":338,"author":{"gitId":"freshcabbage123"},"content":"1.[D][ ] oa (by: 08-03-2024 17:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":339,"author":{"gitId":"freshcabbage123"},"content":"2.[D][ ] assignment (by: 09-03-2024 18:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":340,"author":{"gitId":"freshcabbage123"},"content":"3.[D][ ] submission (by: 01-04-2024 16:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":341,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":342,"author":{"gitId":"freshcabbage123"},"content":"#### 6.2. Sort by Task Type- `sort by type`","lastModifiedDate":"2023-09-20"},{"lineNumber":343,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":344,"author":{"gitId":"freshcabbage123"},"content":"Snake CYQJ can show you the tasks currently present in your task list in sorted chronological order based on task type.","lastModifiedDate":"2023-09-20"},{"lineNumber":345,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":346,"author":{"gitId":"freshcabbage123"},"content":"Note: This command takes in no parameters.","lastModifiedDate":"2023-09-20"},{"lineNumber":347,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":348,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":349,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":350,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":351,"author":{"gitId":"freshcabbage123"},"content":"sort by type","lastModifiedDate":"2023-09-20"},{"lineNumber":352,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":353,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":354,"author":{"gitId":"freshcabbage123"},"content":"Suppose the task list as shown by the `list` command is as follows:","lastModifiedDate":"2023-09-20"},{"lineNumber":355,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":356,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":357,"author":{"gitId":"freshcabbage123"},"content":"1.[D][ ] assignment (by: 09-03-2024 18:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":358,"author":{"gitId":"freshcabbage123"},"content":"2.[D][ ] oa (by: 08-03-2024 17:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":359,"author":{"gitId":"freshcabbage123"},"content":"3.[D][ ] submission (by: 01-04-2024 16:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":360,"author":{"gitId":"freshcabbage123"},"content":"4.[T][ ] collect laundry","lastModifiedDate":"2023-09-20"},{"lineNumber":361,"author":{"gitId":"freshcabbage123"},"content":"5.[E][ ] wedding dinner (from: 08-09-2024 18:00 to: 08-09-2024 20:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":362,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":363,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":364,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":365,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":366,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":367,"author":{"gitId":"freshcabbage123"},"content":"1.[T][ ] collect laundry","lastModifiedDate":"2023-09-20"},{"lineNumber":368,"author":{"gitId":"freshcabbage123"},"content":"2.[D][ ] oa (by: 08-03-2024 17:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":369,"author":{"gitId":"freshcabbage123"},"content":"3.[D][ ] assignment (by: 09-03-2024 18:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":370,"author":{"gitId":"freshcabbage123"},"content":"4.[D][ ] submission (by: 01-04-2024 16:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":371,"author":{"gitId":"freshcabbage123"},"content":"5.[E][ ] wedding dinner (from: 08-09-2024 18:00 to: 08-09-2024 20:00)","lastModifiedDate":"2023-09-20"},{"lineNumber":372,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":373,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":374,"author":{"gitId":"freshcabbage123"},"content":"### 7. Exit - `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":375,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":376,"author":{"gitId":"freshcabbage123"},"content":"Ends the chat with Snake CYQJ.","lastModifiedDate":"2023-09-20"},{"lineNumber":377,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":378,"author":{"gitId":"freshcabbage123"},"content":"Note: This command takes in no parameters.","lastModifiedDate":"2023-09-20"},{"lineNumber":379,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":380,"author":{"gitId":"freshcabbage123"},"content":"Format:","lastModifiedDate":"2023-09-20"},{"lineNumber":381,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":382,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":383,"author":{"gitId":"freshcabbage123"},"content":"bye","lastModifiedDate":"2023-09-20"},{"lineNumber":384,"author":{"gitId":"freshcabbage123"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":385,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":386,"author":{"gitId":"freshcabbage123"},"content":"Expected Output:","lastModifiedDate":"2023-09-20"},{"lineNumber":387,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":388,"author":{"gitId":"freshcabbage123"},"content":"Snake CYQJ will bid you farewell and app will exit after 1 second.","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"freshcabbage123":360,"-":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import duke.ui.Gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":" * The main class of the program.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"public class Duke {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    private static final String BOT_NAME \u003d \"Snake CYQJ\";","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"    private final TaskList taskList \u003d new TaskList(\"duke.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    public Duke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"        this.ui \u003d new Ui(BOT_NAME);","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the hello message.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"     * @return the hello message","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"    public String greet() {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"        return this.ui.getHelloMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the goodbye message.","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"    public String goodbye() {","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"        return Ui.getGoodbyeMessage();","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the bot\u0027s response to the GUI.","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"     * @return the bot\u0027s response","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"        return Parser.parseCommand(input, this.taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"freshcabbage123":53}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":" * duke.exception.DukeException class is a custom duke.exception class that extends Exception.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for duke.exception.DukeException.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"     * @param message The error message.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":15}},{"path":"src/main/java/duke/exception/IllegalTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":" * duke.exception.IllegalTaskIndexException class is a custom exception class that extends DukeException.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":" * It is thrown when the user inputs an invalid task index.","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":" * @author Alan Lim","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"public class IllegalTaskIndexException extends DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for IllegalTaskIndexException.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    public IllegalTaskIndexException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"        super(\"☹ OOPS!!! The duke.task index is invalid.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"freshcabbage123":15}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":" * duke.exception.InvalidArgumentException class is a custom exception class that extends DukeException.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":" * It is thrown when the user inputs an invalid argument for a command.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for duke.exception.InvalidArgumentException.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":14}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":" * duke.exception.UnknownCommandException class is a custom duke.exception class that extends DukeException.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":" * It is thrown when the user inputs an unknown command.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":" * @author Alan Lim","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"    * Constructor for duke.exception.UnknownCommandException.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"    */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.IllegalTaskIndexException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":" * Parser class to parse user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"     * Selects a command to run.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"     * @param rawInput The user\u0027s input.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"     * @return The output of the command.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"    public static String parseCommand(String rawInput, TaskList taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"        String input \u003d rawInput.toLowerCase().trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"                output.append(taskList.listTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.equals(\"sort\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"                output.append(taskList.listSortedTasks());","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"sort by type\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"                output.append(taskList.listSortedTasksByType());","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"                output.append(handleMark(input, taskList));","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"                output.append(handleUnmark(input, taskList));","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"                output.append(taskList.addTask(input));","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"                output.append(handleDelete(input, taskList));","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"                output.append(handleFind(input, taskList));","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"            } else if (input.startsWith(\"bye\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"                output.append(\"Goodbye\");","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"            output.append(handleDukeException(e));","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"    private static int extractIndexFromCommand(String input, String command) throws InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"        String rest \u003d input.substring(command.length()).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"            throw new InvalidArgumentException(\"The \u0027\" + command + \"\u0027 command must be followed by a task index.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"        return Integer.parseInt(rest);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"     * @return The mark as done message.","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"     * @throws InvalidArgumentException If the task\u0027s format is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IllegalTaskIndexException If the index is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"    private static String handleMark(String input, TaskList taskList)","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"            throws InvalidArgumentException, IllegalTaskIndexException {","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"        int index \u003d extractIndexFromCommand(input, \"mark\");","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"        return taskList.markAsDone(index);","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"     * @return The mark as undone message.","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"     * @throws InvalidArgumentException If the task\u0027s format is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IllegalTaskIndexException If the index is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"freshcabbage123"},"content":"    private static String handleUnmark(String input, TaskList taskList)","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"freshcabbage123"},"content":"            throws InvalidArgumentException, IllegalTaskIndexException {","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"freshcabbage123"},"content":"        int index \u003d extractIndexFromCommand(input, \"unmark\");","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"        return taskList.markAsUndone(index);","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"freshcabbage123"},"content":"     * Deletes a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"freshcabbage123"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"freshcabbage123"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"freshcabbage123"},"content":"     * @return The delete message.","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"freshcabbage123"},"content":"     * @throws InvalidArgumentException If the task\u0027s format is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IllegalTaskIndexException If the index is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"freshcabbage123"},"content":"    private static String handleDelete(String input, TaskList taskList)","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"freshcabbage123"},"content":"            throws InvalidArgumentException, IllegalTaskIndexException {","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"freshcabbage123"},"content":"        int index \u003d extractIndexFromCommand(input, \"delete\");","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"freshcabbage123"},"content":"        return taskList.deleteTask(index);","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"freshcabbage123"},"content":"     * Finds tasks with a keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"freshcabbage123"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"freshcabbage123"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"freshcabbage123"},"content":"     * @return The find message.","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"freshcabbage123"},"content":"     * @throws InvalidArgumentException If the task\u0027s format is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"freshcabbage123"},"content":"    private static String handleFind(String input, TaskList taskList) throws InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"freshcabbage123"},"content":"        String keyword \u003d extractArgFromCommand(input, \"find\");","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"freshcabbage123"},"content":"        return taskList.findTasks(keyword);","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"freshcabbage123"},"content":"     * Extracts the argument from a command.","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"freshcabbage123"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"freshcabbage123"},"content":"     * @param command The command.","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"freshcabbage123"},"content":"     * @return The argument.","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"freshcabbage123"},"content":"     * @throws InvalidArgumentException If the argument is missing.","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"freshcabbage123"},"content":"    private static String extractArgFromCommand(String input, String command)","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"freshcabbage123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"freshcabbage123"},"content":"        String rest \u003d input.substring(command.length()).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"freshcabbage123"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"freshcabbage123"},"content":"            throw new InvalidArgumentException(\"The \u0027\" + command + \"\u0027 command must be followed by a keyword.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"freshcabbage123"},"content":"        return rest;","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"freshcabbage123"},"content":"     * Handles a DukeException.","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"freshcabbage123"},"content":"     * @param e The DukeException.","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"freshcabbage123"},"content":"     * @return The error message.","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"freshcabbage123"},"content":"    private static String handleDukeException(DukeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"freshcabbage123"},"content":"        return e.getMessage();","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"freshcabbage123":137}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":" * Storage class to load and save data.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    private static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"    private final Path filePath;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"     * @param filename The name of the file to load and save data.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"    public Storage(String filename) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"        this.filePath \u003d Paths.get(\".\", \"data\", filename);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"     * Loads the data from the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"     * @return The tasks loaded from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"        ensureDirectoryAndFileExist();","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"        List\u003cString\u003e data \u003d readDataFromFile();","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"        for (String line : data) {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"            Task task \u003d parseTaskFromLine(line);","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"        return tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"     * Saves the data to the file.","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"     * @param tasks The tasks to save.","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"        ensureDirectoryAndFileExist();","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"        // Write data to file","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"        List\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"            data.add(task.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"        Files.write(filePath, data);","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"     * Ensures that the directory and file exist.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"     * If not, create them.","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"    private void ensureDirectoryAndFileExist() throws IOException {","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"        Path directoryPath \u003d filePath.getParent();","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"        if (!Files.exists(directoryPath)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"            Files.createDirectories(directoryPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"freshcabbage123"},"content":"     * Parses the task from the line.","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"freshcabbage123"},"content":"     * @param line The line to parse.","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"freshcabbage123"},"content":"     * @return The task parsed from the line.","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"    private Task parseTaskFromLine(String line) {","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"freshcabbage123"},"content":"        String[] parts \u003d line.split(\"\\\\]\", 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"freshcabbage123"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"freshcabbage123"},"content":"            System.out.println(\"Invalid duke.task format found in Hard Disk\");","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"freshcabbage123"},"content":"            return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"freshcabbage123"},"content":"        char type \u003d parts[0].charAt(parts[0].length() - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"freshcabbage123"},"content":"        boolean isDone \u003d parts[1].charAt(1) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"freshcabbage123"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"freshcabbage123"},"content":"        switch (type) {","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"freshcabbage123"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"freshcabbage123"},"content":"            return createToDoTask(isDone, description);","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"freshcabbage123"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"freshcabbage123"},"content":"            return createDeadlineTask(isDone, description);","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"freshcabbage123"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"freshcabbage123"},"content":"            return createEventTask(isDone, description);","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"freshcabbage123"},"content":"        default:","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"freshcabbage123"},"content":"            System.out.println(\"Invalid duke.task type found in Hard Disk\");","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"freshcabbage123"},"content":"            return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"freshcabbage123"},"content":"     * Creates a todo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"freshcabbage123"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"freshcabbage123"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"freshcabbage123"},"content":"     * @return The todo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"freshcabbage123"},"content":"    private Task createToDoTask(boolean isDone, String description) {","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"freshcabbage123"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"freshcabbage123"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"freshcabbage123"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"freshcabbage123"},"content":"        return task;","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"freshcabbage123"},"content":"     * Creates a deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"freshcabbage123"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"freshcabbage123"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"freshcabbage123"},"content":"     * @return The deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"freshcabbage123"},"content":"    private Task createDeadlineTask(boolean isDone, String description) {","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"freshcabbage123"},"content":"        String[] components \u003d description.split(\" \\\\(by: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"freshcabbage123"},"content":"        String deadlineDescription \u003d components[0].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"freshcabbage123"},"content":"        String deadlineDateTime \u003d components[1].substring(0, components[1].length() - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"freshcabbage123"},"content":"        Task task \u003d new Deadline(deadlineDescription, LocalDateTime.parse(deadlineDateTime, FORMAT));","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"freshcabbage123"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"freshcabbage123"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"freshcabbage123"},"content":"        return task;","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"freshcabbage123"},"content":"     * Creates an event task.","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"freshcabbage123"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"freshcabbage123"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"freshcabbage123"},"content":"     * @return The event task.","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"freshcabbage123"},"content":"    private Task createEventTask(boolean isDone, String description) {","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"freshcabbage123"},"content":"        String[] eventParts \u003d description.split(\" \\\\(from: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"freshcabbage123"},"content":"        String eventDescription \u003d eventParts[0].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"freshcabbage123"},"content":"        String[] eventDateTimes \u003d eventParts[1].split(\" to: \");","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"freshcabbage123"},"content":"        String eventStartDateTime \u003d eventDateTimes[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"freshcabbage123"},"content":"        String eventEndDateTime \u003d eventDateTimes[1].substring(0, eventDateTimes[1].length() - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"freshcabbage123"},"content":"        Task task \u003d new Event(eventDescription,","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"freshcabbage123"},"content":"                LocalDateTime.parse(eventStartDateTime, FORMAT),","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"freshcabbage123"},"content":"                LocalDateTime.parse(eventEndDateTime, FORMAT));","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"freshcabbage123"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"freshcabbage123"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"freshcabbage123"},"content":"        return task;","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"freshcabbage123"},"content":"     * Reads the data from the file.","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"freshcabbage123"},"content":"     * @return The data read from the file.","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"freshcabbage123"},"content":"    private List\u003cString\u003e readDataFromFile() {","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"freshcabbage123"},"content":"            return Files.readAllLines(filePath);","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"freshcabbage123"},"content":"            System.out.println(\"An error occurred while reading the file: \" + e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"freshcabbage123"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"freshcabbage123"},"content":"     * Deletes the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"freshcabbage123"},"content":"    public void delete() throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"freshcabbage123"},"content":"        Files.delete(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"freshcabbage123":180}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":" * Represents a deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"     * The date of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"     * Creates a deadline with the given description and date.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"     * @param dateTime The date and time of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"description should not be null\";","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"        super.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"        String newDateTime \u003d dateTime.format(super.formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + newDateTime + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":" * Represents an event.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"     * The date of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"     * Creates an event with the given description and date.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"     * @param startDateTime The startDateTime of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"     * @param endDateTime The endDateTime of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"description should not be null\";","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"        super.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"        String newStartDateTime \u003d startDateTime.format(super.formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"        String newEndDateTime \u003d endDateTime.format(super.formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + newStartDateTime + \" to: \" + newEndDateTime + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":" * Represents a task in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"     * The description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"     * Whether the task is done.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"    protected DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"        return description;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.IllegalTaskIndexException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"public class TaskList {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"     * Represents the type of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"        TODO {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"            @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"            public Task createTask(String details) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"                return new ToDo(details);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"        },","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"        DEADLINE {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"            @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"            public Task createTask(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"                String[] split \u003d details.split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"                if (split.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"                    throw new InvalidArgumentException(\"☹ OOPS!!! The deadline format is incorrect. \"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"                            + \"It should be: deadline \u003cname\u003e /by \u003cDD-MM-YYYY\u003e \u003cHH:MM\u003e\");","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"                String taskName \u003d split[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"                String dateTime \u003d split[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"                return new Deadline(taskName, parseDateTime(dateTime));","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"        },","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"        EVENT {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"            @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"            public Task createTask(String details) throws InvalidArgumentException {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"                String[] firstSplit \u003d details.split(\" /from \");","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"                String[] secondSplit \u003d firstSplit[firstSplit.length - 1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"                if (firstSplit.length !\u003d 2 || secondSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"                    throw new InvalidArgumentException(\"☹ OOPS!!! The event format is incorrect. \"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"                            + \"It should be: event \u003cname\u003e /from \u003cDD-MM-YYY\u003e \u003cHH:MM\u003e /to \u003cDD-MM-YYYY\u003e \u003cHH:MM\u003e\");","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"                String taskName \u003d firstSplit[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"                String startDateTime \u003d secondSplit[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"                String endDateTime \u003d secondSplit[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"                return new Event(taskName, parseDateTime(startDateTime), parseDateTime(endDateTime));","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"        };","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"        private static final DateTimeFormatter[] DATE_TIME_FORMATS \u003d {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"                DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"        };","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"         * Creates a deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"         * @param details The details of the deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"         * @return The deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"         * @throws InvalidArgumentException If the deadline task\u0027s format is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"        public abstract Task createTask(String details) throws InvalidArgumentException;","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"        private static LocalDateTime parseDateTime(String dateTime) throws InvalidArgumentException {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"            for (DateTimeFormatter format: DATE_TIME_FORMATS) {","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"                try {","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"                    return LocalDateTime.parse(dateTime, format);","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"                    // Do nothing","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"freshcabbage123"},"content":"            throw new InvalidArgumentException(\"☹ OOPS!!! Your dateTime format is not supported!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"freshcabbage123"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"freshcabbage123"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"freshcabbage123"},"content":"    public TaskList(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"freshcabbage123"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"freshcabbage123"},"content":"            this.tasks \u003d storage.load();","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"freshcabbage123"},"content":"            Ui.getErrorLoadingFromFileMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"freshcabbage123"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"freshcabbage123"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"freshcabbage123"},"content":"     * @param command The command that the user inputted.","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"freshcabbage123"},"content":"     * @return The add task message.","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"freshcabbage123"},"content":"     * @throws InvalidArgumentException If the task\u0027s format is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"freshcabbage123"},"content":"    public String addTask(String command) throws InvalidArgumentException {","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"freshcabbage123"},"content":"        String[] splitCommand \u003d command.split(\"\\\\s\", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"freshcabbage123"},"content":"        if (splitCommand.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"freshcabbage123"},"content":"            throw new InvalidArgumentException(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"freshcabbage123"},"content":"        String type \u003d splitCommand[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"freshcabbage123"},"content":"        String taskDetails \u003d splitCommand[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"freshcabbage123"},"content":"        if (taskDetails.trim().isEmpty()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"freshcabbage123"},"content":"            throw new InvalidArgumentException(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"freshcabbage123"},"content":"        TaskType taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"freshcabbage123"},"content":"            taskType \u003d TaskType.valueOf(type.toUpperCase());","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"freshcabbage123"},"content":"            throw new InvalidArgumentException(\"Bro your task type is unknown: \" + type);","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"freshcabbage123"},"content":"        tasks.add(taskType.createTask(taskDetails));","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"freshcabbage123"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"freshcabbage123"},"content":"            output.append(Ui.getErrorSavingToFileMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"freshcabbage123"},"content":"        output.append(Ui.getAddTaskMessage(tasks));","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"freshcabbage123"},"content":"     * Lists all the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"freshcabbage123"},"content":"     * @return The list tasks message.","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"freshcabbage123"},"content":"    public String listTasks() {","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"freshcabbage123"},"content":"        return Ui.getListTasksMessage(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"freshcabbage123"},"content":"     * Lists all the tasks in sorted order by type.","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"freshcabbage123"},"content":"     * @return The list tasks message.","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"freshcabbage123"},"content":"    public String listSortedTasksByType() {","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"freshcabbage123"},"content":"        return Ui.getSortedTasksByTypeMessage(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"freshcabbage123"},"content":"     * Lists all the tasks in sorted order.","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"freshcabbage123"},"content":"    public String listSortedTasks() {","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"freshcabbage123"},"content":"        return Ui.getSortedTasksByDatetimeMessage(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"freshcabbage123"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"freshcabbage123"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"freshcabbage123"},"content":"     * @return The mark as done message.","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IllegalTaskIndexException If the index is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"freshcabbage123"},"content":"    public String markAsDone(int index) throws IllegalTaskIndexException {","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"freshcabbage123"},"content":"        if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"freshcabbage123"},"content":"            throw new IllegalTaskIndexException();","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"freshcabbage123"},"content":"        output.append(Ui.getMarkAsDoneMessage(tasks, index));","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"freshcabbage123"},"content":"        assert tasks.get(index - 1).isDone : \"Task should be marked as done\";","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"freshcabbage123"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":174,"author":{"gitId":"freshcabbage123"},"content":"            output.append(Ui.getErrorSavingToFileMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"freshcabbage123"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"freshcabbage123"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"freshcabbage123"},"content":"     * @return The mark as undone message.","lastModifiedDate":"2023-09-06"},{"lineNumber":184,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IllegalTaskIndexException If the index is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"freshcabbage123"},"content":"    public String markAsUndone(int index) throws IllegalTaskIndexException {","lastModifiedDate":"2023-09-06"},{"lineNumber":187,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":188,"author":{"gitId":"freshcabbage123"},"content":"        if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"freshcabbage123"},"content":"            throw new IllegalTaskIndexException();","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"freshcabbage123"},"content":"        output.append(Ui.getMarkAsUndoneMessage(tasks, index));","lastModifiedDate":"2023-09-06"},{"lineNumber":192,"author":{"gitId":"freshcabbage123"},"content":"        assert !tasks.get(index - 1).isDone : \"Task should be marked as done\";","lastModifiedDate":"2023-09-10"},{"lineNumber":193,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":194,"author":{"gitId":"freshcabbage123"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":195,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":196,"author":{"gitId":"freshcabbage123"},"content":"            output.append(Ui.getErrorSavingToFileMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":197,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":199,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"freshcabbage123"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"freshcabbage123"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"freshcabbage123"},"content":"     * @return The delete message.","lastModifiedDate":"2023-09-06"},{"lineNumber":205,"author":{"gitId":"freshcabbage123"},"content":"     * @throws IllegalTaskIndexException If the index is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"freshcabbage123"},"content":"    public String deleteTask(int index) throws IllegalTaskIndexException {","lastModifiedDate":"2023-09-06"},{"lineNumber":208,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":209,"author":{"gitId":"freshcabbage123"},"content":"        if (index \u003e tasks.size() || index \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"freshcabbage123"},"content":"            throw new IllegalTaskIndexException();","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"freshcabbage123"},"content":"        // Calls delete message from duke.ui.Ui class","lastModifiedDate":"2023-08-28"},{"lineNumber":213,"author":{"gitId":"freshcabbage123"},"content":"        output.append(Ui.getDeleteTaskMessage(tasks, index));","lastModifiedDate":"2023-09-06"},{"lineNumber":214,"author":{"gitId":"freshcabbage123"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":216,"author":{"gitId":"freshcabbage123"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":217,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":218,"author":{"gitId":"freshcabbage123"},"content":"            output.append(Ui.getErrorSavingToFileMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":219,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":220,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":221,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"freshcabbage123"},"content":"     * Deletes all tasks from the list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"freshcabbage123"},"content":"    public void deleteAllTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"freshcabbage123"},"content":"        tasks.clear();","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"freshcabbage123"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"freshcabbage123"},"content":"            Ui.getErrorSavingToFileMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":232,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"freshcabbage123"},"content":"     * Finds tasks with the given keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":237,"author":{"gitId":"freshcabbage123"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-08-30"},{"lineNumber":238,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"freshcabbage123"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2023-09-06"},{"lineNumber":240,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":241,"author":{"gitId":"freshcabbage123"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"freshcabbage123"},"content":"            output.append(\"There are no tasks in your list.\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":243,"author":{"gitId":"freshcabbage123"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"freshcabbage123"},"content":"            output.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":245,"author":{"gitId":"freshcabbage123"},"content":"            int matchingTasks \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"freshcabbage123"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"freshcabbage123"},"content":"                if (tasks.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"freshcabbage123"},"content":"                    output.append((matchingTasks + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":249,"author":{"gitId":"freshcabbage123"},"content":"                    matchingTasks++;","lastModifiedDate":"2023-08-30"},{"lineNumber":250,"author":{"gitId":"freshcabbage123"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":252,"author":{"gitId":"freshcabbage123"},"content":"            if (matchingTasks \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"freshcabbage123"},"content":"                output.append(\"Sorry there are no matching tasks!\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":254,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":257,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"freshcabbage123":258}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"    * Creates a todo with the given description.","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    * @param description The description of the todo.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"    */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"description should not be null\";","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"        super.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"    * Returns the string representation of the todo.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"    * @return The string representation of the todo.","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    */","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":24}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"     * Constructor for DialogBox.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"     * @param text The text to display.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"     * @param img The image to display.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"     * Returns a DialogBox with the user\u0027s text and image.","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"     * @param text The user\u0027s text.","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"     * @param img The user\u0027s image.","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"     * @return A DialogBox with the user\u0027s text and image.","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"     * Returns a DialogBox with Duke\u0027s text and image.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"     * @param text Duke\u0027s text.","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"     * @param img Duke\u0027s image.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"     * @return A DialogBox with Duke\u0027s text and image.","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"freshcabbage123":78}},{"path":"src/main/java/duke/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"public class Gui extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"freshcabbage123":32}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":" * Controller for duke.ui.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"     * Initializes the main window.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"        String defaultGreeting \u003d duke.greet();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"                DialogBox.getDukeDialog(defaultGreeting, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"     * Sets the duke.","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"     * @param d The duke to set.","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"        userDialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"        dukeDialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"        userDialog.setMaxHeight(Double.MAX_VALUE);","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"        dukeDialog.setMaxHeight(Double.MAX_VALUE);","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"                userDialog,","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"                dukeDialog","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"        boolean isGoodbye \u003d input.toLowerCase().equals(\"bye\");","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"        if (isGoodbye) {","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"            exitDukeAfterDelay(1);","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"    private void exitDukeAfterDelay(int numSeconds) {","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"freshcabbage123"},"content":"        this.duke.goodbye();","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"freshcabbage123"},"content":"        ScheduledExecutorService executor \u003d Executors.newSingleThreadScheduledExecutor();","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"freshcabbage123"},"content":"        executor.schedule(() -\u003e System.exit(0), numSeconds, TimeUnit.SECONDS);","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"freshcabbage123":85}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":" * Represents the user interface of the program.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"    private final String name;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"    public Ui(String name) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"     * Prints the welcome message when the program starts.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    public String getHelloMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"        output.append(\"Hello! I\u0027m \" + this.name + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"        output.append(\"What can I do for you?\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"     * @return the goodbye message","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"    public static String getGoodbyeMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"        output.append(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"     * Prints the delete message.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"     * @return the delete message","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"    public static String getDeleteTaskMessage(List\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"        output.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"        output.append(tasks.get(index - 1) + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"        String placeholder \u003d tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"        int remainingTasks \u003d tasks.size() - 1;","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"        output.append(\"Now you have \" + remainingTasks + \" \" + placeholder + \" in the list.\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"     * Prints the add task message.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"     * @return the add task message","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"    public static String getAddTaskMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"        output.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"        output.append(tasks.get(tasks.size() - 1) + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"        String placeholder \u003d tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"        output.append(\"Now you have \" + tasks.size() + \" \" + placeholder + \" in the list.\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"     * Prints the list tasks message.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"     * @return the list tasks message","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"    public static String getListTasksMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"            output.append(\"There are no tasks in your list.\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"freshcabbage123"},"content":"            output.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"freshcabbage123"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"freshcabbage123"},"content":"                output.append((i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"freshcabbage123"},"content":"     * Prints the tasklist in sorted order within Todos, Deadlines, and Events.","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"freshcabbage123"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"freshcabbage123"},"content":"     * @return the tasklist in sorted order","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"freshcabbage123"},"content":"    public static String getSortedTasksByTypeMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"freshcabbage123"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"freshcabbage123"},"content":"            output.append(\"There are no tasks in your list.\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"freshcabbage123"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"freshcabbage123"},"content":"            // Separate the tasks by type","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"freshcabbage123"},"content":"            List\u003cTask\u003e todoTasks \u003d tasks.stream().filter(task -\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"freshcabbage123"},"content":"                    task.toString().startsWith(\"[T]\")).collect(Collectors.toList());","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"freshcabbage123"},"content":"            List\u003cTask\u003e deadlineTasks \u003d tasks.stream().filter(task -\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"freshcabbage123"},"content":"                    task.toString().startsWith(\"[D]\")).sorted(compareByDateTime()).collect(Collectors.toList());","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"freshcabbage123"},"content":"            List\u003cTask\u003e eventTasks \u003d tasks.stream().filter(task -\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"freshcabbage123"},"content":"                    task.toString().startsWith(\"[E]\")).sorted(compareByDateTime()).collect(Collectors.toList());","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"freshcabbage123"},"content":"            output.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"freshcabbage123"},"content":"            int index \u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"freshcabbage123"},"content":"            for (Task t : todoTasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"freshcabbage123"},"content":"                output.append(index++ + \".\" + t + \"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"freshcabbage123"},"content":"            for (Task t : deadlineTasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"freshcabbage123"},"content":"                output.append(index++ + \".\" + t + \"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"freshcabbage123"},"content":"            for (Task t : eventTasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"freshcabbage123"},"content":"                output.append(index++ + \".\" + t + \"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"freshcabbage123"},"content":"     * Prints the tasklist in sorted order by datetime.","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"freshcabbage123"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"freshcabbage123"},"content":"     * @return the tasklist in sorted order","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"freshcabbage123"},"content":"    public static String getSortedTasksByDatetimeMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"freshcabbage123"},"content":"        List\u003cTask\u003e todoTasks \u003d tasks.stream().filter(task -\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"freshcabbage123"},"content":"                task.toString().startsWith(\"[T]\")).collect(Collectors.toList());","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"freshcabbage123"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"freshcabbage123"},"content":"            output.append(\"There are no tasks in your list.\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"freshcabbage123"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"freshcabbage123"},"content":"            output.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"freshcabbage123"},"content":"            int index \u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"freshcabbage123"},"content":"            for (Task t : todoTasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"freshcabbage123"},"content":"                output.append(index++ + \".\" + t + \"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"freshcabbage123"},"content":"            List\u003cTask\u003e sortedDeadlinesAndEvents \u003d getSortedDeadlinesAndEvents(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"freshcabbage123"},"content":"            for (Task t : sortedDeadlinesAndEvents) {","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"freshcabbage123"},"content":"                output.append(index++ + \".\" + t + \"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"freshcabbage123"},"content":"     * Returns a list of deadlines and events sorted by date-time.","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"freshcabbage123"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"freshcabbage123"},"content":"     * @return the list of deadlines and events sorted by date-time","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"freshcabbage123"},"content":"    public static List\u003cTask\u003e getSortedDeadlinesAndEvents(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"freshcabbage123"},"content":"        // Separate the tasks by type","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"freshcabbage123"},"content":"        List\u003cTask\u003e nonTodoTasks \u003d tasks.stream()","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"freshcabbage123"},"content":"                .filter(task -\u003e task.toString().startsWith(\"[D]\") || task.toString().startsWith(\"[E]\"))","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"freshcabbage123"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"freshcabbage123"},"content":"        nonTodoTasks.sort(compareByDateTime());","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"freshcabbage123"},"content":"        return nonTodoTasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"freshcabbage123"},"content":"     * Provides a comparator to sort tasks by date-time.","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"freshcabbage123"},"content":"     * @return the comparator to sort tasks by date-time.","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"freshcabbage123"},"content":"    private static Comparator\u003cTask\u003e compareByDateTime() {","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"freshcabbage123"},"content":"        return (task1, task2) -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"freshcabbage123"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"freshcabbage123"},"content":"            LocalDateTime dateTime1 \u003d extractDateTimeFromTask(task1, formatter);","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"freshcabbage123"},"content":"            LocalDateTime dateTime2 \u003d extractDateTimeFromTask(task2, formatter);","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"freshcabbage123"},"content":"            return dateTime1.compareTo(dateTime2);","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"freshcabbage123"},"content":"        };","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"freshcabbage123"},"content":"     * Extracts date-time from a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"freshcabbage123"},"content":"     * @param task the task","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"freshcabbage123"},"content":"     * @param formatter the date-time formatter","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"freshcabbage123"},"content":"     * @return the date-time of the task","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"freshcabbage123"},"content":"    private static LocalDateTime extractDateTimeFromTask(Task task, DateTimeFormatter formatter) {","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"freshcabbage123"},"content":"        String taskStr \u003d task.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":181,"author":{"gitId":"freshcabbage123"},"content":"        String dateStr;","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"freshcabbage123"},"content":"        if (taskStr.startsWith(\"[D]\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"freshcabbage123"},"content":"            dateStr \u003d taskStr.split(\"by: \")[1].split(\"\\\\)\")[0].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"freshcabbage123"},"content":"        } else { // for [E] type","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"freshcabbage123"},"content":"            dateStr \u003d taskStr.split(\"from: \")[1].split(\" to:\")[0].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"freshcabbage123"},"content":"        return LocalDateTime.parse(dateStr, formatter);","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"freshcabbage123"},"content":"     * Prints the done task message.","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"freshcabbage123"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"freshcabbage123"},"content":"     * @param index the index of the completed task","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"freshcabbage123"},"content":"     * @return the done task message","lastModifiedDate":"2023-09-06"},{"lineNumber":197,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"freshcabbage123"},"content":"    public static String getMarkAsDoneMessage(List\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":199,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":200,"author":{"gitId":"freshcabbage123"},"content":"        output.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":201,"author":{"gitId":"freshcabbage123"},"content":"        tasks.get(index - 1).markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":202,"author":{"gitId":"freshcabbage123"},"content":"        output.append(tasks.get(index - 1) + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":203,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":204,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":205,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":206,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"freshcabbage123"},"content":"     * Prints the undone task message.","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"freshcabbage123"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"freshcabbage123"},"content":"     * @param index the index of the uncompleted task","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"freshcabbage123"},"content":"     * @return the undone task message","lastModifiedDate":"2023-09-06"},{"lineNumber":211,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"freshcabbage123"},"content":"    public static String getMarkAsUndoneMessage(List\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":213,"author":{"gitId":"freshcabbage123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":214,"author":{"gitId":"freshcabbage123"},"content":"        output.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"freshcabbage123"},"content":"        tasks.get(index - 1).markAsUndone();","lastModifiedDate":"2023-08-28"},{"lineNumber":216,"author":{"gitId":"freshcabbage123"},"content":"        output.append(tasks.get(index - 1) + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":217,"author":{"gitId":"freshcabbage123"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":218,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":219,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":220,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"freshcabbage123"},"content":"     * Shows the error message when saving file.","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"freshcabbage123"},"content":"     * @return the error message when saving file","lastModifiedDate":"2023-09-06"},{"lineNumber":223,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"freshcabbage123"},"content":"    public static String getErrorSavingToFileMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":225,"author":{"gitId":"freshcabbage123"},"content":"        return \"Error saving data to file.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":227,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":228,"author":{"gitId":"freshcabbage123"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"freshcabbage123"},"content":"     * Shows the error message when loading file.","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"freshcabbage123"},"content":"     * @return the error message when loading file","lastModifiedDate":"2023-09-06"},{"lineNumber":231,"author":{"gitId":"freshcabbage123"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"freshcabbage123"},"content":"    public static String getErrorLoadingFromFileMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":233,"author":{"gitId":"freshcabbage123"},"content":"        return \"Error loading data from file.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":234,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":235,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":236,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":237,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"freshcabbage123":237}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"freshcabbage123":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"freshcabbage123":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"    public void testToString_shouldDisplayCorrectMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"        LocalDateTime sampleDateTime \u003d LocalDateTime.of(2023, 8, 30, 15, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"        Deadline deadline \u003d new Deadline(\"Sample Deadline\", sampleDateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"        String expectedToString \u003d \"[D][ ] Sample Deadline (by: 30-08-2023 15:00)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(expectedToString, deadline.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"    public void testToString_shouldDisplayCorrectMessage2() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"        LocalDateTime sampleDateTime \u003d LocalDateTime.of(2023, 9, 30, 15, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"        Deadline deadline \u003d new Deadline(\"Sample Deadline\", sampleDateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"        String expectedToString \u003d \"[D][ ] Sample Deadline (by: 30-09-2023 15:00)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(expectedToString, deadline.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"    public void testMarkAsDone_shouldDisplayCorrectMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"        LocalDateTime sampleDateTime \u003d LocalDateTime.of(2023, 9, 30, 15, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"        Deadline deadline \u003d new Deadline(\"Sample Deadline\", sampleDateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"        assertFalse(deadline.isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"        assertTrue(deadline.isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"    public void testMarkAsUndone_shouldDisplayCorrectMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"        LocalDateTime sampleDateTime \u003d LocalDateTime.of(2023, 9, 30, 15, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"        Deadline deadline \u003d new Deadline(\"Sample Deadline\", sampleDateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"        assertTrue(deadline.isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"        deadline.markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"        assertFalse(deadline.isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"        LocalDateTime sampleDateTime \u003d LocalDateTime.of(2023, 9, 30, 15, 0);","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"        Deadline deadline \u003d new Deadline(\"Sample Deadline\", sampleDateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(\" \", deadline.getStatusIcon());","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(\"X\", deadline.getStatusIcon());","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freshcabbage123":55}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"package duke.task;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.IllegalTaskIndexException;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"    @BeforeAll","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"    public static void setupBeforeAll() {","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"        deleteFileIfExists(\"sample.txt\");","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"freshcabbage123"},"content":"        deleteFileIfExists(\"sample1.txt\");","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"freshcabbage123"},"content":"        deleteFileIfExists(\"add_deadline.txt\");","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"freshcabbage123"},"content":"        deleteFileIfExists(\"remove_deadline.txt\");","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"freshcabbage123"},"content":"        deleteFileIfExists(\"add_event.txt\");","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"freshcabbage123"},"content":"        deleteFileIfExists(\"remove_event.txt\");","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"freshcabbage123"},"content":"        deleteFileIfExists(\"multiple_tasks.txt\");","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"freshcabbage123"},"content":"    private static void deleteFileIfExists(String filename) { // This method is now static","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"freshcabbage123"},"content":"        Path path \u003d Paths.get(\"data\", filename);","lastModifiedDate":"2023-09-23"},{"lineNumber":38,"author":{"gitId":"freshcabbage123"},"content":"        try {","lastModifiedDate":"2023-09-23"},{"lineNumber":39,"author":{"gitId":"freshcabbage123"},"content":"            if (Files.exists(path)) {","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"freshcabbage123"},"content":"                Files.delete(path);","lastModifiedDate":"2023-09-23"},{"lineNumber":41,"author":{"gitId":"freshcabbage123"},"content":"            }","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"freshcabbage123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"freshcabbage123"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"freshcabbage123"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":45,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"freshcabbage123"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"freshcabbage123"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"freshcabbage123"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"freshcabbage123"},"content":"    public void markAsDone_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"freshcabbage123"},"content":"        TaskList taskList \u003d new TaskList(\"sample.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"freshcabbage123"},"content":"        assertThrows(IllegalTaskIndexException.class, () -\u003e taskList.markAsDone(10));","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"freshcabbage123"},"content":"        taskList.deleteAllTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"freshcabbage123"},"content":"    public void addTask_invalidTaskType_exceptionThrown() {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"freshcabbage123"},"content":"        TaskList taskList \u003d new TaskList(\"sample.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"freshcabbage123"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e taskList.addTask(\"invalidTaskType some details\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"freshcabbage123"},"content":"        taskList.deleteAllTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"freshcabbage123"},"content":"    public void addTask_todoTaskType_taskAddedMessageReturned()","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"freshcabbage123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"freshcabbage123"},"content":"        TaskList taskList \u003d new TaskList(\"sample.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"freshcabbage123"},"content":"        String test \u003d taskList.addTask(\"todo homework\");","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"freshcabbage123"},"content":"                + \"[T][ ] homework\" + \"\\nNow you have 1 task in the list.\\n\", test);","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"freshcabbage123"},"content":"    public void deleteTask_todoTaskType_taskDeletedMessageReturned()","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"freshcabbage123"},"content":"            throws IllegalTaskIndexException, InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"freshcabbage123"},"content":"        TaskList taskList \u003d new TaskList(\"sample1.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"freshcabbage123"},"content":"        taskList.addTask(\"todo homework\");","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"freshcabbage123"},"content":"        String test \u003d taskList.deleteTask(1);","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\" + \"[T][ ] homework\"","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"freshcabbage123"},"content":"                + \"\\nNow you have 0 task in the list.\\n\", test);","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"freshcabbage123"},"content":"    public void addTask_deadlineTaskType_taskAddedMessageReturned() throws InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"freshcabbage123"},"content":"        TaskList taskList \u003d new TaskList(\"add_deadline.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"freshcabbage123"},"content":"        String message \u003d taskList.addTask(\"deadline submit assignment /by 30-09-2023 10:00\");","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"freshcabbage123"},"content":"                + \"[D][ ] submit assignment (by: 30-09-2023 10:00)\" + \"\\nNow you have 1 task in the list.\\n\", message);","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"freshcabbage123"},"content":"    public void deleteTask_deadlineTaskType_taskDeletedMessageReturned()","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"freshcabbage123"},"content":"            throws IllegalTaskIndexException, InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"freshcabbage123"},"content":"        TaskList taskList \u003d new TaskList(\"remove_deadline.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"freshcabbage123"},"content":"        taskList.addTask(\"deadline submit assignment /by 30-09-2023 10:00\");","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"freshcabbage123"},"content":"        String message \u003d taskList.deleteTask(1);","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"freshcabbage123"},"content":"                + \"[D][ ] submit assignment (by: 30-09-2023 10:00)\" + \"\\nNow you have 0 task in the list.\\n\", message);","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"freshcabbage123"},"content":"    public void addTask_eventTaskType_taskAddedMessageReturned() throws InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"freshcabbage123"},"content":"        TaskList taskList \u003d new TaskList(\"add_event.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"freshcabbage123"},"content":"        String message \u003d taskList.addTask(\"event conference /from 01-10-2023 09:00 /to 01-10-2023 17:00\");","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"freshcabbage123"},"content":"                + \"[E][ ] conference (from: 01-10-2023 09:00 to: 01-10-2023 17:00)\"","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"freshcabbage123"},"content":"                + \"\\nNow you have 1 task in the list.\\n\", message);","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"freshcabbage123"},"content":"    public void deleteTask_eventTaskType_taskDeletedMessageReturned()","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"freshcabbage123"},"content":"            throws IllegalTaskIndexException, InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"freshcabbage123"},"content":"        TaskList taskList \u003d new TaskList(\"remove_event.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"freshcabbage123"},"content":"        taskList.addTask(\"event conference /from 01-10-2023 09:00 /to 01-10-2023 17:00\");","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"freshcabbage123"},"content":"        String message \u003d taskList.deleteTask(1);","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"freshcabbage123"},"content":"                + \"[E][ ] conference (from: 01-10-2023 09:00 to: 01-10-2023 17:00)\"","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"freshcabbage123"},"content":"                + \"\\nNow you have 0 task in the list.\\n\", message);","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"freshcabbage123"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"freshcabbage123"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"freshcabbage123"},"content":"    public void listTasks_multipleTaskTypes_correctListReturned() throws InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"freshcabbage123"},"content":"        TaskList taskList \u003d new TaskList(\"multiple_tasks.txt\");","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"freshcabbage123"},"content":"        taskList.addTask(\"todo homework\");","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"freshcabbage123"},"content":"        taskList.addTask(\"deadline submit assignment /by 30-09-2023 10:00\");","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"freshcabbage123"},"content":"        taskList.addTask(\"event conference /from 01-10-2023 09:00 /to 01-10-2023 17:00\");","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"freshcabbage123"},"content":"        String tasks \u003d taskList.listTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"freshcabbage123"},"content":"        String expected \u003d","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"freshcabbage123"},"content":"                \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"freshcabbage123"},"content":"                        + \"1.[T][ ] homework\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"freshcabbage123"},"content":"                        + \"2.[D][ ] submit assignment (by: 30-09-2023 10:00)\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"freshcabbage123"},"content":"                        + \"3.[E][ ] conference (from: 01-10-2023 09:00 to: 01-10-2023 17:00)\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"freshcabbage123"},"content":"        assertEquals(expected, tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"freshcabbage123"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"freshcabbage123"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"freshcabbage123":136}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"[E][ ] 2101 team meeting (from: 05-09-2023 18:00 to: 08-09-2023 10:00)","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Go grocery shopping","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"[D][X] Finish project (by: 17-09-2023 23:59)","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"[D][ ] homework (by: 28-02-2023 18:00)","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"[D][X] homework (by: 19-02-2024 18:29)","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] read boook","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"[T][X] Read book","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Go grocery shopping","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"[D][ ] Finish project (by: 17-09-2023 23:59)","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Walk the dog","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Read book","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Go grocery shopping","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"[D][ ] Finish project (by: 17-09-2023 23:59)","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Walk the dog","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Read book","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Go grocery shopping","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"[D][ ] Finish project (by: 17-09-2023 23:59)","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"[T][ ] Walk the dog","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"freshcabbage123":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"freshcabbage123"},"content":"todo Read book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"freshcabbage123"},"content":"deadline submit 2103T lab /by 30-08-2023 2356","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"freshcabbage123"},"content":"event 2101 team meeting /from 05-09-2023 /to Tuesday 10pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"freshcabbage123"},"content":"todo Go grocery shopping","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"freshcabbage123"},"content":"event Running /from 2023-Sep-10 /to 15:00 tomorrow","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"freshcabbage123"},"content":"deadline Finish project /by 17-09-2023 23:59","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"freshcabbage123"},"content":"todo Walk the dog","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"freshcabbage123"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"freshcabbage123"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"freshcabbage123"},"content":"mark 5","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"freshcabbage123"},"content":"unmark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"freshcabbage123"},"content":"unmark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"freshcabbage123"},"content":"event watch netflix again /from 19-4-2023 /to Tuesday 19:00","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"freshcabbage123"},"content":"deadline modreg round 9 /by Wedenesday 2023-09-25","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"freshcabbage123"},"content":"mark 7","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"freshcabbage123"},"content":"unmark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"freshcabbage123"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"freshcabbage123"},"content":"unmark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"freshcabbage123"},"content":"event Dinner with the family /from 17-09-2024 /to 20:00 tomorrow","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"freshcabbage123"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"freshcabbage123"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"freshcabbage123":27}}]
