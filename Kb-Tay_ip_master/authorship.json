[{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"E | 0 | project meeting | Aug 6th 2pm-4pm","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"D | 0 | return book | May 12 2001 7.00PM","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"E | 0 | buy | Apr 16 2023 6.00PM-Apr 16 2023 8.00PM","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kb-Tay":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":" * A deadline class extends the task class. A deadline task represents a task that has to be","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":" * completed by a certain date.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"    protected String by;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a deadline task with specified name","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     * @param description The name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"     * @param by The date the task needs to be completed.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"     * Returns the description of the deadline task with the specified date that task needs to be completed.","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"     * @return The string description of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        return \"D\" + super.fileString() + \" | \" + this.by;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Kb-Tay":38}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":" * ip Project Duke Chat bot","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" * @author Aaron Tay","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" * @since 2023-08-24","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"        String name \u003d \"Obi-wan Kenobi\";","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"        String line \u003d \"_____________________________________\";","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"        String FILEPATH \u003d \"./src/main/data/duke.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"        File f \u003d new File(FILEPATH);","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"            if (f.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"                Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"                    addFileTask(taskList, s.nextLine());","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"                f.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(\"Hello There! I am \" + name);","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        while (true) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"            String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"            if (command[0].equals(\"bye\") \u0026\u0026 command.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"            } else if (command[0].equals(\"list\") \u0026\u0026 command.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"                    System.out.print((i + 1) + \".\" + taskList.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"            } else if (command[0].equals(\"mark\") || command[0].equals(\"unmark\") || command[0].equals(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"                try {","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"                    editTask(command, taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"                try {","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"                    addTask(taskList, command);","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"            writeTaskToFile(FILEPATH, taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(\"Bye. May the force be with you!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Kb-Tay"},"content":"    private static void writeTaskToFile(String FILEPATH, ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Kb-Tay"},"content":"        FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"            fw.write(taskList.get(i).fileString() + \"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"        fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"Kb-Tay"},"content":"    private static void addFileTask(ArrayList\u003cTask\u003e taskList, String line) {","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"Kb-Tay"},"content":"        String[] task \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"Kb-Tay"},"content":"        String taskName \u003d task[0].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"Kb-Tay"},"content":"        String isMarked \u003d task[1].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"Kb-Tay"},"content":"        String taskDesc \u003d task[2].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"Kb-Tay"},"content":"        switch (taskName) {","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"Kb-Tay"},"content":"        case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"Kb-Tay"},"content":"            if (isMarked.equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new ToDo(taskDesc, true));","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new ToDo(taskDesc));","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"Kb-Tay"},"content":"        case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"            String taskDate \u003d task[3].trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"Kb-Tay"},"content":"            if (isMarked.equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new Deadline(taskDesc, true, taskDate));","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new Deadline(taskDesc, taskDate));","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"Kb-Tay"},"content":"        case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"Kb-Tay"},"content":"            String[] taskEvent \u003d task[3].split(\"-\");","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"Kb-Tay"},"content":"            if (isMarked.equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new Event(taskDesc, true, taskEvent[0].trim(), taskEvent[1].trim()));","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new Event(taskDesc, taskEvent[0].trim(), taskEvent[1].trim()));","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":131,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Kb-Tay"},"content":"     * Checks if the format of the string is the expected DateTime format.","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Kb-Tay"},"content":"     * The expected format is yyyy-mm-dd HH:mm.","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Kb-Tay"},"content":"     * @param input The dateTime string input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Kb-Tay"},"content":"     * @return The boolean value representing if string matches expected DateTime format.","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Kb-Tay"},"content":"    private static boolean isIsoDateTime(String input) {","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"Kb-Tay"},"content":"        String isoDatePattern \u003d \"^\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s([01]\\\\d|2[0-3]):[0-5]\\\\d$\";","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Kb-Tay"},"content":"        Pattern pattern \u003d Pattern.compile(isoDatePattern);","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Kb-Tay"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Kb-Tay"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"Kb-Tay"},"content":"     * Return the string representing the dateTime input in MMM d yyyy h.mma format.","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"Kb-Tay"},"content":"     * @param input The dateTime string input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"Kb-Tay"},"content":"     * @return The string of the formatted DateTime input.","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"Kb-Tay"},"content":"    private static String printIsoDateTime(String input) {","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"Kb-Tay"},"content":"        String[] dateTime \u003d input.split(\" \",2);","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Kb-Tay"},"content":"        String dateTimeFormat \u003d dateTime[0] + \"T\" + dateTime[1] + \":00\";","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"Kb-Tay"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h.mma\", Locale.ENGLISH);","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"Kb-Tay"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(dateTimeFormat);","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"Kb-Tay"},"content":"        return deadline.format(formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"Kb-Tay"},"content":"     * Creates a Task and adds it to the task list.","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"Kb-Tay"},"content":"     * @param taskList The list of task created by user.","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"Kb-Tay"},"content":"     * @param input The input command from user.","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"Kb-Tay"},"content":"     * @throws InvalidCommandException Handles missing or wrong input commands by user.","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"Kb-Tay"},"content":"     * @throws InvalidDescriptionException Handle empty task descriptions.","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"Kb-Tay"},"content":"    private static void addTask(ArrayList\u003cTask\u003e taskList, String[] input)","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"Kb-Tay"},"content":"            throws InvalidCommandException, InvalidDescriptionException {","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"Kb-Tay"},"content":"        String cmd \u003d input[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"Kb-Tay"},"content":"        switch (cmd) {","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"Kb-Tay"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"Kb-Tay"},"content":"            if (input.length \u003d\u003d 1 || input[1].equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidDescriptionException(\"todo\");","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":180,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"Kb-Tay"},"content":"            taskList.add(new ToDo(input[1].trim()));","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":184,"author":{"gitId":"Kb-Tay"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"Kb-Tay"},"content":"            if (input.length \u003d\u003d 1 || input[1].equals(\"\") || input[1].trim().charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidDescriptionException(\"deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":188,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":189,"author":{"gitId":"Kb-Tay"},"content":"            String[] task \u003d input[1].split(\"/by \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"Kb-Tay"},"content":"            String taskDesc \u003d task[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"Kb-Tay"},"content":"            if (task.length \u003d\u003d 1 || task[1].equals(\"\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":193,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidCommandException(\"☹ OOPS!!! Need to include /by date for deadline.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":195,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":196,"author":{"gitId":"Kb-Tay"},"content":"            String dateTime \u003d task[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"Kb-Tay"},"content":"            if (isIsoDateTime(dateTime)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new Deadline(taskDesc, printIsoDateTime(dateTime)));","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidCommandException(\"Invalid date time format. Format is yyyy-mm-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"Kb-Tay"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"Kb-Tay"},"content":"            if (input.length \u003d\u003d 1 || input[1].equals(\"\") || input[1].trim().charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidDescriptionException(\"description\");","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":209,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":210,"author":{"gitId":"Kb-Tay"},"content":"            String[] event \u003d input[1].split(\"/from \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":212,"author":{"gitId":"Kb-Tay"},"content":"            if (event.length \u003d\u003d 1 || event[1].equals(\"\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":213,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidCommandException(\"☹ OOPS!!! Need to include /from date for an event.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":215,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":216,"author":{"gitId":"Kb-Tay"},"content":"            String[] dates \u003d event[1].split(\"/to \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":217,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":218,"author":{"gitId":"Kb-Tay"},"content":"            if (dates.length \u003d\u003d 1 || dates[1].equals(\"\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":219,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidCommandException(\"☹ OOPS!!! Need to include /to date for an event.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":220,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":221,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":222,"author":{"gitId":"Kb-Tay"},"content":"            String fromDate \u003d dates[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"Kb-Tay"},"content":"            String toDate \u003d dates[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"Kb-Tay"},"content":"            if (isIsoDateTime(fromDate) \u0026\u0026 isIsoDateTime(toDate)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new Event(event[0].trim(), printIsoDateTime(fromDate),","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"Kb-Tay"},"content":"                        printIsoDateTime(toDate)));","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidCommandException(\"Invalid date time format. \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"Kb-Tay"},"content":"                        \"Both /from and /to format is yyyy-mm-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"Kb-Tay"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"Kb-Tay"},"content":"            throw new InvalidCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":238,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":239,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":240,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":241,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(\"Now you have \" + (taskList.size()) + \" tasks in the list.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":242,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":243,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":244,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":245,"author":{"gitId":"Kb-Tay"},"content":"     * Edits the task specified. Can be either marking the task as done, unmarking the task or deleting the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":246,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":247,"author":{"gitId":"Kb-Tay"},"content":"     * @param cmd The input command from user.","lastModifiedDate":"2023-08-24"},{"lineNumber":248,"author":{"gitId":"Kb-Tay"},"content":"     * @param taskList The list of task created by user.","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"Kb-Tay"},"content":"     * @throws InvalidCommandException Handles missing or wrong input commands by user.","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"Kb-Tay"},"content":"     * @throws InvalidIndexException Handles invalid task index given by user.","lastModifiedDate":"2023-08-24"},{"lineNumber":251,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":252,"author":{"gitId":"Kb-Tay"},"content":"    public static void editTask (String[] cmd, ArrayList\u003cTask\u003e taskList) throws InvalidCommandException","lastModifiedDate":"2023-08-24"},{"lineNumber":253,"author":{"gitId":"Kb-Tay"},"content":"            , InvalidIndexException {","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"Kb-Tay"},"content":"        String regex \u003d \"-?\\\\d+\";","lastModifiedDate":"2023-08-24"},{"lineNumber":255,"author":{"gitId":"Kb-Tay"},"content":"        if (cmd.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":256,"author":{"gitId":"Kb-Tay"},"content":"            throw new InvalidCommandException(\"Need to include index for task marking!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":257,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":258,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":259,"author":{"gitId":"Kb-Tay"},"content":"        if (cmd[1] \u003d\u003d \" \") {","lastModifiedDate":"2023-08-24"},{"lineNumber":260,"author":{"gitId":"Kb-Tay"},"content":"            throw new InvalidCommandException(\"Please include index for task marking\");","lastModifiedDate":"2023-08-24"},{"lineNumber":261,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":262,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":263,"author":{"gitId":"Kb-Tay"},"content":"        if (!cmd[1].matches(regex)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":264,"author":{"gitId":"Kb-Tay"},"content":"            throw new InvalidCommandException(\"Can only use integers as index for marking!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":265,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":266,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":267,"author":{"gitId":"Kb-Tay"},"content":"        int pos \u003d Integer.parseInt(cmd[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":268,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":269,"author":{"gitId":"Kb-Tay"},"content":"        if (pos \u003e taskList.size() || pos \u003c\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":270,"author":{"gitId":"Kb-Tay"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-08-24"},{"lineNumber":271,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":272,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":273,"author":{"gitId":"Kb-Tay"},"content":"        if (cmd[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":274,"author":{"gitId":"Kb-Tay"},"content":"            taskList.get(pos - 1).markTask();","lastModifiedDate":"2023-08-24"},{"lineNumber":275,"author":{"gitId":"Kb-Tay"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":276,"author":{"gitId":"Kb-Tay"},"content":"        } else if (cmd[0].equals(\"unmark\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":277,"author":{"gitId":"Kb-Tay"},"content":"            taskList.get(pos - 1).unmarkTask();","lastModifiedDate":"2023-08-24"},{"lineNumber":278,"author":{"gitId":"Kb-Tay"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":279,"author":{"gitId":"Kb-Tay"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":280,"author":{"gitId":"Kb-Tay"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":281,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":282,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":283,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(taskList.get(pos - 1).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":284,"author":{"gitId":"Kb-Tay"},"content":"        if (cmd[0].equals(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":285,"author":{"gitId":"Kb-Tay"},"content":"            taskList.remove(pos - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":286,"author":{"gitId":"Kb-Tay"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":287,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":288,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Kb-Tay":286,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":" * A custom exception class to represent the exception thrown by the Duke Chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a new Duke Exception with a specified error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"     * @param message The error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Kb-Tay":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":" * An event class extends the task class. It represents a task with that needs to be completed within","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":" * a certain time period.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"    protected String from;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"    protected String to;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a new Event with the specified time period and description.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"     * @param description The name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"     * @param from The start date of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"     * @param to The end date of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"     * Returns the description of the task with the specified time period.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"     * @return A string description of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"        return \"E\" + super.fileString() + \" | \" + this.from + \"-\" + this.to;","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Kb-Tay":44}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":" * Custom Exception class that extends DukeException. It is thrown when the user input command to","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":" * the chatbot is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs new InvalidCommandException with specified error messages.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"     * @param message The message of the invalid command given by the user.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    InvalidCommandException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Kb-Tay":15}},{"path":"src/main/java/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":" * Custom Exception class that extends DukeException. It is thrown when the description of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":" * created is empty.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"public class InvalidDescriptionException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs new InvalidDescriptionException with specified error messages.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"     * @param message The type of task created with an invalid description.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    InvalidDescriptionException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"        super(\"☹ OOPS!!! The description of a message \" + message + \" cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Kb-Tay":15}},{"path":"src/main/java/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":" * Custom Exception class that extends DukeException. It is thrown when the user input references an","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":" * invalid index in the Task List.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"public class InvalidIndexException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs new InvalidIndexException with specified error messages.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"    InvalidIndexException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"        super(\"Index given out of task list range!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Kb-Tay":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":" * The Task Class is an abstract class that serves as a base class for various types of task the user can create.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"    protected String name;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a new Task with the specified name. By default,","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"     * the task is marked as not done.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    public Task(String name){","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"     * Returns a string representing if the task is marked as done or not.","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"     * @return The string message if task is done.","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"    public void markTask(){","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"     * Returns the string description of the current task. Description includes if task is done and the task name.","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"        return this.getStatusIcon() + \" \" + this.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"        String done \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"        return \" | \" + done + \" | \" + this.name;","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Kb-Tay":58}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":" * A ToDo class extends the task class. A Todo task is a task without a specified date to be completed.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a new Todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"     * @param description The name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"     * Returns a description of the Todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"     * @return A string description of the ToDo.","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"        return \"T\" + super.fileString();","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Kb-Tay":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Kb-Tay":6}}]
