[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kb-Tay":2,"-":22}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"E | 1 | project meeting | Aug 6th 2pm-4pm","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"T | 0 | join sports club","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"D | 0 | eat dinner | Aug 30 2023 6.00PM","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":5}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":" * command.Command that adds a task to the task.Task List.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"    /** Type of task to add */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"    private String taskType;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    /** The other information required to instantiate a task.Task */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    private String[] args;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a new Add command.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"     * @param taskType Type of task to add.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"     * @param args Additional information required for different tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    public AddCommand(String taskType, String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"        String action \u003d tasks.addTask(taskType, args);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        ui.respondUser(action);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"    };","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":35}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":" * command.Command to end the Chat Bot. Saves user input into file.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"            store.writeFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"            ui.showWritingError();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    };","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":24}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":" * Stores information of the action to be executed.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"     * @param tasks task.Task list storing user task.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"     * @param ui The duke.Ui handling user interactions.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"     * @param store The store that handles file operations.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage store);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"     * Returns if Chat bot should continue after commands.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"     * @return Boolean value representing if Chat Bot should end.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":26}},{"path":"src/main/java/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":" * command.Command to edit a task in the task.Task List.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"    /** The changes to the task */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"    private String editType;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    /** The task to be changed */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    private int ind;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a new Edit command.Command. Can mark, unmark task as done or","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"     * delete a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"     * @param editType The edit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"     * @param ind The task to be changed.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    public EditCommand(String editType, int ind) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"        this.editType \u003d editType;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"        this.ind \u003d ind;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"        String action \u003d tasks.editTask(editType, ind);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"        ui.respondUser(action);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    };","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":36}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":" * command.Command to List all the task in duke.TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"        ui.respondUser(\"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"                tasks.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    };","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package duke; /**","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":" * ip Project duke.Duke Chat bot","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" * @author Aaron Tay","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" * @since 2023-08-24","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    /**Reads and writes task data into file*/","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"    /**List of tasks input by user or loaded from file*/","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    /**Handles user interactions*/","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a duke.Duke object with the specified file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"     * @param filePath The path where the ChatBot loads data from.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"     * Controls the flow of events of the ChatBot. When active, ChatBot will get user input","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"     * and execute the given commands.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"        ui.startBot();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"        while(!isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"                String fullCommand \u003d ui.getUserInput();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"                ui.showErrorMessage(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"            } finally {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"        ui.endBot();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"     * The main entry point for the duke.Duke ChatBot application.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"     * Initialise an instance of duke.Duke with the specified file path","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"     * and starts the duke.Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"     * @param args command.Command-line arguments provided when running the application (not used).","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"        new Duke(\"./src/main/data/duke.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Kb-Tay":69,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import command.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import exception.InvalidIndexException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":" * Parses user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    public static final Pattern BASIC_COMMAND \u003d Pattern.compile(\"(?\u003ccommand\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    public static final String isoDatePattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"    public static final Pattern DEADLINE_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"            \"(?\u003cdeadline\u003e[^\\\"]+) /by (\" + isoDatePattern + \")\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    public static final Pattern EVENT_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"            \"(?\u003cdeadline\u003e[^\\\"]+) /from (\" + isoDatePattern + \")\"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"                    + \" /to (\" + isoDatePattern + \")\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"     * Parses user input and returns a command.Command. The command.Command can then be executed","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"     * to respond to the user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"     * @param input The user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"     * @return A command.Command to be executed.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        final Matcher matcher \u003d BASIC_COMMAND.matcher(input.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        if(!matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"            throw new InvalidCommandException(\"Invalid command.Command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"        final String command \u003d matcher.group(\"command\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"        final String argument \u003d matcher.group(\"arguments\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"        final boolean validIndex \u003d argument.matches(\"-?\\\\d+\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        switch(command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"        case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"            if (validIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"                return new EditCommand(\"mark\", Integer.parseInt(argument));","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"            if (validIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"                return new EditCommand(\"unmark\", Integer.parseInt(argument));","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"            if (validIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"                return new EditCommand(\"delete\", Integer.parseInt(argument));","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"            return new AddCommand(\"todo\", new String[]{argument});","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"            Matcher deadlineFormat \u003d DEADLINE_FORMAT.matcher(argument);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Kb-Tay"},"content":"            if (deadlineFormat.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Kb-Tay"},"content":"                String desc \u003d deadlineFormat.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Kb-Tay"},"content":"                String byDate \u003d parseDateTimeFormat(deadlineFormat.group(2));","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Kb-Tay"},"content":"                return new AddCommand(\"deadline\", new String[]{desc, byDate});","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidCommandException(\"Wrong deadline format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"            Matcher eventFormat \u003d EVENT_FORMAT.matcher(argument);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Kb-Tay"},"content":"            if (eventFormat.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Kb-Tay"},"content":"                String desc \u003d eventFormat.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Kb-Tay"},"content":"                String fromDate \u003d parseDateTimeFormat(eventFormat.group(2));","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Kb-Tay"},"content":"                String toDate \u003d parseDateTimeFormat(eventFormat.group(3));","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Kb-Tay"},"content":"                return new AddCommand(\"event\", new String[]{desc, fromDate, toDate});","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Kb-Tay"},"content":"                throw new InvalidCommandException(\"Wrong event format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Kb-Tay"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Kb-Tay"},"content":"            throw new InvalidCommandException(\"command.Command not understood\");","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Kb-Tay"},"content":"     * Return the string representing the dateTime input in MMM d yyyy h.mma format.","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"     * @param input The dateTime string input from the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"Kb-Tay"},"content":"     * @return The string of the formatted DateTime input.","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"Kb-Tay"},"content":"    private static String parseDateTimeFormat(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"Kb-Tay"},"content":"        String[] dateTime \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"Kb-Tay"},"content":"        String dateTimeFormat \u003d dateTime[0] + \"T\" + dateTime[1] + \":00\";","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"Kb-Tay"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h.mma\", Locale.ENGLISH);","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"Kb-Tay"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(dateTimeFormat);","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"Kb-Tay"},"content":"        return deadline.format(formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":121}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import task.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":" * Loads and saves data into files.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    public final String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a duke.Storage that loads and saves ChatBot data into files","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"     * @param filePath The file path to read and write from.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"     * Saves data input from user into file. User input when using","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"     * Chat Bot will be written into the file specified.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"     * @param tasks The task.Task List to be written into file.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"    public void writeFile(TaskList tasks) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        fw.write(tasks.toFileString());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"     * Loads data from the previously saved file. Previous user input written in the file","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"     * will be processed so user can view and make changes to the data using the Chat Bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"     * @return task.Task List that was saved by user.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"                addFileTask(taskList, s.nextLine());","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"     * Process text from the file to be used by Chat Bot. Process data stored in the","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"     * txt file and adds the respective tasks to the duke.TaskList object.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"     * @param taskList The array list of task stored by files.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"     * @param input The text input from the file being read.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"    private void addFileTask(ArrayList\u003cTask\u003e taskList, String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"        String[] task \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"        String taskName \u003d task[0].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"        String isMarked \u003d task[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"        String taskDesc \u003d task[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"        switch (taskName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"        case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Kb-Tay"},"content":"            if (isMarked.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new ToDo(taskDesc, true));","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new ToDo(taskDesc));","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"        case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"            String taskDate \u003d task[3].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Kb-Tay"},"content":"            if (isMarked.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new Deadline(taskDesc, true, taskDate));","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new Deadline(taskDesc, taskDate));","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Kb-Tay"},"content":"        case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Kb-Tay"},"content":"            String[] taskEvent \u003d task[3].split(\"-\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Kb-Tay"},"content":"            if (isMarked.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new Event(taskDesc, true, taskEvent[0].trim(), taskEvent[1].trim()));","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Kb-Tay"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Kb-Tay"},"content":"                taskList.add(new Event(taskDesc, taskEvent[0].trim(), taskEvent[1].trim()));","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":110}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import task.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":" * Contains the list of tasks. The tasks stored from the file loaded","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":" * and from inputs given by user.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a duke.TaskList with a empty task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a duke.TaskList with data load from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"     * @param taskList The task list stored in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"            tasks +\u003d (i + 1) + \".\" + taskList.get(i).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"            if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"                tasks +\u003d \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"     * Returns a string of tasks to be written into the file. Formats the data stored in duke.TaskList","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"     * to be written into file.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"     * @return The string representing duke.TaskList to be written into file.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"            tasks +\u003d taskList.get(i).fileString() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"     * Adds a new task into duke.TaskList. The task can either be a task.ToDo,","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"     * task.Deadline or task.Event.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"     * @param taskType The type of task to add.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"     * @param args Additional information for task to be instantiated.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"     * @return A string description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"    public String addTask(String taskType, String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"            taskList.add(new ToDo(args[0]));","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"            taskList.add(new Deadline(args[0], args[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"            taskList.add(new Event(args[0], args[1], args[2]));","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Kb-Tay"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Kb-Tay"},"content":"                taskList.get(taskList.size() - 1).toString() +","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Kb-Tay"},"content":"                \"\\nNow you have \" + (taskList.size()) + \" tasks in the list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"     * Edits a task in the duke.TaskList. task.Task can be marked, unmarked as done or deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"     * @param taskType The type of edits to be made.","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Kb-Tay"},"content":"     * @param ind The task to edit.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Kb-Tay"},"content":"     * @return The string description of the edit being made.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Kb-Tay"},"content":"    public String editTask(String taskType, int ind) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Kb-Tay"},"content":"        String editDesc \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Kb-Tay"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Kb-Tay"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Kb-Tay"},"content":"            taskList.get(ind - 1).markTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Kb-Tay"},"content":"            editDesc +\u003d \"Nice! I\u0027ve marked this task as done:\\n\" + taskList.get(ind - 1).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Kb-Tay"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Kb-Tay"},"content":"            taskList.get(ind - 1).unmarkTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Kb-Tay"},"content":"            editDesc +\u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + taskList.get(ind - 1).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"            editDesc +\u003d \"Noted. I\u0027ve removed this task:\\n\" + taskList.get(ind - 1).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"Kb-Tay"},"content":"            taskList.remove(ind - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"Kb-Tay"},"content":"            editDesc +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"Kb-Tay"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"Kb-Tay"},"content":"        return editDesc;","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":118}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":" * Handles user interaction with Chat Bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    private static final String NAME \u003d \"Obi-wan Kenobi\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    private static final String DIVIDER \u003d \"_____________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"    private final Scanner in;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a duke.Ui object. duke.Ui object will handle user input and prints","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"     * information to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"        this.out \u003d System.out;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"     * Generates and prints welcome message when Chat Bot is started.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"    public void startBot() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(\"Hello There! I am \" + NAME);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"     * Generates and prints closing message when Chat Bot is stopped.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"    public void endBot() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        System.out.println(\"Bye. May the force be with you!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"     * Prints the response to the user\u0027s request. Prints a description of the","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"     * action being executed by the user\u0027s command.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"     * @param response The description of the command executed.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"    public void respondUser(String response) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"        out.println(response);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"     * Gets user\u0027s input with a Scanner object.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"        return in.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"     * Prints the error messages to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"     * @param e If user inputs invalid commands to the Chat Bot.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"    public void showErrorMessage(DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"        out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"     * Prints a divider between each user\u0027s commands.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"     * Prints error message when file path is not found.","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"        out.println(\"Invalid file path given\");","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Kb-Tay"},"content":"     * Print error message when writing to file.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"    public void showWritingError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"        out.println(\"Unable to write to file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":90}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" * A custom exception class to represent the exception thrown by the duke.Duke Chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a new duke.Duke Exception with a specified error message.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"     * @param message The error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Kb-Tay":16}},{"path":"src/main/java/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" * Custom Exception class that extends exception.DukeException. It is thrown when the user input command to","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" * the chatbot is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs new exception.InvalidCommandException with specified error messages.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"     * @param message The message of the invalid command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":17}},{"path":"src/main/java/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" * Custom Exception class that extends exception.DukeException. It is thrown when the user input references an","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" * invalid index in the task.Task List.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs new exception.InvalidIndexException with specified error messages.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"        super(\"Index given out of task list range!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Kb-Tay":16}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" * A deadline class extends the task class. A deadline task represents a task that has to be","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" * completed by a certain date.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"    protected String by;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a deadline task with specified name","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"     * @param description The name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"     * @param by The date the task needs to be completed.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"     * Returns the description of the deadline task with the specified date that task needs to be completed.","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"     * @return The string description of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        return \"D\" + super.fileString() + \" | \" + this.by;","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Kb-Tay":40}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" * An event class extends the task class. It represents a task with that needs to be completed within","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" * a certain time period.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"    protected String from;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"    protected String to;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a new task.Event with the specified time period and description.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"     * @param description The name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"     * @param from The start date of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"     * @param to The end date of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"     * Returns the description of the task with the specified time period.","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"     * @return A string description of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"        return \"E\" + super.fileString() + \" | \" + this.from + \"-\" + this.to;","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Kb-Tay":46}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" * The task.Task Class is an abstract class that serves as a base class for various types of task the user can create.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"    protected String name;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a new task.Task with the specified name. By default,","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"     * the task is marked as not done.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"    public Task(String name){","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"     * Returns a string representing if the task is marked as done or not.","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"     * @return The string message if task is done.","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"    public void markTask(){","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"     * Returns the string description of the current task. Description includes if task is done and the task name.","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"        return this.getStatusIcon() + \" \" + this.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"        String done \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"        return \" | \" + done + \" | \" + this.name;","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Kb-Tay":60}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":" * A task.ToDo class extends the task class. A Todo task is a task without a specified date to be completed.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a new Todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"     * @param description The name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"     * Returns a description of the Todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"     * @return A string description of the task.ToDo.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"        return \"T\" + super.fileString();","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Kb-Tay":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Kb-Tay":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kb-Tay":1,"-":20}}]
