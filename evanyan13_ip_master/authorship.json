[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"# Jarvis Chatbot","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"![Robot Gif](/docs/robot.gif)","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"3. After that, locate the `src/main/java/jarvis/Jarvis.java` file, right-click it, and choose `Run Jarvis.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"      ____________________________________________________________","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"      Hi Master! I\u0027m your personal assistant: JARVIS! ","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"      ██  █████  ██████  ██    ██ ██ ███████ ","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"      ██ ██   ██ ██   ██ ██    ██ ██ ██      ","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"      ██ ███████ ██████  ██    ██ ██ ███████ ","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"   ██  ██ ██   ██ ██   ██  ██  ██  ██      ██","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"   █████  ██   ██ ██   ██   ████   ██ ███████ ","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"      How can I serve you today? ","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"      ____________________________________________________________","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"evanyan13":16,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    // JavaFX 17.0.7 dependencies for macOS on ARM64","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-base:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-controls:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-fxml:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-graphics:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    // JavaFX 17.0.7 dependencies for Linux","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-base:17.0.7:linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-controls:17.0.7:linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-fxml:17.0.7:linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-graphics:17.0.7:linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    // JavaFX 17.0.7 dependencies for Windows","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-base:17.0.7:win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-controls:17.0.7:win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-fxml:17.0.7:win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    implementation \u0027org.openjfx:javafx-graphics:17.0.7:win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"    mainClass.set(\"jarvis.gui.Launcher\")","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"    archiveFileName \u003d \u0027jarvis.jar\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"javafx {","lastModifiedDate":"2023-09-23"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"    version \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"    modules \u003d [\u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027]","lastModifiedDate":"2023-09-23"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"evanyan13":26,"-":38}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"# Jarvis User Guide","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"Hi Master! I\u0027m your personal assistant: Jarvis!","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"How can I serve you today? - Jarvis","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"![Robot Gif](https://media3.giphy.com/media/5k5vZwRFZR5aZeniqb/giphy.gif?cid\u003decf05e477sdf4wuhrjtplazuzivi8jaqmmy7c7uf5s8picdt\u0026ep\u003dv1_gifs_search\u0026rid\u003dgiphy.gif\u0026ct\u003dg)","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"## Table of Contents","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"1. [Adding Tasks](#adding-tasks)","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    1. [Todo Task](#adding-a-todo-task-todo)","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    2. [Deadline Task](#adding-a-deadline-task-deadline)","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    3. [Event Task](#adding-an-event-task-event)","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"2. [Managing Tasks](#listing-tasks-list)","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    1. [Listing Tasks](#listing-tasks-list)","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    2. [Marking a Task as Completed](#marking-a-task-as-completed-mark)","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    3. [Marking a Task as Incompleted](#marking-a-task-as-incompleted-unmark)","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    4. [Deleting a Task](#deleting-a-task-delete)","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"3. [Searching and Sorting](#finding-tasks-find)","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    1. [Finding Tasks](#finding-tasks-find)","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    2. [Sorting Tasks by Deadline](#sorting-tasks-sort-deadline)","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"4. [Exiting the Application](#exiting-jarvis-bye)","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"5. [Command Summary](#command-summary)","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"\u003e - Words in **UPPER_CASE** are the parameters to be supplied by the user.","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"\u003e - eg. todo **TASK**, **TASK** is a parameter which can be used as todo **Complete report**.","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"\u003e - Parameters must be in the correct order","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"\u003e - eg. if the command specifies deadline **TASK_DESCRIPTION** by **DUE_DATE**,","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    deadline **Sep 20 2023 1200** by **Submit ip** will not be a successful command","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"## Adding Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"In Jarvis, there are three task types:","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"### 1. Todo Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"- Purpose: Basic tasks with no specific deadline.","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"### 2. Deadline Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"- Purpose: Tasks with specific due dates and times.","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"### 3. Event Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"- Purpose: Tasks representing events with start and end times.","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"Learn how manage these tasks using commands in the following.","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"## Adding a Todo task: `todo`","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"Adds a \"Todo\" task to the task list in the Jarvis app.","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"### Command Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"- `TASK_DESCRIPTION`: The description of the \"Todo\" task you want to add.","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"- No other parameter is required, all information after `todo` command will be taken as `TASK_DESCRIPTION`","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"### Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"`todo Buy groceries` will add a \"Todo\" task with the description \"Buy groceries\" to the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"1. T | 0 | Buy groceries","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"### Usage Tips:","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"- Use meaningful and descriptive text for the `TASK_DESCRIPTION` to easily identify the task.","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"- Do not include unnecessary details in `TASK_DESCRIPTION` eg. due date which can be added as other task","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"  type (`Deadline`).","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"## Adding a Deadline task: `deadline`","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"Adds a \"Deadline\" task to the task list in the Jarvis app.","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"### Command Format: `deadline TASK_DESCRIPTION by DUE_DATE`","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"evanyan13"},"content":"- `TASK_DESCRIPTION`: The description of the \"Deadline\" task you want to add.","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"- `DUE_DATE`: The due date and time for the task in the format `dd/MM/yyyy HHmm`.","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"### Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"evanyan13"},"content":"`deadline Submit report by Sep 22 2023 1400` will add a \"Deadline\" task with the description \"Submit report\" and a due","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"date of \"15th October 2023, 2:00 PM\" to the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"1. D | 0 | Submit report | Sep 22 2023 1400","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"evanyan13"},"content":"### Usage Tips:","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"- Ensure you provide a clear and descriptive `TASK_DESCRIPTION`.","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"evanyan13"},"content":"- Remember to include the `by` keyword after `TASK_DESCRIPTION` and before `DUE_DATE`","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"evanyan13"},"content":"- Use the acceptable format for `DUE_DATE` to avoid date and time format errors.","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"evanyan13"},"content":"    - `MMM dd yyyy HHmm` eg. Sep 22 2023 1400","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"evanyan13"},"content":"    - `dd MMM yyyy HHmm` eg. 22 Sep 2023 1400","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"evanyan13"},"content":"    - `yyyy-MM-dd HHmm` eg. 2023-08-22 1400","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"evanyan13"},"content":"    - `dd/MM/yyyy HHmm` eg. 15/10/2023 1400","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"evanyan13"},"content":"## Adding an Event task: `event`","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"evanyan13"},"content":"Adds an \"Event\" task to the task list in the Jarvis app.","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"evanyan13"},"content":"### Command Format: `event TASK_DESCRIPTION from START_DATE_TIME to END_DATE_TIME`","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"evanyan13"},"content":"- `TASK_DESCRIPTION`: The description of the \"Event\" task you want to add.","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"evanyan13"},"content":"- `START_DATE_TIME`: The start date and time of the event in the format `dd/MM/yyyy HHmm`.","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"evanyan13"},"content":"- `END_DATE_TIME`: The end date and time of the event in the format `dd/MM/yyyy HHmm`.","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"evanyan13"},"content":"### Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"evanyan13"},"content":"`event Attend conference from 15/10/2023 1400 to 16/10/2023 1600` will add an \"Event\" task with the description \"Attend","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"evanyan13"},"content":"conference\" and a start date of \"15th October 2023, 2:00 PM\" and an end date of \"16th October 2023, 4:00 PM\" to the task","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"evanyan13"},"content":"list.","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"evanyan13"},"content":"1. E | 0 | Attend conference | Oct 15 2023 1400 | Oct 16 2023 1600","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"evanyan13"},"content":"### Usage Tips:","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"evanyan13"},"content":"- Provide a clear and descriptive `TASK_DESCRIPTION`.","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"evanyan13"},"content":"- Use the `from` and `to` keywords to specify the event\u0027s start and end date and time.","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"evanyan13"},"content":"- Ensure that `START_DATE_TIME` and `END_DATE_TIME` are in the acceptable format.","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"evanyan13"},"content":"    - Accepted formats:","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"evanyan13"},"content":"        - `MMM dd yyyy HHmm` e.g., Sep 22 2023 1400","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"evanyan13"},"content":"        - `dd MMM yyyy HHmm` e.g., 22 Sep 2023 1400","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"evanyan13"},"content":"        - `yyyy-MM-dd HHmm` e.g., 2023-08-22 1400","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"evanyan13"},"content":"        - `dd/MM/yyyy HHmm` e.g., 15/10/2023 1400","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"evanyan13"},"content":"## Listing tasks: `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"evanyan13"},"content":"Lists all tasks currently present in the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"evanyan13"},"content":"### Command Format: `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"evanyan13"},"content":"- This command does not require any additional parameters.","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"evanyan13"},"content":"- Adding other parameters will affect the command.","lastModifiedDate":"2023-09-22"},{"lineNumber":157,"author":{"gitId":"evanyan13"},"content":"    - eg. `list tasks` will not run the list function properly","lastModifiedDate":"2023-09-22"},{"lineNumber":158,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"evanyan13"},"content":"### Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"evanyan13"},"content":"Executing the `list` command will display all the tasks in your task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"evanyan13"},"content":"- It provides you with the task details including","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"evanyan13"},"content":"    - Task type (`T` for Todo, `D` for Deadline, `E` for Event)","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"evanyan13"},"content":"    - Completion status (`0` for incomplete, `1` for completed) and the","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"evanyan13"},"content":"      task description.","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"evanyan13"},"content":"    - Due date if application","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"evanyan13"},"content":"1. D | 0 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"evanyan13"},"content":"2. D | 1 | tp submission | Sep 19 2023 1200","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"evanyan13"},"content":"3. D | 0 | Complete ip | Sep 20 2023 1100","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"evanyan13"},"content":"### Usage Tips:","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"evanyan13"},"content":"- The `list` command is useful for getting an overview of all tasks currently in your list.","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"evanyan13"},"content":"- Use this command to review your tasks and their status.","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":183,"author":{"gitId":"evanyan13"},"content":"## Marking a task as completed: `mark`","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"evanyan13"},"content":"Marks a task as completed in the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":186,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":187,"author":{"gitId":"evanyan13"},"content":"### Command Format: `mark INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"evanyan13"},"content":"- `INDEX`: The index of the task to mark as completed.","lastModifiedDate":"2023-09-22"},{"lineNumber":190,"author":{"gitId":"evanyan13"},"content":"    - The index must be a positive integer ranging from 1 to the total number of","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"evanyan13"},"content":"      tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"evanyan13"},"content":"### Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"evanyan13"},"content":"`mark 2` will mark the task \"tp submission\" as completed in the following list:","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":197,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"evanyan13"},"content":"1. D | 0 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"evanyan13"},"content":"2. D | 0 | tp submission | Sep 19 2023 1200","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"evanyan13"},"content":"3. D | 0 | Complete ip | Sep 20 2023 1100","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"evanyan13"},"content":"After executing this command, your updated task list will look like this:","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":206,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":207,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":208,"author":{"gitId":"evanyan13"},"content":"1. D | 0 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":209,"author":{"gitId":"evanyan13"},"content":"2. D | 1 | tp submission | Sep 19 2023 1200","lastModifiedDate":"2023-09-22"},{"lineNumber":210,"author":{"gitId":"evanyan13"},"content":"3. D | 0 | Complete ip | Sep 20 2023 1100","lastModifiedDate":"2023-09-22"},{"lineNumber":211,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":212,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":213,"author":{"gitId":"evanyan13"},"content":"where `1` for task \"tp submission\" indicates that the task has been completed.","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":215,"author":{"gitId":"evanyan13"},"content":"### Usage Tips:","lastModifiedDate":"2023-09-22"},{"lineNumber":216,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":217,"author":{"gitId":"evanyan13"},"content":"- Use the `list` command to see the list of tasks and their corresponding indices.","lastModifiedDate":"2023-09-22"},{"lineNumber":218,"author":{"gitId":"evanyan13"},"content":"- Once a task is marked as completed,","lastModifiedDate":"2023-09-22"},{"lineNumber":219,"author":{"gitId":"evanyan13"},"content":"    - it will be indicated with `1` in the task status column.","lastModifiedDate":"2023-09-22"},{"lineNumber":220,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":221,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":222,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":223,"author":{"gitId":"evanyan13"},"content":"## Marking a task as incompleted: `unmark`","lastModifiedDate":"2023-09-22"},{"lineNumber":224,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":225,"author":{"gitId":"evanyan13"},"content":"### Command Format: `unmark INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":226,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":227,"author":{"gitId":"evanyan13"},"content":"- `INDEX`: The index of the task to mark as completed.","lastModifiedDate":"2023-09-22"},{"lineNumber":228,"author":{"gitId":"evanyan13"},"content":"    - The index must be a positive integer ranging from 1 to the total number of","lastModifiedDate":"2023-09-22"},{"lineNumber":229,"author":{"gitId":"evanyan13"},"content":"      tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":230,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":231,"author":{"gitId":"evanyan13"},"content":"### Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":232,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":233,"author":{"gitId":"evanyan13"},"content":"`unmark 2` will mark the task \"tp submission\" as completed in the following list:","lastModifiedDate":"2023-09-22"},{"lineNumber":234,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":235,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":236,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"evanyan13"},"content":"1. D | 1 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":238,"author":{"gitId":"evanyan13"},"content":"2. D | 1 | tp submission | Sep 19 2023 1200","lastModifiedDate":"2023-09-22"},{"lineNumber":239,"author":{"gitId":"evanyan13"},"content":"3. D | 1 | Complete ip | Sep 20 2023 1100","lastModifiedDate":"2023-09-22"},{"lineNumber":240,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":241,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":242,"author":{"gitId":"evanyan13"},"content":"After executing this command, your updated task list will look like this:","lastModifiedDate":"2023-09-22"},{"lineNumber":243,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":244,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":245,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":246,"author":{"gitId":"evanyan13"},"content":"1. D | 1 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":247,"author":{"gitId":"evanyan13"},"content":"2. D | 0 | tp submission | Sep 19 2023 1200","lastModifiedDate":"2023-09-22"},{"lineNumber":248,"author":{"gitId":"evanyan13"},"content":"3. D | 1 | Complete ip | Sep 20 2023 1100","lastModifiedDate":"2023-09-22"},{"lineNumber":249,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":250,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":251,"author":{"gitId":"evanyan13"},"content":"where `0` for task \"tp submission\" indicates that the task is uncomplete.","lastModifiedDate":"2023-09-22"},{"lineNumber":252,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":253,"author":{"gitId":"evanyan13"},"content":"### Usage Tips:","lastModifiedDate":"2023-09-22"},{"lineNumber":254,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":255,"author":{"gitId":"evanyan13"},"content":"- Use the `list` command to see the list of tasks and their corresponding indices.","lastModifiedDate":"2023-09-22"},{"lineNumber":256,"author":{"gitId":"evanyan13"},"content":"- Once a task is marked as uncompleted,","lastModifiedDate":"2023-09-22"},{"lineNumber":257,"author":{"gitId":"evanyan13"},"content":"    - it will be indicated with `0` in the task status column.","lastModifiedDate":"2023-09-22"},{"lineNumber":258,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":259,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":260,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":261,"author":{"gitId":"evanyan13"},"content":"## Deleting a task: `delete`","lastModifiedDate":"2023-09-22"},{"lineNumber":262,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":263,"author":{"gitId":"evanyan13"},"content":"Deletes a task from the Jarvis app.","lastModifiedDate":"2023-09-22"},{"lineNumber":264,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":265,"author":{"gitId":"evanyan13"},"content":"### Command Format: `delete INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":266,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":267,"author":{"gitId":"evanyan13"},"content":"- `INDEX`: The index of the task to delete.","lastModifiedDate":"2023-09-22"},{"lineNumber":268,"author":{"gitId":"evanyan13"},"content":"    - The index must be a positive integer ranging from 1 to the total number of","lastModifiedDate":"2023-09-22"},{"lineNumber":269,"author":{"gitId":"evanyan13"},"content":"      tasks in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":270,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":271,"author":{"gitId":"evanyan13"},"content":"### Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":272,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":273,"author":{"gitId":"evanyan13"},"content":"`delete 2` will delete the task \"tp submission\" in the following list","lastModifiedDate":"2023-09-22"},{"lineNumber":274,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":275,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":276,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":277,"author":{"gitId":"evanyan13"},"content":"1. D | 0 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":278,"author":{"gitId":"evanyan13"},"content":"2. D | 0 | tp submission | Sep 19 2023 1200","lastModifiedDate":"2023-09-22"},{"lineNumber":279,"author":{"gitId":"evanyan13"},"content":"3. D | 0 | Complete ip | Sep 20 2023 1100","lastModifiedDate":"2023-09-22"},{"lineNumber":280,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":281,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":282,"author":{"gitId":"evanyan13"},"content":"After executing this command, your updated task list will look like this","lastModifiedDate":"2023-09-22"},{"lineNumber":283,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":284,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":285,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":286,"author":{"gitId":"evanyan13"},"content":"1. D | 0 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":287,"author":{"gitId":"evanyan13"},"content":"2. D | 0 | Complete ip | Sep 20 2023 1100","lastModifiedDate":"2023-09-22"},{"lineNumber":288,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":289,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":290,"author":{"gitId":"evanyan13"},"content":"### Usage Tips:","lastModifiedDate":"2023-09-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":292,"author":{"gitId":"evanyan13"},"content":"- Use the `list` command to see the list of tasks and their corresponding indices.","lastModifiedDate":"2023-09-22"},{"lineNumber":293,"author":{"gitId":"evanyan13"},"content":"- Be cautious when using the `delete` command","lastModifiedDate":"2023-09-22"},{"lineNumber":294,"author":{"gitId":"evanyan13"},"content":"    - As it permanently removes a task from your list, and this action cannot be undone.","lastModifiedDate":"2023-09-22"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":296,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":298,"author":{"gitId":"evanyan13"},"content":"## Finding tasks: `find`","lastModifiedDate":"2023-09-22"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":300,"author":{"gitId":"evanyan13"},"content":"Searches for tasks containing a specific keyword in their titles and displays the matching tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":302,"author":{"gitId":"evanyan13"},"content":"### Command Format: `find KEYWORD`","lastModifiedDate":"2023-09-22"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":304,"author":{"gitId":"evanyan13"},"content":"- `KEYWORD`: The keyword to search for within task titles.","lastModifiedDate":"2023-09-22"},{"lineNumber":305,"author":{"gitId":"evanyan13"},"content":"    - The search is case-insensitive.","lastModifiedDate":"2023-09-22"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":307,"author":{"gitId":"evanyan13"},"content":"### Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":309,"author":{"gitId":"evanyan13"},"content":"Executing `find report` for the following list:","lastModifiedDate":"2023-09-22"},{"lineNumber":310,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":311,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":312,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":313,"author":{"gitId":"evanyan13"},"content":"1. D | 0 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":314,"author":{"gitId":"evanyan13"},"content":"2. D | 0 | tp submission | Sep 19 2023 1200","lastModifiedDate":"2023-09-22"},{"lineNumber":315,"author":{"gitId":"evanyan13"},"content":"3. D | 0 | Complete ip | Sep 20 2023 1100","lastModifiedDate":"2023-09-22"},{"lineNumber":316,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":318,"author":{"gitId":"evanyan13"},"content":"The result will show the tasks matching the keyword:","lastModifiedDate":"2023-09-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":320,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":321,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":322,"author":{"gitId":"evanyan13"},"content":"1. D | 0 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":324,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":325,"author":{"gitId":"evanyan13"},"content":"### Usage Tips:","lastModifiedDate":"2023-09-22"},{"lineNumber":326,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":327,"author":{"gitId":"evanyan13"},"content":"- Use the `find` command to quickly locate tasks containing specific keywords in their titles.","lastModifiedDate":"2023-09-22"},{"lineNumber":328,"author":{"gitId":"evanyan13"},"content":"- If no matching tasks are found, a message indicating this will be displayed.","lastModifiedDate":"2023-09-22"},{"lineNumber":329,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":330,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":331,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":332,"author":{"gitId":"evanyan13"},"content":"## Sorting Tasks: `sort deadline`","lastModifiedDate":"2023-09-22"},{"lineNumber":333,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":334,"author":{"gitId":"evanyan13"},"content":"Sorts the deadline tasks in the task list by their due dates.","lastModifiedDate":"2023-09-22"},{"lineNumber":335,"author":{"gitId":"evanyan13"},"content":"\u003e Note: This command does not affect other types of tasks, such as \"Todo\" or \"Event\" tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":336,"author":{"gitId":"evanyan13"},"content":"\u003e Tasks of other task type will be shifted to the back of the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":337,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":338,"author":{"gitId":"evanyan13"},"content":"### Command Format: `sort deadline`","lastModifiedDate":"2023-09-22"},{"lineNumber":339,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":340,"author":{"gitId":"evanyan13"},"content":"- This command does not require any additional parameters.","lastModifiedDate":"2023-09-22"},{"lineNumber":341,"author":{"gitId":"evanyan13"},"content":"- Adding other parameters will affect the command.","lastModifiedDate":"2023-09-22"},{"lineNumber":342,"author":{"gitId":"evanyan13"},"content":"    - eg. `sort deadline by due date` will not execute the command.","lastModifiedDate":"2023-09-22"},{"lineNumber":343,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":344,"author":{"gitId":"evanyan13"},"content":"### Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":345,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":346,"author":{"gitId":"evanyan13"},"content":"Executing `sort deadline` on the following list:","lastModifiedDate":"2023-09-22"},{"lineNumber":347,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":348,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":349,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":350,"author":{"gitId":"evanyan13"},"content":"1. D | 0 | Complete ip | Sep 20 2023 1100","lastModifiedDate":"2023-09-22"},{"lineNumber":351,"author":{"gitId":"evanyan13"},"content":"2. D | 0 | tp submission | Sep 19 2023 1200","lastModifiedDate":"2023-09-22"},{"lineNumber":352,"author":{"gitId":"evanyan13"},"content":"3. D | 0 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":353,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":354,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":355,"author":{"gitId":"evanyan13"},"content":"will update the task list to this:","lastModifiedDate":"2023-09-22"},{"lineNumber":356,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":357,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":358,"author":{"gitId":"evanyan13"},"content":"Task:","lastModifiedDate":"2023-09-22"},{"lineNumber":359,"author":{"gitId":"evanyan13"},"content":"1. D | 0 | Finish report | Sep 18 2023 1000","lastModifiedDate":"2023-09-22"},{"lineNumber":360,"author":{"gitId":"evanyan13"},"content":"2. D | 0 | tp submission | Sep 19 2023 1200","lastModifiedDate":"2023-09-22"},{"lineNumber":361,"author":{"gitId":"evanyan13"},"content":"3. D | 0 | Complete ip | Sep 20 2023 1100","lastModifiedDate":"2023-09-22"},{"lineNumber":362,"author":{"gitId":"evanyan13"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":363,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":364,"author":{"gitId":"evanyan13"},"content":"### Usage Tips:","lastModifiedDate":"2023-09-22"},{"lineNumber":365,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":366,"author":{"gitId":"evanyan13"},"content":"- Use the `sort deadline` command to organize your **Deadline** tasks based on their due dates.","lastModifiedDate":"2023-09-22"},{"lineNumber":367,"author":{"gitId":"evanyan13"},"content":"- It helps you prioritize tasks with earlier deadlines.","lastModifiedDate":"2023-09-22"},{"lineNumber":368,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":369,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":370,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":371,"author":{"gitId":"evanyan13"},"content":"## Exiting Jarvis: `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":372,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":373,"author":{"gitId":"evanyan13"},"content":"Exits the Jarvis application, saving any changes to tasks and displaying a farewell message.","lastModifiedDate":"2023-09-22"},{"lineNumber":374,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":375,"author":{"gitId":"evanyan13"},"content":"### Command Format: `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":376,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":377,"author":{"gitId":"evanyan13"},"content":"- This command does not require any additional parameters.","lastModifiedDate":"2023-09-22"},{"lineNumber":378,"author":{"gitId":"evanyan13"},"content":"- Adding other parameters will affect the command.","lastModifiedDate":"2023-09-22"},{"lineNumber":379,"author":{"gitId":"evanyan13"},"content":"    - eg. `bye jarvis` will not exit the application.","lastModifiedDate":"2023-09-22"},{"lineNumber":380,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":381,"author":{"gitId":"evanyan13"},"content":"### Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":382,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":383,"author":{"gitId":"evanyan13"},"content":"Executing the `bye` command will exit the Jarvis application after saving any changes to tasks. This command does not","lastModifiedDate":"2023-09-22"},{"lineNumber":384,"author":{"gitId":"evanyan13"},"content":"have specific examples or outcomes beyond closing the application.","lastModifiedDate":"2023-09-22"},{"lineNumber":385,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":386,"author":{"gitId":"evanyan13"},"content":"### Usage Tips:","lastModifiedDate":"2023-09-22"},{"lineNumber":387,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":388,"author":{"gitId":"evanyan13"},"content":"- Use the `bye` command when you want to exit the Jarvis application.","lastModifiedDate":"2023-09-22"},{"lineNumber":389,"author":{"gitId":"evanyan13"},"content":"- All changes to your tasks are automatically saved before exiting.","lastModifiedDate":"2023-09-22"},{"lineNumber":390,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":391,"author":{"gitId":"evanyan13"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":392,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":393,"author":{"gitId":"evanyan13"},"content":"## Command Summary","lastModifiedDate":"2023-09-22"},{"lineNumber":394,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":395,"author":{"gitId":"evanyan13"},"content":"| Action                  | Format, Examples                                                                                                                          |","lastModifiedDate":"2023-09-22"},{"lineNumber":396,"author":{"gitId":"evanyan13"},"content":"|-------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-22"},{"lineNumber":397,"author":{"gitId":"evanyan13"},"content":"| Add Todo Task           | `todo TASK_DESCRIPTION`\u003cbr\u003ee.g., `todo Buy groceries`                                                                                     |","lastModifiedDate":"2023-09-22"},{"lineNumber":398,"author":{"gitId":"evanyan13"},"content":"| Add Deadline Task       | `deadline TASK_DESCRIPTION by DUE_DATE`\u003cbr\u003ee.g., `deadline Submit report by Sep 22 2023 1400`                                             |","lastModifiedDate":"2023-09-22"},{"lineNumber":399,"author":{"gitId":"evanyan13"},"content":"| Add Event Task          | `event TASK_DESCRIPTION from START_DATE_TIME to END_DATE_TIME`\u003cbr\u003ee.g., `event Attend conference from 15/10/2023 1400 to 16/10/2023 1600` |","lastModifiedDate":"2023-09-22"},{"lineNumber":400,"author":{"gitId":"evanyan13"},"content":"| List Tasks              | `list`                                                                                                                                    |","lastModifiedDate":"2023-09-22"},{"lineNumber":401,"author":{"gitId":"evanyan13"},"content":"| Mark Task as Completed  | `mark INDEX`\u003cbr\u003ee.g., `mark 2`                                                                                                            |","lastModifiedDate":"2023-09-22"},{"lineNumber":402,"author":{"gitId":"evanyan13"},"content":"| Mark Task as Incomplete | `unmark INDEX`\u003cbr\u003ee.g., `unmark 2`                                                                                                        |","lastModifiedDate":"2023-09-22"},{"lineNumber":403,"author":{"gitId":"evanyan13"},"content":"| Delete Task             | `delete INDEX`\u003cbr\u003ee.g., `delete 2`                                                                                                        |","lastModifiedDate":"2023-09-22"},{"lineNumber":404,"author":{"gitId":"evanyan13"},"content":"| Find Tasks              | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003ee.g., `find report`                                                                                     |","lastModifiedDate":"2023-09-22"},{"lineNumber":405,"author":{"gitId":"evanyan13"},"content":"| Sort Deadline Tasks     | `sort deadline`                                                                                                                           |","lastModifiedDate":"2023-09-22"},{"lineNumber":406,"author":{"gitId":"evanyan13"},"content":"| Exit Jarvis             | `bye`                                                                                                                                     |","lastModifiedDate":"2023-09-22"},{"lineNumber":407,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"evanyan13":376,"-":31}},{"path":"src/main/java/jarvis/Jarvis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.JarvisException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.parser.Parser;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":" * The main class for Jarvis application, a CLI chat-bot.","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":" * It initialises and manages the core components of the application.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":" * Namely: ui, storage, taskList, and commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"public class Jarvis {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"     * Constructor for Jarvis class.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    public Jarvis() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        taskList.setTasks(storage.loadTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"     * Responds to user input by parsing and executing commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"     * @param userInput The input provided by the user through CLI.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    public String respond(final String userInput) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"            assert userInput !\u003d null : \"Command/User Input cannot be null\";","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"            Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"            taskList.setTasks(storage.loadTasks());","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"            return command.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        } catch (JarvisException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"            return ui.printError(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"evanyan13":47}},{"path":"src/main/java/jarvis/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.MainWindow;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    private Jarvis jarvis \u003d new Jarvis();","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/views/MainWindow.fxml\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"            fxmlLoader.\u003cMainWindow\u003e getController().setJarvis(jarvis);","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"            stage.show();","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"evanyan13":31}},{"path":"src/main/java/jarvis/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":" * Represents the exit command for the Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"     * Executes the bye command by displaying a farewell message, saving tasks, and exiting the application.","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"     * @param ui       The Ui for user interface interactions.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"     * @param storage  The Storage for saving tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"        assert taskList !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"        storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"        return ui.printBye();","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"evanyan13":25}},{"path":"src/main/java/jarvis/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":" * Interface to define the methods required in Command classes","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"public interface Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidIndexException, InvalidTaskFormatException;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"evanyan13":14}},{"path":"src/main/java/jarvis/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import jarvis.parser.Parser;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":" * Represents a command to add a \"Deadline\" task in the Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"@SuppressWarnings(\"checkstyle:DeclarationOrder\")","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    private static final int COMMAND_LENGTH \u003d 9;","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    private String userInput;","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    public DeadlineCommand(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"     * Executes the deadline command by adding a new \"Deadline\" task to the task","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"     * list.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"     * @param ui       The Ui for user interface interactions.","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"     * @param storage  The Storage for saving tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidIndexException      If an invalid index is provided.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidTaskFormatException If the task format is invalid.","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"            throws InvalidIndexException, InvalidTaskFormatException {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        if (userInput.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidTaskFormatException(null);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"        assert taskList !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"        int indexOfBy \u003d userInput.indexOf(\"by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"        if (indexOfBy \u003d\u003d 1) {","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidIndexException(null);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"            return setDeadline(taskList, ui, storage, indexOfBy);","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"        } catch (InvalidDateTimeFormatException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"    private String setDeadline(TaskList taskList, Ui ui, Storage storage, int indexOfBy)","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"            throws InvalidDateTimeFormatException {","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"        String taskTitle \u003d userInput.substring(COMMAND_LENGTH, indexOfBy).trim();","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"        String dueDate \u003d userInput.substring(indexOfBy + 2).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"        LocalDateTime formattedDueDate \u003d Parser.parseStringToDateTime(dueDate);","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"        System.out.println(formattedDueDate);","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        Deadline deadline \u003d new Deadline(taskTitle, formattedDueDate, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"        storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"        return ui.printResponse(\"Yes Master! I\u0027ve added this task: \\n\" + \"\\t\" + deadline.toString() + \"\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"                + \"    Master, you have \" + taskList.getTaskCount() + \" tasks in the list.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"evanyan13":69}},{"path":"src/main/java/jarvis/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":" * Represents a command to delete a task in the Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    private String userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"     * Executes the delete command by removing the specified task from the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     * @param ui       The Ui for user interface interactions.","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"     * @param storage  The Storage for saving tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidIndexException If an invalid index is provided.","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"        assert taskList !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"        int index \u003d Integer.parseInt(splitUserInput[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"        if (index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d taskList.getTaskCount()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"            Task removedTask \u003d taskList.deleteTask(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"            storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"            return ui.printResponse(\"Noted Master! I\u0027ve removed this task:\\n\" + \"\\t\" + removedTask.toString() + \"\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"                    + \"    Master, you have \" + taskList.getTaskCount() + \" tasks in the list.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidIndexException(\"    Please indicate which task you wish to DELETE?\\n\" + \"    From 1 to \"","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"                    + taskList.getTaskCount() + \"\\n\" + \"    Current Index: \" + index);","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"evanyan13":44}},{"path":"src/main/java/jarvis/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import jarvis.parser.Parser;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":" * Represents a command to add an \"Event\" task in the Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    private String userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    public EventCommand(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"     * Executes the event command by adding a new \"Event\" task to the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"     * @param ui       The Ui for user interface interactions.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"     * @param storage  The Storage for saving tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidIndexException      If an invalid index is provided.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidTaskFormatException If the task format is invalid.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    @SuppressWarnings(\"checkstyle:MissingJavadocMethod\")","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"            throws InvalidIndexException, InvalidTaskFormatException {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"        if (userInput.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidTaskFormatException(null);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        assert taskList !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"        int indexOfFrom \u003d userInput.indexOf(\"from\");","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"        int indexOfTo \u003d userInput.indexOf(\"to\");","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"        if (indexOfFrom \u003d\u003d 1 || indexOfTo \u003d\u003d 1 \u0026\u0026 indexOfFrom \u003e\u003d indexOfTo) {","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidIndexException(null);","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"            return setEvent(taskList, ui, storage, indexOfFrom, indexOfTo);","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        } catch (InvalidDateTimeFormatException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"    private String setEvent(TaskList taskList, Ui ui, Storage storage, int indexOfFrom, int indexOfTo)","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"            throws InvalidDateTimeFormatException {","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"        String taskTitle \u003d userInput.substring(6, indexOfFrom).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"        String fromDateTime \u003d userInput.substring(indexOfFrom + 4, indexOfTo).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"        String toDateTime \u003d userInput.substring(indexOfTo + 2).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"        LocalDateTime formattedFromTime \u003d Parser.parseStringToDateTime(fromDateTime);","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"        LocalDateTime formattedToTime \u003d Parser.parseStringToDateTime(toDateTime);","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"        Event event \u003d new Event(taskTitle, formattedFromTime, formattedToTime, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        taskList.addTask(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"        storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"        return ui.printResponse(\"Yes Master! I\u0027ve added this task: \\n\" + \"\\t\" + event.toString() + \"\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"                + \"    Master, you have \" + taskList.getTaskCount() + \" tasks in the list.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"evanyan13":69}},{"path":"src/main/java/jarvis/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":" * Represents a command to find and display tasks containing a specific keyword in their titles.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    private String userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    public FindCommand(String userInput) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     * Executes the FindCommand to search for tasks containing the specified keyword in their titles.","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"     * @param taskList The TaskList containing the tasks to search within.","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"     * @param ui       The Ui to display responses and results.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"     * @param storage  The Storage for saving tasks (not used in this command).","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidTaskFormatException If an invalid task format is encountered.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidTaskFormatException {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        if (userInput.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidTaskFormatException(null);","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"        assert taskList !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d findTasks(taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"        return getResponse(ui, foundTasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    private ArrayList\u003cTask\u003e findTasks(TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        int indexOfFind \u003d userInput.indexOf(\"find\");","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"        String keyword \u003d userInput.substring(indexOfFind + 4).trim().toLowerCase();","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"        return taskList.getTaskList()","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"                .stream()","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"                .filter(task -\u003e task.getTitle().toLowerCase().contains(keyword))","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"    private static String getResponse(Ui ui, ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"            return ui","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"                    .printResponse(\"No matching task is found, Master. \"","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"                            + \"Please check your spelling or use another word\");","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"            return ui.printTasks(foundTasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"evanyan13":60}},{"path":"src/main/java/jarvis/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-23"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-23"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"public class HelpCommand implements Command{","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidIndexException, InvalidTaskFormatException {","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"        return ui.printHelpMessage();","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-23"}],"authorContributionMap":{"evanyan13":13}},{"path":"src/main/java/jarvis/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":" * Represents a command to list the tasks currently present in the Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"     * Executes the list command, which lists the tasks currently present in the","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"     * Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"     * @param taskList The TaskList containing the tasks to be listed.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"     * @param ui       The Ui for user interface interactions.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"     * @param storage  The Storage for saving tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"            return ui.printResponse(\"Congratulations Master!\\n\" + \"There is no task at the moment!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"            storage.loadTasks();","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"            return ui.printTasks(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"evanyan13":33}},{"path":"src/main/java/jarvis/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":" * Represents a command to mark a task as completed in the Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    private String userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    public MarkCommand(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"     * Executes the mark command by marking the specified task as completed.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     * @param ui       The Ui for user interface interactions.","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"     * @param storage  The Storage for saving tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidIndexException If the task index provided in the user input is invalid.","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"        if (userInput.length() \u003c\u003d 4) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"            return ui.printResponse(\"Master, please indicate which task you wish to mark DONE?\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"                    + \"from 1 to \" + taskList.getTaskCount());","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"        assert taskList !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"        int index \u003d Integer.parseInt(splitUserInput[1]);","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"        if (index \u003c 1 \u0026\u0026 index \u003e taskList.getTaskCount()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidIndexException(null);","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        return markTask(taskList, ui, storage, index);","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"    private static String markTask(TaskList taskList, Ui ui, Storage storage, int index) {","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"        Task task \u003d taskList.getTask(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"        task.markCompleted();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        return ui.printTaskStatus(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"evanyan13":51}},{"path":"src/main/java/jarvis/commands/SortDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":" * Represents a command to sort deadline tasks by their dueDate.","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"public class SortDeadlineCommand implements Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"            throws InvalidIndexException, InvalidTaskFormatException {","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"        ArrayList\u003cTask\u003e sortedDeadlines \u003d taskList.sortTaskByDueDate();","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"        storage.saveTasks(sortedDeadlines);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"        return ui.printFilteredTasks(\"Deadline by due date\", sortedDeadlines);","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"evanyan13":24}},{"path":"src/main/java/jarvis/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":" * Represents a command to add a Todo task in the Jarvis app.","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    private String userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    public TodoCommand(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"     * Executes the todo command by adding a new Todo task to the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"     * @param ui       The Ui for user interface interactions.","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"     * @param storage  The Storage for saving tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidIndexException      If an invalid index is provided.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidTaskFormatException If the task format is invalid.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"            throws InvalidIndexException, InvalidTaskFormatException {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        if (userInput.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidTaskFormatException(null);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"        return setTodo(taskList, ui, storage);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    private String setTodo(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        String taskTitle \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        Todo todo \u003d new Todo(taskTitle, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"        storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"        return ui.printResponse(\"Yes Master! I\u0027ve added this task: \\n\" + \"\\t\" + todo.toString() + \"\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"                + \"    Master, you have \" + taskList.getTaskCount() + \" tasks in the list.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"evanyan13":47}},{"path":"src/main/java/jarvis/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidIndexException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.storage.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":" * Represents a command to mark a task as uncompleted in the Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    private String userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    public UnmarkCommand(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"     * Executes the unmark command by marking the specified task as uncompleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"     * @param ui       The Ui for user interface interactions.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     * @param storage  The Storage for saving tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidIndexException If the task index provided in the user input is","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"     *                               invalid.","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"        if (userInput.length() \u003c\u003d 4) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"            return ui.printResponse(\"Master, please indicate which task you wish to mark DONE?\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"                    + \"from 1 to \" + taskList.getTaskCount());","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"        int index \u003d Integer.parseInt(splitUserInput[1]);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"        if (index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d taskList.getTaskCount()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidIndexException(null);","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        return unmarkTask(taskList, ui, storage, index);","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"    private static String unmarkTask(TaskList taskList, Ui ui, Storage storage, int index) {","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"        Task task \u003d taskList.getTask(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"        task.unmarkCompleted();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"        storage.saveTasks(taskList.getTaskList());","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        return ui.printTaskStatus(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"evanyan13":50}},{"path":"src/main/java/jarvis/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":" * Represents an exception thrown when an invalid command is provided to Jarvis.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"public class InvalidCommandException extends JarvisException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"     * Returns exception message","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"     * @param message exception message","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"        super(\"Sorry Master, I\u0027m not 100% sure what that means?\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"                + \"Can you provide me with a more clear command please?\");","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":16}},{"path":"src/main/java/jarvis/exceptions/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":" * Represents an exception thrown when an invalid DateTime format is provided to Jarvis.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"public class InvalidDateTimeFormatException extends JarvisException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"     * Returns suggested DateTime Format if an invalid format is entered by the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"     * @param message","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"    public InvalidDateTimeFormatException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"        super(\"     Please enter a correct DateTime Format Example: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"                    + \"     \\\"Nov 12 2022 1200\\\"\" + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"                    + \"     \\\"12 Nov 2022 1200\\\"\" + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"                    + \"     \\\"2022-11-12 1200\\\"\" + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"                    + \"     \\\"12/11/2022 1200\\\"\" + \"\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"                    + \"\\tYou have entered: \" + message + \"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"evanyan13":19}},{"path":"src/main/java/jarvis/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":" * Represents an exception thrown when an invalid index is provided to Jarvis.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"public class InvalidIndexException extends JarvisException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    public InvalidIndexException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"        super(\"    Master, this appears to be an invalid index.\\n\" + message);","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":10}},{"path":"src/main/java/jarvis/exceptions/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":" * Represents an exception thrown when an invalid Task format is provided to Jarvis.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"public class InvalidTaskFormatException extends JarvisException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    public InvalidTaskFormatException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"        super(\"Master, please provide me with the correct format.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":10}},{"path":"src/main/java/jarvis/exceptions/JarvisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.exceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":" * Represents a custom exception class for exceptions specific to Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"public class JarvisException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"    public JarvisException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":10}},{"path":"src/main/java/jarvis/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.gui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":" * The Dialog class control represents a dialog box consisting of an ImageView","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":" * to represent the speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"    private static final int MESSAGE_BOX_WIDTH \u003d 350;","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    private static final int ARC_VALUE \u003d 40;","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    private static final int MAX_TEXT_LEN \u003d 50;","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    private static final int PFP_SIZE \u003d 30;","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"     * Creates a new instance of DialogBox with the specified text and image.","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"     * @param message The text content of the dialog box.","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"     * @param img     The image to be displayed in the dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    private DialogBox(String message, Image img, boolean isUser) {","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/DialogBox.fxml\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"        if (isUser) {","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"            buildDialogBox(message, img, true);","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"            buildDialogBox(message, img, false);","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"     * Creates a user dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"     * @param text The text content of the user dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"     * @param img  The image to be displayed for the user dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"     * @return A DialogBox representing the user\u0027s dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"     * Creates a Jarvis dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"     * @param text The text content of the Jarvis dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"     * @param img  The image to be displayed for the Jarvis dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"     * @return A DialogBox representing Jarvis\u0027s dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"    public static DialogBox getJarvisDialog(String text, Image img) {","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"        var db \u003d new DialogBox(text, img, false);","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"        db.flip();","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"        return db;","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"    private void flip() {","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"evanyan13"},"content":"    private void buildDialogBox(String message, Image img, boolean isUser) {","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"        Text formattedText \u003d createText(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"        formattedText.getStyleClass().add(\"dialog-text\");","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"        Circle circleImage \u003d getCircularImg(img);","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"        if (isUser) {","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"evanyan13"},"content":"            formattedText.setFill(Color.WHITE);","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"            StackPane dialogBox \u003d createDialogBox(formattedText, Color.rgb(2, 125, 254));","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"            this.getChildren().addAll(dialogBox, circleImage);","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"evanyan13"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"            StackPane dialogBox \u003d createDialogBox(formattedText, Color.rgb(233, 233, 233));","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"            this.getChildren().addAll(dialogBox, circleImage);","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"    private static Circle getCircularImg(Image img) {","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"        Circle circleImage \u003d new Circle(0, 0, PFP_SIZE);","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"evanyan13"},"content":"        circleImage.setFill(new ImagePattern(img));","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"evanyan13"},"content":"        return circleImage;","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"evanyan13"},"content":"    private StackPane createDialogBox(Text text, Color fillColor) {","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"evanyan13"},"content":"        Rectangle messageBox \u003d createMessageBox(text, fillColor);","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"        StackPane stackPane \u003d new StackPane(messageBox, text);","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"evanyan13"},"content":"        styleDialogBox(stackPane);","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"evanyan13"},"content":"        return stackPane;","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"evanyan13"},"content":"    private static void styleDialogBox(StackPane stackPane) {","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"evanyan13"},"content":"        StackPane.setMargin(stackPane, new Insets(10, 0, 10, 0)); // Margin at top and bottom","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"evanyan13"},"content":"        stackPane.setPadding(new Insets(10));","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"evanyan13"},"content":"    private Rectangle createMessageBox(Text formattedText, Color fillColor) {","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"evanyan13"},"content":"        assert formattedText !\u003d null : \"Text cannot be null.\";","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"evanyan13"},"content":"        Rectangle messageBox \u003d createCustomMessageBox(formattedText, fillColor);","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"evanyan13"},"content":"        styleMessageBox(messageBox, fillColor);","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"evanyan13"},"content":"        return messageBox;","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"evanyan13"},"content":"    private static Rectangle createCustomMessageBox(Text formattedText, Color fillColor) {","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"evanyan13"},"content":"        double messageBoxWidth \u003d formattedText.getBoundsInLocal().getWidth() + 40;","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"evanyan13"},"content":"        double messageBoxHeight \u003d formattedText.getBoundsInLocal().getHeight() + 20;","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"evanyan13"},"content":"        Rectangle styledMessageBox \u003d new Rectangle(messageBoxWidth, messageBoxHeight);","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"evanyan13"},"content":"        styleMessageBox(styledMessageBox, fillColor);","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"evanyan13"},"content":"        return styledMessageBox;","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"evanyan13"},"content":"    private static void styleMessageBox(Rectangle messageBox, Color fillColor) {","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"evanyan13"},"content":"        messageBox.setFill(fillColor);","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"evanyan13"},"content":"        messageBox.setArcWidth(ARC_VALUE);","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"evanyan13"},"content":"        messageBox.setArcHeight(ARC_VALUE);","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":144,"author":{"gitId":"evanyan13"},"content":"     * Creates a Text node containing the provided string and applies text wrapping.","lastModifiedDate":"2023-09-23"},{"lineNumber":145,"author":{"gitId":"evanyan13"},"content":"     * Section on text wrapping inspired by @tjingsheng","lastModifiedDate":"2023-09-23"},{"lineNumber":146,"author":{"gitId":"evanyan13"},"content":"     * https://github.com/tjingsheng/","lastModifiedDate":"2023-09-23"},{"lineNumber":147,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":148,"author":{"gitId":"evanyan13"},"content":"     * @param string The string to be converted to a Text node.","lastModifiedDate":"2023-09-23"},{"lineNumber":149,"author":{"gitId":"evanyan13"},"content":"     * @return A Text node with text wrapping applied.","lastModifiedDate":"2023-09-23"},{"lineNumber":150,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":151,"author":{"gitId":"evanyan13"},"content":"    private Text createText(String string) {","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"evanyan13"},"content":"        assert string !\u003d null : \"String to be converted cannot be null\";","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"evanyan13"},"content":"        return wrapText(new Text(string));","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":157,"author":{"gitId":"evanyan13"},"content":"     * Applies text wrapping to the given Text node.","lastModifiedDate":"2023-09-23"},{"lineNumber":158,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":159,"author":{"gitId":"evanyan13"},"content":"    private Text wrapText(Text text) {","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"evanyan13"},"content":"        String originalText \u003d text.getText();","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"evanyan13"},"content":"        String[] lines \u003d originalText.split(\"\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"evanyan13"},"content":"        StringBuilder wrappedText \u003d new StringBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"evanyan13"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"evanyan13"},"content":"            wrapLine(line, wrappedText);","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"evanyan13"},"content":"        return new Text(wrappedText.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":173,"author":{"gitId":"evanyan13"},"content":"     * Wraps a single line of text with a specified maximum line length.","lastModifiedDate":"2023-09-23"},{"lineNumber":174,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":175,"author":{"gitId":"evanyan13"},"content":"    private static void wrapLine(String line, StringBuilder wrappedText) {","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"evanyan13"},"content":"        String[] words \u003d line.split(\"\\\\s+\");","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"evanyan13"},"content":"        StringBuilder currentLine \u003d new StringBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"evanyan13"},"content":"        for (String word : words) {","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"evanyan13"},"content":"            if (word.length() \u003e MAX_TEXT_LEN) {","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"evanyan13"},"content":"                wrapLongWord(word, currentLine);","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"evanyan13"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"evanyan13"},"content":"            if (currentLine.length() + word.length() \u003c\u003d MAX_TEXT_LEN) {","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"evanyan13"},"content":"                currentLine.append(word).append(\" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"evanyan13"},"content":"            } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"evanyan13"},"content":"                wrappedText.append(currentLine.toString().trim()).append(\"\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"evanyan13"},"content":"                currentLine \u003d new StringBuilder(word + \" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"evanyan13"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"evanyan13"},"content":"        if (currentLine.length() \u003e 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"evanyan13"},"content":"            wrappedText.append(currentLine.toString().trim()).append(\"\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":197,"author":{"gitId":"evanyan13"},"content":"     * Wraps a long word that exceeds the specified maximum line length.","lastModifiedDate":"2023-09-23"},{"lineNumber":198,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":199,"author":{"gitId":"evanyan13"},"content":"    private static void wrapLongWord(String word, StringBuilder wrappedText) {","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"evanyan13"},"content":"        int startIndex \u003d 0;","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"evanyan13"},"content":"        while (startIndex \u003c word.length()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"evanyan13"},"content":"            int endIndex \u003d Math.min(startIndex + MAX_TEXT_LEN, word.length());","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"evanyan13"},"content":"            String subWord \u003d word.substring(startIndex, endIndex);","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"evanyan13"},"content":"            wrappedText.append(subWord).append(\"\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"evanyan13"},"content":"            startIndex \u003d endIndex;","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"evanyan13":209}},{"path":"src/main/java/jarvis/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.gui;","lastModifiedDate":"2023-09-23"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import jarvis.Main;","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"public class Launcher {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"evanyan13":13}},{"path":"src/main/java/jarvis/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.gui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.util.Timer;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.Jarvis;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":" * The MainWindow class controls the main GUI window of the Jarvis app. It controls the user interface","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":" * elements and their interactions with the Jarvis chatbot.","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    private ImageView sendButtonArrow;","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    private ImageView introImage;","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    private Jarvis jarvis \u003d new Jarvis();","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    private Image jarvisImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jarvis.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"     * Initializes the MainWindow and binds the scrollPane to the height of the dialog container.","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"     * Sets the Jarvis instance for the MainWindow and starts the introductory conversation.","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"     * @param jarvis The Jarvis chatbot instance.","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"    public void setJarvis(Jarvis jarvis) {","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"        this.jarvis \u003d jarvis;","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"        startIntro();","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"     * Starts the conversation by printing an intro message from Jarvis.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"    private void startIntro() {","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"        setIntroGif();","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        String intro \u003d ui.printIntro();","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getJarvisDialog(intro, jarvisImage));","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"    private void setIntroGif() {","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"        Image gifImage \u003d new Image(getClass().getResourceAsStream(\"/images/robot.gif\"));","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"        introImage.setImage(gifImage);","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"     * them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"        String response \u003d jarvis.respond(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"                DialogBox.getJarvisDialog(response, jarvisImage));","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"        // Check if the response is the farewell message","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"        if (response.equals(ui.printBye())) {","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"            // Exit the application after a delay","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"            Timer timer \u003d new Timer();","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"            timer.schedule(new TimerTask() {","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"evanyan13"},"content":"                @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"evanyan13"},"content":"                public void run() {","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"                    System.exit(0);","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"                }","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"            }, 1000); // 3000 milliseconds (3 seconds)","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"evanyan13":97}},{"path":"src/main/java/jarvis/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.gui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":" * The user interface class responsible for displaying information to the user on the CLI.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"public class Ui {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"     * Default date and time format used n Jarvis app.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"MMM dd yyyy HHmm\";","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    private static final String HELP_MENU \u003d \"Here are the list of quick commands to get started with:\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"            + \"1. Add Todo Task: [todo TASK_DESCRIPTION]\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"            + \"2. Add Deadline Task: [deadline TASK_DESCRIPTION by DUE_DATE]\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"            + \"3. Add Event Task: [event TASK_DESCRIPTION from START_DATE_TIME to END_DATE_TIME]\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"            + \"4. List Tasks: [list]\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"            + \"5. Delete Task: [delete INDEX]\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"            + \"6. Mark Task as completed/incomplete: [mark/unmark INDEX]\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"            + \"7. Find Tasks: [find KEYWORD]\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"            + \"8. Sort Deadline Tasks: [sort deadline]\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"            + \"9. Help Menu: [help]\\n\"","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"            + \"10. Exit App: [bye]\\n\";","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"    public static String getDefaultDateTimeFormat() {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        return DATE_TIME_FORMAT;","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"     * Prints the intro message when Jarvis starts.","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    public String printIntro() {","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"        return \"Hi Master! I\u0027m your personal assistant: JARVIS! \\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"                + \"    How can I serve you today? \\n\\n\" + HELP_MENU;","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"     * Prints response message to the user\u0027s command.","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"    public String printResponse(String response) {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"        return response;","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"    public String printBye() {","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        return \"Bye Master. It has been my honour to serve you!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"     * Prints a list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"     * @param tasks An ArrayList of Task objects to be printed.","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"     * @return A formatted string representing the list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"    public String printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"        assert tasks.size() \u003e 0 : \"A list of tasks should be provided\";","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"        String outputString;","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"        outputString \u003d \"    Tasks:\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"            outputString +\u003d (i + 1) + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"        return outputString;","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"     * Prints the status of a task, indicating whether it is completed or uncompleted.","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"     * @param task The Task whose status is to be printed.","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"     * @return A string indicating the change in status of the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"    public String printTaskStatus(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"        return \"Understood Master. I\u0027ve marked this task as \" + (task.isCompleted() ? \"completed\" : \"uncompleted\")","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"                + \"\\n\" + \"\\t\" + task.toString();","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"     * Prints an error message.","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"    public String printError(String error) {","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"        return error + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"evanyan13"},"content":"     * Generates a formatted string to display a list of filtered tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"     * @param title A tag representing the filter featured.","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"     * @param tasks An ArrayList of Task objects representing the filtered tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"     * @return A formatted string displaying the filtered tasks with the specified title.","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"evanyan13"},"content":"    public String printFilteredTasks(String title, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"        String filterTasks \u003d printTasks(tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"        return \"Filtered List: \" + title","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"evanyan13"},"content":"                + \"\\n\\n\" + filterTasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"    public String printHelpMessage() {","lastModifiedDate":"2023-09-23"},{"lineNumber":102,"author":{"gitId":"evanyan13"},"content":"        return HELP_MENU;","lastModifiedDate":"2023-09-23"},{"lineNumber":103,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":104}},{"path":"src/main/java/jarvis/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.parser;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.DeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.EventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.FindCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.HelpCommand;","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.SortDeadlineCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.TodoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"import jarvis.commands.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Deadline;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Event;","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Task;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Todo;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":" * The Parser class is responsible for parsing user input and converting it into executable commands and","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":" * tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"     * Parses user input and returns the corresponding command.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"     * @return The corresponding command.","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidCommandException If the input is an invalid command.","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    public static Command parseCommand(final String userInput) throws InvalidCommandException {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"        return generateCommand(userInput, splitUserInput);","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"    private static Command generateCommand(String userInput, String[] splitUserInput)","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"            throws InvalidCommandException {","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        assert userInput !\u003d null \u0026\u0026 !userInput.isEmpty() : \"User input should not be null or empty\";","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        } else if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"        } else if (userInput.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2023-09-23"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-09-23"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"        } else if (userInput.equalsIgnoreCase(\"sort deadline\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"            return new SortDeadlineCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"        } else if (splitUserInput[0].startsWith(\"mark\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"            return new MarkCommand(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"        } else if (splitUserInput[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"            return new UnmarkCommand(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"        } else if (splitUserInput[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        } else if (splitUserInput[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"            return new FindCommand(userInput);","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"        } else if (splitUserInput[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"            return new TodoCommand(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"        } else if (splitUserInput[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"            return new DeadlineCommand(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"        } else if (splitUserInput[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"            return new EventCommand(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidCommandException(null);","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"     * Parses a string representation of a task into a Task object.","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"     * @param line The string representation of the task.","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"     * @return A Task object representing the parsed task.","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidTaskFormatException If the task format is invalid.","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"    public static Task parseStringToTask(final String line) throws InvalidTaskFormatException {","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"            String[] splitLine \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"            String taskType \u003d splitLine[0].trim();","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"            boolean isCompleted \u003d Integer.parseInt(splitLine[1].trim()) \u003d\u003d 1;","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"            String taskDetails \u003d splitLine[2].trim();","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"evanyan13"},"content":"            assert !taskDetails.isEmpty() : \"Task should have description \" + taskDetails;","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"            case \"T\":","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"                return new Todo(taskDetails, isCompleted);","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"            case \"D\":","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"evanyan13"},"content":"                String deadlineByString \u003d splitLine[3].trim();","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"                LocalDateTime formattedDeadlineBy \u003d parseStringToDateTime(deadlineByString);","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"                return new Deadline(taskDetails, formattedDeadlineBy, isCompleted);","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"evanyan13"},"content":"            case \"E\":","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"                String fromTime \u003d splitLine[3].trim();","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"                String toTime \u003d splitLine[4].trim();","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"                LocalDateTime formattedFromTime \u003d parseStringToDateTime(fromTime);","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"evanyan13"},"content":"                LocalDateTime formattedToTime \u003d parseStringToDateTime(toTime);","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"evanyan13"},"content":"                return new Event(taskDetails, formattedFromTime, formattedToTime, isCompleted);","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"            default:","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"                throw new InvalidTaskFormatException(\"Unknown Task Type: \" + taskType);","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"evanyan13"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"evanyan13"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidTaskFormatException(\"Invalid task format: \" + line);","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"evanyan13"},"content":"     * Parses a date and time string into a LocalDateTime object.","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"evanyan13"},"content":"     * @param inputDateTime The date and time string to parse.","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"evanyan13"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"evanyan13"},"content":"     * @throws InvalidDateTimeFormatException If the input date and time format is invalid.","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"evanyan13"},"content":"    public static LocalDateTime parseStringToDateTime(final String inputDateTime)","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"evanyan13"},"content":"            throws InvalidDateTimeFormatException {","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"evanyan13"},"content":"        List\u003cString\u003e inputFormats \u003d getInputFormats();","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"evanyan13"},"content":"        return generateLocalDateTime(inputDateTime, inputFormats);","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"evanyan13"},"content":"    private static List\u003cString\u003e getInputFormats() {","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"evanyan13"},"content":"        List\u003cString\u003e inputFormats \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"evanyan13"},"content":"        inputFormats.add(Ui.getDefaultDateTimeFormat());","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"evanyan13"},"content":"        inputFormats.add(\"dd MMM yyyy HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"evanyan13"},"content":"        inputFormats.add(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"evanyan13"},"content":"        inputFormats.add(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"evanyan13"},"content":"        return inputFormats;","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"evanyan13"},"content":"    private static LocalDateTime generateLocalDateTime(String inputDateTime, List\u003cString\u003e inputFormats)","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"evanyan13"},"content":"            throws InvalidDateTimeFormatException {","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"evanyan13"},"content":"        LocalDateTime result \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"evanyan13"},"content":"        for (String inputFormat : inputFormats) {","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"evanyan13"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"evanyan13"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(inputFormat);","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"evanyan13"},"content":"                result \u003d LocalDateTime.parse(inputDateTime, formatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"evanyan13"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"evanyan13"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"evanyan13"},"content":"                continue;","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"evanyan13"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"evanyan13"},"content":"        if (result !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"evanyan13"},"content":"            return result;","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"evanyan13"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"evanyan13"},"content":"            throw new InvalidDateTimeFormatException(inputDateTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"evanyan13":153}},{"path":"src/main/java/jarvis/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import java.io.File;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"import jarvis.exceptions.InvalidTaskFormatException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"import jarvis.parser.Parser;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"import jarvis.tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":" * Storage class is responsible for storing and loading tasks from file destination.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"    private static final String FILE_DIR \u003d \"./data/\";","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    private static final String FILE_PATH \u003d \"./data/jarvis.txt\";","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"     * Initializes a new instance of the Storage class and creates necessary directories and files.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    public Storage() {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"        File fileDir \u003d new File(FILE_DIR);","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        if (!fileDir.exists()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"            fileDir.mkdir();","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"            assert fileDir.exists() : \"File Dir creation was not successful\";","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"     * Saves a list of tasks to the file destination.","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"     * @param tasks An ArrayList of task to be saved.","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH));","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"                System.out.println(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"                writer.write(task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"            writer.close();","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"     * Loads tasks from the file destination.","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"     * @return An ArrayList of tasks loaded from the storage file.","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"            String nextLine;","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"            while ((nextLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"                Task task \u003d Parser.parseStringToTask(nextLine);","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"                assert tasks.contains(task);","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"            System.err.println(\"Unable to load tasks\");","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"        } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"            System.err.println(\"Invalid Task Format when loading tasks\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"evanyan13":75}},{"path":"src/main/java/jarvis/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":" * Represents the \"Deadline\" task in Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    private LocalDateTime dueDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"     * Initializes a new instance of the Deadline task.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"     * @param title       The title or description of the deadline task.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"     * @param dueDateTime The due date and time of the deadline.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"     * @param isCompleted A boolean indicating whether the deadline task is completed or not.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    public Deadline(String title, LocalDateTime dueDateTime, boolean isCompleted) {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"        super(title, isCompleted);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"        this.dueDateTime \u003d dueDateTime;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    public LocalDateTime getDueDateTime() {","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"        return dueDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"     * Overrides the toString method to provide a custom string representation of the Deadline task.","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"     * @return A string representation of the Deadline task.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(Ui.getDefaultDateTimeFormat());","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        String formattedDueDate \u003d dueDateTime.format(formatter);","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        return \"D | \" + super.toString() + \" | \" + formattedDueDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":43}},{"path":"src/main/java/jarvis/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import jarvis.gui.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":" * Represents the \"Event\" task in Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"     * Initializes a new instance of the Event task.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"     * @param title        The title or description of the event.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"     * @param fromDateTime The starting date and time of the event.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"     * @param toDateTime   The ending date and time of the event.","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"     * @param isCompleted  A boolean indicating whether the event task is completed or not.","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    public Event(String title, LocalDateTime fromDateTime, LocalDateTime toDateTime, boolean isCompleted) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"        super(title, isCompleted);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"     * Overrides the toString method to provide a custom string representation of the Event task.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(Ui.getDefaultDateTimeFormat());","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"        String formattedFromDateTime \u003d fromDateTime.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"        String formattedToDateTime \u003d toDateTime.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        return \"E | \" + super.toString() + \" | \" + formattedFromDateTime + \" | \" + formattedToDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":42}},{"path":"src/main/java/jarvis/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":" * The Task class holds all the properties of Task objects in Jarvis app.","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":" * Represents a task with a title, completion status, and optional due date.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    private String title;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    private LocalDateTime dueDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"     * Initializes a new instance of the Task.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"     * @param title       The title or description of the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"     * @param isCompleted A boolean indicating whether the task is completed or not.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    public Task(String title, boolean isCompleted) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"     * Gets the title of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"     * @return The title of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"    public String getTitle() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        return title;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"     * @return true if the task is completed, false otherwise.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        return isCompleted;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"     * Gets the status icon of the task (1 if completed, 0 if uncompleted).","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"        return (isCompleted ? \"1 | \" : \"0 | \");","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"    public void markCompleted() {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"     * Marks the task as uncompleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"    public void unmarkCompleted() {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"     * Gets the due date of the task (null if not set).","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"     * @return The due date of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"    public LocalDateTime getDueDateTime() {","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"        return dueDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"     * Sets the due date of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"     * @param dueDateTime The due date to set for the task.","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"    public void setDueDate(LocalDateTime dueDateTime) {","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"        this.dueDateTime \u003d dueDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"     * Returns a string representation of the task, including its status icon and title.","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"evanyan13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"evanyan13"},"content":"        return getStatusIcon() + getTitle();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":92}},{"path":"src/main/java/jarvis/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":" * Represents a list of tasks in the Jarvis application.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":" * Provides methods for managing and retrieving tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"public class TaskList {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"     * Initializes a new instance of the TaskList with an empty list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"        taskList \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"     * Sets the tasks in the task list to the provided list of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"     * @param tasks The list of tasks to set in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        taskList.clear();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        taskList.addAll(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"        return taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"     * Gets the task at the specified index in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"     * Deletes the task at the specified index in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"evanyan13"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"evanyan13"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"evanyan13"},"content":"        Task removedTask \u003d taskList.get(i);","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"evanyan13"},"content":"        taskList.remove(i);","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"evanyan13"},"content":"        return removedTask;","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"evanyan13"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"evanyan13"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"evanyan13"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"evanyan13"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"evanyan13"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"evanyan13"},"content":"     * @return true if the task list is empty, false otherwise.","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"evanyan13"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"evanyan13"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"evanyan13"},"content":"     * Sorts the tasks in the task list based on their due dates, with Deadline tasks first,","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"evanyan13"},"content":"     * and other tasks at the end of the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"evanyan13"},"content":"     * @return An ArrayList of filtered Task based on dueDate.","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"evanyan13"},"content":"    public ArrayList\u003cTask\u003e sortTaskByDueDate() {","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"evanyan13"},"content":"        ArrayList\u003cTask\u003e deadlineTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"evanyan13"},"content":"        ArrayList\u003cTask\u003e remainingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"evanyan13"},"content":"        sortDeadlines(deadlineTasks, remainingTasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"evanyan13"},"content":"        return deadlineTasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"evanyan13"},"content":"    private void sortDeadlines(ArrayList\u003cTask\u003e deadlineTasks, ArrayList\u003cTask\u003e remainingTasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"evanyan13"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"evanyan13"},"content":"            if (task instanceof Deadline \u0026\u0026 task.getDueDateTime() !\u003d null) {","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"evanyan13"},"content":"                deadlineTasks.add((Task) task);","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"evanyan13"},"content":"            } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"evanyan13"},"content":"                remainingTasks.add(task);","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"evanyan13"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"evanyan13"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"evanyan13"},"content":"        deadlineTasks.sort(Comparator.comparing(Task::getDueDateTime));","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"evanyan13"},"content":"        deadlineTasks.addAll(remainingTasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":117}},{"path":"src/main/java/jarvis/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":" * Represents the \"Todo\" task in Jarvis app.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"     * Initializes a new instance of the Todo task.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"     * @param title       The title or description of the todo task.","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"     * @param isCompleted A boolean indicating whether the todo task is completed or not.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    public Todo(String title, boolean isCompleted) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"        super(title, isCompleted);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"     * Overrides the toString method to provide a custom string representation of the Todo task.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"     * @return A string representation of the Todo task.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"        return \"T | \" + super.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":27}},{"path":"src/main/resources/views/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"\u003cfx:root xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"HBox\"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"         alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"         spacing\u003d\"10.0\" xmlns:profiler\u003d\"http://javafx.com/javafx/17\" styleClass\u003d\"dialog-box\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"        \u003cStackPane fx:id\u003d\"userDialogBox\" styleClass\u003d\"dialog-box\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"        \u003cStackPane fx:id\u003d\"jarvisDialogBox\" styleClass\u003d\"dialog-box\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"evanyan13":17}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"            prefWidth\u003d\"500.0\" stylesheets\u003d\"@styles.css\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"jarvis.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"               layoutY\u003d\"600.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"               onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"               prefHeight\u003d\"70.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"               prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    \u003cStackPane layoutX\u003d\"420.0\" layoutY\u003d\"635.0\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"        \u003cCircle radius\u003d\"30.0\" fill\u003d\"blue\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"        \u003cImageView fx:id\u003d\"sendButtonArrow\"","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"                   fitHeight\u003d\"30.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"                   fitWidth\u003d\"30.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"                   preserveRatio\u003d\"true\"","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"                   onMouseClicked\u003d\"#handleUserInput\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"            \u003cImage url\u003d\"/images/sendButton.png\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"        \u003ceffect\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"            \u003cDropShadow color\u003d\"#C0C0C0\" spread\u003d\"0.1\" blurType\u003d\"TWO_PASS_BOX\" offsetY\u003d\"3\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"        \u003c/effect\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    \u003c/StackPane\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"                hvalue\u003d\"1.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"                hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"                vbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"                prefHeight\u003d\"630.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"                prefWidth\u003d\"500.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"                vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"              prefHeight\u003d\"552.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"evanyan13"},"content":"              prefWidth\u003d\"500.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"evanyan13"},"content":"              alignment\u003d\"TOP_CENTER\"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"evanyan13"},"content":"              style\u003d\"-fx-padding: 10 5 10 5\"","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"evanyan13"},"content":"        \u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"evanyan13"},"content":"            \u003cImageView fx:id\u003d\"introImage\"","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"evanyan13"},"content":"                       preserveRatio\u003d\"true\"","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"evanyan13"},"content":"                       fitWidth\u003d\"200\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"evanyan13"},"content":"                \u003cclip\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"evanyan13"},"content":"                    \u003cRectangle","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"evanyan13"},"content":"                            height\u003d\"150\"","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"evanyan13"},"content":"                            width\u003d\"200\"","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"evanyan13"},"content":"                            arcHeight\u003d\"30\"","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"evanyan13"},"content":"                            arcWidth\u003d\"30\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"evanyan13"},"content":"                \u003c/clip\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"evanyan13"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"evanyan13"},"content":"            \u003ceffect\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"evanyan13"},"content":"                \u003cDropShadow color\u003d\"#C0C0C0\" spread\u003d\"0.1\" blurType\u003d\"TWO_PASS_BOX\" offsetY\u003d\"3\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"evanyan13"},"content":"            \u003c/effect\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"evanyan13"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"evanyan13"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"evanyan13"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"evanyan13":65}},{"path":"src/test/java/jarvis/JarvisTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"public class JarvisTest {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"    private Jarvis jarvis;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"        this.jarvis \u003d new Jarvis();","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    public void testInitialization() {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"        assertNotNull(jarvis);","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"evanyan13":21}},{"path":"src/test/java/jarvis/data/jarvis.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"T | 0 | Todo 1","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"evanyan13":1}},{"path":"src/test/java/jarvis/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"package jarvis.tasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"evanyan13"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"evanyan13"},"content":"    private Task task;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"evanyan13"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"evanyan13"},"content":"        task \u003d new Task(\"Sample Task\", false);","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"evanyan13"},"content":"    public void getTitle_sampleTitle_success() {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"evanyan13"},"content":"        assertEquals(\"Sample Task\", task.getTitle());","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"evanyan13"},"content":"    public void markCompleted_markTestComplete_success() {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"        task.markCompleted();","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"evanyan13"},"content":"        assertTrue(task.isCompleted());","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"evanyan13"},"content":"    public void unmarkCompleted_unmarkTestComplete_success() {","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"        task.unmarkCompleted();","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"evanyan13"},"content":"        assertFalse(task.isCompleted());","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"evanyan13"},"content":"    @Test","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"evanyan13"},"content":"    public void testSetAndGetDueDate() {","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"evanyan13"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.of(2023, 9, 30, 12, 0);","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"evanyan13"},"content":"        task.setDueDate(dueDate);","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"evanyan13"},"content":"        LocalDateTime returnedDueDate \u003d task.getDueDateTime();","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"evanyan13"},"content":"        assertEquals(dueDate, returnedDueDate);","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"evanyan13"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"evanyan13"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"evanyan13":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"evanyan13"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"evanyan13"},"content":"deadline return book by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"evanyan13"},"content":"event project meeting from Mon 2pm to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"evanyan13"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"evanyan13"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"evanyan13"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"evanyan13"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"evanyan13"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"evanyan13"},"content":"unmark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"evanyan13"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"evanyan13"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"evanyan13":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"evanyan13"},"content":"if ! javac -classpath ../src/main/jarvis -Xlint:none -d ../bin ../src/main/jarvis/*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"evanyan13"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"evanyan13"},"content":"doc2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"evanyan13"},"content":"    echo \"Test Result: PASSED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"evanyan13"},"content":"    echo \"Test Result: FAILED\"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"evanyan13":5,"-":33}}]
