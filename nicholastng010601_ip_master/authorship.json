[{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"import Errors.DukeException;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"import Errors.InvalidTaskInput;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import Tasks.Deadlines;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import Tasks.Events;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import Tasks.ToDos;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"public class Commands {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"    static String name \u003d \"Nichbot\";","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    static int count \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    // task list to store tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    // Level-0, Function to say introduce the chatbot","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    public static void sayHello() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"        String greet \u003d String.format(","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"                        \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"                         \"Hello! I\u0027m %s, a task planning bot that will help you record your tasks.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"                         \"I currently can record 3 types of tasks. tasks to do, tasks with deadlines and events \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"                         \"Here is how you can record down your events.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"                         \"To record tasks to do, simply begin your command with \\\"todo\\\" followed by a space and the task you need to do.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"                         \"To record tasks with deadlines, simply begin your command with \\\"deadlines\\\" followed by the task and a / then the due date.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"                         \"To record events, simply begin your command with \\\"events\\\" followed by the event, / and start time , then / with the end time\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"                         \"To view your list of events, type list. \\n\" + \"To mark your events as done or undone, type in mark / unmark , followed by the index of the task \\n\"+","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"                                \"To delete tasks from the list, type delete task number, such as delete 2 \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"                                        \"Lastly, to exit the chatbot, type \\\"bye\\\" \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"                                 \"____________________________________________________________\"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"                         , name);","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(greet);","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"    // Level-0, Function to say goodbye","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    public static void sayGoodBye() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"        String bye \u003d  (","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"                \"____________________________________________________________ \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"                \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(bye);","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"    //  Level-1, Echo user input","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"    public static void echoUserInput(Task task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"    //    Level-2, Add, list","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"    public static void addList(String input) throws InvalidTaskInput {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"        // check if input begins with todo, deadline or event to categorise task type","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"        String[] wordSeparator \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"        String firstWord \u003d wordSeparator[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"        if (firstWord.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"            String taskToDo \u003d input.substring(5);","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"            // check that string is not empty after substring to remove todo;","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"            if (taskToDo.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"                throw new InvalidTaskInput();","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"            newTask \u003d new ToDos(taskToDo);","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"        if (firstWord.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"            String[] parts \u003d input.split(\"/\");","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"            /*","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"            split input array into description and deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"            \"deadline return book /by Sunday\" -\u003e parts[0] \u003d deadline return book  and parts[1] \u003d by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"            using substring, deadline return book -\u003e return book","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"            throws exception if / not used properly, leading to error in either access in values or","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"            fixing the deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"nicholastng010601"},"content":"            */","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"                throw new InvalidTaskInput();","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"nicholastng010601"},"content":"            String description \u003d parts[0].substring(9);","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"nicholastng010601"},"content":"            // check that string is not empty after substring to remove todo;","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"nicholastng010601"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"nicholastng010601"},"content":"                throw new InvalidTaskInput();","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"nicholastng010601"},"content":"            String deadline \u003d parts[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"nicholastng010601"},"content":"            newTask \u003d new Deadlines(description, deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"nicholastng010601"},"content":"        if (firstWord.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"nicholastng010601"},"content":"            String[] parts \u003d input.split(\"/\");","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"nicholastng010601"},"content":"            /*","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"nicholastng010601"},"content":"            similar logic as above. additionally, splits input into start and end time.","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"nicholastng010601"},"content":"            Throws exception if / is not used properly, leading to error in start / end time.","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"nicholastng010601"},"content":"             */","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"nicholastng010601"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"nicholastng010601"},"content":"                throw new InvalidTaskInput();","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"nicholastng010601"},"content":"            String description \u003d parts[0].substring(6);","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"nicholastng010601"},"content":"            String startTime \u003d parts[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"nicholastng010601"},"content":"            String endTime \u003d parts[2];","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"nicholastng010601"},"content":"            // Ensure that start, end and description are all filled in","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"nicholastng010601"},"content":"            if (startTime.isEmpty() || endTime.isEmpty() || description.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"nicholastng010601"},"content":"                throw new InvalidTaskInput();","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"nicholastng010601"},"content":"            newTask \u003d new Events(description, startTime, endTime);","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"nicholastng010601"},"content":"        if (newTask \u003d\u003d null) newTask \u003d new Task(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"nicholastng010601"},"content":"        tasks.add(count++, newTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"nicholastng010601"},"content":"                \"I have added this task to your list\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"nicholastng010601"},"content":"                String.format(\"[%s]\",newTask.getTaskType()) + \"[ ]\" + newTask.getDescription() + \"\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"nicholastng010601"},"content":"                String.format(\"You now have %d tasks in your list.\", count));","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"nicholastng010601"},"content":"    public static void printList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"nicholastng010601"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"nicholastng010601"},"content":"            // for each task in task[], prints out a simple line describing the task","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"nicholastng010601"},"content":"            Character taskType \u003d tasks.get(i).getTaskType();","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"nicholastng010601"},"content":"            String current \u003d String.format(\"%d: [%c][%s] %s \", i+1, taskType, tasks.get(i).getStatusIcon(),tasks.get(i));","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"nicholastng010601"},"content":"            if (tasks.get(i) instanceof Deadlines) {","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"nicholastng010601"},"content":"                current +\u003d (String.format(\"(%s)\", ((Deadlines) tasks.get(i)).getDeadline()));","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"nicholastng010601"},"content":"            } else if (tasks.get(i) instanceof Events) {","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"nicholastng010601"},"content":"                current +\u003d (String.format(\"(%s, %s)\", ((Events) tasks.get(i)).getStartTime(), ((Events) tasks.get(i)).getEndTime()));","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"nicholastng010601"},"content":"            System.out.println(current);","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"nicholastng010601"},"content":"        System.out.print(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"nicholastng010601"},"content":"    // function to mark task as done or undone","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"nicholastng010601"},"content":"    public static void markDoneOrUndone(int task, boolean done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"nicholastng010601"},"content":"        if (task \u003c 1 || task \u003e tasks.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"nicholastng010601"},"content":"            System.out.print(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"nicholastng010601"},"content":"            System.out.println(\"Invalid Input written.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"nicholastng010601"},"content":"            System.out.print(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"nicholastng010601"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"nicholastng010601"},"content":"        if (task \u003e count + 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"nicholastng010601"},"content":"            System.out.print(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"nicholastng010601"},"content":"            System.out.printf(\"Task %d has not been recorded%n\",task);","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"nicholastng010601"},"content":"            System.out.print(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"nicholastng010601"},"content":"            return;","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"nicholastng010601"},"content":"        Task current \u003d tasks.get(task - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"nicholastng010601"},"content":"        if (done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"nicholastng010601"},"content":"            current.setDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"nicholastng010601"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"nicholastng010601"},"content":"            System.out.printf(\"Nice! I\u0027ve marked %s as completed%n\", current);","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"nicholastng010601"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"nicholastng010601"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"nicholastng010601"},"content":"            current.setNotDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"nicholastng010601"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"nicholastng010601"},"content":"            System.out.printf(\"Ok, I\u0027ll mark %s as not done%n\", current);","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"nicholastng010601"},"content":"            System.out.print(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"nicholastng010601"},"content":"    //level 6. Delete tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"nicholastng010601"},"content":"    public static void deleteTasks(int taskNumber) throws  DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"nicholastng010601"},"content":"        if (count \u003c taskNumber) throw new DukeException(\"Invalid input added\");","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"nicholastng010601"},"content":"        Task removed \u003d tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"nicholastng010601"},"content":"        count--;","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(\"Noted, I have deleted this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(String.format(\"  [%c][%s] %s \", removed.getTaskType(), removed.getStatusIcon(), removed));","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(String.format(\"You now have %d tasks in your list.\", taskNumber));","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"nicholastng010601"},"content":"    // overall input handler which determines which function to run","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"nicholastng010601"},"content":"    public static void handleInput(String userInput) throws InvalidTaskInput, DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"nicholastng010601"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) return;","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"nicholastng010601"},"content":"            if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"nicholastng010601"},"content":"                printList();","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"nicholastng010601"},"content":"            } else if (userInput.length() \u003e 7 \u0026\u0026 userInput.substring(0,6).equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"nicholastng010601"},"content":"                // delete takes up first 5, 6 index takes up space, so 7 onwards should be numbers","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"nicholastng010601"},"content":"                String index \u003d userInput.substring(7);","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"nicholastng010601"},"content":"                while (index.charAt(0) \u003d\u003d \u0027 \u0027) index \u003d index.substring(1);","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"nicholastng010601"},"content":"                while (index.charAt(index.length() - 1) \u003d\u003d \u0027 \u0027) index \u003d index.substring(0, index.length()-1);","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"nicholastng010601"},"content":"                Integer value \u003d null;","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"nicholastng010601"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"nicholastng010601"},"content":"                    value \u003d Integer.parseInt(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"nicholastng010601"},"content":"                } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-08-23"},{"lineNumber":197,"author":{"gitId":"nicholastng010601"},"content":"                    System.out.println(\"Invalid input added\");","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"nicholastng010601"},"content":"                    return;","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"nicholastng010601"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"nicholastng010601"},"content":"                if (value !\u003d null ) deleteTasks(value);","lastModifiedDate":"2023-08-23"},{"lineNumber":201,"author":{"gitId":"nicholastng010601"},"content":"            } else if (userInput.length() \u003e 5 \u0026\u0026 userInput.substring(0,4).equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"nicholastng010601"},"content":"                markDoneOrUndone(Integer.parseInt(userInput.substring(5)), true);","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"nicholastng010601"},"content":"            } else if (userInput.length() \u003e 7 \u0026\u0026 userInput.substring(0,6).equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"nicholastng010601"},"content":"                markDoneOrUndone(Integer.parseInt(userInput.substring(7)), false);","lastModifiedDate":"2023-08-23"},{"lineNumber":205,"author":{"gitId":"nicholastng010601"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":206,"author":{"gitId":"nicholastng010601"},"content":"                addList(userInput);","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":208,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":209,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":209}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"import Errors.DukeException;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"import Errors.InvalidTaskInput;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"    public static void main (String[] args) throws DukeException, InvalidTaskInput {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"        Commands.sayHello();","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"        do {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"            if (userInput.equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"                throw new DukeException(\"OOPS, input field cannot be empty. Try entering a task or a command\");","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"            Commands.handleInput(userInput);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        } while (!userInput.toLowerCase().equals(\"bye\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        Commands.sayGoodBye();","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicholastng010601":21,"-":9}},{"path":"src/main/java/Errors/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package Errors;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":7}},{"path":"src/main/java/Errors/InvalidTaskInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package Errors;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"public class InvalidTaskInput extends Exception{","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"    public InvalidTaskInput() {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"        super(\"Invalid input entered. Check whether your text follows the requirements for the specific task provided.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":7}},{"path":"src/main/java/Tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"    package Tasks;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"    public class Deadlines extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"        // additional deadline given for deadline tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"        String deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"        public Deadlines(String description, String deadline) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"            super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"            super.taskType \u003d \u0027D\u0027;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"        // getter for deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"        public String getDeadline() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"            return this.deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":17}},{"path":"src/main/java/Tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package Tasks;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"    // additional start and end time fields for events","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"    String startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"    String endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"    public Events(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"        super.taskType \u003d \u0027T\u0027;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    // getters for start and end times","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"        return this.startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"        return this.endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":22}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package Tasks;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"    protected Character taskType;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"    // tasks have a tasktype field which should be edited based on the task type. otherwise, remains as \u0027_\u0027","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"        this.taskType\u003d\u0027_\u0027;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    //getters and setters for the fields","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"        return description;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    public Character getTaskType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        return this.taskType;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"        return this.getDescription();","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":40}},{"path":"src/main/java/Tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package Tasks;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"        super.taskType \u003d \u0027T\u0027;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicholastng010601":1,"-":37}}]
