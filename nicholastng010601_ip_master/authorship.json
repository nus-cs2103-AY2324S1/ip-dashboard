[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"# DukePro","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"\u003e “Your mind is for having ideas, not holding them.” – David Allen ([source](https://boulderbugle.com/quotes-185mla85))","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"DukePro frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"- text-based","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"- easy to learn","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"- ~~FAST~~ *SUPER* FAST to use","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"All you need to do is,","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"1. download it from here.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"2. double-click it.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"3. add your tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"4. let it manage your tasks for you :partying_face:","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"And it is **FREE**!","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"Features:","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":" - [x] Managing tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":" ","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":" - [ ] Managing deadlines (coming soon)","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":" ","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":" - [ ] Reminders (coming soon)","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":" ","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"```","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"public class Main {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"```","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nicholastng010601":31,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"javafx {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"    version \u003d \u002717.0.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"    mainClass.set(\"duke.main.Main\")","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicholastng010601":12,"-":41}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":" * A command to called to say goodbye.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    protected Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"     * ByeCommand constructor","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The existing taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * @param storage The storage that stores the data of the program.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The ui interface used to print messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    public ByeCommand(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"     * Method that prints goodbye.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        ui.printGoodBye();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":42}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":" * An abstract class for all commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"     * An abstract method that executes the command the user gives.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    public abstract void execute() throws DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"     * A function to obtain the description of the task at hand.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"     * @param task The task to get description from.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * @param input The input to obtain the type of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     * @return description of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     * @throws DukeException throws an error when string input is not compatible.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"    public static String getDescription(String task, String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"            if (task.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"                // check that string contains task to prevent indexOutOfBoundsException","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"                if (input.length() \u003c 5) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"                    throw new DukeException(\"You are missing the task to do. This is unacceptable.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"                String description \u003d input.substring(5);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"                return description;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"            } else if (task.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"                int endIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"                if (input.length() \u003c 9 || endIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"                    throw new DukeException(\"You are missing the deadline. This is unacceptable.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"                String description \u003d input.substring(9, endIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"                return description;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"            } else if (task.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"                int endIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"                if (input.length() \u003c 6 || endIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"                    throw new DukeException(\"You are missing the event. This is unacceptable.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"                String description \u003d input.substring(6, endIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"                return description;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"                throw new DukeException(\"You are missing the task. This is unacceptable.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"        //unreachable task","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"        return \"String provided has invalid format\";","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"     * A function to obtain the start date of the task at hand.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"     * @param input The String to obtain the start date of the event from.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"     * @return The start date of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"     * @throws DukeException throws an error when string input is not compatible.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"    public static String getStartDate(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"        String startWord \u003d \"/from\";","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"        String endWord \u003d \"/to\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"        int startIndex \u003d input.indexOf(startWord) + startWord.length() + 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"        int endIndex \u003d input.indexOf(endWord);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"            if (startIndex \u003d\u003d input.length()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"                throw new DukeException(\"You are missing the keyword \" + startWord + \". This is unacceptable.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"            } else if (startIndex \u003e input.length()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"                throw new DukeException(\"You are missing the start date. This is unacceptable.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"            } else if (endIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"                throw new DukeException(\"You are missing the keyword \" + endWord + \". This is unacceptable.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"            } else if (startIndex \u003e endIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"nicholastng010601"},"content":"                throw new DukeException(\"You are missing the end date. This is unacceptable.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"            return input.substring(startIndex, endIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"nicholastng010601"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"nicholastng010601"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"nicholastng010601"},"content":"        // unreachable statement","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"nicholastng010601"},"content":"        return \"Error, invalid string input\";","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"nicholastng010601"},"content":"     * A function that returns the end date of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"nicholastng010601"},"content":"     * @param task The task at hand.","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"nicholastng010601"},"content":"     * @param input The input to obtain the end date from.","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"nicholastng010601"},"content":"     * @return The end date we wish to obtain.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"nicholastng010601"},"content":"     * @throws DukeException throws an error when string input is not compatible.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"nicholastng010601"},"content":"    public static String getEndDate(String task, String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"nicholastng010601"},"content":"        String startWord \u003d task.equalsIgnoreCase(\"deadline\") ? \"/by\" : \"/to\";","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"nicholastng010601"},"content":"        int startIndex \u003d input.indexOf(startWord) + startWord.length() + 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"nicholastng010601"},"content":"        if (startIndex \u003e input.length()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"nicholastng010601"},"content":"            throw new DukeException(\"You are missing the end date. This is unacceptable.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"nicholastng010601"},"content":"        return input.substring(startIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":105}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import duke.tasks.Deadlines;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":" * A command to create a deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    protected Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    protected String input;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     * Deadline command constructor to create a deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     * @param input The input for the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The taskList to store the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"     * @param storage The storage system to store the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The ui to print the commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    public DeadlineCommand(String input, TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"     * Execute the command itself.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"     * @throws DukeException When there is an error saving.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"        String task \u003d \"deadline\";","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"            Deadlines newTask \u003d new Deadlines(getDescription(task, input), getEndDate(task, input));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"            ui.printAddTask(taskList, newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"            ui.printInvalidTimeError();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":56}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":" * A command to called to delete a task from the taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    protected Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    protected int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * Delete command constructor to delete a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The existing taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     * @param storage The storage that stores the data of the program.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The ui interface used to print messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     * @param index The index of task to delete.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    public DeleteCommand(TaskList taskList, Storage storage, Ui ui, int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"     * Method that deletes task from list.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        ui.printDeleteTask(taskList, index);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":48}},{"path":"src/main/java/duke/commands/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":" * A command creates an error.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"    protected Ui ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"    private String error;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"     * Error command constructor.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"     * @param error The error to be displayed.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The Ui to display the error.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    public ErrorCommand(String error, Ui ui) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"        this.error \u003d error;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     * A function to execute the error.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        ui.printError(error);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nicholastng010601":30}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import duke.tasks.Events;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":" * A command to called to initialize an event.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    protected Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    protected String input;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     * Constructor for an event command.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     * @param input The input for the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The taskList to store the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"     * @param storage The storage system to store the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The ui to print the commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    public EventCommand(String input, TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"     * Executes the method to create the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"     * @throws DukeException Throws exception if there is an error parsing the date or saving the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"        String task \u003d \"event\";","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"            Events newTask \u003d new Events(getDescription(task, input), getStartDate(input), getEndDate(task, input));","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"            ui.printAddTask(taskList, newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"            ui.printInvalidTimeError();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":57}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":" * A command to find tasks with the keyword specified.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    private String input;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"     * Constructor for the find command.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The taskList that stores the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The UI which will print the output.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * @param input The keyword for searching.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    public FindCommand(String input, TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"     * The function which executes the find function in UI class.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"        String[] inputList \u003d this.input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"            if (inputList.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"                throw new DukeException(\"Your input is wrong. This is unaaceptable\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"            ui.findFilteredTasks(taskList, input.substring(5));","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":44}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":" * A command to print all the commands available in the chatBot.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"     * The command that will display the helper lines.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"        String commands \u003d (","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"                \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"                        + \"I currently can record 3 types of tasks. tasks to do, tasks with deadlines and events \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"                        + \"Here is how you can record down your events.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"                        + \"To record tasks to do, simply begin your command with \\\"todo\\\" \"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"                        + \"followed by a space and the task you need to do.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"                        + \"To record tasks with deadlines, simply begin your command with \\\"deadlines\\\" \"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"                        + \"followed by the task, / and then the due date in DD/MM/YYYY HHmm format.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"                        + \"To record events, simply begin your command with \\\"events\\\" followed by the event, \"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"                        + \" \\\"/from\\\" and start time , \"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"                        + \"then \\\"/to\\\" with the end time. All times must be in DD/MM/YYYY HHmm format \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"                        + \"To view your list of events, type list. \\n\" + \"To mark your events as done or undone, \"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"                        + \"followed by the index of the task \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"                        + \"To delete tasks from the list, type delete task number, such as delete 2 \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"                        + \"You can even filter the list to find certain tasks. Just type \\\"find\\\" followed \"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"                        + \"by the keyword you want to search\"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"                        + \"Lastly, to exit the chatBot, type \\\"bye\\\" \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"                        + \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(commands);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nicholastng010601":34}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":" * A command to called to mark print the taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    protected Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"     * ListCommand constructor.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The existing taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * @param storage The storage that stores the data of the program.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The ui interface used to print messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    public ListCommand(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"     * Method that prints list.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        ui.printList(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":37}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":" * A command to mark a task in the tasklist as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    protected Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    protected int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * ByeCommand constructor.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The existing taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     * @param storage The storage that stores the data of the program.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The ui interface used to print messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     * @param index The index of task to update.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    public MarkCommand(TaskList taskList, Storage storage, Ui ui, int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"     * Method that marks task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        ui.printMarkedDone(taskList, index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"        taskList.markAsDone(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":48}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":" * A command to create a ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    protected Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    protected String input;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     * Constructor for the todo command","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     * @param input The input for the command","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The taskList to store the task","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     * @param storage The storage system to store the list","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The ui to print the commands","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"    public TodoCommand(String input, TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"     * Executes the command","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"     * @throws DukeException when theres an error saving the file","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"        ToDos task \u003d new ToDos(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"        ui.printAddTask(taskList, task);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":52}},{"path":"src/main/java/duke/commands/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.commands;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":" * A command to called to mark a task undone from the taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    protected Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    protected Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    protected int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * UnMark Command constructor.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The existing taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     * @param storage The storage that stores the data of the program.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The ui interface used to print messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     * @param index The index of task to update.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    public UnMarkCommand(TaskList taskList, Storage storage, Ui ui, int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"     * Method that marks task as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"        ui.printMarkedUnDone(taskList, index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"        taskList.markAsDone(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":48}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.exception;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":" * Duke exception class which encapsulates all the errors.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nicholastng010601":10}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.main;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":" * Main ChatBot class.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    private Storage dataBase;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"    private String filePath \u003d \"./tasklist.txt\";","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     * ChatBot constructor.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     * @throws IOException if there is an error loading the saved file.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        this.dataBase \u003d new Storage(filePath);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d dataBase.load();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"     * The factory method to run the chatbot after it has been instantiated. It is responsible for scanning inputs and","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"     * passing the inputs to the parsers to parse and instantiate the respective commands","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    public void run() throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"        ui.printHello();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"        do {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"            Command c \u003d Parser.parse(userInput, this.taskList, this.dataBase, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"            c.execute();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"        } while (!userInput.toLowerCase().equals(\"bye\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicholastng010601":45,"-":9}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.main;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"public class Launcher {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"        Duke bot \u003d new Duke();","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"        bot.run();","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nicholastng010601":14}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.main;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":" * Main class that starts up the GUI chatBot.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nicholastng010601":24}},{"path":"src/main/java/duke/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":" * Represents a task with deadlines to meet.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"    // additional deadline given for deadline tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"     * The constructor for deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"     * @param description The string with the description of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"     * @param deadline The string with deadline to complete task.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    public Deadlines(String description, String deadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"        super(description, \u0027D\u0027);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"        LocalDateTime deadLineParsed \u003d LocalDateTime.parse(deadline.trim(), formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"        this.deadline \u003d deadLineParsed;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"     * Getter for the deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"     * @return the deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        return this.deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"     * Converts the deadline from numbers to words.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"     * @return The converted deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"    public String getDeadlineInWords() {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"        String dayOfWeek \u003d deadline.getDayOfWeek().toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"        int dayOfMonth \u003d deadline.getDayOfMonth();","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"        String month \u003d deadline.getMonth().toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"        int year \u003d deadline.getYear();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        return dayOfWeek + \" \" + dayOfMonth + \" \" + month + \" \" + year;","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"     * To string method of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"        return \"[D]\" + super.toString() + String.format(\"(by:%s)\", getDeadlineInWords());","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nicholastng010601":57}},{"path":"src/main/java/duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":" * Represents an event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"public class Events extends duke.tasks.Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"    // additional start and end time fields for events","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"     * The event constructor.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"     * @param description The string with description of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"     * @param startDate The string with start date.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"     * @param endDate The string with end date.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"    public Events(String description, String startDate, String endDate) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"        super(description, \u0027T\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"        LocalDateTime startDateParsed \u003d LocalDateTime.parse(startDate.trim(), formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        LocalDateTime endDateParsed \u003d LocalDateTime.parse(endDate.trim(), formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        this.startDate \u003d startDateParsed;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"        this.endDate \u003d endDateParsed;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"     * Getter for the start date.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"     * @return the start date.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"        return this.startDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"     * Getter for the end date.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"     * @return the end date.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        return this.endDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"     * Converts the Start date from numbers to words.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"     * @return The converted deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"    public String getStartDateInWords() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"        String dayOfWeek \u003d startDate.getDayOfWeek().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"        int dayOfMonth \u003d startDate.getDayOfMonth();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"        String month \u003d startDate.getMonth().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"        int year \u003d startDate.getYear();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"        return dayOfWeek + \" \" + dayOfMonth + \" \" + month + \" \" + year;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"     * Converts the end date from numbers to words.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"     * @return The converted deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"    public String getEndDateInWords() {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"        String dayOfWeek \u003d endDate.getDayOfWeek().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"        int dayOfMonth \u003d endDate.getDayOfMonth();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"        String month \u003d endDate.getMonth().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"        int year \u003d endDate.getYear();","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"        return dayOfWeek + \" \" + dayOfMonth + \" \" + month + \" \" + year;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"        return String.format(\"[E] %s + (from: %s  to: %s\", super.toString(),","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"nicholastng010601"},"content":"                getStartDateInWords(), getEndDateInWords());","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":80}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":" * Represents a task which the user has to do.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"    protected Character taskType;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"     * Constructor for tasks with no categories.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"        this.taskType \u003d \u0027_\u0027;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     * Another constructor for tasks with categories.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskType Type of task needed to be done.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"    public Task(String description, Character taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"     * Getter for status icon of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"     * @return Status icon.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"     * Getter for description of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"     * @return Description.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"        return description;","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"     * Setter to mark task as not completed.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"     * Setter to mark task as completed.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"     * Getter to get task type.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"     * @return task type.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"    public Character getTaskType() {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"        return this.taskType;","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":79}},{"path":"src/main/java/duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"     * Constructor for todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"        super.taskType \u003d \u0027T\u0027;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":20}},{"path":"src/main/java/duke/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.utilities;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.ErrorCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.HelpCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"import duke.commands.UnMarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":" * A parser than handles user inputs.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     * An enum to store the various commands for ease of parsing into the respective commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"    enum CommandTypes {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"        BYE,","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        DELETE,","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        LIST,","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"        MARK,","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        UNMARK,","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        TODO,","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"        DEADLINE,","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        EVENT,","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        HELP,","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"        FIND","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"     * The parse function to convert the input, a string, into the respective commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"     * @param input The string input keyed in by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The taskList to store the tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"     * @param storage The storage to save the new taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"     * @param ui The ui that prints the messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"     * @return the command that was requested by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"    public static Command parse(String input, TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"            String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"            CommandTypes command \u003d CommandTypes.valueOf(inputs[0].toUpperCase());","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"            switch (command) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"            case BYE:","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"                return new ByeCommand(taskList, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"            case DELETE:","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"                return new DeleteCommand(taskList, storage, ui, Integer.parseInt(inputs[inputs.length - 1]));","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"            case LIST:","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"                return new ListCommand(taskList, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"            case MARK:","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"                return new MarkCommand(taskList, storage, ui, Integer.parseInt(inputs[inputs.length - 1]));","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"                return new UnMarkCommand(taskList, storage, ui, Integer.parseInt(inputs[inputs.length - 1]));","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"            case TODO:","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"                return new TodoCommand(input, taskList, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"                return new DeadlineCommand(input, taskList, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"            case EVENT:","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"                return new EventCommand(input, taskList, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"            case HELP:","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"                return new HelpCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"            case FIND:","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"                return new FindCommand(input, taskList, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"            default:","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"                return new ErrorCommand(\"I do not understand. Either I am wrong, or you are wrong,\"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"                        + \" so you are wrong\", ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"            return new ErrorCommand(\"I do not understand. Either I am wrong, or you are wrong, so you are wrong\", ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nicholastng010601":78}},{"path":"src/main/java/duke/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.utilities;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":" * Represents a storage that saves the list of tasks when program is closed","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"public class Storage {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    private String filepath;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * Loads task list closed when bot was last used","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"     * @return TaskList","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     * @throws IOException","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"            FileInputStream file \u003d new FileInputStream(filepath);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"            ObjectInputStream output \u003d new ObjectInputStream(file);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"            TaskList taskList \u003d (TaskList) output.readObject();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"            output.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"            return taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        } catch (Exception error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"            return taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"     * Saves task list into hard disk","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList Takes in Task list from current instance and save it into the hard disk","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"     * @throws IOException","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"        FileOutputStream file \u003d new FileOutputStream(filepath);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"        ObjectOutputStream output \u003d new ObjectOutputStream(file);","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"        output.writeObject(taskList);","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"        output.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nicholastng010601":51}},{"path":"src/main/java/duke/utilities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.utilities;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":" * A list of tasks the user inputs","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"     * TaskList class constructor","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"     * Instantiates an empty arraylist as the taskList","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"     * TaskList class constructor","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"     * Instantiates taskList as the given arrayList","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList Instantiate taskList with given array:List","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"     * Gets the task at the specific index","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"     * @param index The index of task","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"     * @return task at the index","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"     * Gets the size of taskList","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"     * @return size of taskList","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"     * Adds task to the back of the taskList","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"     * @param task The task to be added to the list","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"     * Deletes task at the specific index","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"     * @param index The index of task to be deleted","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"     * A getter function that returns the taskList itself.","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"     * @return The taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"    public ArrayList getTaskList() {","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"        return this.taskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"nicholastng010601"},"content":"     * Marks task as done","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"     * @param index The index of task to be marked","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"nicholastng010601"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList.get(index).markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"nicholastng010601"},"content":"     * Marks task as not done","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"nicholastng010601"},"content":"     * @param index The index of task to be marked","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"nicholastng010601"},"content":"    public void markAsNotDone(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"nicholastng010601"},"content":"        this.taskList.get(index).markNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"nicholastng010601"},"content":"     * Filters list according to keyword","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"nicholastng010601"},"content":"     * @param keyword The keyword used to filter the list","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"nicholastng010601"},"content":"     * @return TaskList The new list with the words required added","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"nicholastng010601"},"content":"    public TaskList filter(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"nicholastng010601"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"nicholastng010601"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"nicholastng010601"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"nicholastng010601"},"content":"                filteredList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"nicholastng010601"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"nicholastng010601"},"content":"        return new TaskList(filteredList);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":111}},{"path":"src/main/java/duke/utilities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke.utilities;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":" * UI class that prints all messages that is shown to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"    protected static Scanner sc;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    protected String br \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"    public Ui() {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"     * Prints the message hello when program starts.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"    public String printHello() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"        String output \u003d br","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"                        + \"My name is Jose Mourinho, I am the special one.\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"                        + \"I am a task planning bot that will record your tasks.\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"                        + \"If you require help, type \\\"help\\\"\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"                        + br;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"     * Prints the message goodbye when program ends.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"    public String printGoodBye() {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"nicholastng010601"},"content":"        String[] famousQuotes \u003d { \"Football is a game about feelings and intelligence.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"nicholastng010601"},"content":"            \"I enjoy the work, I enjoy every minute of my professional life.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nicholastng010601"},"content":"            \"I hate to speak about individuals. Players don\u0027t win you trophies, teams win trophies, \"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"nicholastng010601"},"content":"                    + \"squads win trophies.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nicholastng010601"},"content":"            \"Money does not guarantee success\",","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"nicholastng010601"},"content":"            \"I need my time to be lonely\",","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"nicholastng010601"},"content":"            \"I am Jose Mourinho and I don\u0027t change. I arrive with all my qualities and my defects.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"nicholastng010601"},"content":"            \"Look at the way teams play against Arsenal. They don\u0027t believe they can win. They don\u0027t believe.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"nicholastng010601"},"content":"            \"Well, uh, I don\u0027t know another way than to work at the top level, which is what I do every day.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"nicholastng010601"},"content":"            \"The only thing I would like is to have more control of the game in terms of possession.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"nicholastng010601"},"content":"            \"But I think it\u0027s more normal for my team to have no success than it is to \"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"nicholastng010601"},"content":"                    + \"win two consecutive European cups.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"nicholastng010601"},"content":"            \"So I know all about the ups and downs of football, I know that one day I will be sacked.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"nicholastng010601"},"content":"            \"Please do not call me arrogant, but I am European champion and I think I am the special one.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"nicholastng010601"},"content":"            \"Why have Chelsea suffered so much since I left? Because I left\",","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"nicholastng010601"},"content":"            \"Young players are like melons. Only when you open and taste the melon are you \"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"nicholastng010601"},"content":"                    + \"100% sure that the melon is good.\",","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"nicholastng010601"},"content":"            \"If the club decide to sack me because of bad results that’s part of the game. \"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"nicholastng010601"},"content":"                    + \"If it happens I will be a millionaire \"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"nicholastng010601"},"content":"                    + \"and get another club a couple of months later\",","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"nicholastng010601"},"content":"            \"I have top players and, I’m sorry, we have a top manager.\"};","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"nicholastng010601"},"content":"        String output \u003d br","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"nicholastng010601"},"content":"                + famousQuotes[(int) Math.floor(Math.random() * famousQuotes.length)]","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"nicholastng010601"},"content":"                + \"\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"nicholastng010601"},"content":"                + br;","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"nicholastng010601"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"nicholastng010601"},"content":"     * Prints the message of the task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The tasklist that the task will be added to.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"nicholastng010601"},"content":"     * @param index The index of task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"nicholastng010601"},"content":"    public String printDeleteTask(TaskList taskList, int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"nicholastng010601"},"content":"        String output \u003d \"There is no excuse for you to be lazy. \"","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"nicholastng010601"},"content":"                + \"You should work hard and do your tasks:\" + taskList.getTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"nicholastng010601"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"nicholastng010601"},"content":"     * Prints the message of the task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The tasklist that the task will be added to.","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"nicholastng010601"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"nicholastng010601"},"content":"    public String printAddTask(TaskList taskList, Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"nicholastng010601"},"content":"        String output \u003d br + \"You must train hard and complete your task:\\n\" + task","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"nicholastng010601"},"content":"                + \"\\nYou now have \" + taskList.size() + \" tasks to complete.\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"nicholastng010601"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"nicholastng010601"},"content":"     * Prints the message of marking a task as completed.","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"nicholastng010601"},"content":"     * @param index The index of task to be marked.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"nicholastng010601"},"content":"    public String printMarkedDone(TaskList taskList, int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"nicholastng010601"},"content":"        String output \u003d \"I have noticed you have been working hard,\"","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"nicholastng010601"},"content":"                + \"Good job on completing your task:\\n\" + taskList.getTask(index).toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"nicholastng010601"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"nicholastng010601"},"content":"     * Prints the message of marking a task as incomplete.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"nicholastng010601"},"content":"     * @param index The index of task to be marked.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"nicholastng010601"},"content":"    public String printMarkedUnDone(TaskList taskList, int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"nicholastng010601"},"content":"        String output \u003d \"You want to skip training? Go and run 10 rounds around the field:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"nicholastng010601"},"content":"                + taskList.getTask(index).toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"nicholastng010601"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"nicholastng010601"},"content":"     * Prints out the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"nicholastng010601"},"content":"     * @param taskList The taskList of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"nicholastng010601"},"content":"    public String printList(TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"nicholastng010601"},"content":"        if (taskList.getTaskList().isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"nicholastng010601"},"content":"            String output \u003d br + \"Hard work beats talent. Your list is empty. You should train more.\\n\" + br;","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"nicholastng010601"},"content":"            System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"nicholastng010601"},"content":"            return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"nicholastng010601"},"content":"        String output \u003d br + \"If you want to be the best in the world, work hard and follow me:\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"nicholastng010601"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"nicholastng010601"},"content":"            output +\u003d String.format(\"%d. %s \\n\", i + 1, taskList.getTask(i).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"nicholastng010601"},"content":"        output +\u003d br;","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"nicholastng010601"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"nicholastng010601"},"content":"     * Prints out error received.","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"nicholastng010601"},"content":"     * @param message The error received from try catch.","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"nicholastng010601"},"content":"    public String printError(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"nicholastng010601"},"content":"        String output \u003d br + message + \"\\n\" + br;","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"nicholastng010601"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"nicholastng010601"},"content":"     * Prints special error when time to parse is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"nicholastng010601"},"content":"    public String printInvalidTimeError() {","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"nicholastng010601"},"content":"        String output \u003d br + \"\\n Your timing is wrong. This is unacceptable \\n\" + br;","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"nicholastng010601"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"nicholastng010601"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"nicholastng010601"},"content":"     * Prints the tasks that match the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"nicholastng010601"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"nicholastng010601"},"content":"     * @param tasks The taskList that contains all tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"nicholastng010601"},"content":"     * @param input The input keyword to filter with.","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"nicholastng010601"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"nicholastng010601"},"content":"    public String findFilteredTasks(TaskList tasks, String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"nicholastng010601"},"content":"        String output \u003d br;","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"nicholastng010601"},"content":"        TaskList filteredList \u003d tasks.filter(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"nicholastng010601"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"nicholastng010601"},"content":"            output +\u003d \"There are no tasks with that word.\\n\" + br;","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"nicholastng010601"},"content":"            System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"nicholastng010601"},"content":"            return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"nicholastng010601"},"content":"        output +\u003d \"These are your matching tasks:\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"nicholastng010601"},"content":"        for (int i \u003d 0; i \u003c filteredList.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"nicholastng010601"},"content":"            output +\u003d String.format(\"%d. %s\\n\", i + 1, filteredList.getTask(i).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"nicholastng010601"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"nicholastng010601"},"content":"        output +\u003d br;","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"nicholastng010601"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":178,"author":{"gitId":"nicholastng010601"},"content":"        return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":179,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":180,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nicholastng010601":180}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"import duke.tasks.Events;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"    public void emptyTaskListTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"        TaskList b \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"        assertEquals(a.size(), b.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"    public void nonEmptyListTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nicholastng010601"},"content":"        Task temp \u003d new Events(\"Vacation\", \"19/02/2022 0000\", \"20/02/2022 0000\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nicholastng010601"},"content":"        Task temp2 \u003d new Events(\"Vacation\", \"24/02/2022 1000\", \"25/02/2022 1000\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nicholastng010601"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nicholastng010601"},"content":"        TaskList b \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nicholastng010601"},"content":"        a.addTask(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nicholastng010601"},"content":"        a.addTask(temp2);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nicholastng010601"},"content":"        b.addTask(temp2);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nicholastng010601"},"content":"        b.addTask(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nicholastng010601"},"content":"        assertEquals(a.getTask(0), b.getTask(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nicholastng010601"},"content":"        assertEquals(a.getTask(1), b.getTask(0));","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nicholastng010601"},"content":"        assertNotSame(a.getTask(0), b.getTask(0));","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":35}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nicholastng010601"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nicholastng010601"},"content":"import duke.utilities.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nicholastng010601"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nicholastng010601"},"content":"public class UiTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"nicholastng010601"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"nicholastng010601"},"content":"    public void printHelloTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nicholastng010601"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nicholastng010601"},"content":"        String br \u003d ui.br;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nicholastng010601"},"content":"        String expectedOutput \u003d br","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nicholastng010601"},"content":"                + \"My name is Jose Mourinho, I am the special one.\"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nicholastng010601"},"content":"                + \" I am a task planning bot that will record your tasks.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nicholastng010601"},"content":"                + \"If you require help, type \\\"help\\\"\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nicholastng010601"},"content":"                + br;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"        assertEquals(expectedOutput, ui.printHello());","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nicholastng010601"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nicholastng010601"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nicholastng010601"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nicholastng010601":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholastng010601"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nicholastng010601":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nicholastng010601"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicholastng010601":1,"-":20}}]
